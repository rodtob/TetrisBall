{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Rod/Desktop/TetrisBall/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\n// threejs.org/license\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.THREE = {}));\n})(this, function (exports) {\n  'use strict'; // Polyfills\n\n  if (Number.EPSILON === undefined) {\n    Number.EPSILON = Math.pow(2, -52);\n  }\n\n  if (Number.isInteger === undefined) {\n    // Missing in IE\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n    Number.isInteger = function (value) {\n      return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n    };\n  } //\n\n\n  if (Math.sign === undefined) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n    Math.sign = function (x) {\n      return x < 0 ? -1 : x > 0 ? 1 : +x;\n    };\n  }\n\n  if ('name' in Function.prototype === false) {\n    // Missing in IE\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n    Object.defineProperty(Function.prototype, 'name', {\n      get: function get() {\n        return this.toString().match(/^\\s*function\\s*([^\\(\\s]*)/)[1];\n      }\n    });\n  }\n\n  if (Object.assign === undefined) {\n    // Missing in IE\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    Object.assign = function (target) {\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var output = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n\n        if (source !== undefined && source !== null) {\n          for (var nextKey in source) {\n            if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n      }\n\n      return output;\n    };\n  }\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n\n  var runtime = function (exports) {\n    var Op = Object.prototype;\n    var hasOwn = Op.hasOwnProperty;\n    var undefined$1; // More compressible than void 0.\n\n    var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n    var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n    var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n    var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n    function define(obj, key, value) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n      return obj[key];\n    }\n\n    try {\n      // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n      define({}, \"\");\n    } catch (err) {\n      define = function define(obj, key, value) {\n        return obj[key] = value;\n      };\n    }\n\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n      var generator = Object.create(protoGenerator.prototype);\n      var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n      // .throw, and .return methods.\n\n      generator._invoke = makeInvokeMethod(innerFn, self, context);\n      return generator;\n    }\n\n    exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n    // record like context.tryEntries[i].completion. This interface could\n    // have been (and was previously) designed to take a closure to be\n    // invoked without arguments, but in all the cases we care about we\n    // already have an existing method we want to call, so there's no need\n    // to create a new function object. We can even get away with assuming\n    // the method takes exactly one argument, since that happens to be true\n    // in every case, so we don't have to touch the arguments object. The\n    // only additional allocation required is the completion record, which\n    // has a stable shape and so hopefully should be cheap to allocate.\n\n    function tryCatch(fn, obj, arg) {\n      try {\n        return {\n          type: \"normal\",\n          arg: fn.call(obj, arg)\n        };\n      } catch (err) {\n        return {\n          type: \"throw\",\n          arg: err\n        };\n      }\n    }\n\n    var GenStateSuspendedStart = \"suspendedStart\";\n    var GenStateSuspendedYield = \"suspendedYield\";\n    var GenStateExecuting = \"executing\";\n    var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n    // breaking out of the dispatch switch statement.\n\n    var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n    // .constructor.prototype properties for functions that return Generator\n    // objects. For full spec compliance, you may wish to configure your\n    // minifier not to mangle the names of these two functions.\n\n    function Generator() {}\n\n    function GeneratorFunction() {}\n\n    function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n    // don't natively support it.\n\n\n    var IteratorPrototype = {};\n\n    IteratorPrototype[iteratorSymbol] = function () {\n      return this;\n    };\n\n    var getProto = Object.getPrototypeOf;\n    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n      // This environment has a native %IteratorPrototype%; use it instead\n      // of the polyfill.\n      IteratorPrototype = NativeIteratorPrototype;\n    }\n\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n    GeneratorFunctionPrototype.constructor = GeneratorFunction;\n    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n    // Iterator interface in terms of a single ._invoke method.\n\n    function defineIteratorMethods(prototype) {\n      [\"next\", \"throw\", \"return\"].forEach(function (method) {\n        define(prototype, method, function (arg) {\n          return this._invoke(method, arg);\n        });\n      });\n    }\n\n    exports.isGeneratorFunction = function (genFun) {\n      var ctor = typeof genFun === \"function\" && genFun.constructor;\n      return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n      // do is to check its .name property.\n      (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n    };\n\n    exports.mark = function (genFun) {\n      if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n      } else {\n        genFun.__proto__ = GeneratorFunctionPrototype;\n        define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n      }\n\n      genFun.prototype = Object.create(Gp);\n      return genFun;\n    }; // Within the body of any async function, `await x` is transformed to\n    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n    // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n    // meant to be awaited.\n\n\n    exports.awrap = function (arg) {\n      return {\n        __await: arg\n      };\n    };\n\n    function AsyncIterator(generator, PromiseImpl) {\n      function invoke(method, arg, resolve, reject) {\n        var record = tryCatch(generator[method], generator, arg);\n\n        if (record.type === \"throw\") {\n          reject(record.arg);\n        } else {\n          var result = record.arg;\n          var value = result.value;\n\n          if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n            return PromiseImpl.resolve(value.__await).then(function (value) {\n              invoke(\"next\", value, resolve, reject);\n            }, function (err) {\n              invoke(\"throw\", err, resolve, reject);\n            });\n          }\n\n          return PromiseImpl.resolve(value).then(function (unwrapped) {\n            // When a yielded Promise is resolved, its final value becomes\n            // the .value of the Promise<{value,done}> result for the\n            // current iteration.\n            result.value = unwrapped;\n            resolve(result);\n          }, function (error) {\n            // If a rejected Promise was yielded, throw the rejection back\n            // into the async generator function so it can be handled there.\n            return invoke(\"throw\", error, resolve, reject);\n          });\n        }\n      }\n\n      var previousPromise;\n\n      function enqueue(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n\n        return previousPromise = // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n        // invocations of the iterator.\n        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      } // Define the unified helper method that is used to implement .next,\n      // .throw, and .return (see defineIteratorMethods).\n\n\n      this._invoke = enqueue;\n    }\n\n    defineIteratorMethods(AsyncIterator.prototype);\n\n    AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n      return this;\n    };\n\n    exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n    // AsyncIterator objects; they just return a Promise for the value of\n    // the final result produced by the iterator.\n\n    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n      if (PromiseImpl === void 0) PromiseImpl = Promise;\n      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n      return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function (result) {\n        return result.done ? result.value : iter.next();\n      });\n    };\n\n    function makeInvokeMethod(innerFn, self, context) {\n      var state = GenStateSuspendedStart;\n      return function invoke(method, arg) {\n        if (state === GenStateExecuting) {\n          throw new Error(\"Generator is already running\");\n        }\n\n        if (state === GenStateCompleted) {\n          if (method === \"throw\") {\n            throw arg;\n          } // Be forgiving, per 25.3.3.3.3 of the spec:\n          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n          return doneResult();\n        }\n\n        context.method = method;\n        context.arg = arg;\n\n        while (true) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (context.method === \"next\") {\n            // Setting context._sent for legacy support of Babel's\n            // function.sent implementation.\n            context.sent = context._sent = context.arg;\n          } else if (context.method === \"throw\") {\n            if (state === GenStateSuspendedStart) {\n              state = GenStateCompleted;\n              throw context.arg;\n            }\n\n            context.dispatchException(context.arg);\n          } else if (context.method === \"return\") {\n            context.abrupt(\"return\", context.arg);\n          }\n\n          state = GenStateExecuting;\n          var record = tryCatch(innerFn, self, context);\n\n          if (record.type === \"normal\") {\n            // If an exception is thrown from innerFn, we leave state ===\n            // GenStateExecuting and loop back for another invocation.\n            state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n            if (record.arg === ContinueSentinel) {\n              continue;\n            }\n\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          } else if (record.type === \"throw\") {\n            state = GenStateCompleted; // Dispatch the exception by looping back around to the\n            // context.dispatchException(context.arg) call above.\n\n            context.method = \"throw\";\n            context.arg = record.arg;\n          }\n        }\n      };\n    } // Call delegate.iterator[context.method](context.arg) and handle the\n    // result, either by returning a { value, done } result from the\n    // delegate iterator, or by modifying context.method and context.arg,\n    // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n    function maybeInvokeDelegate(delegate, context) {\n      var method = delegate.iterator[context.method];\n\n      if (method === undefined$1) {\n        // A .throw or .return when the delegate iterator has no .throw\n        // method always terminates the yield* loop.\n        context.delegate = null;\n\n        if (context.method === \"throw\") {\n          // Note: [\"return\"] must be used for ES3 parsing compatibility.\n          if (delegate.iterator[\"return\"]) {\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            context.method = \"return\";\n            context.arg = undefined$1;\n            maybeInvokeDelegate(delegate, context);\n\n            if (context.method === \"throw\") {\n              // If maybeInvokeDelegate(context) changed context.method from\n              // \"return\" to \"throw\", let that override the TypeError below.\n              return ContinueSentinel;\n            }\n          }\n\n          context.method = \"throw\";\n          context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n        }\n\n        return ContinueSentinel;\n      }\n\n      var record = tryCatch(method, delegate.iterator, context.arg);\n\n      if (record.type === \"throw\") {\n        context.method = \"throw\";\n        context.arg = record.arg;\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      var info = record.arg;\n\n      if (!info) {\n        context.method = \"throw\";\n        context.arg = new TypeError(\"iterator result is not an object\");\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      if (info.done) {\n        // Assign the result of the finished delegate to the temporary\n        // variable specified by delegate.resultName (see delegateYield).\n        context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n        context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n        // exception, let the outer generator proceed normally. If\n        // context.method was \"next\", forget context.arg since it has been\n        // \"consumed\" by the delegate iterator. If context.method was\n        // \"return\", allow the original .return call to continue in the\n        // outer generator.\n\n        if (context.method !== \"return\") {\n          context.method = \"next\";\n          context.arg = undefined$1;\n        }\n      } else {\n        // Re-yield the result returned by the delegate method.\n        return info;\n      } // The delegate iterator is finished, so forget it and continue with\n      // the outer generator.\n\n\n      context.delegate = null;\n      return ContinueSentinel;\n    } // Define Generator.prototype.{next,throw,return} in terms of the\n    // unified ._invoke helper method.\n\n\n    defineIteratorMethods(Gp);\n    define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n    // @@iterator function is called on it. Some browsers' implementations of the\n    // iterator prototype chain incorrectly implement this, causing the Generator\n    // object to not be returned from this call. This ensures that doesn't happen.\n    // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n    Gp[iteratorSymbol] = function () {\n      return this;\n    };\n\n    Gp.toString = function () {\n      return \"[object Generator]\";\n    };\n\n    function pushTryEntry(locs) {\n      var entry = {\n        tryLoc: locs[0]\n      };\n\n      if (1 in locs) {\n        entry.catchLoc = locs[1];\n      }\n\n      if (2 in locs) {\n        entry.finallyLoc = locs[2];\n        entry.afterLoc = locs[3];\n      }\n\n      this.tryEntries.push(entry);\n    }\n\n    function resetTryEntry(entry) {\n      var record = entry.completion || {};\n      record.type = \"normal\";\n      delete record.arg;\n      entry.completion = record;\n    }\n\n    function Context(tryLocsList) {\n      // The root entry object (effectively a try statement without a catch\n      // or a finally block) gives us a place to store values thrown from\n      // locations where there is no enclosing try statement.\n      this.tryEntries = [{\n        tryLoc: \"root\"\n      }];\n      tryLocsList.forEach(pushTryEntry, this);\n      this.reset(true);\n    }\n\n    exports.keys = function (object) {\n      var keys = [];\n\n      for (var key in object) {\n        keys.push(key);\n      }\n\n      keys.reverse(); // Rather than returning an object with a next method, we keep\n      // things simple and return the next function itself.\n\n      return function next() {\n        while (keys.length) {\n          var key = keys.pop();\n\n          if (key in object) {\n            next.value = key;\n            next.done = false;\n            return next;\n          }\n        } // To avoid creating an additional object, we just hang the .value\n        // and .done properties off the next function object itself. This\n        // also ensures that the minifier will not anonymize the function.\n\n\n        next.done = true;\n        return next;\n      };\n    };\n\n    function values(iterable) {\n      if (iterable) {\n        var iteratorMethod = iterable[iteratorSymbol];\n\n        if (iteratorMethod) {\n          return iteratorMethod.call(iterable);\n        }\n\n        if (typeof iterable.next === \"function\") {\n          return iterable;\n        }\n\n        if (!isNaN(iterable.length)) {\n          var i = -1,\n              next = function next() {\n            while (++i < iterable.length) {\n              if (hasOwn.call(iterable, i)) {\n                next.value = iterable[i];\n                next.done = false;\n                return next;\n              }\n            }\n\n            next.value = undefined$1;\n            next.done = true;\n            return next;\n          };\n\n          return next.next = next;\n        }\n      } // Return an iterator with no values.\n\n\n      return {\n        next: doneResult\n      };\n    }\n\n    exports.values = values;\n\n    function doneResult() {\n      return {\n        value: undefined$1,\n        done: true\n      };\n    }\n\n    Context.prototype = {\n      constructor: Context,\n      reset: function reset(skipTempReset) {\n        this.prev = 0;\n        this.next = 0; // Resetting context._sent for legacy support of Babel's\n        // function.sent implementation.\n\n        this.sent = this._sent = undefined$1;\n        this.done = false;\n        this.delegate = null;\n        this.method = \"next\";\n        this.arg = undefined$1;\n        this.tryEntries.forEach(resetTryEntry);\n\n        if (!skipTempReset) {\n          for (var name in this) {\n            // Not sure about the optimal order of these conditions:\n            if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n              this[name] = undefined$1;\n            }\n          }\n        }\n      },\n      stop: function stop() {\n        this.done = true;\n        var rootEntry = this.tryEntries[0];\n        var rootRecord = rootEntry.completion;\n\n        if (rootRecord.type === \"throw\") {\n          throw rootRecord.arg;\n        }\n\n        return this.rval;\n      },\n      dispatchException: function dispatchException(exception) {\n        if (this.done) {\n          throw exception;\n        }\n\n        var context = this;\n\n        function handle(loc, caught) {\n          record.type = \"throw\";\n          record.arg = exception;\n          context.next = loc;\n\n          if (caught) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            context.method = \"next\";\n            context.arg = undefined$1;\n          }\n\n          return !!caught;\n        }\n\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          var record = entry.completion;\n\n          if (entry.tryLoc === \"root\") {\n            // Exception thrown outside of any try block that could handle\n            // it, so set the completion value of the entire function to\n            // throw the exception.\n            return handle(\"end\");\n          }\n\n          if (entry.tryLoc <= this.prev) {\n            var hasCatch = hasOwn.call(entry, \"catchLoc\");\n            var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n            if (hasCatch && hasFinally) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              } else if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else if (hasCatch) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              }\n            } else if (hasFinally) {\n              if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else {\n              throw new Error(\"try statement without catch or finally\");\n            }\n          }\n        }\n      },\n      abrupt: function abrupt(type, arg) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n            var finallyEntry = entry;\n            break;\n          }\n        }\n\n        if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n          // Ignore the finally entry if control is not jumping to a\n          // location outside the try/catch block.\n          finallyEntry = null;\n        }\n\n        var record = finallyEntry ? finallyEntry.completion : {};\n        record.type = type;\n        record.arg = arg;\n\n        if (finallyEntry) {\n          this.method = \"next\";\n          this.next = finallyEntry.finallyLoc;\n          return ContinueSentinel;\n        }\n\n        return this.complete(record);\n      },\n      complete: function complete(record, afterLoc) {\n        if (record.type === \"throw\") {\n          throw record.arg;\n        }\n\n        if (record.type === \"break\" || record.type === \"continue\") {\n          this.next = record.arg;\n        } else if (record.type === \"return\") {\n          this.rval = this.arg = record.arg;\n          this.method = \"return\";\n          this.next = \"end\";\n        } else if (record.type === \"normal\" && afterLoc) {\n          this.next = afterLoc;\n        }\n\n        return ContinueSentinel;\n      },\n      finish: function finish(finallyLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.finallyLoc === finallyLoc) {\n            this.complete(entry.completion, entry.afterLoc);\n            resetTryEntry(entry);\n            return ContinueSentinel;\n          }\n        }\n      },\n      \"catch\": function _catch(tryLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc === tryLoc) {\n            var record = entry.completion;\n\n            if (record.type === \"throw\") {\n              var thrown = record.arg;\n              resetTryEntry(entry);\n            }\n\n            return thrown;\n          }\n        } // The context.catch method must only be called with a location\n        // argument that corresponds to a known catch block.\n\n\n        throw new Error(\"illegal catch attempt\");\n      },\n      delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n        this.delegate = {\n          iterator: values(iterable),\n          resultName: resultName,\n          nextLoc: nextLoc\n        };\n\n        if (this.method === \"next\") {\n          // Deliberately forget the last sent value so that we don't\n          // accidentally pass it on to the delegate.\n          this.arg = undefined$1;\n        }\n\n        return ContinueSentinel;\n      }\n    }; // Regardless of whether this script is executing as a CommonJS module\n    // or not, return the runtime object so that we can declare the variable\n    // regeneratorRuntime in the outer scope, which allows this module to be\n    // injected easily by `bin/regenerator --include-runtime script.js`.\n\n    return exports;\n  }( // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {});\n\n  try {\n    regeneratorRuntime = runtime;\n  } catch (accidentalStrictMode) {\n    // This module should not be running in strict mode, so the above\n    // assignment should always work unless something is misconfigured. Just\n    // in case runtime.js accidentally runs in strict mode, we can escape\n    // strict mode using a global Function call. This could conceivably fail\n    // if a Content Security Policy forbids using Function, but in that case\n    // the proper solution is to fix the accidental strict mode problem. If\n    // you've misconfigured your bundler to force strict mode and applied a\n    // CSP to forbid Function, and you're not willing to fix either of those\n    // problems, please detail your unique predicament in a GitHub issue.\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n\n  var REVISION = '125';\n  var MOUSE = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2\n  };\n  var TOUCH = {\n    ROTATE: 0,\n    PAN: 1,\n    DOLLY_PAN: 2,\n    DOLLY_ROTATE: 3\n  };\n  var CullFaceNone = 0;\n  var CullFaceBack = 1;\n  var CullFaceFront = 2;\n  var CullFaceFrontBack = 3;\n  var BasicShadowMap = 0;\n  var PCFShadowMap = 1;\n  var PCFSoftShadowMap = 2;\n  var VSMShadowMap = 3;\n  var FrontSide = 0;\n  var BackSide = 1;\n  var DoubleSide = 2;\n  var FlatShading = 1;\n  var SmoothShading = 2;\n  var NoBlending = 0;\n  var NormalBlending = 1;\n  var AdditiveBlending = 2;\n  var SubtractiveBlending = 3;\n  var MultiplyBlending = 4;\n  var CustomBlending = 5;\n  var AddEquation = 100;\n  var SubtractEquation = 101;\n  var ReverseSubtractEquation = 102;\n  var MinEquation = 103;\n  var MaxEquation = 104;\n  var ZeroFactor = 200;\n  var OneFactor = 201;\n  var SrcColorFactor = 202;\n  var OneMinusSrcColorFactor = 203;\n  var SrcAlphaFactor = 204;\n  var OneMinusSrcAlphaFactor = 205;\n  var DstAlphaFactor = 206;\n  var OneMinusDstAlphaFactor = 207;\n  var DstColorFactor = 208;\n  var OneMinusDstColorFactor = 209;\n  var SrcAlphaSaturateFactor = 210;\n  var NeverDepth = 0;\n  var AlwaysDepth = 1;\n  var LessDepth = 2;\n  var LessEqualDepth = 3;\n  var EqualDepth = 4;\n  var GreaterEqualDepth = 5;\n  var GreaterDepth = 6;\n  var NotEqualDepth = 7;\n  var MultiplyOperation = 0;\n  var MixOperation = 1;\n  var AddOperation = 2;\n  var NoToneMapping = 0;\n  var LinearToneMapping = 1;\n  var ReinhardToneMapping = 2;\n  var CineonToneMapping = 3;\n  var ACESFilmicToneMapping = 4;\n  var CustomToneMapping = 5;\n  var UVMapping = 300;\n  var CubeReflectionMapping = 301;\n  var CubeRefractionMapping = 302;\n  var EquirectangularReflectionMapping = 303;\n  var EquirectangularRefractionMapping = 304;\n  var CubeUVReflectionMapping = 306;\n  var CubeUVRefractionMapping = 307;\n  var RepeatWrapping = 1000;\n  var ClampToEdgeWrapping = 1001;\n  var MirroredRepeatWrapping = 1002;\n  var NearestFilter = 1003;\n  var NearestMipmapNearestFilter = 1004;\n  var NearestMipMapNearestFilter = 1004;\n  var NearestMipmapLinearFilter = 1005;\n  var NearestMipMapLinearFilter = 1005;\n  var LinearFilter = 1006;\n  var LinearMipmapNearestFilter = 1007;\n  var LinearMipMapNearestFilter = 1007;\n  var LinearMipmapLinearFilter = 1008;\n  var LinearMipMapLinearFilter = 1008;\n  var UnsignedByteType = 1009;\n  var ByteType = 1010;\n  var ShortType = 1011;\n  var UnsignedShortType = 1012;\n  var IntType = 1013;\n  var UnsignedIntType = 1014;\n  var FloatType = 1015;\n  var HalfFloatType = 1016;\n  var UnsignedShort4444Type = 1017;\n  var UnsignedShort5551Type = 1018;\n  var UnsignedShort565Type = 1019;\n  var UnsignedInt248Type = 1020;\n  var AlphaFormat = 1021;\n  var RGBFormat = 1022;\n  var RGBAFormat = 1023;\n  var LuminanceFormat = 1024;\n  var LuminanceAlphaFormat = 1025;\n  var RGBEFormat = RGBAFormat;\n  var DepthFormat = 1026;\n  var DepthStencilFormat = 1027;\n  var RedFormat = 1028;\n  var RedIntegerFormat = 1029;\n  var RGFormat = 1030;\n  var RGIntegerFormat = 1031;\n  var RGBIntegerFormat = 1032;\n  var RGBAIntegerFormat = 1033;\n  var RGB_S3TC_DXT1_Format = 33776;\n  var RGBA_S3TC_DXT1_Format = 33777;\n  var RGBA_S3TC_DXT3_Format = 33778;\n  var RGBA_S3TC_DXT5_Format = 33779;\n  var RGB_PVRTC_4BPPV1_Format = 35840;\n  var RGB_PVRTC_2BPPV1_Format = 35841;\n  var RGBA_PVRTC_4BPPV1_Format = 35842;\n  var RGBA_PVRTC_2BPPV1_Format = 35843;\n  var RGB_ETC1_Format = 36196;\n  var RGB_ETC2_Format = 37492;\n  var RGBA_ETC2_EAC_Format = 37496;\n  var RGBA_ASTC_4x4_Format = 37808;\n  var RGBA_ASTC_5x4_Format = 37809;\n  var RGBA_ASTC_5x5_Format = 37810;\n  var RGBA_ASTC_6x5_Format = 37811;\n  var RGBA_ASTC_6x6_Format = 37812;\n  var RGBA_ASTC_8x5_Format = 37813;\n  var RGBA_ASTC_8x6_Format = 37814;\n  var RGBA_ASTC_8x8_Format = 37815;\n  var RGBA_ASTC_10x5_Format = 37816;\n  var RGBA_ASTC_10x6_Format = 37817;\n  var RGBA_ASTC_10x8_Format = 37818;\n  var RGBA_ASTC_10x10_Format = 37819;\n  var RGBA_ASTC_12x10_Format = 37820;\n  var RGBA_ASTC_12x12_Format = 37821;\n  var RGBA_BPTC_Format = 36492;\n  var SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\n  var SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\n  var SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\n  var SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\n  var SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\n  var SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\n  var SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\n  var SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\n  var SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\n  var SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\n  var SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\n  var SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\n  var SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\n  var SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\n  var LoopOnce = 2200;\n  var LoopRepeat = 2201;\n  var LoopPingPong = 2202;\n  var InterpolateDiscrete = 2300;\n  var InterpolateLinear = 2301;\n  var InterpolateSmooth = 2302;\n  var ZeroCurvatureEnding = 2400;\n  var ZeroSlopeEnding = 2401;\n  var WrapAroundEnding = 2402;\n  var NormalAnimationBlendMode = 2500;\n  var AdditiveAnimationBlendMode = 2501;\n  var TrianglesDrawMode = 0;\n  var TriangleStripDrawMode = 1;\n  var TriangleFanDrawMode = 2;\n  var LinearEncoding = 3000;\n  var sRGBEncoding = 3001;\n  var GammaEncoding = 3007;\n  var RGBEEncoding = 3002;\n  var LogLuvEncoding = 3003;\n  var RGBM7Encoding = 3004;\n  var RGBM16Encoding = 3005;\n  var RGBDEncoding = 3006;\n  var BasicDepthPacking = 3200;\n  var RGBADepthPacking = 3201;\n  var TangentSpaceNormalMap = 0;\n  var ObjectSpaceNormalMap = 1;\n  var ZeroStencilOp = 0;\n  var KeepStencilOp = 7680;\n  var ReplaceStencilOp = 7681;\n  var IncrementStencilOp = 7682;\n  var DecrementStencilOp = 7683;\n  var IncrementWrapStencilOp = 34055;\n  var DecrementWrapStencilOp = 34056;\n  var InvertStencilOp = 5386;\n  var NeverStencilFunc = 512;\n  var LessStencilFunc = 513;\n  var EqualStencilFunc = 514;\n  var LessEqualStencilFunc = 515;\n  var GreaterStencilFunc = 516;\n  var NotEqualStencilFunc = 517;\n  var GreaterEqualStencilFunc = 518;\n  var AlwaysStencilFunc = 519;\n  var StaticDrawUsage = 35044;\n  var DynamicDrawUsage = 35048;\n  var StreamDrawUsage = 35040;\n  var StaticReadUsage = 35045;\n  var DynamicReadUsage = 35049;\n  var StreamReadUsage = 35041;\n  var StaticCopyUsage = 35046;\n  var DynamicCopyUsage = 35050;\n  var StreamCopyUsage = 35042;\n  var GLSL1 = '100';\n  var GLSL3 = '300 es';\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n      var info = gen[key](arg);\n      var value = info.value;\n    } catch (error) {\n      reject(error);\n      return;\n    }\n\n    if (info.done) {\n      resolve(value);\n    } else {\n      Promise.resolve(value).then(_next, _throw);\n    }\n  }\n\n  function _asyncToGenerator(fn) {\n    return function () {\n      var self = this,\n          args = arguments;\n      return new Promise(function (resolve, reject) {\n        var gen = fn.apply(self, args);\n\n        function _next(value) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n        }\n\n        function _throw(err) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n        }\n\n        _next(undefined);\n      });\n    };\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it;\n\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        return function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    it = o[Symbol.iterator]();\n    return it.next.bind(it);\n  }\n  /**\n   * https://github.com/mrdoob/eventdispatcher.js/\n   */\n\n\n  function EventDispatcher() {}\n\n  Object.assign(EventDispatcher.prototype, {\n    addEventListener: function addEventListener(type, listener) {\n      if (this._listeners === undefined) this._listeners = {};\n      var listeners = this._listeners;\n\n      if (listeners[type] === undefined) {\n        listeners[type] = [];\n      }\n\n      if (listeners[type].indexOf(listener) === -1) {\n        listeners[type].push(listener);\n      }\n    },\n    hasEventListener: function hasEventListener(type, listener) {\n      if (this._listeners === undefined) return false;\n      var listeners = this._listeners;\n      return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n    },\n    removeEventListener: function removeEventListener(type, listener) {\n      if (this._listeners === undefined) return;\n      var listeners = this._listeners;\n      var listenerArray = listeners[type];\n\n      if (listenerArray !== undefined) {\n        var index = listenerArray.indexOf(listener);\n\n        if (index !== -1) {\n          listenerArray.splice(index, 1);\n        }\n      }\n    },\n    dispatchEvent: function dispatchEvent(event) {\n      if (this._listeners === undefined) return;\n      var listeners = this._listeners;\n      var listenerArray = listeners[event.type];\n\n      if (listenerArray !== undefined) {\n        event.target = this; // Make a copy, in case listeners are removed while iterating.\n\n        var array = listenerArray.slice(0);\n\n        for (var i = 0, l = array.length; i < l; i++) {\n          array[i].call(this, event);\n        }\n      }\n    }\n  });\n  var _lut = [];\n\n  for (var i = 0; i < 256; i++) {\n    _lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n  }\n\n  var _seed = 1234567;\n  var MathUtils = {\n    DEG2RAD: Math.PI / 180,\n    RAD2DEG: 180 / Math.PI,\n    generateUUID: function generateUUID() {\n      // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n      var d0 = Math.random() * 0xffffffff | 0;\n      var d1 = Math.random() * 0xffffffff | 0;\n      var d2 = Math.random() * 0xffffffff | 0;\n      var d3 = Math.random() * 0xffffffff | 0;\n      var uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' + _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' + _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] + _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\n\n      return uuid.toUpperCase();\n    },\n    clamp: function clamp(value, min, max) {\n      return Math.max(min, Math.min(max, value));\n    },\n    // compute euclidian modulo of m % n\n    // https://en.wikipedia.org/wiki/Modulo_operation\n    euclideanModulo: function euclideanModulo(n, m) {\n      return (n % m + m) % m;\n    },\n    // Linear mapping from range <a1, a2> to range <b1, b2>\n    mapLinear: function mapLinear(x, a1, a2, b1, b2) {\n      return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n    },\n    // https://en.wikipedia.org/wiki/Linear_interpolation\n    lerp: function lerp(x, y, t) {\n      return (1 - t) * x + t * y;\n    },\n    // http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n    damp: function damp(x, y, lambda, dt) {\n      return MathUtils.lerp(x, y, 1 - Math.exp(-lambda * dt));\n    },\n    // https://www.desmos.com/calculator/vcsjnyz7x4\n    pingpong: function pingpong(x, length) {\n      if (length === void 0) {\n        length = 1;\n      }\n\n      return length - Math.abs(MathUtils.euclideanModulo(x, length * 2) - length);\n    },\n    // http://en.wikipedia.org/wiki/Smoothstep\n    smoothstep: function smoothstep(x, min, max) {\n      if (x <= min) return 0;\n      if (x >= max) return 1;\n      x = (x - min) / (max - min);\n      return x * x * (3 - 2 * x);\n    },\n    smootherstep: function smootherstep(x, min, max) {\n      if (x <= min) return 0;\n      if (x >= max) return 1;\n      x = (x - min) / (max - min);\n      return x * x * x * (x * (x * 6 - 15) + 10);\n    },\n    // Random integer from <low, high> interval\n    randInt: function randInt(low, high) {\n      return low + Math.floor(Math.random() * (high - low + 1));\n    },\n    // Random float from <low, high> interval\n    randFloat: function randFloat(low, high) {\n      return low + Math.random() * (high - low);\n    },\n    // Random float from <-range/2, range/2> interval\n    randFloatSpread: function randFloatSpread(range) {\n      return range * (0.5 - Math.random());\n    },\n    // Deterministic pseudo-random float in the interval [ 0, 1 ]\n    seededRandom: function seededRandom(s) {\n      if (s !== undefined) _seed = s % 2147483647; // Park-Miller algorithm\n\n      _seed = _seed * 16807 % 2147483647;\n      return (_seed - 1) / 2147483646;\n    },\n    degToRad: function degToRad(degrees) {\n      return degrees * MathUtils.DEG2RAD;\n    },\n    radToDeg: function radToDeg(radians) {\n      return radians * MathUtils.RAD2DEG;\n    },\n    isPowerOfTwo: function isPowerOfTwo(value) {\n      return (value & value - 1) === 0 && value !== 0;\n    },\n    ceilPowerOfTwo: function ceilPowerOfTwo(value) {\n      return Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n    },\n    floorPowerOfTwo: function floorPowerOfTwo(value) {\n      return Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n    },\n    setQuaternionFromProperEuler: function setQuaternionFromProperEuler(q, a, b, c, order) {\n      // Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n      // rotations are applied to the axes in the order specified by 'order'\n      // rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n      // angles are in radians\n      var cos = Math.cos;\n      var sin = Math.sin;\n      var c2 = cos(b / 2);\n      var s2 = sin(b / 2);\n      var c13 = cos((a + c) / 2);\n      var s13 = sin((a + c) / 2);\n      var c1_3 = cos((a - c) / 2);\n      var s1_3 = sin((a - c) / 2);\n      var c3_1 = cos((c - a) / 2);\n      var s3_1 = sin((c - a) / 2);\n\n      switch (order) {\n        case 'XYX':\n          q.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\n          break;\n\n        case 'YZY':\n          q.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\n          break;\n\n        case 'ZXZ':\n          q.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\n          break;\n\n        case 'XZX':\n          q.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\n          break;\n\n        case 'YXY':\n          q.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\n          break;\n\n        case 'ZYZ':\n          q.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\n          break;\n\n        default:\n          console.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order);\n      }\n    }\n  };\n\n  var Vector2 = /*#__PURE__*/function () {\n    function Vector2(x, y) {\n      if (x === void 0) {\n        x = 0;\n      }\n\n      if (y === void 0) {\n        y = 0;\n      }\n\n      Object.defineProperty(this, 'isVector2', {\n        value: true\n      });\n      this.x = x;\n      this.y = y;\n    }\n\n    var _proto = Vector2.prototype;\n\n    _proto.set = function set(x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    };\n\n    _proto.setScalar = function setScalar(scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      return this;\n    };\n\n    _proto.setX = function setX(x) {\n      this.x = x;\n      return this;\n    };\n\n    _proto.setY = function setY(y) {\n      this.y = y;\n      return this;\n    };\n\n    _proto.setComponent = function setComponent(index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    };\n\n    _proto.getComponent = function getComponent(index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor(this.x, this.y);\n    };\n\n    _proto.copy = function copy(v) {\n      this.x = v.x;\n      this.y = v.y;\n      return this;\n    };\n\n    _proto.add = function add(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      return this;\n    };\n\n    _proto.addScalar = function addScalar(s) {\n      this.x += s;\n      this.y += s;\n      return this;\n    };\n\n    _proto.addVectors = function addVectors(a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      return this;\n    };\n\n    _proto.addScaledVector = function addScaledVector(v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      return this;\n    };\n\n    _proto.sub = function sub(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      return this;\n    };\n\n    _proto.subScalar = function subScalar(s) {\n      this.x -= s;\n      this.y -= s;\n      return this;\n    };\n\n    _proto.subVectors = function subVectors(a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      return this;\n    };\n\n    _proto.multiply = function multiply(v) {\n      this.x *= v.x;\n      this.y *= v.y;\n      return this;\n    };\n\n    _proto.multiplyScalar = function multiplyScalar(scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    };\n\n    _proto.divide = function divide(v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      return this;\n    };\n\n    _proto.divideScalar = function divideScalar(scalar) {\n      return this.multiplyScalar(1 / scalar);\n    };\n\n    _proto.applyMatrix3 = function applyMatrix3(m) {\n      var x = this.x,\n          y = this.y;\n      var e = m.elements;\n      this.x = e[0] * x + e[3] * y + e[6];\n      this.y = e[1] * x + e[4] * y + e[7];\n      return this;\n    };\n\n    _proto.min = function min(v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      return this;\n    };\n\n    _proto.max = function max(v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      return this;\n    };\n\n    _proto.clamp = function clamp(min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      return this;\n    };\n\n    _proto.clampScalar = function clampScalar(minVal, maxVal) {\n      this.x = Math.max(minVal, Math.min(maxVal, this.x));\n      this.y = Math.max(minVal, Math.min(maxVal, this.y));\n      return this;\n    };\n\n    _proto.clampLength = function clampLength(min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    };\n\n    _proto.floor = function floor() {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      return this;\n    };\n\n    _proto.ceil = function ceil() {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      return this;\n    };\n\n    _proto.round = function round() {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      return this;\n    };\n\n    _proto.roundToZero = function roundToZero() {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      return this;\n    };\n\n    _proto.negate = function negate() {\n      this.x = -this.x;\n      this.y = -this.y;\n      return this;\n    };\n\n    _proto.dot = function dot(v) {\n      return this.x * v.x + this.y * v.y;\n    };\n\n    _proto.cross = function cross(v) {\n      return this.x * v.y - this.y * v.x;\n    };\n\n    _proto.lengthSq = function lengthSq() {\n      return this.x * this.x + this.y * this.y;\n    };\n\n    _proto.length = function length() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    };\n\n    _proto.manhattanLength = function manhattanLength() {\n      return Math.abs(this.x) + Math.abs(this.y);\n    };\n\n    _proto.normalize = function normalize() {\n      return this.divideScalar(this.length() || 1);\n    };\n\n    _proto.angle = function angle() {\n      // computes the angle in radians with respect to the positive x-axis\n      var angle = Math.atan2(-this.y, -this.x) + Math.PI;\n      return angle;\n    };\n\n    _proto.distanceTo = function distanceTo(v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    };\n\n    _proto.distanceToSquared = function distanceToSquared(v) {\n      var dx = this.x - v.x,\n          dy = this.y - v.y;\n      return dx * dx + dy * dy;\n    };\n\n    _proto.manhattanDistanceTo = function manhattanDistanceTo(v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n    };\n\n    _proto.setLength = function setLength(length) {\n      return this.normalize().multiplyScalar(length);\n    };\n\n    _proto.lerp = function lerp(v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      return this;\n    };\n\n    _proto.lerpVectors = function lerpVectors(v1, v2, alpha) {\n      this.x = v1.x + (v2.x - v1.x) * alpha;\n      this.y = v1.y + (v2.y - v1.y) * alpha;\n      return this;\n    };\n\n    _proto.equals = function equals(v) {\n      return v.x === this.x && v.y === this.y;\n    };\n\n    _proto.fromArray = function fromArray(array, offset) {\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      return this;\n    };\n\n    _proto.toArray = function toArray(array, offset) {\n      if (array === void 0) {\n        array = [];\n      }\n\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      return array;\n    };\n\n    _proto.fromBufferAttribute = function fromBufferAttribute(attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      return this;\n    };\n\n    _proto.rotateAround = function rotateAround(center, angle) {\n      var c = Math.cos(angle),\n          s = Math.sin(angle);\n      var x = this.x - center.x;\n      var y = this.y - center.y;\n      this.x = x * c - y * s + center.x;\n      this.y = x * s + y * c + center.y;\n      return this;\n    };\n\n    _proto.random = function random() {\n      this.x = Math.random();\n      this.y = Math.random();\n      return this;\n    };\n\n    _createClass(Vector2, [{\n      key: \"width\",\n      get: function get() {\n        return this.x;\n      },\n      set: function set(value) {\n        this.x = value;\n      }\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this.y;\n      },\n      set: function set(value) {\n        this.y = value;\n      }\n    }]);\n\n    return Vector2;\n  }();\n\n  var Matrix3 = /*#__PURE__*/function () {\n    function Matrix3() {\n      Object.defineProperty(this, 'isMatrix3', {\n        value: true\n      });\n      this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n      if (arguments.length > 0) {\n        console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n      }\n    }\n\n    var _proto = Matrix3.prototype;\n\n    _proto.set = function set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n      var te = this.elements;\n      te[0] = n11;\n      te[1] = n21;\n      te[2] = n31;\n      te[3] = n12;\n      te[4] = n22;\n      te[5] = n32;\n      te[6] = n13;\n      te[7] = n23;\n      te[8] = n33;\n      return this;\n    };\n\n    _proto.identity = function identity() {\n      this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n      return this;\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor().fromArray(this.elements);\n    };\n\n    _proto.copy = function copy(m) {\n      var te = this.elements;\n      var me = m.elements;\n      te[0] = me[0];\n      te[1] = me[1];\n      te[2] = me[2];\n      te[3] = me[3];\n      te[4] = me[4];\n      te[5] = me[5];\n      te[6] = me[6];\n      te[7] = me[7];\n      te[8] = me[8];\n      return this;\n    };\n\n    _proto.extractBasis = function extractBasis(xAxis, yAxis, zAxis) {\n      xAxis.setFromMatrix3Column(this, 0);\n      yAxis.setFromMatrix3Column(this, 1);\n      zAxis.setFromMatrix3Column(this, 2);\n      return this;\n    };\n\n    _proto.setFromMatrix4 = function setFromMatrix4(m) {\n      var me = m.elements;\n      this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n      return this;\n    };\n\n    _proto.multiply = function multiply(m) {\n      return this.multiplyMatrices(this, m);\n    };\n\n    _proto.premultiply = function premultiply(m) {\n      return this.multiplyMatrices(m, this);\n    };\n\n    _proto.multiplyMatrices = function multiplyMatrices(a, b) {\n      var ae = a.elements;\n      var be = b.elements;\n      var te = this.elements;\n      var a11 = ae[0],\n          a12 = ae[3],\n          a13 = ae[6];\n      var a21 = ae[1],\n          a22 = ae[4],\n          a23 = ae[7];\n      var a31 = ae[2],\n          a32 = ae[5],\n          a33 = ae[8];\n      var b11 = be[0],\n          b12 = be[3],\n          b13 = be[6];\n      var b21 = be[1],\n          b22 = be[4],\n          b23 = be[7];\n      var b31 = be[2],\n          b32 = be[5],\n          b33 = be[8];\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31;\n      te[3] = a11 * b12 + a12 * b22 + a13 * b32;\n      te[6] = a11 * b13 + a12 * b23 + a13 * b33;\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31;\n      te[4] = a21 * b12 + a22 * b22 + a23 * b32;\n      te[7] = a21 * b13 + a22 * b23 + a23 * b33;\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31;\n      te[5] = a31 * b12 + a32 * b22 + a33 * b32;\n      te[8] = a31 * b13 + a32 * b23 + a33 * b33;\n      return this;\n    };\n\n    _proto.multiplyScalar = function multiplyScalar(s) {\n      var te = this.elements;\n      te[0] *= s;\n      te[3] *= s;\n      te[6] *= s;\n      te[1] *= s;\n      te[4] *= s;\n      te[7] *= s;\n      te[2] *= s;\n      te[5] *= s;\n      te[8] *= s;\n      return this;\n    };\n\n    _proto.determinant = function determinant() {\n      var te = this.elements;\n      var a = te[0],\n          b = te[1],\n          c = te[2],\n          d = te[3],\n          e = te[4],\n          f = te[5],\n          g = te[6],\n          h = te[7],\n          i = te[8];\n      return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n    };\n\n    _proto.invert = function invert() {\n      var te = this.elements,\n          n11 = te[0],\n          n21 = te[1],\n          n31 = te[2],\n          n12 = te[3],\n          n22 = te[4],\n          n32 = te[5],\n          n13 = te[6],\n          n23 = te[7],\n          n33 = te[8],\n          t11 = n33 * n22 - n32 * n23,\n          t12 = n32 * n13 - n33 * n12,\n          t13 = n23 * n12 - n22 * n13,\n          det = n11 * t11 + n21 * t12 + n31 * t13;\n      if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n31 * n23 - n33 * n21) * detInv;\n      te[2] = (n32 * n21 - n31 * n22) * detInv;\n      te[3] = t12 * detInv;\n      te[4] = (n33 * n11 - n31 * n13) * detInv;\n      te[5] = (n31 * n12 - n32 * n11) * detInv;\n      te[6] = t13 * detInv;\n      te[7] = (n21 * n13 - n23 * n11) * detInv;\n      te[8] = (n22 * n11 - n21 * n12) * detInv;\n      return this;\n    };\n\n    _proto.transpose = function transpose() {\n      var tmp;\n      var m = this.elements;\n      tmp = m[1];\n      m[1] = m[3];\n      m[3] = tmp;\n      tmp = m[2];\n      m[2] = m[6];\n      m[6] = tmp;\n      tmp = m[5];\n      m[5] = m[7];\n      m[7] = tmp;\n      return this;\n    };\n\n    _proto.getNormalMatrix = function getNormalMatrix(matrix4) {\n      return this.setFromMatrix4(matrix4).copy(this).invert().transpose();\n    };\n\n    _proto.transposeIntoArray = function transposeIntoArray(r) {\n      var m = this.elements;\n      r[0] = m[0];\n      r[1] = m[3];\n      r[2] = m[6];\n      r[3] = m[1];\n      r[4] = m[4];\n      r[5] = m[7];\n      r[6] = m[2];\n      r[7] = m[5];\n      r[8] = m[8];\n      return this;\n    };\n\n    _proto.setUvTransform = function setUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n      var c = Math.cos(rotation);\n      var s = Math.sin(rotation);\n      this.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n      return this;\n    };\n\n    _proto.scale = function scale(sx, sy) {\n      var te = this.elements;\n      te[0] *= sx;\n      te[3] *= sx;\n      te[6] *= sx;\n      te[1] *= sy;\n      te[4] *= sy;\n      te[7] *= sy;\n      return this;\n    };\n\n    _proto.rotate = function rotate(theta) {\n      var c = Math.cos(theta);\n      var s = Math.sin(theta);\n      var te = this.elements;\n      var a11 = te[0],\n          a12 = te[3],\n          a13 = te[6];\n      var a21 = te[1],\n          a22 = te[4],\n          a23 = te[7];\n      te[0] = c * a11 + s * a21;\n      te[3] = c * a12 + s * a22;\n      te[6] = c * a13 + s * a23;\n      te[1] = -s * a11 + c * a21;\n      te[4] = -s * a12 + c * a22;\n      te[7] = -s * a13 + c * a23;\n      return this;\n    };\n\n    _proto.translate = function translate(tx, ty) {\n      var te = this.elements;\n      te[0] += tx * te[2];\n      te[3] += tx * te[5];\n      te[6] += tx * te[8];\n      te[1] += ty * te[2];\n      te[4] += ty * te[5];\n      te[7] += ty * te[8];\n      return this;\n    };\n\n    _proto.equals = function equals(matrix) {\n      var te = this.elements;\n      var me = matrix.elements;\n\n      for (var i = 0; i < 9; i++) {\n        if (te[i] !== me[i]) return false;\n      }\n\n      return true;\n    };\n\n    _proto.fromArray = function fromArray(array, offset) {\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      for (var i = 0; i < 9; i++) {\n        this.elements[i] = array[i + offset];\n      }\n\n      return this;\n    };\n\n    _proto.toArray = function toArray(array, offset) {\n      if (array === void 0) {\n        array = [];\n      }\n\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      var te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      return array;\n    };\n\n    return Matrix3;\n  }();\n\n  var _canvas;\n\n  var ImageUtils = {\n    getDataURL: function getDataURL(image) {\n      if (/^data:/i.test(image.src)) {\n        return image.src;\n      }\n\n      if (typeof HTMLCanvasElement == 'undefined') {\n        return image.src;\n      }\n\n      var canvas;\n\n      if (image instanceof HTMLCanvasElement) {\n        canvas = image;\n      } else {\n        if (_canvas === undefined) _canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n        _canvas.width = image.width;\n        _canvas.height = image.height;\n\n        var context = _canvas.getContext('2d');\n\n        if (image instanceof ImageData) {\n          context.putImageData(image, 0, 0);\n        } else {\n          context.drawImage(image, 0, 0, image.width, image.height);\n        }\n\n        canvas = _canvas;\n      }\n\n      if (canvas.width > 2048 || canvas.height > 2048) {\n        return canvas.toDataURL('image/jpeg', 0.6);\n      } else {\n        return canvas.toDataURL('image/png');\n      }\n    }\n  };\n  var textureId = 0;\n\n  function Texture(image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n    if (image === void 0) {\n      image = Texture.DEFAULT_IMAGE;\n    }\n\n    if (mapping === void 0) {\n      mapping = Texture.DEFAULT_MAPPING;\n    }\n\n    if (wrapS === void 0) {\n      wrapS = ClampToEdgeWrapping;\n    }\n\n    if (wrapT === void 0) {\n      wrapT = ClampToEdgeWrapping;\n    }\n\n    if (magFilter === void 0) {\n      magFilter = LinearFilter;\n    }\n\n    if (minFilter === void 0) {\n      minFilter = LinearMipmapLinearFilter;\n    }\n\n    if (format === void 0) {\n      format = RGBAFormat;\n    }\n\n    if (type === void 0) {\n      type = UnsignedByteType;\n    }\n\n    if (anisotropy === void 0) {\n      anisotropy = 1;\n    }\n\n    if (encoding === void 0) {\n      encoding = LinearEncoding;\n    }\n\n    Object.defineProperty(this, 'id', {\n      value: textureId++\n    });\n    this.uuid = MathUtils.generateUUID();\n    this.name = '';\n    this.image = image;\n    this.mipmaps = [];\n    this.mapping = mapping;\n    this.wrapS = wrapS;\n    this.wrapT = wrapT;\n    this.magFilter = magFilter;\n    this.minFilter = minFilter;\n    this.anisotropy = anisotropy;\n    this.format = format;\n    this.internalFormat = null;\n    this.type = type;\n    this.offset = new Vector2(0, 0);\n    this.repeat = new Vector2(1, 1);\n    this.center = new Vector2(0, 0);\n    this.rotation = 0;\n    this.matrixAutoUpdate = true;\n    this.matrix = new Matrix3();\n    this.generateMipmaps = true;\n    this.premultiplyAlpha = false;\n    this.flipY = true;\n    this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n    // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n    //\n    // Also changing the encoding after already used by a Material will not automatically make the Material\n    // update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n    this.encoding = encoding;\n    this.version = 0;\n    this.onUpdate = null;\n  }\n\n  Texture.DEFAULT_IMAGE = undefined;\n  Texture.DEFAULT_MAPPING = UVMapping;\n  Texture.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: Texture,\n    isTexture: true,\n    updateMatrix: function updateMatrix() {\n      this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(source) {\n      this.name = source.name;\n      this.image = source.image;\n      this.mipmaps = source.mipmaps.slice(0);\n      this.mapping = source.mapping;\n      this.wrapS = source.wrapS;\n      this.wrapT = source.wrapT;\n      this.magFilter = source.magFilter;\n      this.minFilter = source.minFilter;\n      this.anisotropy = source.anisotropy;\n      this.format = source.format;\n      this.internalFormat = source.internalFormat;\n      this.type = source.type;\n      this.offset.copy(source.offset);\n      this.repeat.copy(source.repeat);\n      this.center.copy(source.center);\n      this.rotation = source.rotation;\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      this.matrix.copy(source.matrix);\n      this.generateMipmaps = source.generateMipmaps;\n      this.premultiplyAlpha = source.premultiplyAlpha;\n      this.flipY = source.flipY;\n      this.unpackAlignment = source.unpackAlignment;\n      this.encoding = source.encoding;\n      return this;\n    },\n    toJSON: function toJSON(meta) {\n      var isRootObject = meta === undefined || typeof meta === 'string';\n\n      if (!isRootObject && meta.textures[this.uuid] !== undefined) {\n        return meta.textures[this.uuid];\n      }\n\n      var output = {\n        metadata: {\n          version: 4.5,\n          type: 'Texture',\n          generator: 'Texture.toJSON'\n        },\n        uuid: this.uuid,\n        name: this.name,\n        mapping: this.mapping,\n        repeat: [this.repeat.x, this.repeat.y],\n        offset: [this.offset.x, this.offset.y],\n        center: [this.center.x, this.center.y],\n        rotation: this.rotation,\n        wrap: [this.wrapS, this.wrapT],\n        format: this.format,\n        type: this.type,\n        encoding: this.encoding,\n        minFilter: this.minFilter,\n        magFilter: this.magFilter,\n        anisotropy: this.anisotropy,\n        flipY: this.flipY,\n        premultiplyAlpha: this.premultiplyAlpha,\n        unpackAlignment: this.unpackAlignment\n      };\n\n      if (this.image !== undefined) {\n        // TODO: Move to THREE.Image\n        var image = this.image;\n\n        if (image.uuid === undefined) {\n          image.uuid = MathUtils.generateUUID(); // UGH\n        }\n\n        if (!isRootObject && meta.images[image.uuid] === undefined) {\n          var url;\n\n          if (Array.isArray(image)) {\n            // process array of images e.g. CubeTexture\n            url = [];\n\n            for (var i = 0, l = image.length; i < l; i++) {\n              // check cube texture with data textures\n              if (image[i].isDataTexture) {\n                url.push(serializeImage(image[i].image));\n              } else {\n                url.push(serializeImage(image[i]));\n              }\n            }\n          } else {\n            // process single image\n            url = serializeImage(image);\n          }\n\n          meta.images[image.uuid] = {\n            uuid: image.uuid,\n            url: url\n          };\n        }\n\n        output.image = image.uuid;\n      }\n\n      if (!isRootObject) {\n        meta.textures[this.uuid] = output;\n      }\n\n      return output;\n    },\n    dispose: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    },\n    transformUv: function transformUv(uv) {\n      if (this.mapping !== UVMapping) return uv;\n      uv.applyMatrix3(this.matrix);\n\n      if (uv.x < 0 || uv.x > 1) {\n        switch (this.wrapS) {\n          case RepeatWrapping:\n            uv.x = uv.x - Math.floor(uv.x);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.x = uv.x < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n              uv.x = Math.ceil(uv.x) - uv.x;\n            } else {\n              uv.x = uv.x - Math.floor(uv.x);\n            }\n\n            break;\n        }\n      }\n\n      if (uv.y < 0 || uv.y > 1) {\n        switch (this.wrapT) {\n          case RepeatWrapping:\n            uv.y = uv.y - Math.floor(uv.y);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.y = uv.y < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n              uv.y = Math.ceil(uv.y) - uv.y;\n            } else {\n              uv.y = uv.y - Math.floor(uv.y);\n            }\n\n            break;\n        }\n      }\n\n      if (this.flipY) {\n        uv.y = 1 - uv.y;\n      }\n\n      return uv;\n    }\n  });\n  Object.defineProperty(Texture.prototype, 'needsUpdate', {\n    set: function set(value) {\n      if (value === true) this.version++;\n    }\n  });\n\n  function serializeImage(image) {\n    if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n      // default images\n      return ImageUtils.getDataURL(image);\n    } else {\n      if (image.data) {\n        // images of DataTexture\n        return {\n          data: Array.prototype.slice.call(image.data),\n          width: image.width,\n          height: image.height,\n          type: image.data.constructor.name\n        };\n      } else {\n        console.warn('THREE.Texture: Unable to serialize Texture.');\n        return {};\n      }\n    }\n  }\n\n  var Vector4 = /*#__PURE__*/function () {\n    function Vector4(x, y, z, w) {\n      if (x === void 0) {\n        x = 0;\n      }\n\n      if (y === void 0) {\n        y = 0;\n      }\n\n      if (z === void 0) {\n        z = 0;\n      }\n\n      if (w === void 0) {\n        w = 1;\n      }\n\n      Object.defineProperty(this, 'isVector4', {\n        value: true\n      });\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      this.w = w;\n    }\n\n    var _proto = Vector4.prototype;\n\n    _proto.set = function set(x, y, z, w) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      this.w = w;\n      return this;\n    };\n\n    _proto.setScalar = function setScalar(scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      this.w = scalar;\n      return this;\n    };\n\n    _proto.setX = function setX(x) {\n      this.x = x;\n      return this;\n    };\n\n    _proto.setY = function setY(y) {\n      this.y = y;\n      return this;\n    };\n\n    _proto.setZ = function setZ(z) {\n      this.z = z;\n      return this;\n    };\n\n    _proto.setW = function setW(w) {\n      this.w = w;\n      return this;\n    };\n\n    _proto.setComponent = function setComponent(index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        case 2:\n          this.z = value;\n          break;\n\n        case 3:\n          this.w = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    };\n\n    _proto.getComponent = function getComponent(index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        case 2:\n          return this.z;\n\n        case 3:\n          return this.w;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor(this.x, this.y, this.z, this.w);\n    };\n\n    _proto.copy = function copy(v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      this.w = v.w !== undefined ? v.w : 1;\n      return this;\n    };\n\n    _proto.add = function add(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      this.w += v.w;\n      return this;\n    };\n\n    _proto.addScalar = function addScalar(s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      this.w += s;\n      return this;\n    };\n\n    _proto.addVectors = function addVectors(a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      this.w = a.w + b.w;\n      return this;\n    };\n\n    _proto.addScaledVector = function addScaledVector(v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      this.w += v.w * s;\n      return this;\n    };\n\n    _proto.sub = function sub(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      this.w -= v.w;\n      return this;\n    };\n\n    _proto.subScalar = function subScalar(s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      this.w -= s;\n      return this;\n    };\n\n    _proto.subVectors = function subVectors(a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      this.w = a.w - b.w;\n      return this;\n    };\n\n    _proto.multiply = function multiply(v) {\n      this.x *= v.x;\n      this.y *= v.y;\n      this.z *= v.z;\n      this.w *= v.w;\n      return this;\n    };\n\n    _proto.multiplyScalar = function multiplyScalar(scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      this.w *= scalar;\n      return this;\n    };\n\n    _proto.applyMatrix4 = function applyMatrix4(m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z,\n          w = this.w;\n      var e = m.elements;\n      this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n      this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n      this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n      this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n      return this;\n    };\n\n    _proto.divideScalar = function divideScalar(scalar) {\n      return this.multiplyScalar(1 / scalar);\n    };\n\n    _proto.setAxisAngleFromQuaternion = function setAxisAngleFromQuaternion(q) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n      // q is assumed to be normalized\n      this.w = 2 * Math.acos(q.w);\n      var s = Math.sqrt(1 - q.w * q.w);\n\n      if (s < 0.0001) {\n        this.x = 1;\n        this.y = 0;\n        this.z = 0;\n      } else {\n        this.x = q.x / s;\n        this.y = q.y / s;\n        this.z = q.z / s;\n      }\n\n      return this;\n    };\n\n    _proto.setAxisAngleFromRotationMatrix = function setAxisAngleFromRotationMatrix(m) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      var angle, x, y, z; // variables for result\n\n      var epsilon = 0.01,\n          // margin to allow for rounding errors\n      epsilon2 = 0.1,\n          // margin to distinguish between 0 and 180 degrees\n      te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n\n      if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n        // singularity found\n        // first check for identity matrix which must have +1 for all terms\n        // in leading diagonal and zero in other terms\n        if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n          // this singularity is identity matrix so angle = 0\n          this.set(1, 0, 0, 0);\n          return this; // zero angle, arbitrary axis\n        } // otherwise this singularity is angle = 180\n\n\n        angle = Math.PI;\n        var xx = (m11 + 1) / 2;\n        var yy = (m22 + 1) / 2;\n        var zz = (m33 + 1) / 2;\n        var xy = (m12 + m21) / 4;\n        var xz = (m13 + m31) / 4;\n        var yz = (m23 + m32) / 4;\n\n        if (xx > yy && xx > zz) {\n          // m11 is the largest diagonal term\n          if (xx < epsilon) {\n            x = 0;\n            y = 0.707106781;\n            z = 0.707106781;\n          } else {\n            x = Math.sqrt(xx);\n            y = xy / x;\n            z = xz / x;\n          }\n        } else if (yy > zz) {\n          // m22 is the largest diagonal term\n          if (yy < epsilon) {\n            x = 0.707106781;\n            y = 0;\n            z = 0.707106781;\n          } else {\n            y = Math.sqrt(yy);\n            x = xy / y;\n            z = yz / y;\n          }\n        } else {\n          // m33 is the largest diagonal term so base result on this\n          if (zz < epsilon) {\n            x = 0.707106781;\n            y = 0.707106781;\n            z = 0;\n          } else {\n            z = Math.sqrt(zz);\n            x = xz / z;\n            y = yz / z;\n          }\n        }\n\n        this.set(x, y, z, angle);\n        return this; // return 180 deg rotation\n      } // as we have reached here there are no singularities so we can handle normally\n\n\n      var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n      if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n      // caught by singularity test above, but I've left it in just in case\n\n      this.x = (m32 - m23) / s;\n      this.y = (m13 - m31) / s;\n      this.z = (m21 - m12) / s;\n      this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n      return this;\n    };\n\n    _proto.min = function min(v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      this.w = Math.min(this.w, v.w);\n      return this;\n    };\n\n    _proto.max = function max(v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      this.w = Math.max(this.w, v.w);\n      return this;\n    };\n\n    _proto.clamp = function clamp(min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\n      this.w = Math.max(min.w, Math.min(max.w, this.w));\n      return this;\n    };\n\n    _proto.clampScalar = function clampScalar(minVal, maxVal) {\n      this.x = Math.max(minVal, Math.min(maxVal, this.x));\n      this.y = Math.max(minVal, Math.min(maxVal, this.y));\n      this.z = Math.max(minVal, Math.min(maxVal, this.z));\n      this.w = Math.max(minVal, Math.min(maxVal, this.w));\n      return this;\n    };\n\n    _proto.clampLength = function clampLength(min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    };\n\n    _proto.floor = function floor() {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      this.w = Math.floor(this.w);\n      return this;\n    };\n\n    _proto.ceil = function ceil() {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      this.w = Math.ceil(this.w);\n      return this;\n    };\n\n    _proto.round = function round() {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      this.w = Math.round(this.w);\n      return this;\n    };\n\n    _proto.roundToZero = function roundToZero() {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n      this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n      return this;\n    };\n\n    _proto.negate = function negate() {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      this.w = -this.w;\n      return this;\n    };\n\n    _proto.dot = function dot(v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n    };\n\n    _proto.lengthSq = function lengthSq() {\n      return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n    };\n\n    _proto.length = function length() {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    };\n\n    _proto.manhattanLength = function manhattanLength() {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n    };\n\n    _proto.normalize = function normalize() {\n      return this.divideScalar(this.length() || 1);\n    };\n\n    _proto.setLength = function setLength(length) {\n      return this.normalize().multiplyScalar(length);\n    };\n\n    _proto.lerp = function lerp(v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      this.w += (v.w - this.w) * alpha;\n      return this;\n    };\n\n    _proto.lerpVectors = function lerpVectors(v1, v2, alpha) {\n      this.x = v1.x + (v2.x - v1.x) * alpha;\n      this.y = v1.y + (v2.y - v1.y) * alpha;\n      this.z = v1.z + (v2.z - v1.z) * alpha;\n      this.w = v1.w + (v2.w - v1.w) * alpha;\n      return this;\n    };\n\n    _proto.equals = function equals(v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n    };\n\n    _proto.fromArray = function fromArray(array, offset) {\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      this.w = array[offset + 3];\n      return this;\n    };\n\n    _proto.toArray = function toArray(array, offset) {\n      if (array === void 0) {\n        array = [];\n      }\n\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      array[offset + 3] = this.w;\n      return array;\n    };\n\n    _proto.fromBufferAttribute = function fromBufferAttribute(attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      this.z = attribute.getZ(index);\n      this.w = attribute.getW(index);\n      return this;\n    };\n\n    _proto.random = function random() {\n      this.x = Math.random();\n      this.y = Math.random();\n      this.z = Math.random();\n      this.w = Math.random();\n      return this;\n    };\n\n    _createClass(Vector4, [{\n      key: \"width\",\n      get: function get() {\n        return this.z;\n      },\n      set: function set(value) {\n        this.z = value;\n      }\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this.w;\n      },\n      set: function set(value) {\n        this.w = value;\n      }\n    }]);\n\n    return Vector4;\n  }();\n  /*\n   In options, we can specify:\n   * Texture parameters for an auto-generated target texture\n   * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n  */\n\n\n  var WebGLRenderTarget = /*#__PURE__*/function (_EventDispatcher) {\n    _inheritsLoose(WebGLRenderTarget, _EventDispatcher);\n\n    function WebGLRenderTarget(width, height, options) {\n      var _this;\n\n      _this = _EventDispatcher.call(this) || this;\n      Object.defineProperty(_assertThisInitialized(_this), 'isWebGLRenderTarget', {\n        value: true\n      });\n      _this.width = width;\n      _this.height = height;\n      _this.scissor = new Vector4(0, 0, width, height);\n      _this.scissorTest = false;\n      _this.viewport = new Vector4(0, 0, width, height);\n      options = options || {};\n      _this.texture = new Texture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n      _this.texture.image = {};\n      _this.texture.image.width = width;\n      _this.texture.image.height = height;\n      _this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n      _this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n      _this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n      _this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n      _this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n      return _this;\n    }\n\n    var _proto = WebGLRenderTarget.prototype;\n\n    _proto.setSize = function setSize(width, height) {\n      if (this.width !== width || this.height !== height) {\n        this.width = width;\n        this.height = height;\n        this.texture.image.width = width;\n        this.texture.image.height = height;\n        this.dispose();\n      }\n\n      this.viewport.set(0, 0, width, height);\n      this.scissor.set(0, 0, width, height);\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor().copy(this);\n    };\n\n    _proto.copy = function copy(source) {\n      this.width = source.width;\n      this.height = source.height;\n      this.viewport.copy(source.viewport);\n      this.texture = source.texture.clone();\n      this.depthBuffer = source.depthBuffer;\n      this.stencilBuffer = source.stencilBuffer;\n      this.depthTexture = source.depthTexture;\n      return this;\n    };\n\n    _proto.dispose = function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    };\n\n    return WebGLRenderTarget;\n  }(EventDispatcher);\n\n  var WebGLMultisampleRenderTarget = /*#__PURE__*/function (_WebGLRenderTarget) {\n    _inheritsLoose(WebGLMultisampleRenderTarget, _WebGLRenderTarget);\n\n    function WebGLMultisampleRenderTarget(width, height, options) {\n      var _this;\n\n      _this = _WebGLRenderTarget.call(this, width, height, options) || this;\n      Object.defineProperty(_assertThisInitialized(_this), 'isWebGLMultisampleRenderTarget', {\n        value: true\n      });\n      _this.samples = 4;\n      return _this;\n    }\n\n    var _proto = WebGLMultisampleRenderTarget.prototype;\n\n    _proto.copy = function copy(source) {\n      _WebGLRenderTarget.prototype.copy.call(this, source);\n\n      this.samples = source.samples;\n      return this;\n    };\n\n    return WebGLMultisampleRenderTarget;\n  }(WebGLRenderTarget);\n\n  var Quaternion = /*#__PURE__*/function () {\n    function Quaternion(x, y, z, w) {\n      if (x === void 0) {\n        x = 0;\n      }\n\n      if (y === void 0) {\n        y = 0;\n      }\n\n      if (z === void 0) {\n        z = 0;\n      }\n\n      if (w === void 0) {\n        w = 1;\n      }\n\n      Object.defineProperty(this, 'isQuaternion', {\n        value: true\n      });\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._w = w;\n    }\n\n    Quaternion.slerp = function slerp(qa, qb, qm, t) {\n      return qm.copy(qa).slerp(qb, t);\n    };\n\n    Quaternion.slerpFlat = function slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n      // fuzz-free, array-based Quaternion SLERP operation\n      var x0 = src0[srcOffset0 + 0],\n          y0 = src0[srcOffset0 + 1],\n          z0 = src0[srcOffset0 + 2],\n          w0 = src0[srcOffset0 + 3];\n      var x1 = src1[srcOffset1 + 0],\n          y1 = src1[srcOffset1 + 1],\n          z1 = src1[srcOffset1 + 2],\n          w1 = src1[srcOffset1 + 3];\n\n      if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n        var s = 1 - t;\n        var cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n            dir = cos >= 0 ? 1 : -1,\n            sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n        if (sqrSin > Number.EPSILON) {\n          var sin = Math.sqrt(sqrSin),\n              len = Math.atan2(sin, cos * dir);\n          s = Math.sin(s * len) / sin;\n          t = Math.sin(t * len) / sin;\n        }\n\n        var tDir = t * dir;\n        x0 = x0 * s + x1 * tDir;\n        y0 = y0 * s + y1 * tDir;\n        z0 = z0 * s + z1 * tDir;\n        w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n        if (s === 1 - t) {\n          var f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n          x0 *= f;\n          y0 *= f;\n          z0 *= f;\n          w0 *= f;\n        }\n      }\n\n      dst[dstOffset] = x0;\n      dst[dstOffset + 1] = y0;\n      dst[dstOffset + 2] = z0;\n      dst[dstOffset + 3] = w0;\n    };\n\n    Quaternion.multiplyQuaternionsFlat = function multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\n      var x0 = src0[srcOffset0];\n      var y0 = src0[srcOffset0 + 1];\n      var z0 = src0[srcOffset0 + 2];\n      var w0 = src0[srcOffset0 + 3];\n      var x1 = src1[srcOffset1];\n      var y1 = src1[srcOffset1 + 1];\n      var z1 = src1[srcOffset1 + 2];\n      var w1 = src1[srcOffset1 + 3];\n      dst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n      dst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n      dst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n      dst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n      return dst;\n    };\n\n    var _proto = Quaternion.prototype;\n\n    _proto.set = function set(x, y, z, w) {\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._w = w;\n\n      this._onChangeCallback();\n\n      return this;\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor(this._x, this._y, this._z, this._w);\n    };\n\n    _proto.copy = function copy(quaternion) {\n      this._x = quaternion.x;\n      this._y = quaternion.y;\n      this._z = quaternion.z;\n      this._w = quaternion.w;\n\n      this._onChangeCallback();\n\n      return this;\n    };\n\n    _proto.setFromEuler = function setFromEuler(euler, update) {\n      if (!(euler && euler.isEuler)) {\n        throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n      }\n\n      var x = euler._x,\n          y = euler._y,\n          z = euler._z,\n          order = euler._order; // http://www.mathworks.com/matlabcentral/fileexchange/\n      // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n      //\tcontent/SpinCalc.m\n\n      var cos = Math.cos;\n      var sin = Math.sin;\n      var c1 = cos(x / 2);\n      var c2 = cos(y / 2);\n      var c3 = cos(z / 2);\n      var s1 = sin(x / 2);\n      var s2 = sin(y / 2);\n      var s3 = sin(z / 2);\n\n      switch (order) {\n        case 'XYZ':\n          this._x = s1 * c2 * c3 + c1 * s2 * s3;\n          this._y = c1 * s2 * c3 - s1 * c2 * s3;\n          this._z = c1 * c2 * s3 + s1 * s2 * c3;\n          this._w = c1 * c2 * c3 - s1 * s2 * s3;\n          break;\n\n        case 'YXZ':\n          this._x = s1 * c2 * c3 + c1 * s2 * s3;\n          this._y = c1 * s2 * c3 - s1 * c2 * s3;\n          this._z = c1 * c2 * s3 - s1 * s2 * c3;\n          this._w = c1 * c2 * c3 + s1 * s2 * s3;\n          break;\n\n        case 'ZXY':\n          this._x = s1 * c2 * c3 - c1 * s2 * s3;\n          this._y = c1 * s2 * c3 + s1 * c2 * s3;\n          this._z = c1 * c2 * s3 + s1 * s2 * c3;\n          this._w = c1 * c2 * c3 - s1 * s2 * s3;\n          break;\n\n        case 'ZYX':\n          this._x = s1 * c2 * c3 - c1 * s2 * s3;\n          this._y = c1 * s2 * c3 + s1 * c2 * s3;\n          this._z = c1 * c2 * s3 - s1 * s2 * c3;\n          this._w = c1 * c2 * c3 + s1 * s2 * s3;\n          break;\n\n        case 'YZX':\n          this._x = s1 * c2 * c3 + c1 * s2 * s3;\n          this._y = c1 * s2 * c3 + s1 * c2 * s3;\n          this._z = c1 * c2 * s3 - s1 * s2 * c3;\n          this._w = c1 * c2 * c3 - s1 * s2 * s3;\n          break;\n\n        case 'XZY':\n          this._x = s1 * c2 * c3 - c1 * s2 * s3;\n          this._y = c1 * s2 * c3 - s1 * c2 * s3;\n          this._z = c1 * c2 * s3 + s1 * s2 * c3;\n          this._w = c1 * c2 * c3 + s1 * s2 * s3;\n          break;\n\n        default:\n          console.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order);\n      }\n\n      if (update !== false) this._onChangeCallback();\n      return this;\n    };\n\n    _proto.setFromAxisAngle = function setFromAxisAngle(axis, angle) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n      // assumes axis is normalized\n      var halfAngle = angle / 2,\n          s = Math.sin(halfAngle);\n      this._x = axis.x * s;\n      this._y = axis.y * s;\n      this._z = axis.z * s;\n      this._w = Math.cos(halfAngle);\n\n      this._onChangeCallback();\n\n      return this;\n    };\n\n    _proto.setFromRotationMatrix = function setFromRotationMatrix(m) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      var te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10],\n          trace = m11 + m22 + m33;\n\n      if (trace > 0) {\n        var s = 0.5 / Math.sqrt(trace + 1.0);\n        this._w = 0.25 / s;\n        this._x = (m32 - m23) * s;\n        this._y = (m13 - m31) * s;\n        this._z = (m21 - m12) * s;\n      } else if (m11 > m22 && m11 > m33) {\n        var _s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n        this._w = (m32 - m23) / _s;\n        this._x = 0.25 * _s;\n        this._y = (m12 + m21) / _s;\n        this._z = (m13 + m31) / _s;\n      } else if (m22 > m33) {\n        var _s2 = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n        this._w = (m13 - m31) / _s2;\n        this._x = (m12 + m21) / _s2;\n        this._y = 0.25 * _s2;\n        this._z = (m23 + m32) / _s2;\n      } else {\n        var _s3 = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n        this._w = (m21 - m12) / _s3;\n        this._x = (m13 + m31) / _s3;\n        this._y = (m23 + m32) / _s3;\n        this._z = 0.25 * _s3;\n      }\n\n      this._onChangeCallback();\n\n      return this;\n    };\n\n    _proto.setFromUnitVectors = function setFromUnitVectors(vFrom, vTo) {\n      // assumes direction vectors vFrom and vTo are normalized\n      var EPS = 0.000001;\n      var r = vFrom.dot(vTo) + 1;\n\n      if (r < EPS) {\n        r = 0;\n\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n          this._x = -vFrom.y;\n          this._y = vFrom.x;\n          this._z = 0;\n          this._w = r;\n        } else {\n          this._x = 0;\n          this._y = -vFrom.z;\n          this._z = vFrom.y;\n          this._w = r;\n        }\n      } else {\n        // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n        this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n        this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n        this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n        this._w = r;\n      }\n\n      return this.normalize();\n    };\n\n    _proto.angleTo = function angleTo(q) {\n      return 2 * Math.acos(Math.abs(MathUtils.clamp(this.dot(q), -1, 1)));\n    };\n\n    _proto.rotateTowards = function rotateTowards(q, step) {\n      var angle = this.angleTo(q);\n      if (angle === 0) return this;\n      var t = Math.min(1, step / angle);\n      this.slerp(q, t);\n      return this;\n    };\n\n    _proto.identity = function identity() {\n      return this.set(0, 0, 0, 1);\n    };\n\n    _proto.invert = function invert() {\n      // quaternion is assumed to have unit length\n      return this.conjugate();\n    };\n\n    _proto.conjugate = function conjugate() {\n      this._x *= -1;\n      this._y *= -1;\n      this._z *= -1;\n\n      this._onChangeCallback();\n\n      return this;\n    };\n\n    _proto.dot = function dot(v) {\n      return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n    };\n\n    _proto.lengthSq = function lengthSq() {\n      return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n    };\n\n    _proto.length = function length() {\n      return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n    };\n\n    _proto.normalize = function normalize() {\n      var l = this.length();\n\n      if (l === 0) {\n        this._x = 0;\n        this._y = 0;\n        this._z = 0;\n        this._w = 1;\n      } else {\n        l = 1 / l;\n        this._x = this._x * l;\n        this._y = this._y * l;\n        this._z = this._z * l;\n        this._w = this._w * l;\n      }\n\n      this._onChangeCallback();\n\n      return this;\n    };\n\n    _proto.multiply = function multiply(q, p) {\n      if (p !== undefined) {\n        console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n        return this.multiplyQuaternions(q, p);\n      }\n\n      return this.multiplyQuaternions(this, q);\n    };\n\n    _proto.premultiply = function premultiply(q) {\n      return this.multiplyQuaternions(q, this);\n    };\n\n    _proto.multiplyQuaternions = function multiplyQuaternions(a, b) {\n      // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n      var qax = a._x,\n          qay = a._y,\n          qaz = a._z,\n          qaw = a._w;\n      var qbx = b._x,\n          qby = b._y,\n          qbz = b._z,\n          qbw = b._w;\n      this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n      this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n      this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n      this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n      this._onChangeCallback();\n\n      return this;\n    };\n\n    _proto.slerp = function slerp(qb, t) {\n      if (t === 0) return this;\n      if (t === 1) return this.copy(qb);\n      var x = this._x,\n          y = this._y,\n          z = this._z,\n          w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n      var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n      if (cosHalfTheta < 0) {\n        this._w = -qb._w;\n        this._x = -qb._x;\n        this._y = -qb._y;\n        this._z = -qb._z;\n        cosHalfTheta = -cosHalfTheta;\n      } else {\n        this.copy(qb);\n      }\n\n      if (cosHalfTheta >= 1.0) {\n        this._w = w;\n        this._x = x;\n        this._y = y;\n        this._z = z;\n        return this;\n      }\n\n      var sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n      if (sqrSinHalfTheta <= Number.EPSILON) {\n        var s = 1 - t;\n        this._w = s * w + t * this._w;\n        this._x = s * x + t * this._x;\n        this._y = s * y + t * this._y;\n        this._z = s * z + t * this._z;\n        this.normalize();\n\n        this._onChangeCallback();\n\n        return this;\n      }\n\n      var sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n      var halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n      var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n          ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n      this._w = w * ratioA + this._w * ratioB;\n      this._x = x * ratioA + this._x * ratioB;\n      this._y = y * ratioA + this._y * ratioB;\n      this._z = z * ratioA + this._z * ratioB;\n\n      this._onChangeCallback();\n\n      return this;\n    };\n\n    _proto.equals = function equals(quaternion) {\n      return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n    };\n\n    _proto.fromArray = function fromArray(array, offset) {\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      this._x = array[offset];\n      this._y = array[offset + 1];\n      this._z = array[offset + 2];\n      this._w = array[offset + 3];\n\n      this._onChangeCallback();\n\n      return this;\n    };\n\n    _proto.toArray = function toArray(array, offset) {\n      if (array === void 0) {\n        array = [];\n      }\n\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._w;\n      return array;\n    };\n\n    _proto.fromBufferAttribute = function fromBufferAttribute(attribute, index) {\n      this._x = attribute.getX(index);\n      this._y = attribute.getY(index);\n      this._z = attribute.getZ(index);\n      this._w = attribute.getW(index);\n      return this;\n    };\n\n    _proto._onChange = function _onChange(callback) {\n      this._onChangeCallback = callback;\n      return this;\n    };\n\n    _proto._onChangeCallback = function _onChangeCallback() {};\n\n    _createClass(Quaternion, [{\n      key: \"x\",\n      get: function get() {\n        return this._x;\n      },\n      set: function set(value) {\n        this._x = value;\n\n        this._onChangeCallback();\n      }\n    }, {\n      key: \"y\",\n      get: function get() {\n        return this._y;\n      },\n      set: function set(value) {\n        this._y = value;\n\n        this._onChangeCallback();\n      }\n    }, {\n      key: \"z\",\n      get: function get() {\n        return this._z;\n      },\n      set: function set(value) {\n        this._z = value;\n\n        this._onChangeCallback();\n      }\n    }, {\n      key: \"w\",\n      get: function get() {\n        return this._w;\n      },\n      set: function set(value) {\n        this._w = value;\n\n        this._onChangeCallback();\n      }\n    }]);\n\n    return Quaternion;\n  }();\n\n  var Vector3 = /*#__PURE__*/function () {\n    function Vector3(x, y, z) {\n      if (x === void 0) {\n        x = 0;\n      }\n\n      if (y === void 0) {\n        y = 0;\n      }\n\n      if (z === void 0) {\n        z = 0;\n      }\n\n      Object.defineProperty(this, 'isVector3', {\n        value: true\n      });\n      this.x = x;\n      this.y = y;\n      this.z = z;\n    }\n\n    var _proto = Vector3.prototype;\n\n    _proto.set = function set(x, y, z) {\n      if (z === undefined) z = this.z; // sprite.scale.set(x,y)\n\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      return this;\n    };\n\n    _proto.setScalar = function setScalar(scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      return this;\n    };\n\n    _proto.setX = function setX(x) {\n      this.x = x;\n      return this;\n    };\n\n    _proto.setY = function setY(y) {\n      this.y = y;\n      return this;\n    };\n\n    _proto.setZ = function setZ(z) {\n      this.z = z;\n      return this;\n    };\n\n    _proto.setComponent = function setComponent(index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        case 2:\n          this.z = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    };\n\n    _proto.getComponent = function getComponent(index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        case 2:\n          return this.z;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor(this.x, this.y, this.z);\n    };\n\n    _proto.copy = function copy(v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      return this;\n    };\n\n    _proto.add = function add(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      return this;\n    };\n\n    _proto.addScalar = function addScalar(s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      return this;\n    };\n\n    _proto.addVectors = function addVectors(a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      return this;\n    };\n\n    _proto.addScaledVector = function addScaledVector(v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      return this;\n    };\n\n    _proto.sub = function sub(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      return this;\n    };\n\n    _proto.subScalar = function subScalar(s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      return this;\n    };\n\n    _proto.subVectors = function subVectors(a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      return this;\n    };\n\n    _proto.multiply = function multiply(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n        return this.multiplyVectors(v, w);\n      }\n\n      this.x *= v.x;\n      this.y *= v.y;\n      this.z *= v.z;\n      return this;\n    };\n\n    _proto.multiplyScalar = function multiplyScalar(scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      return this;\n    };\n\n    _proto.multiplyVectors = function multiplyVectors(a, b) {\n      this.x = a.x * b.x;\n      this.y = a.y * b.y;\n      this.z = a.z * b.z;\n      return this;\n    };\n\n    _proto.applyEuler = function applyEuler(euler) {\n      if (!(euler && euler.isEuler)) {\n        console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n      }\n\n      return this.applyQuaternion(_quaternion.setFromEuler(euler));\n    };\n\n    _proto.applyAxisAngle = function applyAxisAngle(axis, angle) {\n      return this.applyQuaternion(_quaternion.setFromAxisAngle(axis, angle));\n    };\n\n    _proto.applyMatrix3 = function applyMatrix3(m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      this.x = e[0] * x + e[3] * y + e[6] * z;\n      this.y = e[1] * x + e[4] * y + e[7] * z;\n      this.z = e[2] * x + e[5] * y + e[8] * z;\n      return this;\n    };\n\n    _proto.applyNormalMatrix = function applyNormalMatrix(m) {\n      return this.applyMatrix3(m).normalize();\n    };\n\n    _proto.applyMatrix4 = function applyMatrix4(m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      var w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n      this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n      this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n      this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n      return this;\n    };\n\n    _proto.applyQuaternion = function applyQuaternion(q) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var qx = q.x,\n          qy = q.y,\n          qz = q.z,\n          qw = q.w; // calculate quat * vector\n\n      var ix = qw * x + qy * z - qz * y;\n      var iy = qw * y + qz * x - qx * z;\n      var iz = qw * z + qx * y - qy * x;\n      var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n      this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n      this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n      this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n      return this;\n    };\n\n    _proto.project = function project(camera) {\n      return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n    };\n\n    _proto.unproject = function unproject(camera) {\n      return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n    };\n\n    _proto.transformDirection = function transformDirection(m) {\n      // input: THREE.Matrix4 affine matrix\n      // vector interpreted as a direction\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      this.x = e[0] * x + e[4] * y + e[8] * z;\n      this.y = e[1] * x + e[5] * y + e[9] * z;\n      this.z = e[2] * x + e[6] * y + e[10] * z;\n      return this.normalize();\n    };\n\n    _proto.divide = function divide(v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      this.z /= v.z;\n      return this;\n    };\n\n    _proto.divideScalar = function divideScalar(scalar) {\n      return this.multiplyScalar(1 / scalar);\n    };\n\n    _proto.min = function min(v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      return this;\n    };\n\n    _proto.max = function max(v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      return this;\n    };\n\n    _proto.clamp = function clamp(min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\n      return this;\n    };\n\n    _proto.clampScalar = function clampScalar(minVal, maxVal) {\n      this.x = Math.max(minVal, Math.min(maxVal, this.x));\n      this.y = Math.max(minVal, Math.min(maxVal, this.y));\n      this.z = Math.max(minVal, Math.min(maxVal, this.z));\n      return this;\n    };\n\n    _proto.clampLength = function clampLength(min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    };\n\n    _proto.floor = function floor() {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      return this;\n    };\n\n    _proto.ceil = function ceil() {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      return this;\n    };\n\n    _proto.round = function round() {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      return this;\n    };\n\n    _proto.roundToZero = function roundToZero() {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n      return this;\n    };\n\n    _proto.negate = function negate() {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      return this;\n    };\n\n    _proto.dot = function dot(v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z;\n    } // TODO lengthSquared?\n    ;\n\n    _proto.lengthSq = function lengthSq() {\n      return this.x * this.x + this.y * this.y + this.z * this.z;\n    };\n\n    _proto.length = function length() {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    };\n\n    _proto.manhattanLength = function manhattanLength() {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n    };\n\n    _proto.normalize = function normalize() {\n      return this.divideScalar(this.length() || 1);\n    };\n\n    _proto.setLength = function setLength(length) {\n      return this.normalize().multiplyScalar(length);\n    };\n\n    _proto.lerp = function lerp(v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      return this;\n    };\n\n    _proto.lerpVectors = function lerpVectors(v1, v2, alpha) {\n      this.x = v1.x + (v2.x - v1.x) * alpha;\n      this.y = v1.y + (v2.y - v1.y) * alpha;\n      this.z = v1.z + (v2.z - v1.z) * alpha;\n      return this;\n    };\n\n    _proto.cross = function cross(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n        return this.crossVectors(v, w);\n      }\n\n      return this.crossVectors(this, v);\n    };\n\n    _proto.crossVectors = function crossVectors(a, b) {\n      var ax = a.x,\n          ay = a.y,\n          az = a.z;\n      var bx = b.x,\n          by = b.y,\n          bz = b.z;\n      this.x = ay * bz - az * by;\n      this.y = az * bx - ax * bz;\n      this.z = ax * by - ay * bx;\n      return this;\n    };\n\n    _proto.projectOnVector = function projectOnVector(v) {\n      var denominator = v.lengthSq();\n      if (denominator === 0) return this.set(0, 0, 0);\n      var scalar = v.dot(this) / denominator;\n      return this.copy(v).multiplyScalar(scalar);\n    };\n\n    _proto.projectOnPlane = function projectOnPlane(planeNormal) {\n      _vector.copy(this).projectOnVector(planeNormal);\n\n      return this.sub(_vector);\n    };\n\n    _proto.reflect = function reflect(normal) {\n      // reflect incident vector off plane orthogonal to normal\n      // normal is assumed to have unit length\n      return this.sub(_vector.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    };\n\n    _proto.angleTo = function angleTo(v) {\n      var denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n      if (denominator === 0) return Math.PI / 2;\n      var theta = this.dot(v) / denominator; // clamp, to handle numerical problems\n\n      return Math.acos(MathUtils.clamp(theta, -1, 1));\n    };\n\n    _proto.distanceTo = function distanceTo(v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    };\n\n    _proto.distanceToSquared = function distanceToSquared(v) {\n      var dx = this.x - v.x,\n          dy = this.y - v.y,\n          dz = this.z - v.z;\n      return dx * dx + dy * dy + dz * dz;\n    };\n\n    _proto.manhattanDistanceTo = function manhattanDistanceTo(v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n    };\n\n    _proto.setFromSpherical = function setFromSpherical(s) {\n      return this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n    };\n\n    _proto.setFromSphericalCoords = function setFromSphericalCoords(radius, phi, theta) {\n      var sinPhiRadius = Math.sin(phi) * radius;\n      this.x = sinPhiRadius * Math.sin(theta);\n      this.y = Math.cos(phi) * radius;\n      this.z = sinPhiRadius * Math.cos(theta);\n      return this;\n    };\n\n    _proto.setFromCylindrical = function setFromCylindrical(c) {\n      return this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n    };\n\n    _proto.setFromCylindricalCoords = function setFromCylindricalCoords(radius, theta, y) {\n      this.x = radius * Math.sin(theta);\n      this.y = y;\n      this.z = radius * Math.cos(theta);\n      return this;\n    };\n\n    _proto.setFromMatrixPosition = function setFromMatrixPosition(m) {\n      var e = m.elements;\n      this.x = e[12];\n      this.y = e[13];\n      this.z = e[14];\n      return this;\n    };\n\n    _proto.setFromMatrixScale = function setFromMatrixScale(m) {\n      var sx = this.setFromMatrixColumn(m, 0).length();\n      var sy = this.setFromMatrixColumn(m, 1).length();\n      var sz = this.setFromMatrixColumn(m, 2).length();\n      this.x = sx;\n      this.y = sy;\n      this.z = sz;\n      return this;\n    };\n\n    _proto.setFromMatrixColumn = function setFromMatrixColumn(m, index) {\n      return this.fromArray(m.elements, index * 4);\n    };\n\n    _proto.setFromMatrix3Column = function setFromMatrix3Column(m, index) {\n      return this.fromArray(m.elements, index * 3);\n    };\n\n    _proto.equals = function equals(v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z;\n    };\n\n    _proto.fromArray = function fromArray(array, offset) {\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      return this;\n    };\n\n    _proto.toArray = function toArray(array, offset) {\n      if (array === void 0) {\n        array = [];\n      }\n\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      return array;\n    };\n\n    _proto.fromBufferAttribute = function fromBufferAttribute(attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      this.z = attribute.getZ(index);\n      return this;\n    };\n\n    _proto.random = function random() {\n      this.x = Math.random();\n      this.y = Math.random();\n      this.z = Math.random();\n      return this;\n    };\n\n    return Vector3;\n  }();\n\n  var _vector = /*@__PURE__*/new Vector3();\n\n  var _quaternion = /*@__PURE__*/new Quaternion();\n\n  var Box3 = /*#__PURE__*/function () {\n    function Box3(min, max) {\n      Object.defineProperty(this, 'isBox3', {\n        value: true\n      });\n      this.min = min !== undefined ? min : new Vector3(+Infinity, +Infinity, +Infinity);\n      this.max = max !== undefined ? max : new Vector3(-Infinity, -Infinity, -Infinity);\n    }\n\n    var _proto = Box3.prototype;\n\n    _proto.set = function set(min, max) {\n      this.min.copy(min);\n      this.max.copy(max);\n      return this;\n    };\n\n    _proto.setFromArray = function setFromArray(array) {\n      var minX = +Infinity;\n      var minY = +Infinity;\n      var minZ = +Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n      var maxZ = -Infinity;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var x = array[i];\n        var y = array[i + 1];\n        var z = array[i + 2];\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (z < minZ) minZ = z;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n        if (z > maxZ) maxZ = z;\n      }\n\n      this.min.set(minX, minY, minZ);\n      this.max.set(maxX, maxY, maxZ);\n      return this;\n    };\n\n    _proto.setFromBufferAttribute = function setFromBufferAttribute(attribute) {\n      var minX = +Infinity;\n      var minY = +Infinity;\n      var minZ = +Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n      var maxZ = -Infinity;\n\n      for (var i = 0, l = attribute.count; i < l; i++) {\n        var x = attribute.getX(i);\n        var y = attribute.getY(i);\n        var z = attribute.getZ(i);\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (z < minZ) minZ = z;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n        if (z > maxZ) maxZ = z;\n      }\n\n      this.min.set(minX, minY, minZ);\n      this.max.set(maxX, maxY, maxZ);\n      return this;\n    };\n\n    _proto.setFromPoints = function setFromPoints(points) {\n      this.makeEmpty();\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        this.expandByPoint(points[i]);\n      }\n\n      return this;\n    };\n\n    _proto.setFromCenterAndSize = function setFromCenterAndSize(center, size) {\n      var halfSize = _vector$1.copy(size).multiplyScalar(0.5);\n\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n\n    _proto.setFromObject = function setFromObject(object) {\n      this.makeEmpty();\n      return this.expandByObject(object);\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor().copy(this);\n    };\n\n    _proto.copy = function copy(box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    };\n\n    _proto.makeEmpty = function makeEmpty() {\n      this.min.x = this.min.y = this.min.z = +Infinity;\n      this.max.x = this.max.y = this.max.z = -Infinity;\n      return this;\n    };\n\n    _proto.isEmpty = function isEmpty() {\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n      return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n    };\n\n    _proto.getCenter = function getCenter(target) {\n      if (target === undefined) {\n        console.warn('THREE.Box3: .getCenter() target is now required');\n        target = new Vector3();\n      }\n\n      return this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n    };\n\n    _proto.getSize = function getSize(target) {\n      if (target === undefined) {\n        console.warn('THREE.Box3: .getSize() target is now required');\n        target = new Vector3();\n      }\n\n      return this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n    };\n\n    _proto.expandByPoint = function expandByPoint(point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    };\n\n    _proto.expandByVector = function expandByVector(vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    };\n\n    _proto.expandByScalar = function expandByScalar(scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    };\n\n    _proto.expandByObject = function expandByObject(object) {\n      // Computes the world-axis-aligned bounding box of an object (including its children),\n      // accounting for both the object's, and children's, world transforms\n      object.updateWorldMatrix(false, false);\n      var geometry = object.geometry;\n\n      if (geometry !== undefined) {\n        if (geometry.boundingBox === null) {\n          geometry.computeBoundingBox();\n        }\n\n        _box.copy(geometry.boundingBox);\n\n        _box.applyMatrix4(object.matrixWorld);\n\n        this.union(_box);\n      }\n\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        this.expandByObject(children[i]);\n      }\n\n      return this;\n    };\n\n    _proto.containsPoint = function containsPoint(point) {\n      return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n    };\n\n    _proto.containsBox = function containsBox(box) {\n      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n    };\n\n    _proto.getParameter = function getParameter(point, target) {\n      // This can potentially have a divide by zero if the box\n      // has a size dimension of 0.\n      if (target === undefined) {\n        console.warn('THREE.Box3: .getParameter() target is now required');\n        target = new Vector3();\n      }\n\n      return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n    };\n\n    _proto.intersectsBox = function intersectsBox(box) {\n      // using 6 splitting planes to rule out intersections.\n      return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n    };\n\n    _proto.intersectsSphere = function intersectsSphere(sphere) {\n      // Find the point on the AABB closest to the sphere center.\n      this.clampPoint(sphere.center, _vector$1); // If that point is inside the sphere, the AABB and sphere intersect.\n\n      return _vector$1.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n    };\n\n    _proto.intersectsPlane = function intersectsPlane(plane) {\n      // We compute the minimum and maximum dot product values. If those values\n      // are on the same side (back or front) of the plane, then there is no intersection.\n      var min, max;\n\n      if (plane.normal.x > 0) {\n        min = plane.normal.x * this.min.x;\n        max = plane.normal.x * this.max.x;\n      } else {\n        min = plane.normal.x * this.max.x;\n        max = plane.normal.x * this.min.x;\n      }\n\n      if (plane.normal.y > 0) {\n        min += plane.normal.y * this.min.y;\n        max += plane.normal.y * this.max.y;\n      } else {\n        min += plane.normal.y * this.max.y;\n        max += plane.normal.y * this.min.y;\n      }\n\n      if (plane.normal.z > 0) {\n        min += plane.normal.z * this.min.z;\n        max += plane.normal.z * this.max.z;\n      } else {\n        min += plane.normal.z * this.max.z;\n        max += plane.normal.z * this.min.z;\n      }\n\n      return min <= -plane.constant && max >= -plane.constant;\n    };\n\n    _proto.intersectsTriangle = function intersectsTriangle(triangle) {\n      if (this.isEmpty()) {\n        return false;\n      } // compute box center and extents\n\n\n      this.getCenter(_center);\n\n      _extents.subVectors(this.max, _center); // translate triangle to aabb origin\n\n\n      _v0.subVectors(triangle.a, _center);\n\n      _v1.subVectors(triangle.b, _center);\n\n      _v2.subVectors(triangle.c, _center); // compute edge vectors for triangle\n\n\n      _f0.subVectors(_v1, _v0);\n\n      _f1.subVectors(_v2, _v1);\n\n      _f2.subVectors(_v0, _v2); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n      // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n      // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\n\n      var axes = [0, -_f0.z, _f0.y, 0, -_f1.z, _f1.y, 0, -_f2.z, _f2.y, _f0.z, 0, -_f0.x, _f1.z, 0, -_f1.x, _f2.z, 0, -_f2.x, -_f0.y, _f0.x, 0, -_f1.y, _f1.x, 0, -_f2.y, _f2.x, 0];\n\n      if (!satForAxes(axes, _v0, _v1, _v2, _extents)) {\n        return false;\n      } // test 3 face normals from the aabb\n\n\n      axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n      if (!satForAxes(axes, _v0, _v1, _v2, _extents)) {\n        return false;\n      } // finally testing the face normal of the triangle\n      // use already existing triangle edge vectors here\n\n\n      _triangleNormal.crossVectors(_f0, _f1);\n\n      axes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n      return satForAxes(axes, _v0, _v1, _v2, _extents);\n    };\n\n    _proto.clampPoint = function clampPoint(point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Box3: .clampPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(point).clamp(this.min, this.max);\n    };\n\n    _proto.distanceToPoint = function distanceToPoint(point) {\n      var clampedPoint = _vector$1.copy(point).clamp(this.min, this.max);\n\n      return clampedPoint.sub(point).length();\n    };\n\n    _proto.getBoundingSphere = function getBoundingSphere(target) {\n      if (target === undefined) {\n        console.error('THREE.Box3: .getBoundingSphere() target is now required'); //target = new Sphere(); // removed to avoid cyclic dependency\n      }\n\n      this.getCenter(target.center);\n      target.radius = this.getSize(_vector$1).length() * 0.5;\n      return target;\n    };\n\n    _proto.intersect = function intersect(box) {\n      this.min.max(box.min);\n      this.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n      if (this.isEmpty()) this.makeEmpty();\n      return this;\n    };\n\n    _proto.union = function union(box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    };\n\n    _proto.applyMatrix4 = function applyMatrix4(matrix) {\n      // transform of empty box is an empty box.\n      if (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n      _points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n\n      _points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n\n      _points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n\n      _points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n\n      _points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n\n      _points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n\n      _points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n\n      _points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n\n      this.setFromPoints(_points);\n      return this;\n    };\n\n    _proto.translate = function translate(offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    };\n\n    _proto.equals = function equals(box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    };\n\n    return Box3;\n  }();\n\n  function satForAxes(axes, v0, v1, v2, extents) {\n    for (var i = 0, j = axes.length - 3; i <= j; i += 3) {\n      _testAxis.fromArray(axes, i); // project the aabb onto the seperating axis\n\n\n      var r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\n\n      var p0 = v0.dot(_testAxis);\n      var p1 = v1.dot(_testAxis);\n      var p2 = v2.dot(_testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\n\n      if (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n        // points of the projected triangle are outside the projected half-length of the aabb\n        // the axis is seperating and we can exit\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var _points = [/*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3()];\n\n  var _vector$1 = /*@__PURE__*/new Vector3();\n\n  var _box = /*@__PURE__*/new Box3(); // triangle centered vertices\n\n\n  var _v0 = /*@__PURE__*/new Vector3();\n\n  var _v1 = /*@__PURE__*/new Vector3();\n\n  var _v2 = /*@__PURE__*/new Vector3(); // triangle edge vectors\n\n\n  var _f0 = /*@__PURE__*/new Vector3();\n\n  var _f1 = /*@__PURE__*/new Vector3();\n\n  var _f2 = /*@__PURE__*/new Vector3();\n\n  var _center = /*@__PURE__*/new Vector3();\n\n  var _extents = /*@__PURE__*/new Vector3();\n\n  var _triangleNormal = /*@__PURE__*/new Vector3();\n\n  var _testAxis = /*@__PURE__*/new Vector3();\n\n  var _box$1 = /*@__PURE__*/new Box3();\n\n  var Sphere = /*#__PURE__*/function () {\n    function Sphere(center, radius) {\n      this.center = center !== undefined ? center : new Vector3();\n      this.radius = radius !== undefined ? radius : -1;\n    }\n\n    var _proto = Sphere.prototype;\n\n    _proto.set = function set(center, radius) {\n      this.center.copy(center);\n      this.radius = radius;\n      return this;\n    };\n\n    _proto.setFromPoints = function setFromPoints(points, optionalCenter) {\n      var center = this.center;\n\n      if (optionalCenter !== undefined) {\n        center.copy(optionalCenter);\n      } else {\n        _box$1.setFromPoints(points).getCenter(center);\n      }\n\n      var maxRadiusSq = 0;\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n      }\n\n      this.radius = Math.sqrt(maxRadiusSq);\n      return this;\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor().copy(this);\n    };\n\n    _proto.copy = function copy(sphere) {\n      this.center.copy(sphere.center);\n      this.radius = sphere.radius;\n      return this;\n    };\n\n    _proto.isEmpty = function isEmpty() {\n      return this.radius < 0;\n    };\n\n    _proto.makeEmpty = function makeEmpty() {\n      this.center.set(0, 0, 0);\n      this.radius = -1;\n      return this;\n    };\n\n    _proto.containsPoint = function containsPoint(point) {\n      return point.distanceToSquared(this.center) <= this.radius * this.radius;\n    };\n\n    _proto.distanceToPoint = function distanceToPoint(point) {\n      return point.distanceTo(this.center) - this.radius;\n    };\n\n    _proto.intersectsSphere = function intersectsSphere(sphere) {\n      var radiusSum = this.radius + sphere.radius;\n      return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n    };\n\n    _proto.intersectsBox = function intersectsBox(box) {\n      return box.intersectsSphere(this);\n    };\n\n    _proto.intersectsPlane = function intersectsPlane(plane) {\n      return Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n    };\n\n    _proto.clampPoint = function clampPoint(point, target) {\n      var deltaLengthSq = this.center.distanceToSquared(point);\n\n      if (target === undefined) {\n        console.warn('THREE.Sphere: .clampPoint() target is now required');\n        target = new Vector3();\n      }\n\n      target.copy(point);\n\n      if (deltaLengthSq > this.radius * this.radius) {\n        target.sub(this.center).normalize();\n        target.multiplyScalar(this.radius).add(this.center);\n      }\n\n      return target;\n    };\n\n    _proto.getBoundingBox = function getBoundingBox(target) {\n      if (target === undefined) {\n        console.warn('THREE.Sphere: .getBoundingBox() target is now required');\n        target = new Box3();\n      }\n\n      if (this.isEmpty()) {\n        // Empty sphere produces empty bounding box\n        target.makeEmpty();\n        return target;\n      }\n\n      target.set(this.center, this.center);\n      target.expandByScalar(this.radius);\n      return target;\n    };\n\n    _proto.applyMatrix4 = function applyMatrix4(matrix) {\n      this.center.applyMatrix4(matrix);\n      this.radius = this.radius * matrix.getMaxScaleOnAxis();\n      return this;\n    };\n\n    _proto.translate = function translate(offset) {\n      this.center.add(offset);\n      return this;\n    };\n\n    _proto.equals = function equals(sphere) {\n      return sphere.center.equals(this.center) && sphere.radius === this.radius;\n    };\n\n    return Sphere;\n  }();\n\n  var _vector$2 = /*@__PURE__*/new Vector3();\n\n  var _segCenter = /*@__PURE__*/new Vector3();\n\n  var _segDir = /*@__PURE__*/new Vector3();\n\n  var _diff = /*@__PURE__*/new Vector3();\n\n  var _edge1 = /*@__PURE__*/new Vector3();\n\n  var _edge2 = /*@__PURE__*/new Vector3();\n\n  var _normal = /*@__PURE__*/new Vector3();\n\n  var Ray = /*#__PURE__*/function () {\n    function Ray(origin, direction) {\n      this.origin = origin !== undefined ? origin : new Vector3();\n      this.direction = direction !== undefined ? direction : new Vector3(0, 0, -1);\n    }\n\n    var _proto = Ray.prototype;\n\n    _proto.set = function set(origin, direction) {\n      this.origin.copy(origin);\n      this.direction.copy(direction);\n      return this;\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor().copy(this);\n    };\n\n    _proto.copy = function copy(ray) {\n      this.origin.copy(ray.origin);\n      this.direction.copy(ray.direction);\n      return this;\n    };\n\n    _proto.at = function at(t, target) {\n      if (target === undefined) {\n        console.warn('THREE.Ray: .at() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(this.direction).multiplyScalar(t).add(this.origin);\n    };\n\n    _proto.lookAt = function lookAt(v) {\n      this.direction.copy(v).sub(this.origin).normalize();\n      return this;\n    };\n\n    _proto.recast = function recast(t) {\n      this.origin.copy(this.at(t, _vector$2));\n      return this;\n    };\n\n    _proto.closestPointToPoint = function closestPointToPoint(point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Ray: .closestPointToPoint() target is now required');\n        target = new Vector3();\n      }\n\n      target.subVectors(point, this.origin);\n      var directionDistance = target.dot(this.direction);\n\n      if (directionDistance < 0) {\n        return target.copy(this.origin);\n      }\n\n      return target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n    };\n\n    _proto.distanceToPoint = function distanceToPoint(point) {\n      return Math.sqrt(this.distanceSqToPoint(point));\n    };\n\n    _proto.distanceSqToPoint = function distanceSqToPoint(point) {\n      var directionDistance = _vector$2.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n\n      if (directionDistance < 0) {\n        return this.origin.distanceToSquared(point);\n      }\n\n      _vector$2.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\n      return _vector$2.distanceToSquared(point);\n    };\n\n    _proto.distanceSqToSegment = function distanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n      // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n      // It returns the min distance between the ray and the segment\n      // defined by v0 and v1\n      // It can also set two optional targets :\n      // - The closest point on the ray\n      // - The closest point on the segment\n      _segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n\n      _segDir.copy(v1).sub(v0).normalize();\n\n      _diff.copy(this.origin).sub(_segCenter);\n\n      var segExtent = v0.distanceTo(v1) * 0.5;\n      var a01 = -this.direction.dot(_segDir);\n\n      var b0 = _diff.dot(this.direction);\n\n      var b1 = -_diff.dot(_segDir);\n\n      var c = _diff.lengthSq();\n\n      var det = Math.abs(1 - a01 * a01);\n      var s0, s1, sqrDist, extDet;\n\n      if (det > 0) {\n        // The ray and segment are not parallel.\n        s0 = a01 * b1 - b0;\n        s1 = a01 * b0 - b1;\n        extDet = segExtent * det;\n\n        if (s0 >= 0) {\n          if (s1 >= -extDet) {\n            if (s1 <= extDet) {\n              // region 0\n              // Minimum at interior points of ray and segment.\n              var invDet = 1 / det;\n              s0 *= invDet;\n              s1 *= invDet;\n              sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n            } else {\n              // region 1\n              s1 = segExtent;\n              s0 = Math.max(0, -(a01 * s1 + b0));\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          } else {\n            // region 5\n            s1 = -segExtent;\n            s0 = Math.max(0, -(a01 * s1 + b0));\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        } else {\n          if (s1 <= -extDet) {\n            // region 4\n            s0 = Math.max(0, -(-a01 * segExtent + b0));\n            s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          } else if (s1 <= extDet) {\n            // region 3\n            s0 = 0;\n            s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = s1 * (s1 + 2 * b1) + c;\n          } else {\n            // region 2\n            s0 = Math.max(0, -(a01 * segExtent + b0));\n            s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        }\n      } else {\n        // Ray and segment are parallel.\n        s1 = a01 > 0 ? -segExtent : segExtent;\n        s0 = Math.max(0, -(a01 * s1 + b0));\n        sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n      }\n\n      if (optionalPointOnRay) {\n        optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n      }\n\n      if (optionalPointOnSegment) {\n        optionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);\n      }\n\n      return sqrDist;\n    };\n\n    _proto.intersectSphere = function intersectSphere(sphere, target) {\n      _vector$2.subVectors(sphere.center, this.origin);\n\n      var tca = _vector$2.dot(this.direction);\n\n      var d2 = _vector$2.dot(_vector$2) - tca * tca;\n      var radius2 = sphere.radius * sphere.radius;\n      if (d2 > radius2) return null;\n      var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n      var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n      var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n      if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n      // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n      // in order to always return an intersect point that is in front of the ray.\n\n      if (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n      return this.at(t0, target);\n    };\n\n    _proto.intersectsSphere = function intersectsSphere(sphere) {\n      return this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\n    };\n\n    _proto.distanceToPlane = function distanceToPlane(plane) {\n      var denominator = plane.normal.dot(this.direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (plane.distanceToPoint(this.origin) === 0) {\n          return 0;\n        } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n        return null;\n      }\n\n      var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n      return t >= 0 ? t : null;\n    };\n\n    _proto.intersectPlane = function intersectPlane(plane, target) {\n      var t = this.distanceToPlane(plane);\n\n      if (t === null) {\n        return null;\n      }\n\n      return this.at(t, target);\n    };\n\n    _proto.intersectsPlane = function intersectsPlane(plane) {\n      // check if the ray lies on the plane first\n      var distToPoint = plane.distanceToPoint(this.origin);\n\n      if (distToPoint === 0) {\n        return true;\n      }\n\n      var denominator = plane.normal.dot(this.direction);\n\n      if (denominator * distToPoint < 0) {\n        return true;\n      } // ray origin is behind the plane (and is pointing behind it)\n\n\n      return false;\n    };\n\n    _proto.intersectBox = function intersectBox(box, target) {\n      var tmin, tmax, tymin, tymax, tzmin, tzmax;\n      var invdirx = 1 / this.direction.x,\n          invdiry = 1 / this.direction.y,\n          invdirz = 1 / this.direction.z;\n      var origin = this.origin;\n\n      if (invdirx >= 0) {\n        tmin = (box.min.x - origin.x) * invdirx;\n        tmax = (box.max.x - origin.x) * invdirx;\n      } else {\n        tmin = (box.max.x - origin.x) * invdirx;\n        tmax = (box.min.x - origin.x) * invdirx;\n      }\n\n      if (invdiry >= 0) {\n        tymin = (box.min.y - origin.y) * invdiry;\n        tymax = (box.max.y - origin.y) * invdiry;\n      } else {\n        tymin = (box.max.y - origin.y) * invdiry;\n        tymax = (box.min.y - origin.y) * invdiry;\n      }\n\n      if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n      // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n      if (tymin > tmin || tmin !== tmin) tmin = tymin;\n      if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n      if (invdirz >= 0) {\n        tzmin = (box.min.z - origin.z) * invdirz;\n        tzmax = (box.max.z - origin.z) * invdirz;\n      } else {\n        tzmin = (box.max.z - origin.z) * invdirz;\n        tzmax = (box.min.z - origin.z) * invdirz;\n      }\n\n      if (tmin > tzmax || tzmin > tmax) return null;\n      if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n      if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n      if (tmax < 0) return null;\n      return this.at(tmin >= 0 ? tmin : tmax, target);\n    };\n\n    _proto.intersectsBox = function intersectsBox(box) {\n      return this.intersectBox(box, _vector$2) !== null;\n    };\n\n    _proto.intersectTriangle = function intersectTriangle(a, b, c, backfaceCulling, target) {\n      // Compute the offset origin, edges, and normal.\n      // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n      _edge1.subVectors(b, a);\n\n      _edge2.subVectors(c, a);\n\n      _normal.crossVectors(_edge1, _edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n      // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n      //\t |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n      //\t |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n      //\t |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n\n      var DdN = this.direction.dot(_normal);\n      var sign;\n\n      if (DdN > 0) {\n        if (backfaceCulling) return null;\n        sign = 1;\n      } else if (DdN < 0) {\n        sign = -1;\n        DdN = -DdN;\n      } else {\n        return null;\n      }\n\n      _diff.subVectors(this.origin, a);\n\n      var DdQxE2 = sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2)); // b1 < 0, no intersection\n\n      if (DdQxE2 < 0) {\n        return null;\n      }\n\n      var DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff)); // b2 < 0, no intersection\n\n      if (DdE1xQ < 0) {\n        return null;\n      } // b1+b2 > 1, no intersection\n\n\n      if (DdQxE2 + DdE1xQ > DdN) {\n        return null;\n      } // Line intersects triangle, check if ray does.\n\n\n      var QdN = -sign * _diff.dot(_normal); // t < 0, no intersection\n\n\n      if (QdN < 0) {\n        return null;\n      } // Ray intersects triangle.\n\n\n      return this.at(QdN / DdN, target);\n    };\n\n    _proto.applyMatrix4 = function applyMatrix4(matrix4) {\n      this.origin.applyMatrix4(matrix4);\n      this.direction.transformDirection(matrix4);\n      return this;\n    };\n\n    _proto.equals = function equals(ray) {\n      return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n    };\n\n    return Ray;\n  }();\n\n  var Matrix4 = /*#__PURE__*/function () {\n    function Matrix4() {\n      Object.defineProperty(this, 'isMatrix4', {\n        value: true\n      });\n      this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n      if (arguments.length > 0) {\n        console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n      }\n    }\n\n    var _proto = Matrix4.prototype;\n\n    _proto.set = function set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n      var te = this.elements;\n      te[0] = n11;\n      te[4] = n12;\n      te[8] = n13;\n      te[12] = n14;\n      te[1] = n21;\n      te[5] = n22;\n      te[9] = n23;\n      te[13] = n24;\n      te[2] = n31;\n      te[6] = n32;\n      te[10] = n33;\n      te[14] = n34;\n      te[3] = n41;\n      te[7] = n42;\n      te[11] = n43;\n      te[15] = n44;\n      return this;\n    };\n\n    _proto.identity = function identity() {\n      this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n      return this;\n    };\n\n    _proto.clone = function clone() {\n      return new Matrix4().fromArray(this.elements);\n    };\n\n    _proto.copy = function copy(m) {\n      var te = this.elements;\n      var me = m.elements;\n      te[0] = me[0];\n      te[1] = me[1];\n      te[2] = me[2];\n      te[3] = me[3];\n      te[4] = me[4];\n      te[5] = me[5];\n      te[6] = me[6];\n      te[7] = me[7];\n      te[8] = me[8];\n      te[9] = me[9];\n      te[10] = me[10];\n      te[11] = me[11];\n      te[12] = me[12];\n      te[13] = me[13];\n      te[14] = me[14];\n      te[15] = me[15];\n      return this;\n    };\n\n    _proto.copyPosition = function copyPosition(m) {\n      var te = this.elements,\n          me = m.elements;\n      te[12] = me[12];\n      te[13] = me[13];\n      te[14] = me[14];\n      return this;\n    };\n\n    _proto.setFromMatrix3 = function setFromMatrix3(m) {\n      var me = m.elements;\n      this.set(me[0], me[3], me[6], 0, me[1], me[4], me[7], 0, me[2], me[5], me[8], 0, 0, 0, 0, 1);\n      return this;\n    };\n\n    _proto.extractBasis = function extractBasis(xAxis, yAxis, zAxis) {\n      xAxis.setFromMatrixColumn(this, 0);\n      yAxis.setFromMatrixColumn(this, 1);\n      zAxis.setFromMatrixColumn(this, 2);\n      return this;\n    };\n\n    _proto.makeBasis = function makeBasis(xAxis, yAxis, zAxis) {\n      this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n      return this;\n    };\n\n    _proto.extractRotation = function extractRotation(m) {\n      // this method does not support reflection matrices\n      var te = this.elements;\n      var me = m.elements;\n\n      var scaleX = 1 / _v1$1.setFromMatrixColumn(m, 0).length();\n\n      var scaleY = 1 / _v1$1.setFromMatrixColumn(m, 1).length();\n\n      var scaleZ = 1 / _v1$1.setFromMatrixColumn(m, 2).length();\n\n      te[0] = me[0] * scaleX;\n      te[1] = me[1] * scaleX;\n      te[2] = me[2] * scaleX;\n      te[3] = 0;\n      te[4] = me[4] * scaleY;\n      te[5] = me[5] * scaleY;\n      te[6] = me[6] * scaleY;\n      te[7] = 0;\n      te[8] = me[8] * scaleZ;\n      te[9] = me[9] * scaleZ;\n      te[10] = me[10] * scaleZ;\n      te[11] = 0;\n      te[12] = 0;\n      te[13] = 0;\n      te[14] = 0;\n      te[15] = 1;\n      return this;\n    };\n\n    _proto.makeRotationFromEuler = function makeRotationFromEuler(euler) {\n      if (!(euler && euler.isEuler)) {\n        console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n      }\n\n      var te = this.elements;\n      var x = euler.x,\n          y = euler.y,\n          z = euler.z;\n      var a = Math.cos(x),\n          b = Math.sin(x);\n      var c = Math.cos(y),\n          d = Math.sin(y);\n      var e = Math.cos(z),\n          f = Math.sin(z);\n\n      if (euler.order === 'XYZ') {\n        var ae = a * e,\n            af = a * f,\n            be = b * e,\n            bf = b * f;\n        te[0] = c * e;\n        te[4] = -c * f;\n        te[8] = d;\n        te[1] = af + be * d;\n        te[5] = ae - bf * d;\n        te[9] = -b * c;\n        te[2] = bf - ae * d;\n        te[6] = be + af * d;\n        te[10] = a * c;\n      } else if (euler.order === 'YXZ') {\n        var ce = c * e,\n            cf = c * f,\n            de = d * e,\n            df = d * f;\n        te[0] = ce + df * b;\n        te[4] = de * b - cf;\n        te[8] = a * d;\n        te[1] = a * f;\n        te[5] = a * e;\n        te[9] = -b;\n        te[2] = cf * b - de;\n        te[6] = df + ce * b;\n        te[10] = a * c;\n      } else if (euler.order === 'ZXY') {\n        var _ce = c * e,\n            _cf = c * f,\n            _de = d * e,\n            _df = d * f;\n\n        te[0] = _ce - _df * b;\n        te[4] = -a * f;\n        te[8] = _de + _cf * b;\n        te[1] = _cf + _de * b;\n        te[5] = a * e;\n        te[9] = _df - _ce * b;\n        te[2] = -a * d;\n        te[6] = b;\n        te[10] = a * c;\n      } else if (euler.order === 'ZYX') {\n        var _ae = a * e,\n            _af = a * f,\n            _be = b * e,\n            _bf = b * f;\n\n        te[0] = c * e;\n        te[4] = _be * d - _af;\n        te[8] = _ae * d + _bf;\n        te[1] = c * f;\n        te[5] = _bf * d + _ae;\n        te[9] = _af * d - _be;\n        te[2] = -d;\n        te[6] = b * c;\n        te[10] = a * c;\n      } else if (euler.order === 'YZX') {\n        var ac = a * c,\n            ad = a * d,\n            bc = b * c,\n            bd = b * d;\n        te[0] = c * e;\n        te[4] = bd - ac * f;\n        te[8] = bc * f + ad;\n        te[1] = f;\n        te[5] = a * e;\n        te[9] = -b * e;\n        te[2] = -d * e;\n        te[6] = ad * f + bc;\n        te[10] = ac - bd * f;\n      } else if (euler.order === 'XZY') {\n        var _ac = a * c,\n            _ad = a * d,\n            _bc = b * c,\n            _bd = b * d;\n\n        te[0] = c * e;\n        te[4] = -f;\n        te[8] = d * e;\n        te[1] = _ac * f + _bd;\n        te[5] = a * e;\n        te[9] = _ad * f - _bc;\n        te[2] = _bc * f - _ad;\n        te[6] = b * e;\n        te[10] = _bd * f + _ac;\n      } // bottom row\n\n\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0; // last column\n\n      te[12] = 0;\n      te[13] = 0;\n      te[14] = 0;\n      te[15] = 1;\n      return this;\n    };\n\n    _proto.makeRotationFromQuaternion = function makeRotationFromQuaternion(q) {\n      return this.compose(_zero, q, _one);\n    };\n\n    _proto.lookAt = function lookAt(eye, target, up) {\n      var te = this.elements;\n\n      _z.subVectors(eye, target);\n\n      if (_z.lengthSq() === 0) {\n        // eye and target are in the same position\n        _z.z = 1;\n      }\n\n      _z.normalize();\n\n      _x.crossVectors(up, _z);\n\n      if (_x.lengthSq() === 0) {\n        // up and z are parallel\n        if (Math.abs(up.z) === 1) {\n          _z.x += 0.0001;\n        } else {\n          _z.z += 0.0001;\n        }\n\n        _z.normalize();\n\n        _x.crossVectors(up, _z);\n      }\n\n      _x.normalize();\n\n      _y.crossVectors(_z, _x);\n\n      te[0] = _x.x;\n      te[4] = _y.x;\n      te[8] = _z.x;\n      te[1] = _x.y;\n      te[5] = _y.y;\n      te[9] = _z.y;\n      te[2] = _x.z;\n      te[6] = _y.z;\n      te[10] = _z.z;\n      return this;\n    };\n\n    _proto.multiply = function multiply(m, n) {\n      if (n !== undefined) {\n        console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n        return this.multiplyMatrices(m, n);\n      }\n\n      return this.multiplyMatrices(this, m);\n    };\n\n    _proto.premultiply = function premultiply(m) {\n      return this.multiplyMatrices(m, this);\n    };\n\n    _proto.multiplyMatrices = function multiplyMatrices(a, b) {\n      var ae = a.elements;\n      var be = b.elements;\n      var te = this.elements;\n      var a11 = ae[0],\n          a12 = ae[4],\n          a13 = ae[8],\n          a14 = ae[12];\n      var a21 = ae[1],\n          a22 = ae[5],\n          a23 = ae[9],\n          a24 = ae[13];\n      var a31 = ae[2],\n          a32 = ae[6],\n          a33 = ae[10],\n          a34 = ae[14];\n      var a41 = ae[3],\n          a42 = ae[7],\n          a43 = ae[11],\n          a44 = ae[15];\n      var b11 = be[0],\n          b12 = be[4],\n          b13 = be[8],\n          b14 = be[12];\n      var b21 = be[1],\n          b22 = be[5],\n          b23 = be[9],\n          b24 = be[13];\n      var b31 = be[2],\n          b32 = be[6],\n          b33 = be[10],\n          b34 = be[14];\n      var b41 = be[3],\n          b42 = be[7],\n          b43 = be[11],\n          b44 = be[15];\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n      te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n      te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n      te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n      te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n      te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n      te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n      te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n      te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n      te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n      te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n      te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n      te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n      te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n      return this;\n    };\n\n    _proto.multiplyScalar = function multiplyScalar(s) {\n      var te = this.elements;\n      te[0] *= s;\n      te[4] *= s;\n      te[8] *= s;\n      te[12] *= s;\n      te[1] *= s;\n      te[5] *= s;\n      te[9] *= s;\n      te[13] *= s;\n      te[2] *= s;\n      te[6] *= s;\n      te[10] *= s;\n      te[14] *= s;\n      te[3] *= s;\n      te[7] *= s;\n      te[11] *= s;\n      te[15] *= s;\n      return this;\n    };\n\n    _proto.determinant = function determinant() {\n      var te = this.elements;\n      var n11 = te[0],\n          n12 = te[4],\n          n13 = te[8],\n          n14 = te[12];\n      var n21 = te[1],\n          n22 = te[5],\n          n23 = te[9],\n          n24 = te[13];\n      var n31 = te[2],\n          n32 = te[6],\n          n33 = te[10],\n          n34 = te[14];\n      var n41 = te[3],\n          n42 = te[7],\n          n43 = te[11],\n          n44 = te[15]; //TODO: make this more efficient\n      //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n      return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n    };\n\n    _proto.transpose = function transpose() {\n      var te = this.elements;\n      var tmp;\n      tmp = te[1];\n      te[1] = te[4];\n      te[4] = tmp;\n      tmp = te[2];\n      te[2] = te[8];\n      te[8] = tmp;\n      tmp = te[6];\n      te[6] = te[9];\n      te[9] = tmp;\n      tmp = te[3];\n      te[3] = te[12];\n      te[12] = tmp;\n      tmp = te[7];\n      te[7] = te[13];\n      te[13] = tmp;\n      tmp = te[11];\n      te[11] = te[14];\n      te[14] = tmp;\n      return this;\n    };\n\n    _proto.setPosition = function setPosition(x, y, z) {\n      var te = this.elements;\n\n      if (x.isVector3) {\n        te[12] = x.x;\n        te[13] = x.y;\n        te[14] = x.z;\n      } else {\n        te[12] = x;\n        te[13] = y;\n        te[14] = z;\n      }\n\n      return this;\n    };\n\n    _proto.invert = function invert() {\n      // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n      var te = this.elements,\n          n11 = te[0],\n          n21 = te[1],\n          n31 = te[2],\n          n41 = te[3],\n          n12 = te[4],\n          n22 = te[5],\n          n32 = te[6],\n          n42 = te[7],\n          n13 = te[8],\n          n23 = te[9],\n          n33 = te[10],\n          n43 = te[11],\n          n14 = te[12],\n          n24 = te[13],\n          n34 = te[14],\n          n44 = te[15],\n          t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n          t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n          t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n          t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n      var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n      if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n      te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n      te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n      te[4] = t12 * detInv;\n      te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n      te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n      te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n      te[8] = t13 * detInv;\n      te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n      te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n      te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n      te[12] = t14 * detInv;\n      te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n      te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n      te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n      return this;\n    };\n\n    _proto.scale = function scale(v) {\n      var te = this.elements;\n      var x = v.x,\n          y = v.y,\n          z = v.z;\n      te[0] *= x;\n      te[4] *= y;\n      te[8] *= z;\n      te[1] *= x;\n      te[5] *= y;\n      te[9] *= z;\n      te[2] *= x;\n      te[6] *= y;\n      te[10] *= z;\n      te[3] *= x;\n      te[7] *= y;\n      te[11] *= z;\n      return this;\n    };\n\n    _proto.getMaxScaleOnAxis = function getMaxScaleOnAxis() {\n      var te = this.elements;\n      var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n      var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n      var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n      return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n    };\n\n    _proto.makeTranslation = function makeTranslation(x, y, z) {\n      this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n      return this;\n    };\n\n    _proto.makeRotationX = function makeRotationX(theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n      return this;\n    };\n\n    _proto.makeRotationY = function makeRotationY(theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n      return this;\n    };\n\n    _proto.makeRotationZ = function makeRotationZ(theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n      return this;\n    };\n\n    _proto.makeRotationAxis = function makeRotationAxis(axis, angle) {\n      // Based on http://www.gamedev.net/reference/articles/article1199.asp\n      var c = Math.cos(angle);\n      var s = Math.sin(angle);\n      var t = 1 - c;\n      var x = axis.x,\n          y = axis.y,\n          z = axis.z;\n      var tx = t * x,\n          ty = t * y;\n      this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n      return this;\n    };\n\n    _proto.makeScale = function makeScale(x, y, z) {\n      this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n      return this;\n    };\n\n    _proto.makeShear = function makeShear(x, y, z) {\n      this.set(1, y, z, 0, x, 1, z, 0, x, y, 1, 0, 0, 0, 0, 1);\n      return this;\n    };\n\n    _proto.compose = function compose(position, quaternion, scale) {\n      var te = this.elements;\n      var x = quaternion._x,\n          y = quaternion._y,\n          z = quaternion._z,\n          w = quaternion._w;\n      var x2 = x + x,\n          y2 = y + y,\n          z2 = z + z;\n      var xx = x * x2,\n          xy = x * y2,\n          xz = x * z2;\n      var yy = y * y2,\n          yz = y * z2,\n          zz = z * z2;\n      var wx = w * x2,\n          wy = w * y2,\n          wz = w * z2;\n      var sx = scale.x,\n          sy = scale.y,\n          sz = scale.z;\n      te[0] = (1 - (yy + zz)) * sx;\n      te[1] = (xy + wz) * sx;\n      te[2] = (xz - wy) * sx;\n      te[3] = 0;\n      te[4] = (xy - wz) * sy;\n      te[5] = (1 - (xx + zz)) * sy;\n      te[6] = (yz + wx) * sy;\n      te[7] = 0;\n      te[8] = (xz + wy) * sz;\n      te[9] = (yz - wx) * sz;\n      te[10] = (1 - (xx + yy)) * sz;\n      te[11] = 0;\n      te[12] = position.x;\n      te[13] = position.y;\n      te[14] = position.z;\n      te[15] = 1;\n      return this;\n    };\n\n    _proto.decompose = function decompose(position, quaternion, scale) {\n      var te = this.elements;\n\n      var sx = _v1$1.set(te[0], te[1], te[2]).length();\n\n      var sy = _v1$1.set(te[4], te[5], te[6]).length();\n\n      var sz = _v1$1.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n\n      var det = this.determinant();\n      if (det < 0) sx = -sx;\n      position.x = te[12];\n      position.y = te[13];\n      position.z = te[14]; // scale the rotation part\n\n      _m1.copy(this);\n\n      var invSX = 1 / sx;\n      var invSY = 1 / sy;\n      var invSZ = 1 / sz;\n      _m1.elements[0] *= invSX;\n      _m1.elements[1] *= invSX;\n      _m1.elements[2] *= invSX;\n      _m1.elements[4] *= invSY;\n      _m1.elements[5] *= invSY;\n      _m1.elements[6] *= invSY;\n      _m1.elements[8] *= invSZ;\n      _m1.elements[9] *= invSZ;\n      _m1.elements[10] *= invSZ;\n      quaternion.setFromRotationMatrix(_m1);\n      scale.x = sx;\n      scale.y = sy;\n      scale.z = sz;\n      return this;\n    };\n\n    _proto.makePerspective = function makePerspective(left, right, top, bottom, near, far) {\n      if (far === undefined) {\n        console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n      }\n\n      var te = this.elements;\n      var x = 2 * near / (right - left);\n      var y = 2 * near / (top - bottom);\n      var a = (right + left) / (right - left);\n      var b = (top + bottom) / (top - bottom);\n      var c = -(far + near) / (far - near);\n      var d = -2 * far * near / (far - near);\n      te[0] = x;\n      te[4] = 0;\n      te[8] = a;\n      te[12] = 0;\n      te[1] = 0;\n      te[5] = y;\n      te[9] = b;\n      te[13] = 0;\n      te[2] = 0;\n      te[6] = 0;\n      te[10] = c;\n      te[14] = d;\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = -1;\n      te[15] = 0;\n      return this;\n    };\n\n    _proto.makeOrthographic = function makeOrthographic(left, right, top, bottom, near, far) {\n      var te = this.elements;\n      var w = 1.0 / (right - left);\n      var h = 1.0 / (top - bottom);\n      var p = 1.0 / (far - near);\n      var x = (right + left) * w;\n      var y = (top + bottom) * h;\n      var z = (far + near) * p;\n      te[0] = 2 * w;\n      te[4] = 0;\n      te[8] = 0;\n      te[12] = -x;\n      te[1] = 0;\n      te[5] = 2 * h;\n      te[9] = 0;\n      te[13] = -y;\n      te[2] = 0;\n      te[6] = 0;\n      te[10] = -2 * p;\n      te[14] = -z;\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0;\n      te[15] = 1;\n      return this;\n    };\n\n    _proto.equals = function equals(matrix) {\n      var te = this.elements;\n      var me = matrix.elements;\n\n      for (var i = 0; i < 16; i++) {\n        if (te[i] !== me[i]) return false;\n      }\n\n      return true;\n    };\n\n    _proto.fromArray = function fromArray(array, offset) {\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      for (var i = 0; i < 16; i++) {\n        this.elements[i] = array[i + offset];\n      }\n\n      return this;\n    };\n\n    _proto.toArray = function toArray(array, offset) {\n      if (array === void 0) {\n        array = [];\n      }\n\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      var te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      array[offset + 9] = te[9];\n      array[offset + 10] = te[10];\n      array[offset + 11] = te[11];\n      array[offset + 12] = te[12];\n      array[offset + 13] = te[13];\n      array[offset + 14] = te[14];\n      array[offset + 15] = te[15];\n      return array;\n    };\n\n    return Matrix4;\n  }();\n\n  var _v1$1 = /*@__PURE__*/new Vector3();\n\n  var _m1 = /*@__PURE__*/new Matrix4();\n\n  var _zero = /*@__PURE__*/new Vector3(0, 0, 0);\n\n  var _one = /*@__PURE__*/new Vector3(1, 1, 1);\n\n  var _x = /*@__PURE__*/new Vector3();\n\n  var _y = /*@__PURE__*/new Vector3();\n\n  var _z = /*@__PURE__*/new Vector3();\n\n  var Euler = /*#__PURE__*/function () {\n    function Euler(x, y, z, order) {\n      if (x === void 0) {\n        x = 0;\n      }\n\n      if (y === void 0) {\n        y = 0;\n      }\n\n      if (z === void 0) {\n        z = 0;\n      }\n\n      if (order === void 0) {\n        order = Euler.DefaultOrder;\n      }\n\n      Object.defineProperty(this, 'isEuler', {\n        value: true\n      });\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._order = order;\n    }\n\n    var _proto = Euler.prototype;\n\n    _proto.set = function set(x, y, z, order) {\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._order = order || this._order;\n\n      this._onChangeCallback();\n\n      return this;\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor(this._x, this._y, this._z, this._order);\n    };\n\n    _proto.copy = function copy(euler) {\n      this._x = euler._x;\n      this._y = euler._y;\n      this._z = euler._z;\n      this._order = euler._order;\n\n      this._onChangeCallback();\n\n      return this;\n    };\n\n    _proto.setFromRotationMatrix = function setFromRotationMatrix(m, order, update) {\n      var clamp = MathUtils.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n      var te = m.elements;\n      var m11 = te[0],\n          m12 = te[4],\n          m13 = te[8];\n      var m21 = te[1],\n          m22 = te[5],\n          m23 = te[9];\n      var m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n      order = order || this._order;\n\n      switch (order) {\n        case 'XYZ':\n          this._y = Math.asin(clamp(m13, -1, 1));\n\n          if (Math.abs(m13) < 0.9999999) {\n            this._x = Math.atan2(-m23, m33);\n            this._z = Math.atan2(-m12, m11);\n          } else {\n            this._x = Math.atan2(m32, m22);\n            this._z = 0;\n          }\n\n          break;\n\n        case 'YXZ':\n          this._x = Math.asin(-clamp(m23, -1, 1));\n\n          if (Math.abs(m23) < 0.9999999) {\n            this._y = Math.atan2(m13, m33);\n            this._z = Math.atan2(m21, m22);\n          } else {\n            this._y = Math.atan2(-m31, m11);\n            this._z = 0;\n          }\n\n          break;\n\n        case 'ZXY':\n          this._x = Math.asin(clamp(m32, -1, 1));\n\n          if (Math.abs(m32) < 0.9999999) {\n            this._y = Math.atan2(-m31, m33);\n            this._z = Math.atan2(-m12, m22);\n          } else {\n            this._y = 0;\n            this._z = Math.atan2(m21, m11);\n          }\n\n          break;\n\n        case 'ZYX':\n          this._y = Math.asin(-clamp(m31, -1, 1));\n\n          if (Math.abs(m31) < 0.9999999) {\n            this._x = Math.atan2(m32, m33);\n            this._z = Math.atan2(m21, m11);\n          } else {\n            this._x = 0;\n            this._z = Math.atan2(-m12, m22);\n          }\n\n          break;\n\n        case 'YZX':\n          this._z = Math.asin(clamp(m21, -1, 1));\n\n          if (Math.abs(m21) < 0.9999999) {\n            this._x = Math.atan2(-m23, m22);\n            this._y = Math.atan2(-m31, m11);\n          } else {\n            this._x = 0;\n            this._y = Math.atan2(m13, m33);\n          }\n\n          break;\n\n        case 'XZY':\n          this._z = Math.asin(-clamp(m12, -1, 1));\n\n          if (Math.abs(m12) < 0.9999999) {\n            this._x = Math.atan2(m32, m22);\n            this._y = Math.atan2(m13, m11);\n          } else {\n            this._x = Math.atan2(-m23, m33);\n            this._y = 0;\n          }\n\n          break;\n\n        default:\n          console.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order);\n      }\n\n      this._order = order;\n      if (update !== false) this._onChangeCallback();\n      return this;\n    };\n\n    _proto.setFromQuaternion = function setFromQuaternion(q, order, update) {\n      _matrix.makeRotationFromQuaternion(q);\n\n      return this.setFromRotationMatrix(_matrix, order, update);\n    };\n\n    _proto.setFromVector3 = function setFromVector3(v, order) {\n      return this.set(v.x, v.y, v.z, order || this._order);\n    };\n\n    _proto.reorder = function reorder(newOrder) {\n      // WARNING: this discards revolution information -bhouston\n      _quaternion$1.setFromEuler(this);\n\n      return this.setFromQuaternion(_quaternion$1, newOrder);\n    };\n\n    _proto.equals = function equals(euler) {\n      return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n    };\n\n    _proto.fromArray = function fromArray(array) {\n      this._x = array[0];\n      this._y = array[1];\n      this._z = array[2];\n      if (array[3] !== undefined) this._order = array[3];\n\n      this._onChangeCallback();\n\n      return this;\n    };\n\n    _proto.toArray = function toArray(array, offset) {\n      if (array === void 0) {\n        array = [];\n      }\n\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._order;\n      return array;\n    };\n\n    _proto.toVector3 = function toVector3(optionalResult) {\n      if (optionalResult) {\n        return optionalResult.set(this._x, this._y, this._z);\n      } else {\n        return new Vector3(this._x, this._y, this._z);\n      }\n    };\n\n    _proto._onChange = function _onChange(callback) {\n      this._onChangeCallback = callback;\n      return this;\n    };\n\n    _proto._onChangeCallback = function _onChangeCallback() {};\n\n    _createClass(Euler, [{\n      key: \"x\",\n      get: function get() {\n        return this._x;\n      },\n      set: function set(value) {\n        this._x = value;\n\n        this._onChangeCallback();\n      }\n    }, {\n      key: \"y\",\n      get: function get() {\n        return this._y;\n      },\n      set: function set(value) {\n        this._y = value;\n\n        this._onChangeCallback();\n      }\n    }, {\n      key: \"z\",\n      get: function get() {\n        return this._z;\n      },\n      set: function set(value) {\n        this._z = value;\n\n        this._onChangeCallback();\n      }\n    }, {\n      key: \"order\",\n      get: function get() {\n        return this._order;\n      },\n      set: function set(value) {\n        this._order = value;\n\n        this._onChangeCallback();\n      }\n    }]);\n\n    return Euler;\n  }();\n\n  Euler.DefaultOrder = 'XYZ';\n  Euler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n\n  var _matrix = /*@__PURE__*/new Matrix4();\n\n  var _quaternion$1 = /*@__PURE__*/new Quaternion();\n\n  var Layers = /*#__PURE__*/function () {\n    function Layers() {\n      this.mask = 1 | 0;\n    }\n\n    var _proto = Layers.prototype;\n\n    _proto.set = function set(channel) {\n      this.mask = 1 << channel | 0;\n    };\n\n    _proto.enable = function enable(channel) {\n      this.mask |= 1 << channel | 0;\n    };\n\n    _proto.enableAll = function enableAll() {\n      this.mask = 0xffffffff | 0;\n    };\n\n    _proto.toggle = function toggle(channel) {\n      this.mask ^= 1 << channel | 0;\n    };\n\n    _proto.disable = function disable(channel) {\n      this.mask &= ~(1 << channel | 0);\n    };\n\n    _proto.disableAll = function disableAll() {\n      this.mask = 0;\n    };\n\n    _proto.test = function test(layers) {\n      return (this.mask & layers.mask) !== 0;\n    };\n\n    return Layers;\n  }();\n\n  var _object3DId = 0;\n\n  var _v1$2 = new Vector3();\n\n  var _q1 = new Quaternion();\n\n  var _m1$1 = new Matrix4();\n\n  var _target = new Vector3();\n\n  var _position = new Vector3();\n\n  var _scale = new Vector3();\n\n  var _quaternion$2 = new Quaternion();\n\n  var _xAxis = new Vector3(1, 0, 0);\n\n  var _yAxis = new Vector3(0, 1, 0);\n\n  var _zAxis = new Vector3(0, 0, 1);\n\n  var _addedEvent = {\n    type: 'added'\n  };\n  var _removedEvent = {\n    type: 'removed'\n  };\n\n  function Object3D() {\n    Object.defineProperty(this, 'id', {\n      value: _object3DId++\n    });\n    this.uuid = MathUtils.generateUUID();\n    this.name = '';\n    this.type = 'Object3D';\n    this.parent = null;\n    this.children = [];\n    this.up = Object3D.DefaultUp.clone();\n    var position = new Vector3();\n    var rotation = new Euler();\n    var quaternion = new Quaternion();\n    var scale = new Vector3(1, 1, 1);\n\n    function onRotationChange() {\n      quaternion.setFromEuler(rotation, false);\n    }\n\n    function onQuaternionChange() {\n      rotation.setFromQuaternion(quaternion, undefined, false);\n    }\n\n    rotation._onChange(onRotationChange);\n\n    quaternion._onChange(onQuaternionChange);\n\n    Object.defineProperties(this, {\n      position: {\n        configurable: true,\n        enumerable: true,\n        value: position\n      },\n      rotation: {\n        configurable: true,\n        enumerable: true,\n        value: rotation\n      },\n      quaternion: {\n        configurable: true,\n        enumerable: true,\n        value: quaternion\n      },\n      scale: {\n        configurable: true,\n        enumerable: true,\n        value: scale\n      },\n      modelViewMatrix: {\n        value: new Matrix4()\n      },\n      normalMatrix: {\n        value: new Matrix3()\n      }\n    });\n    this.matrix = new Matrix4();\n    this.matrixWorld = new Matrix4();\n    this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = false;\n    this.layers = new Layers();\n    this.visible = true;\n    this.castShadow = false;\n    this.receiveShadow = false;\n    this.frustumCulled = true;\n    this.renderOrder = 0;\n    this.animations = [];\n    this.userData = {};\n  }\n\n  Object3D.DefaultUp = new Vector3(0, 1, 0);\n  Object3D.DefaultMatrixAutoUpdate = true;\n  Object3D.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: Object3D,\n    isObject3D: true,\n    onBeforeRender: function onBeforeRender() {},\n    onAfterRender: function onAfterRender() {},\n    applyMatrix4: function applyMatrix4(matrix) {\n      if (this.matrixAutoUpdate) this.updateMatrix();\n      this.matrix.premultiply(matrix);\n      this.matrix.decompose(this.position, this.quaternion, this.scale);\n    },\n    applyQuaternion: function applyQuaternion(q) {\n      this.quaternion.premultiply(q);\n      return this;\n    },\n    setRotationFromAxisAngle: function setRotationFromAxisAngle(axis, angle) {\n      // assumes axis is normalized\n      this.quaternion.setFromAxisAngle(axis, angle);\n    },\n    setRotationFromEuler: function setRotationFromEuler(euler) {\n      this.quaternion.setFromEuler(euler, true);\n    },\n    setRotationFromMatrix: function setRotationFromMatrix(m) {\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      this.quaternion.setFromRotationMatrix(m);\n    },\n    setRotationFromQuaternion: function setRotationFromQuaternion(q) {\n      // assumes q is normalized\n      this.quaternion.copy(q);\n    },\n    rotateOnAxis: function rotateOnAxis(axis, angle) {\n      // rotate object on axis in object space\n      // axis is assumed to be normalized\n      _q1.setFromAxisAngle(axis, angle);\n\n      this.quaternion.multiply(_q1);\n      return this;\n    },\n    rotateOnWorldAxis: function rotateOnWorldAxis(axis, angle) {\n      // rotate object on axis in world space\n      // axis is assumed to be normalized\n      // method assumes no rotated parent\n      _q1.setFromAxisAngle(axis, angle);\n\n      this.quaternion.premultiply(_q1);\n      return this;\n    },\n    rotateX: function rotateX(angle) {\n      return this.rotateOnAxis(_xAxis, angle);\n    },\n    rotateY: function rotateY(angle) {\n      return this.rotateOnAxis(_yAxis, angle);\n    },\n    rotateZ: function rotateZ(angle) {\n      return this.rotateOnAxis(_zAxis, angle);\n    },\n    translateOnAxis: function translateOnAxis(axis, distance) {\n      // translate object by distance along axis in object space\n      // axis is assumed to be normalized\n      _v1$2.copy(axis).applyQuaternion(this.quaternion);\n\n      this.position.add(_v1$2.multiplyScalar(distance));\n      return this;\n    },\n    translateX: function translateX(distance) {\n      return this.translateOnAxis(_xAxis, distance);\n    },\n    translateY: function translateY(distance) {\n      return this.translateOnAxis(_yAxis, distance);\n    },\n    translateZ: function translateZ(distance) {\n      return this.translateOnAxis(_zAxis, distance);\n    },\n    localToWorld: function localToWorld(vector) {\n      return vector.applyMatrix4(this.matrixWorld);\n    },\n    worldToLocal: function worldToLocal(vector) {\n      return vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());\n    },\n    lookAt: function lookAt(x, y, z) {\n      // This method does not support objects having non-uniformly-scaled parent(s)\n      if (x.isVector3) {\n        _target.copy(x);\n      } else {\n        _target.set(x, y, z);\n      }\n\n      var parent = this.parent;\n      this.updateWorldMatrix(true, false);\n\n      _position.setFromMatrixPosition(this.matrixWorld);\n\n      if (this.isCamera || this.isLight) {\n        _m1$1.lookAt(_position, _target, this.up);\n      } else {\n        _m1$1.lookAt(_target, _position, this.up);\n      }\n\n      this.quaternion.setFromRotationMatrix(_m1$1);\n\n      if (parent) {\n        _m1$1.extractRotation(parent.matrixWorld);\n\n        _q1.setFromRotationMatrix(_m1$1);\n\n        this.quaternion.premultiply(_q1.invert());\n      }\n    },\n    add: function add(object) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n\n        return this;\n      }\n\n      if (object === this) {\n        console.error('THREE.Object3D.add: object can\\'t be added as a child of itself.', object);\n        return this;\n      }\n\n      if (object && object.isObject3D) {\n        if (object.parent !== null) {\n          object.parent.remove(object);\n        }\n\n        object.parent = this;\n        this.children.push(object);\n        object.dispatchEvent(_addedEvent);\n      } else {\n        console.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\n      }\n\n      return this;\n    },\n    remove: function remove(object) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.remove(arguments[i]);\n        }\n\n        return this;\n      }\n\n      var index = this.children.indexOf(object);\n\n      if (index !== -1) {\n        object.parent = null;\n        this.children.splice(index, 1);\n        object.dispatchEvent(_removedEvent);\n      }\n\n      return this;\n    },\n    clear: function clear() {\n      for (var i = 0; i < this.children.length; i++) {\n        var object = this.children[i];\n        object.parent = null;\n        object.dispatchEvent(_removedEvent);\n      }\n\n      this.children.length = 0;\n      return this;\n    },\n    attach: function attach(object) {\n      // adds object as a child of this, while maintaining the object's world transform\n      this.updateWorldMatrix(true, false);\n\n      _m1$1.copy(this.matrixWorld).invert();\n\n      if (object.parent !== null) {\n        object.parent.updateWorldMatrix(true, false);\n\n        _m1$1.multiply(object.parent.matrixWorld);\n      }\n\n      object.applyMatrix4(_m1$1);\n      object.updateWorldMatrix(false, false);\n      this.add(object);\n      return this;\n    },\n    getObjectById: function getObjectById(id) {\n      return this.getObjectByProperty('id', id);\n    },\n    getObjectByName: function getObjectByName(name) {\n      return this.getObjectByProperty('name', name);\n    },\n    getObjectByProperty: function getObjectByProperty(name, value) {\n      if (this[name] === value) return this;\n\n      for (var i = 0, l = this.children.length; i < l; i++) {\n        var child = this.children[i];\n        var object = child.getObjectByProperty(name, value);\n\n        if (object !== undefined) {\n          return object;\n        }\n      }\n\n      return undefined;\n    },\n    getWorldPosition: function getWorldPosition(target) {\n      if (target === undefined) {\n        console.warn('THREE.Object3D: .getWorldPosition() target is now required');\n        target = new Vector3();\n      }\n\n      this.updateWorldMatrix(true, false);\n      return target.setFromMatrixPosition(this.matrixWorld);\n    },\n    getWorldQuaternion: function getWorldQuaternion(target) {\n      if (target === undefined) {\n        console.warn('THREE.Object3D: .getWorldQuaternion() target is now required');\n        target = new Quaternion();\n      }\n\n      this.updateWorldMatrix(true, false);\n      this.matrixWorld.decompose(_position, target, _scale);\n      return target;\n    },\n    getWorldScale: function getWorldScale(target) {\n      if (target === undefined) {\n        console.warn('THREE.Object3D: .getWorldScale() target is now required');\n        target = new Vector3();\n      }\n\n      this.updateWorldMatrix(true, false);\n      this.matrixWorld.decompose(_position, _quaternion$2, target);\n      return target;\n    },\n    getWorldDirection: function getWorldDirection(target) {\n      if (target === undefined) {\n        console.warn('THREE.Object3D: .getWorldDirection() target is now required');\n        target = new Vector3();\n      }\n\n      this.updateWorldMatrix(true, false);\n      var e = this.matrixWorld.elements;\n      return target.set(e[8], e[9], e[10]).normalize();\n    },\n    raycast: function raycast() {},\n    traverse: function traverse(callback) {\n      callback(this);\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].traverse(callback);\n      }\n    },\n    traverseVisible: function traverseVisible(callback) {\n      if (this.visible === false) return;\n      callback(this);\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].traverseVisible(callback);\n      }\n    },\n    traverseAncestors: function traverseAncestors(callback) {\n      var parent = this.parent;\n\n      if (parent !== null) {\n        callback(parent);\n        parent.traverseAncestors(callback);\n      }\n    },\n    updateMatrix: function updateMatrix() {\n      this.matrix.compose(this.position, this.quaternion, this.scale);\n      this.matrixWorldNeedsUpdate = true;\n    },\n    updateMatrixWorld: function updateMatrixWorld(force) {\n      if (this.matrixAutoUpdate) this.updateMatrix();\n\n      if (this.matrixWorldNeedsUpdate || force) {\n        if (this.parent === null) {\n          this.matrixWorld.copy(this.matrix);\n        } else {\n          this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n        }\n\n        this.matrixWorldNeedsUpdate = false;\n        force = true;\n      } // update children\n\n\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].updateMatrixWorld(force);\n      }\n    },\n    updateWorldMatrix: function updateWorldMatrix(updateParents, updateChildren) {\n      var parent = this.parent;\n\n      if (updateParents === true && parent !== null) {\n        parent.updateWorldMatrix(true, false);\n      }\n\n      if (this.matrixAutoUpdate) this.updateMatrix();\n\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      } // update children\n\n\n      if (updateChildren === true) {\n        var children = this.children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].updateWorldMatrix(false, true);\n        }\n      }\n    },\n    toJSON: function toJSON(meta) {\n      // meta is a string when called from JSON.stringify\n      var isRootObject = meta === undefined || typeof meta === 'string';\n      var output = {}; // meta is a hash used to collect geometries, materials.\n      // not providing it implies that this is the root object\n      // being serialized.\n\n      if (isRootObject) {\n        // initialize meta obj\n        meta = {\n          geometries: {},\n          materials: {},\n          textures: {},\n          images: {},\n          shapes: {},\n          skeletons: {},\n          animations: {}\n        };\n        output.metadata = {\n          version: 4.5,\n          type: 'Object',\n          generator: 'Object3D.toJSON'\n        };\n      } // standard Object3D serialization\n\n\n      var object = {};\n      object.uuid = this.uuid;\n      object.type = this.type;\n      if (this.name !== '') object.name = this.name;\n      if (this.castShadow === true) object.castShadow = true;\n      if (this.receiveShadow === true) object.receiveShadow = true;\n      if (this.visible === false) object.visible = false;\n      if (this.frustumCulled === false) object.frustumCulled = false;\n      if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n      if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n      object.layers = this.layers.mask;\n      object.matrix = this.matrix.toArray();\n      if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n      if (this.isInstancedMesh) {\n        object.type = 'InstancedMesh';\n        object.count = this.count;\n        object.instanceMatrix = this.instanceMatrix.toJSON();\n      } //\n\n\n      function serialize(library, element) {\n        if (library[element.uuid] === undefined) {\n          library[element.uuid] = element.toJSON(meta);\n        }\n\n        return element.uuid;\n      }\n\n      if (this.isMesh || this.isLine || this.isPoints) {\n        object.geometry = serialize(meta.geometries, this.geometry);\n        var parameters = this.geometry.parameters;\n\n        if (parameters !== undefined && parameters.shapes !== undefined) {\n          var shapes = parameters.shapes;\n\n          if (Array.isArray(shapes)) {\n            for (var i = 0, l = shapes.length; i < l; i++) {\n              var shape = shapes[i];\n              serialize(meta.shapes, shape);\n            }\n          } else {\n            serialize(meta.shapes, shapes);\n          }\n        }\n      }\n\n      if (this.isSkinnedMesh) {\n        object.bindMode = this.bindMode;\n        object.bindMatrix = this.bindMatrix.toArray();\n\n        if (this.skeleton !== undefined) {\n          serialize(meta.skeletons, this.skeleton);\n          object.skeleton = this.skeleton.uuid;\n        }\n      }\n\n      if (this.material !== undefined) {\n        if (Array.isArray(this.material)) {\n          var uuids = [];\n\n          for (var _i = 0, _l = this.material.length; _i < _l; _i++) {\n            uuids.push(serialize(meta.materials, this.material[_i]));\n          }\n\n          object.material = uuids;\n        } else {\n          object.material = serialize(meta.materials, this.material);\n        }\n      } //\n\n\n      if (this.children.length > 0) {\n        object.children = [];\n\n        for (var _i2 = 0; _i2 < this.children.length; _i2++) {\n          object.children.push(this.children[_i2].toJSON(meta).object);\n        }\n      } //\n\n\n      if (this.animations.length > 0) {\n        object.animations = [];\n\n        for (var _i3 = 0; _i3 < this.animations.length; _i3++) {\n          var animation = this.animations[_i3];\n          object.animations.push(serialize(meta.animations, animation));\n        }\n      }\n\n      if (isRootObject) {\n        var geometries = extractFromCache(meta.geometries);\n        var materials = extractFromCache(meta.materials);\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n\n        var _shapes = extractFromCache(meta.shapes);\n\n        var skeletons = extractFromCache(meta.skeletons);\n        var animations = extractFromCache(meta.animations);\n        if (geometries.length > 0) output.geometries = geometries;\n        if (materials.length > 0) output.materials = materials;\n        if (textures.length > 0) output.textures = textures;\n        if (images.length > 0) output.images = images;\n        if (_shapes.length > 0) output.shapes = _shapes;\n        if (skeletons.length > 0) output.skeletons = skeletons;\n        if (animations.length > 0) output.animations = animations;\n      }\n\n      output.object = object;\n      return output; // extract data from the cache hash\n      // remove metadata on each item\n      // and return as array\n\n      function extractFromCache(cache) {\n        var values = [];\n\n        for (var key in cache) {\n          var data = cache[key];\n          delete data.metadata;\n          values.push(data);\n        }\n\n        return values;\n      }\n    },\n    clone: function clone(recursive) {\n      return new this.constructor().copy(this, recursive);\n    },\n    copy: function copy(source, recursive) {\n      if (recursive === void 0) {\n        recursive = true;\n      }\n\n      this.name = source.name;\n      this.up.copy(source.up);\n      this.position.copy(source.position);\n      this.rotation.order = source.rotation.order;\n      this.quaternion.copy(source.quaternion);\n      this.scale.copy(source.scale);\n      this.matrix.copy(source.matrix);\n      this.matrixWorld.copy(source.matrixWorld);\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n      this.layers.mask = source.layers.mask;\n      this.visible = source.visible;\n      this.castShadow = source.castShadow;\n      this.receiveShadow = source.receiveShadow;\n      this.frustumCulled = source.frustumCulled;\n      this.renderOrder = source.renderOrder;\n      this.userData = JSON.parse(JSON.stringify(source.userData));\n\n      if (recursive === true) {\n        for (var i = 0; i < source.children.length; i++) {\n          var child = source.children[i];\n          this.add(child.clone());\n        }\n      }\n\n      return this;\n    }\n  });\n\n  var _vector1 = /*@__PURE__*/new Vector3();\n\n  var _vector2 = /*@__PURE__*/new Vector3();\n\n  var _normalMatrix = /*@__PURE__*/new Matrix3();\n\n  var Plane = /*#__PURE__*/function () {\n    function Plane(normal, constant) {\n      Object.defineProperty(this, 'isPlane', {\n        value: true\n      }); // normal is assumed to be normalized\n\n      this.normal = normal !== undefined ? normal : new Vector3(1, 0, 0);\n      this.constant = constant !== undefined ? constant : 0;\n    }\n\n    var _proto = Plane.prototype;\n\n    _proto.set = function set(normal, constant) {\n      this.normal.copy(normal);\n      this.constant = constant;\n      return this;\n    };\n\n    _proto.setComponents = function setComponents(x, y, z, w) {\n      this.normal.set(x, y, z);\n      this.constant = w;\n      return this;\n    };\n\n    _proto.setFromNormalAndCoplanarPoint = function setFromNormalAndCoplanarPoint(normal, point) {\n      this.normal.copy(normal);\n      this.constant = -point.dot(this.normal);\n      return this;\n    };\n\n    _proto.setFromCoplanarPoints = function setFromCoplanarPoints(a, b, c) {\n      var normal = _vector1.subVectors(c, b).cross(_vector2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n      return this;\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor().copy(this);\n    };\n\n    _proto.copy = function copy(plane) {\n      this.normal.copy(plane.normal);\n      this.constant = plane.constant;\n      return this;\n    };\n\n    _proto.normalize = function normalize() {\n      // Note: will lead to a divide by zero if the plane is invalid.\n      var inverseNormalLength = 1.0 / this.normal.length();\n      this.normal.multiplyScalar(inverseNormalLength);\n      this.constant *= inverseNormalLength;\n      return this;\n    };\n\n    _proto.negate = function negate() {\n      this.constant *= -1;\n      this.normal.negate();\n      return this;\n    };\n\n    _proto.distanceToPoint = function distanceToPoint(point) {\n      return this.normal.dot(point) + this.constant;\n    };\n\n    _proto.distanceToSphere = function distanceToSphere(sphere) {\n      return this.distanceToPoint(sphere.center) - sphere.radius;\n    };\n\n    _proto.projectPoint = function projectPoint(point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Plane: .projectPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\n    };\n\n    _proto.intersectLine = function intersectLine(line, target) {\n      if (target === undefined) {\n        console.warn('THREE.Plane: .intersectLine() target is now required');\n        target = new Vector3();\n      }\n\n      var direction = line.delta(_vector1);\n      var denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n          return target.copy(line.start);\n        } // Unsure if this is the correct method to handle this case.\n\n\n        return undefined;\n      }\n\n      var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n        return undefined;\n      }\n\n      return target.copy(direction).multiplyScalar(t).add(line.start);\n    };\n\n    _proto.intersectsLine = function intersectsLine(line) {\n      // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n      var startSign = this.distanceToPoint(line.start);\n      var endSign = this.distanceToPoint(line.end);\n      return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n    };\n\n    _proto.intersectsBox = function intersectsBox(box) {\n      return box.intersectsPlane(this);\n    };\n\n    _proto.intersectsSphere = function intersectsSphere(sphere) {\n      return sphere.intersectsPlane(this);\n    };\n\n    _proto.coplanarPoint = function coplanarPoint(target) {\n      if (target === undefined) {\n        console.warn('THREE.Plane: .coplanarPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(this.normal).multiplyScalar(-this.constant);\n    };\n\n    _proto.applyMatrix4 = function applyMatrix4(matrix, optionalNormalMatrix) {\n      var normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\n\n      var referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\n      var normal = this.normal.applyMatrix3(normalMatrix).normalize();\n      this.constant = -referencePoint.dot(normal);\n      return this;\n    };\n\n    _proto.translate = function translate(offset) {\n      this.constant -= offset.dot(this.normal);\n      return this;\n    };\n\n    _proto.equals = function equals(plane) {\n      return plane.normal.equals(this.normal) && plane.constant === this.constant;\n    };\n\n    return Plane;\n  }();\n\n  var _v0$1 = /*@__PURE__*/new Vector3();\n\n  var _v1$3 = /*@__PURE__*/new Vector3();\n\n  var _v2$1 = /*@__PURE__*/new Vector3();\n\n  var _v3 = /*@__PURE__*/new Vector3();\n\n  var _vab = /*@__PURE__*/new Vector3();\n\n  var _vac = /*@__PURE__*/new Vector3();\n\n  var _vbc = /*@__PURE__*/new Vector3();\n\n  var _vap = /*@__PURE__*/new Vector3();\n\n  var _vbp = /*@__PURE__*/new Vector3();\n\n  var _vcp = /*@__PURE__*/new Vector3();\n\n  var Triangle = /*#__PURE__*/function () {\n    function Triangle(a, b, c) {\n      this.a = a !== undefined ? a : new Vector3();\n      this.b = b !== undefined ? b : new Vector3();\n      this.c = c !== undefined ? c : new Vector3();\n    }\n\n    Triangle.getNormal = function getNormal(a, b, c, target) {\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .getNormal() target is now required');\n        target = new Vector3();\n      }\n\n      target.subVectors(c, b);\n\n      _v0$1.subVectors(a, b);\n\n      target.cross(_v0$1);\n      var targetLengthSq = target.lengthSq();\n\n      if (targetLengthSq > 0) {\n        return target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n      }\n\n      return target.set(0, 0, 0);\n    } // static/instance method to calculate barycentric coordinates\n    // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n    ;\n\n    Triangle.getBarycoord = function getBarycoord(point, a, b, c, target) {\n      _v0$1.subVectors(c, a);\n\n      _v1$3.subVectors(b, a);\n\n      _v2$1.subVectors(point, a);\n\n      var dot00 = _v0$1.dot(_v0$1);\n\n      var dot01 = _v0$1.dot(_v1$3);\n\n      var dot02 = _v0$1.dot(_v2$1);\n\n      var dot11 = _v1$3.dot(_v1$3);\n\n      var dot12 = _v1$3.dot(_v2$1);\n\n      var denom = dot00 * dot11 - dot01 * dot01;\n\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .getBarycoord() target is now required');\n        target = new Vector3();\n      } // collinear or singular triangle\n\n\n      if (denom === 0) {\n        // arbitrary location outside of triangle?\n        // not sure if this is the best idea, maybe should be returning undefined\n        return target.set(-2, -1, -1);\n      }\n\n      var invDenom = 1 / denom;\n      var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n      var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n      return target.set(1 - u - v, v, u);\n    };\n\n    Triangle.containsPoint = function containsPoint(point, a, b, c) {\n      this.getBarycoord(point, a, b, c, _v3);\n      return _v3.x >= 0 && _v3.y >= 0 && _v3.x + _v3.y <= 1;\n    };\n\n    Triangle.getUV = function getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\n      this.getBarycoord(point, p1, p2, p3, _v3);\n      target.set(0, 0);\n      target.addScaledVector(uv1, _v3.x);\n      target.addScaledVector(uv2, _v3.y);\n      target.addScaledVector(uv3, _v3.z);\n      return target;\n    };\n\n    Triangle.isFrontFacing = function isFrontFacing(a, b, c, direction) {\n      _v0$1.subVectors(c, b);\n\n      _v1$3.subVectors(a, b); // strictly front facing\n\n\n      return _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\n    };\n\n    var _proto = Triangle.prototype;\n\n    _proto.set = function set(a, b, c) {\n      this.a.copy(a);\n      this.b.copy(b);\n      this.c.copy(c);\n      return this;\n    };\n\n    _proto.setFromPointsAndIndices = function setFromPointsAndIndices(points, i0, i1, i2) {\n      this.a.copy(points[i0]);\n      this.b.copy(points[i1]);\n      this.c.copy(points[i2]);\n      return this;\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor().copy(this);\n    };\n\n    _proto.copy = function copy(triangle) {\n      this.a.copy(triangle.a);\n      this.b.copy(triangle.b);\n      this.c.copy(triangle.c);\n      return this;\n    };\n\n    _proto.getArea = function getArea() {\n      _v0$1.subVectors(this.c, this.b);\n\n      _v1$3.subVectors(this.a, this.b);\n\n      return _v0$1.cross(_v1$3).length() * 0.5;\n    };\n\n    _proto.getMidpoint = function getMidpoint(target) {\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .getMidpoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n    };\n\n    _proto.getNormal = function getNormal(target) {\n      return Triangle.getNormal(this.a, this.b, this.c, target);\n    };\n\n    _proto.getPlane = function getPlane(target) {\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .getPlane() target is now required');\n        target = new Plane();\n      }\n\n      return target.setFromCoplanarPoints(this.a, this.b, this.c);\n    };\n\n    _proto.getBarycoord = function getBarycoord(point, target) {\n      return Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n    };\n\n    _proto.getUV = function getUV(point, uv1, uv2, uv3, target) {\n      return Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\n    };\n\n    _proto.containsPoint = function containsPoint(point) {\n      return Triangle.containsPoint(point, this.a, this.b, this.c);\n    };\n\n    _proto.isFrontFacing = function isFrontFacing(direction) {\n      return Triangle.isFrontFacing(this.a, this.b, this.c, direction);\n    };\n\n    _proto.intersectsBox = function intersectsBox(box) {\n      return box.intersectsTriangle(this);\n    };\n\n    _proto.closestPointToPoint = function closestPointToPoint(p, target) {\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .closestPointToPoint() target is now required');\n        target = new Vector3();\n      }\n\n      var a = this.a,\n          b = this.b,\n          c = this.c;\n      var v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n      // published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n      // under the accompanying license; see chapter 5.1.5 for detailed explanation.\n      // basically, we're distinguishing which of the voronoi regions of the triangle\n      // the point lies in with the minimum amount of redundant computation.\n\n      _vab.subVectors(b, a);\n\n      _vac.subVectors(c, a);\n\n      _vap.subVectors(p, a);\n\n      var d1 = _vab.dot(_vap);\n\n      var d2 = _vac.dot(_vap);\n\n      if (d1 <= 0 && d2 <= 0) {\n        // vertex region of A; barycentric coords (1, 0, 0)\n        return target.copy(a);\n      }\n\n      _vbp.subVectors(p, b);\n\n      var d3 = _vab.dot(_vbp);\n\n      var d4 = _vac.dot(_vbp);\n\n      if (d3 >= 0 && d4 <= d3) {\n        // vertex region of B; barycentric coords (0, 1, 0)\n        return target.copy(b);\n      }\n\n      var vc = d1 * d4 - d3 * d2;\n\n      if (vc <= 0 && d1 >= 0 && d3 <= 0) {\n        v = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\n\n        return target.copy(a).addScaledVector(_vab, v);\n      }\n\n      _vcp.subVectors(p, c);\n\n      var d5 = _vab.dot(_vcp);\n\n      var d6 = _vac.dot(_vcp);\n\n      if (d6 >= 0 && d5 <= d6) {\n        // vertex region of C; barycentric coords (0, 0, 1)\n        return target.copy(c);\n      }\n\n      var vb = d5 * d2 - d1 * d6;\n\n      if (vb <= 0 && d2 >= 0 && d6 <= 0) {\n        w = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\n\n        return target.copy(a).addScaledVector(_vac, w);\n      }\n\n      var va = d3 * d6 - d5 * d4;\n\n      if (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n        _vbc.subVectors(c, b);\n\n        w = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\n\n        return target.copy(b).addScaledVector(_vbc, w); // edge region of BC\n      } // face region\n\n\n      var denom = 1 / (va + vb + vc); // u = va * denom\n\n      v = vb * denom;\n      w = vc * denom;\n      return target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\n    };\n\n    _proto.equals = function equals(triangle) {\n      return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n    };\n\n    return Triangle;\n  }();\n\n  var _colorKeywords = {\n    'aliceblue': 0xF0F8FF,\n    'antiquewhite': 0xFAEBD7,\n    'aqua': 0x00FFFF,\n    'aquamarine': 0x7FFFD4,\n    'azure': 0xF0FFFF,\n    'beige': 0xF5F5DC,\n    'bisque': 0xFFE4C4,\n    'black': 0x000000,\n    'blanchedalmond': 0xFFEBCD,\n    'blue': 0x0000FF,\n    'blueviolet': 0x8A2BE2,\n    'brown': 0xA52A2A,\n    'burlywood': 0xDEB887,\n    'cadetblue': 0x5F9EA0,\n    'chartreuse': 0x7FFF00,\n    'chocolate': 0xD2691E,\n    'coral': 0xFF7F50,\n    'cornflowerblue': 0x6495ED,\n    'cornsilk': 0xFFF8DC,\n    'crimson': 0xDC143C,\n    'cyan': 0x00FFFF,\n    'darkblue': 0x00008B,\n    'darkcyan': 0x008B8B,\n    'darkgoldenrod': 0xB8860B,\n    'darkgray': 0xA9A9A9,\n    'darkgreen': 0x006400,\n    'darkgrey': 0xA9A9A9,\n    'darkkhaki': 0xBDB76B,\n    'darkmagenta': 0x8B008B,\n    'darkolivegreen': 0x556B2F,\n    'darkorange': 0xFF8C00,\n    'darkorchid': 0x9932CC,\n    'darkred': 0x8B0000,\n    'darksalmon': 0xE9967A,\n    'darkseagreen': 0x8FBC8F,\n    'darkslateblue': 0x483D8B,\n    'darkslategray': 0x2F4F4F,\n    'darkslategrey': 0x2F4F4F,\n    'darkturquoise': 0x00CED1,\n    'darkviolet': 0x9400D3,\n    'deeppink': 0xFF1493,\n    'deepskyblue': 0x00BFFF,\n    'dimgray': 0x696969,\n    'dimgrey': 0x696969,\n    'dodgerblue': 0x1E90FF,\n    'firebrick': 0xB22222,\n    'floralwhite': 0xFFFAF0,\n    'forestgreen': 0x228B22,\n    'fuchsia': 0xFF00FF,\n    'gainsboro': 0xDCDCDC,\n    'ghostwhite': 0xF8F8FF,\n    'gold': 0xFFD700,\n    'goldenrod': 0xDAA520,\n    'gray': 0x808080,\n    'green': 0x008000,\n    'greenyellow': 0xADFF2F,\n    'grey': 0x808080,\n    'honeydew': 0xF0FFF0,\n    'hotpink': 0xFF69B4,\n    'indianred': 0xCD5C5C,\n    'indigo': 0x4B0082,\n    'ivory': 0xFFFFF0,\n    'khaki': 0xF0E68C,\n    'lavender': 0xE6E6FA,\n    'lavenderblush': 0xFFF0F5,\n    'lawngreen': 0x7CFC00,\n    'lemonchiffon': 0xFFFACD,\n    'lightblue': 0xADD8E6,\n    'lightcoral': 0xF08080,\n    'lightcyan': 0xE0FFFF,\n    'lightgoldenrodyellow': 0xFAFAD2,\n    'lightgray': 0xD3D3D3,\n    'lightgreen': 0x90EE90,\n    'lightgrey': 0xD3D3D3,\n    'lightpink': 0xFFB6C1,\n    'lightsalmon': 0xFFA07A,\n    'lightseagreen': 0x20B2AA,\n    'lightskyblue': 0x87CEFA,\n    'lightslategray': 0x778899,\n    'lightslategrey': 0x778899,\n    'lightsteelblue': 0xB0C4DE,\n    'lightyellow': 0xFFFFE0,\n    'lime': 0x00FF00,\n    'limegreen': 0x32CD32,\n    'linen': 0xFAF0E6,\n    'magenta': 0xFF00FF,\n    'maroon': 0x800000,\n    'mediumaquamarine': 0x66CDAA,\n    'mediumblue': 0x0000CD,\n    'mediumorchid': 0xBA55D3,\n    'mediumpurple': 0x9370DB,\n    'mediumseagreen': 0x3CB371,\n    'mediumslateblue': 0x7B68EE,\n    'mediumspringgreen': 0x00FA9A,\n    'mediumturquoise': 0x48D1CC,\n    'mediumvioletred': 0xC71585,\n    'midnightblue': 0x191970,\n    'mintcream': 0xF5FFFA,\n    'mistyrose': 0xFFE4E1,\n    'moccasin': 0xFFE4B5,\n    'navajowhite': 0xFFDEAD,\n    'navy': 0x000080,\n    'oldlace': 0xFDF5E6,\n    'olive': 0x808000,\n    'olivedrab': 0x6B8E23,\n    'orange': 0xFFA500,\n    'orangered': 0xFF4500,\n    'orchid': 0xDA70D6,\n    'palegoldenrod': 0xEEE8AA,\n    'palegreen': 0x98FB98,\n    'paleturquoise': 0xAFEEEE,\n    'palevioletred': 0xDB7093,\n    'papayawhip': 0xFFEFD5,\n    'peachpuff': 0xFFDAB9,\n    'peru': 0xCD853F,\n    'pink': 0xFFC0CB,\n    'plum': 0xDDA0DD,\n    'powderblue': 0xB0E0E6,\n    'purple': 0x800080,\n    'rebeccapurple': 0x663399,\n    'red': 0xFF0000,\n    'rosybrown': 0xBC8F8F,\n    'royalblue': 0x4169E1,\n    'saddlebrown': 0x8B4513,\n    'salmon': 0xFA8072,\n    'sandybrown': 0xF4A460,\n    'seagreen': 0x2E8B57,\n    'seashell': 0xFFF5EE,\n    'sienna': 0xA0522D,\n    'silver': 0xC0C0C0,\n    'skyblue': 0x87CEEB,\n    'slateblue': 0x6A5ACD,\n    'slategray': 0x708090,\n    'slategrey': 0x708090,\n    'snow': 0xFFFAFA,\n    'springgreen': 0x00FF7F,\n    'steelblue': 0x4682B4,\n    'tan': 0xD2B48C,\n    'teal': 0x008080,\n    'thistle': 0xD8BFD8,\n    'tomato': 0xFF6347,\n    'turquoise': 0x40E0D0,\n    'violet': 0xEE82EE,\n    'wheat': 0xF5DEB3,\n    'white': 0xFFFFFF,\n    'whitesmoke': 0xF5F5F5,\n    'yellow': 0xFFFF00,\n    'yellowgreen': 0x9ACD32\n  };\n  var _hslA = {\n    h: 0,\n    s: 0,\n    l: 0\n  };\n  var _hslB = {\n    h: 0,\n    s: 0,\n    l: 0\n  };\n\n  function hue2rgb(p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n    return p;\n  }\n\n  function SRGBToLinear(c) {\n    return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n  }\n\n  function LinearToSRGB(c) {\n    return c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n  }\n\n  var Color = /*#__PURE__*/function () {\n    function Color(r, g, b) {\n      Object.defineProperty(this, 'isColor', {\n        value: true\n      });\n\n      if (g === undefined && b === undefined) {\n        // r is THREE.Color, hex or string\n        return this.set(r);\n      }\n\n      return this.setRGB(r, g, b);\n    }\n\n    var _proto = Color.prototype;\n\n    _proto.set = function set(value) {\n      if (value && value.isColor) {\n        this.copy(value);\n      } else if (typeof value === 'number') {\n        this.setHex(value);\n      } else if (typeof value === 'string') {\n        this.setStyle(value);\n      }\n\n      return this;\n    };\n\n    _proto.setScalar = function setScalar(scalar) {\n      this.r = scalar;\n      this.g = scalar;\n      this.b = scalar;\n      return this;\n    };\n\n    _proto.setHex = function setHex(hex) {\n      hex = Math.floor(hex);\n      this.r = (hex >> 16 & 255) / 255;\n      this.g = (hex >> 8 & 255) / 255;\n      this.b = (hex & 255) / 255;\n      return this;\n    };\n\n    _proto.setRGB = function setRGB(r, g, b) {\n      this.r = r;\n      this.g = g;\n      this.b = b;\n      return this;\n    };\n\n    _proto.setHSL = function setHSL(h, s, l) {\n      // h,s,l ranges are in 0.0 - 1.0\n      h = MathUtils.euclideanModulo(h, 1);\n      s = MathUtils.clamp(s, 0, 1);\n      l = MathUtils.clamp(l, 0, 1);\n\n      if (s === 0) {\n        this.r = this.g = this.b = l;\n      } else {\n        var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n        var q = 2 * l - p;\n        this.r = hue2rgb(q, p, h + 1 / 3);\n        this.g = hue2rgb(q, p, h);\n        this.b = hue2rgb(q, p, h - 1 / 3);\n      }\n\n      return this;\n    };\n\n    _proto.setStyle = function setStyle(style) {\n      function handleAlpha(string) {\n        if (string === undefined) return;\n\n        if (parseFloat(string) < 1) {\n          console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n        }\n      }\n\n      var m;\n\n      if (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\n        // rgb / hsl\n        var color;\n        var name = m[1];\n        var components = m[2];\n\n        switch (name) {\n          case 'rgb':\n          case 'rgba':\n            if (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              // rgb(255,0,0) rgba(255,0,0,0.5)\n              this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n              this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n              this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n              handleAlpha(color[4]);\n              return this;\n            }\n\n            if (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n              this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n              this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n              this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n              handleAlpha(color[4]);\n              return this;\n            }\n\n            break;\n\n          case 'hsl':\n          case 'hsla':\n            if (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n              var h = parseFloat(color[1]) / 360;\n              var s = parseInt(color[2], 10) / 100;\n              var l = parseInt(color[3], 10) / 100;\n              handleAlpha(color[4]);\n              return this.setHSL(h, s, l);\n            }\n\n            break;\n        }\n      } else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n        // hex color\n        var hex = m[1];\n        var size = hex.length;\n\n        if (size === 3) {\n          // #ff0\n          this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n          this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n          this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n          return this;\n        } else if (size === 6) {\n          // #ff0000\n          this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n          this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n          this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n          return this;\n        }\n      }\n\n      if (style && style.length > 0) {\n        return this.setColorName(style);\n      }\n\n      return this;\n    };\n\n    _proto.setColorName = function setColorName(style) {\n      // color keywords\n      var hex = _colorKeywords[style];\n\n      if (hex !== undefined) {\n        // red\n        this.setHex(hex);\n      } else {\n        // unknown color\n        console.warn('THREE.Color: Unknown color ' + style);\n      }\n\n      return this;\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor(this.r, this.g, this.b);\n    };\n\n    _proto.copy = function copy(color) {\n      this.r = color.r;\n      this.g = color.g;\n      this.b = color.b;\n      return this;\n    };\n\n    _proto.copyGammaToLinear = function copyGammaToLinear(color, gammaFactor) {\n      if (gammaFactor === void 0) {\n        gammaFactor = 2.0;\n      }\n\n      this.r = Math.pow(color.r, gammaFactor);\n      this.g = Math.pow(color.g, gammaFactor);\n      this.b = Math.pow(color.b, gammaFactor);\n      return this;\n    };\n\n    _proto.copyLinearToGamma = function copyLinearToGamma(color, gammaFactor) {\n      if (gammaFactor === void 0) {\n        gammaFactor = 2.0;\n      }\n\n      var safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n      this.r = Math.pow(color.r, safeInverse);\n      this.g = Math.pow(color.g, safeInverse);\n      this.b = Math.pow(color.b, safeInverse);\n      return this;\n    };\n\n    _proto.convertGammaToLinear = function convertGammaToLinear(gammaFactor) {\n      this.copyGammaToLinear(this, gammaFactor);\n      return this;\n    };\n\n    _proto.convertLinearToGamma = function convertLinearToGamma(gammaFactor) {\n      this.copyLinearToGamma(this, gammaFactor);\n      return this;\n    };\n\n    _proto.copySRGBToLinear = function copySRGBToLinear(color) {\n      this.r = SRGBToLinear(color.r);\n      this.g = SRGBToLinear(color.g);\n      this.b = SRGBToLinear(color.b);\n      return this;\n    };\n\n    _proto.copyLinearToSRGB = function copyLinearToSRGB(color) {\n      this.r = LinearToSRGB(color.r);\n      this.g = LinearToSRGB(color.g);\n      this.b = LinearToSRGB(color.b);\n      return this;\n    };\n\n    _proto.convertSRGBToLinear = function convertSRGBToLinear() {\n      this.copySRGBToLinear(this);\n      return this;\n    };\n\n    _proto.convertLinearToSRGB = function convertLinearToSRGB() {\n      this.copyLinearToSRGB(this);\n      return this;\n    };\n\n    _proto.getHex = function getHex() {\n      return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n    };\n\n    _proto.getHexString = function getHexString() {\n      return ('000000' + this.getHex().toString(16)).slice(-6);\n    };\n\n    _proto.getHSL = function getHSL(target) {\n      // h,s,l ranges are in 0.0 - 1.0\n      if (target === undefined) {\n        console.warn('THREE.Color: .getHSL() target is now required');\n        target = {\n          h: 0,\n          s: 0,\n          l: 0\n        };\n      }\n\n      var r = this.r,\n          g = this.g,\n          b = this.b;\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var hue, saturation;\n      var lightness = (min + max) / 2.0;\n\n      if (min === max) {\n        hue = 0;\n        saturation = 0;\n      } else {\n        var delta = max - min;\n        saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n        switch (max) {\n          case r:\n            hue = (g - b) / delta + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            hue = (b - r) / delta + 2;\n            break;\n\n          case b:\n            hue = (r - g) / delta + 4;\n            break;\n        }\n\n        hue /= 6;\n      }\n\n      target.h = hue;\n      target.s = saturation;\n      target.l = lightness;\n      return target;\n    };\n\n    _proto.getStyle = function getStyle() {\n      return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n    };\n\n    _proto.offsetHSL = function offsetHSL(h, s, l) {\n      this.getHSL(_hslA);\n      _hslA.h += h;\n      _hslA.s += s;\n      _hslA.l += l;\n      this.setHSL(_hslA.h, _hslA.s, _hslA.l);\n      return this;\n    };\n\n    _proto.add = function add(color) {\n      this.r += color.r;\n      this.g += color.g;\n      this.b += color.b;\n      return this;\n    };\n\n    _proto.addColors = function addColors(color1, color2) {\n      this.r = color1.r + color2.r;\n      this.g = color1.g + color2.g;\n      this.b = color1.b + color2.b;\n      return this;\n    };\n\n    _proto.addScalar = function addScalar(s) {\n      this.r += s;\n      this.g += s;\n      this.b += s;\n      return this;\n    };\n\n    _proto.sub = function sub(color) {\n      this.r = Math.max(0, this.r - color.r);\n      this.g = Math.max(0, this.g - color.g);\n      this.b = Math.max(0, this.b - color.b);\n      return this;\n    };\n\n    _proto.multiply = function multiply(color) {\n      this.r *= color.r;\n      this.g *= color.g;\n      this.b *= color.b;\n      return this;\n    };\n\n    _proto.multiplyScalar = function multiplyScalar(s) {\n      this.r *= s;\n      this.g *= s;\n      this.b *= s;\n      return this;\n    };\n\n    _proto.lerp = function lerp(color, alpha) {\n      this.r += (color.r - this.r) * alpha;\n      this.g += (color.g - this.g) * alpha;\n      this.b += (color.b - this.b) * alpha;\n      return this;\n    };\n\n    _proto.lerpColors = function lerpColors(color1, color2, alpha) {\n      this.r = color1.r + (color2.r - color1.r) * alpha;\n      this.g = color1.g + (color2.g - color1.g) * alpha;\n      this.b = color1.b + (color2.b - color1.b) * alpha;\n      return this;\n    };\n\n    _proto.lerpHSL = function lerpHSL(color, alpha) {\n      this.getHSL(_hslA);\n      color.getHSL(_hslB);\n      var h = MathUtils.lerp(_hslA.h, _hslB.h, alpha);\n      var s = MathUtils.lerp(_hslA.s, _hslB.s, alpha);\n      var l = MathUtils.lerp(_hslA.l, _hslB.l, alpha);\n      this.setHSL(h, s, l);\n      return this;\n    };\n\n    _proto.equals = function equals(c) {\n      return c.r === this.r && c.g === this.g && c.b === this.b;\n    };\n\n    _proto.fromArray = function fromArray(array, offset) {\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      this.r = array[offset];\n      this.g = array[offset + 1];\n      this.b = array[offset + 2];\n      return this;\n    };\n\n    _proto.toArray = function toArray(array, offset) {\n      if (array === void 0) {\n        array = [];\n      }\n\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      array[offset] = this.r;\n      array[offset + 1] = this.g;\n      array[offset + 2] = this.b;\n      return array;\n    };\n\n    _proto.fromBufferAttribute = function fromBufferAttribute(attribute, index) {\n      this.r = attribute.getX(index);\n      this.g = attribute.getY(index);\n      this.b = attribute.getZ(index);\n\n      if (attribute.normalized === true) {\n        // assuming Uint8Array\n        this.r /= 255;\n        this.g /= 255;\n        this.b /= 255;\n      }\n\n      return this;\n    };\n\n    _proto.toJSON = function toJSON() {\n      return this.getHex();\n    };\n\n    return Color;\n  }();\n\n  Color.NAMES = _colorKeywords;\n  Color.prototype.r = 1;\n  Color.prototype.g = 1;\n  Color.prototype.b = 1;\n\n  var Face3 = /*#__PURE__*/function () {\n    function Face3(a, b, c, normal, color, materialIndex) {\n      if (materialIndex === void 0) {\n        materialIndex = 0;\n      }\n\n      this.a = a;\n      this.b = b;\n      this.c = c;\n      this.normal = normal && normal.isVector3 ? normal : new Vector3();\n      this.vertexNormals = Array.isArray(normal) ? normal : [];\n      this.color = color && color.isColor ? color : new Color();\n      this.vertexColors = Array.isArray(color) ? color : [];\n      this.materialIndex = materialIndex;\n    }\n\n    var _proto = Face3.prototype;\n\n    _proto.clone = function clone() {\n      return new this.constructor().copy(this);\n    };\n\n    _proto.copy = function copy(source) {\n      this.a = source.a;\n      this.b = source.b;\n      this.c = source.c;\n      this.normal.copy(source.normal);\n      this.color.copy(source.color);\n      this.materialIndex = source.materialIndex;\n\n      for (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n        this.vertexNormals[i] = source.vertexNormals[i].clone();\n      }\n\n      for (var _i = 0, _il = source.vertexColors.length; _i < _il; _i++) {\n        this.vertexColors[_i] = source.vertexColors[_i].clone();\n      }\n\n      return this;\n    };\n\n    return Face3;\n  }();\n\n  var materialId = 0;\n\n  function Material() {\n    Object.defineProperty(this, 'id', {\n      value: materialId++\n    });\n    this.uuid = MathUtils.generateUUID();\n    this.name = '';\n    this.type = 'Material';\n    this.fog = true;\n    this.blending = NormalBlending;\n    this.side = FrontSide;\n    this.flatShading = false;\n    this.vertexColors = false;\n    this.opacity = 1;\n    this.transparent = false;\n    this.blendSrc = SrcAlphaFactor;\n    this.blendDst = OneMinusSrcAlphaFactor;\n    this.blendEquation = AddEquation;\n    this.blendSrcAlpha = null;\n    this.blendDstAlpha = null;\n    this.blendEquationAlpha = null;\n    this.depthFunc = LessEqualDepth;\n    this.depthTest = true;\n    this.depthWrite = true;\n    this.stencilWriteMask = 0xff;\n    this.stencilFunc = AlwaysStencilFunc;\n    this.stencilRef = 0;\n    this.stencilFuncMask = 0xff;\n    this.stencilFail = KeepStencilOp;\n    this.stencilZFail = KeepStencilOp;\n    this.stencilZPass = KeepStencilOp;\n    this.stencilWrite = false;\n    this.clippingPlanes = null;\n    this.clipIntersection = false;\n    this.clipShadows = false;\n    this.shadowSide = null;\n    this.colorWrite = true;\n    this.precision = null; // override the renderer's default precision for this material\n\n    this.polygonOffset = false;\n    this.polygonOffsetFactor = 0;\n    this.polygonOffsetUnits = 0;\n    this.dithering = false;\n    this.alphaTest = 0;\n    this.premultipliedAlpha = false;\n    this.visible = true;\n    this.toneMapped = true;\n    this.userData = {};\n    this.version = 0;\n  }\n\n  Material.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: Material,\n    isMaterial: true,\n    onBeforeCompile: function onBeforeCompile()\n    /* shaderobject, renderer */\n    {},\n    customProgramCacheKey: function customProgramCacheKey() {\n      return this.onBeforeCompile.toString();\n    },\n    setValues: function setValues(values) {\n      if (values === undefined) return;\n\n      for (var key in values) {\n        var newValue = values[key];\n\n        if (newValue === undefined) {\n          console.warn('THREE.Material: \\'' + key + '\\' parameter is undefined.');\n          continue;\n        } // for backward compatability if shading is set in the constructor\n\n\n        if (key === 'shading') {\n          console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n          this.flatShading = newValue === FlatShading ? true : false;\n          continue;\n        }\n\n        var currentValue = this[key];\n\n        if (currentValue === undefined) {\n          console.warn('THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.');\n          continue;\n        }\n\n        if (currentValue && currentValue.isColor) {\n          currentValue.set(newValue);\n        } else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n          currentValue.copy(newValue);\n        } else {\n          this[key] = newValue;\n        }\n      }\n    },\n    toJSON: function toJSON(meta) {\n      var isRoot = meta === undefined || typeof meta === 'string';\n\n      if (isRoot) {\n        meta = {\n          textures: {},\n          images: {}\n        };\n      }\n\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Material',\n          generator: 'Material.toJSON'\n        }\n      }; // standard Material serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n      if (this.color && this.color.isColor) data.color = this.color.getHex();\n      if (this.roughness !== undefined) data.roughness = this.roughness;\n      if (this.metalness !== undefined) data.metalness = this.metalness;\n      if (this.sheen && this.sheen.isColor) data.sheen = this.sheen.getHex();\n      if (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n      if (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n      if (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n      if (this.shininess !== undefined) data.shininess = this.shininess;\n      if (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n      if (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\n\n      if (this.clearcoatMap && this.clearcoatMap.isTexture) {\n        data.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n      }\n\n      if (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n        data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n      }\n\n      if (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n        data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n        data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n      }\n\n      if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n      if (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\n      if (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n      if (this.lightMap && this.lightMap.isTexture) data.lightMap = this.lightMap.toJSON(meta).uuid;\n\n      if (this.aoMap && this.aoMap.isTexture) {\n        data.aoMap = this.aoMap.toJSON(meta).uuid;\n        data.aoMapIntensity = this.aoMapIntensity;\n      }\n\n      if (this.bumpMap && this.bumpMap.isTexture) {\n        data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n        data.bumpScale = this.bumpScale;\n      }\n\n      if (this.normalMap && this.normalMap.isTexture) {\n        data.normalMap = this.normalMap.toJSON(meta).uuid;\n        data.normalMapType = this.normalMapType;\n        data.normalScale = this.normalScale.toArray();\n      }\n\n      if (this.displacementMap && this.displacementMap.isTexture) {\n        data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n        data.displacementScale = this.displacementScale;\n        data.displacementBias = this.displacementBias;\n      }\n\n      if (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n      if (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n      if (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n      if (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n      if (this.envMap && this.envMap.isTexture) {\n        data.envMap = this.envMap.toJSON(meta).uuid;\n        data.reflectivity = this.reflectivity; // Scale behind envMap\n\n        data.refractionRatio = this.refractionRatio;\n        if (this.combine !== undefined) data.combine = this.combine;\n        if (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n      }\n\n      if (this.gradientMap && this.gradientMap.isTexture) {\n        data.gradientMap = this.gradientMap.toJSON(meta).uuid;\n      }\n\n      if (this.size !== undefined) data.size = this.size;\n      if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n      if (this.blending !== NormalBlending) data.blending = this.blending;\n      if (this.flatShading === true) data.flatShading = this.flatShading;\n      if (this.side !== FrontSide) data.side = this.side;\n      if (this.vertexColors) data.vertexColors = true;\n      if (this.opacity < 1) data.opacity = this.opacity;\n      if (this.transparent === true) data.transparent = this.transparent;\n      data.depthFunc = this.depthFunc;\n      data.depthTest = this.depthTest;\n      data.depthWrite = this.depthWrite;\n      data.stencilWrite = this.stencilWrite;\n      data.stencilWriteMask = this.stencilWriteMask;\n      data.stencilFunc = this.stencilFunc;\n      data.stencilRef = this.stencilRef;\n      data.stencilFuncMask = this.stencilFuncMask;\n      data.stencilFail = this.stencilFail;\n      data.stencilZFail = this.stencilZFail;\n      data.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\n\n      if (this.rotation && this.rotation !== 0) data.rotation = this.rotation;\n      if (this.polygonOffset === true) data.polygonOffset = true;\n      if (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n      if (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n      if (this.linewidth && this.linewidth !== 1) data.linewidth = this.linewidth;\n      if (this.dashSize !== undefined) data.dashSize = this.dashSize;\n      if (this.gapSize !== undefined) data.gapSize = this.gapSize;\n      if (this.scale !== undefined) data.scale = this.scale;\n      if (this.dithering === true) data.dithering = true;\n      if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n      if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n      if (this.wireframe === true) data.wireframe = this.wireframe;\n      if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n      if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n      if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n      if (this.morphTargets === true) data.morphTargets = true;\n      if (this.morphNormals === true) data.morphNormals = true;\n      if (this.skinning === true) data.skinning = true;\n      if (this.visible === false) data.visible = false;\n      if (this.toneMapped === false) data.toneMapped = false;\n      if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n      function extractFromCache(cache) {\n        var values = [];\n\n        for (var key in cache) {\n          var _data = cache[key];\n          delete _data.metadata;\n          values.push(_data);\n        }\n\n        return values;\n      }\n\n      if (isRoot) {\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n        if (textures.length > 0) data.textures = textures;\n        if (images.length > 0) data.images = images;\n      }\n\n      return data;\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(source) {\n      this.name = source.name;\n      this.fog = source.fog;\n      this.blending = source.blending;\n      this.side = source.side;\n      this.flatShading = source.flatShading;\n      this.vertexColors = source.vertexColors;\n      this.opacity = source.opacity;\n      this.transparent = source.transparent;\n      this.blendSrc = source.blendSrc;\n      this.blendDst = source.blendDst;\n      this.blendEquation = source.blendEquation;\n      this.blendSrcAlpha = source.blendSrcAlpha;\n      this.blendDstAlpha = source.blendDstAlpha;\n      this.blendEquationAlpha = source.blendEquationAlpha;\n      this.depthFunc = source.depthFunc;\n      this.depthTest = source.depthTest;\n      this.depthWrite = source.depthWrite;\n      this.stencilWriteMask = source.stencilWriteMask;\n      this.stencilFunc = source.stencilFunc;\n      this.stencilRef = source.stencilRef;\n      this.stencilFuncMask = source.stencilFuncMask;\n      this.stencilFail = source.stencilFail;\n      this.stencilZFail = source.stencilZFail;\n      this.stencilZPass = source.stencilZPass;\n      this.stencilWrite = source.stencilWrite;\n      var srcPlanes = source.clippingPlanes;\n      var dstPlanes = null;\n\n      if (srcPlanes !== null) {\n        var n = srcPlanes.length;\n        dstPlanes = new Array(n);\n\n        for (var i = 0; i !== n; ++i) {\n          dstPlanes[i] = srcPlanes[i].clone();\n        }\n      }\n\n      this.clippingPlanes = dstPlanes;\n      this.clipIntersection = source.clipIntersection;\n      this.clipShadows = source.clipShadows;\n      this.shadowSide = source.shadowSide;\n      this.colorWrite = source.colorWrite;\n      this.precision = source.precision;\n      this.polygonOffset = source.polygonOffset;\n      this.polygonOffsetFactor = source.polygonOffsetFactor;\n      this.polygonOffsetUnits = source.polygonOffsetUnits;\n      this.dithering = source.dithering;\n      this.alphaTest = source.alphaTest;\n      this.premultipliedAlpha = source.premultipliedAlpha;\n      this.visible = source.visible;\n      this.toneMapped = source.toneMapped;\n      this.userData = JSON.parse(JSON.stringify(source.userData));\n      return this;\n    },\n    dispose: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  Object.defineProperty(Material.prototype, 'needsUpdate', {\n    set: function set(value) {\n      if (value === true) this.version++;\n    }\n  });\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\topacity: <float>,\n   *\tmap: new THREE.Texture( <Image> ),\n   *\n   *\tlightMap: new THREE.Texture( <Image> ),\n   *\tlightMapIntensity: <float>\n   *\n   *\taoMap: new THREE.Texture( <Image> ),\n   *\taoMapIntensity: <float>\n   *\n   *\tspecularMap: new THREE.Texture( <Image> ),\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *\tcombine: THREE.Multiply,\n   *\treflectivity: <float>,\n   *\trefractionRatio: <float>,\n   *\n   *\tdepthTest: <bool>,\n   *\tdepthWrite: <bool>,\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>,\n   *\n   *\tskinning: <bool>,\n   *\tmorphTargets: <bool>\n   * }\n   */\n\n  function MeshBasicMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshBasicMaterial';\n    this.color = new Color(0xffffff); // emissive\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.setValues(parameters);\n  }\n\n  MeshBasicMaterial.prototype = Object.create(Material.prototype);\n  MeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n  MeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n  MeshBasicMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    return this;\n  };\n\n  var _vector$3 = new Vector3();\n\n  var _vector2$1 = new Vector2();\n\n  function BufferAttribute(array, itemSize, normalized) {\n    if (Array.isArray(array)) {\n      throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n    }\n\n    this.name = '';\n    this.array = array;\n    this.itemSize = itemSize;\n    this.count = array !== undefined ? array.length / itemSize : 0;\n    this.normalized = normalized === true;\n    this.usage = StaticDrawUsage;\n    this.updateRange = {\n      offset: 0,\n      count: -1\n    };\n    this.version = 0;\n  }\n\n  Object.defineProperty(BufferAttribute.prototype, 'needsUpdate', {\n    set: function set(value) {\n      if (value === true) this.version++;\n    }\n  });\n  Object.assign(BufferAttribute.prototype, {\n    isBufferAttribute: true,\n    onUploadCallback: function onUploadCallback() {},\n    setUsage: function setUsage(value) {\n      this.usage = value;\n      return this;\n    },\n    copy: function copy(source) {\n      this.name = source.name;\n      this.array = new source.array.constructor(source.array);\n      this.itemSize = source.itemSize;\n      this.count = source.count;\n      this.normalized = source.normalized;\n      this.usage = source.usage;\n      return this;\n    },\n    copyAt: function copyAt(index1, attribute, index2) {\n      index1 *= this.itemSize;\n      index2 *= attribute.itemSize;\n\n      for (var i = 0, l = this.itemSize; i < l; i++) {\n        this.array[index1 + i] = attribute.array[index2 + i];\n      }\n\n      return this;\n    },\n    copyArray: function copyArray(array) {\n      this.array.set(array);\n      return this;\n    },\n    copyColorsArray: function copyColorsArray(colors) {\n      var array = this.array;\n      var offset = 0;\n\n      for (var i = 0, l = colors.length; i < l; i++) {\n        var color = colors[i];\n\n        if (color === undefined) {\n          console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n          color = new Color();\n        }\n\n        array[offset++] = color.r;\n        array[offset++] = color.g;\n        array[offset++] = color.b;\n      }\n\n      return this;\n    },\n    copyVector2sArray: function copyVector2sArray(vectors) {\n      var array = this.array;\n      var offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n          vector = new Vector2();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n      }\n\n      return this;\n    },\n    copyVector3sArray: function copyVector3sArray(vectors) {\n      var array = this.array;\n      var offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n          vector = new Vector3();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n        array[offset++] = vector.z;\n      }\n\n      return this;\n    },\n    copyVector4sArray: function copyVector4sArray(vectors) {\n      var array = this.array;\n      var offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n          vector = new Vector4();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n        array[offset++] = vector.z;\n        array[offset++] = vector.w;\n      }\n\n      return this;\n    },\n    applyMatrix3: function applyMatrix3(m) {\n      if (this.itemSize === 2) {\n        for (var i = 0, l = this.count; i < l; i++) {\n          _vector2$1.fromBufferAttribute(this, i);\n\n          _vector2$1.applyMatrix3(m);\n\n          this.setXY(i, _vector2$1.x, _vector2$1.y);\n        }\n      } else if (this.itemSize === 3) {\n        for (var _i = 0, _l = this.count; _i < _l; _i++) {\n          _vector$3.fromBufferAttribute(this, _i);\n\n          _vector$3.applyMatrix3(m);\n\n          this.setXYZ(_i, _vector$3.x, _vector$3.y, _vector$3.z);\n        }\n      }\n\n      return this;\n    },\n    applyMatrix4: function applyMatrix4(m) {\n      for (var i = 0, l = this.count; i < l; i++) {\n        _vector$3.x = this.getX(i);\n        _vector$3.y = this.getY(i);\n        _vector$3.z = this.getZ(i);\n\n        _vector$3.applyMatrix4(m);\n\n        this.setXYZ(i, _vector$3.x, _vector$3.y, _vector$3.z);\n      }\n\n      return this;\n    },\n    applyNormalMatrix: function applyNormalMatrix(m) {\n      for (var i = 0, l = this.count; i < l; i++) {\n        _vector$3.x = this.getX(i);\n        _vector$3.y = this.getY(i);\n        _vector$3.z = this.getZ(i);\n\n        _vector$3.applyNormalMatrix(m);\n\n        this.setXYZ(i, _vector$3.x, _vector$3.y, _vector$3.z);\n      }\n\n      return this;\n    },\n    transformDirection: function transformDirection(m) {\n      for (var i = 0, l = this.count; i < l; i++) {\n        _vector$3.x = this.getX(i);\n        _vector$3.y = this.getY(i);\n        _vector$3.z = this.getZ(i);\n\n        _vector$3.transformDirection(m);\n\n        this.setXYZ(i, _vector$3.x, _vector$3.y, _vector$3.z);\n      }\n\n      return this;\n    },\n    set: function set(value, offset) {\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      this.array.set(value, offset);\n      return this;\n    },\n    getX: function getX(index) {\n      return this.array[index * this.itemSize];\n    },\n    setX: function setX(index, x) {\n      this.array[index * this.itemSize] = x;\n      return this;\n    },\n    getY: function getY(index) {\n      return this.array[index * this.itemSize + 1];\n    },\n    setY: function setY(index, y) {\n      this.array[index * this.itemSize + 1] = y;\n      return this;\n    },\n    getZ: function getZ(index) {\n      return this.array[index * this.itemSize + 2];\n    },\n    setZ: function setZ(index, z) {\n      this.array[index * this.itemSize + 2] = z;\n      return this;\n    },\n    getW: function getW(index) {\n      return this.array[index * this.itemSize + 3];\n    },\n    setW: function setW(index, w) {\n      this.array[index * this.itemSize + 3] = w;\n      return this;\n    },\n    setXY: function setXY(index, x, y) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      return this;\n    },\n    setXYZ: function setXYZ(index, x, y, z) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      this.array[index + 2] = z;\n      return this;\n    },\n    setXYZW: function setXYZW(index, x, y, z, w) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      this.array[index + 2] = z;\n      this.array[index + 3] = w;\n      return this;\n    },\n    onUpload: function onUpload(callback) {\n      this.onUploadCallback = callback;\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor(this.array, this.itemSize).copy(this);\n    },\n    toJSON: function toJSON() {\n      return {\n        itemSize: this.itemSize,\n        type: this.array.constructor.name,\n        array: Array.prototype.slice.call(this.array),\n        normalized: this.normalized\n      };\n    }\n  }); //\n\n  function Int8BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Int8Array(array), itemSize, normalized);\n  }\n\n  Int8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Int8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n  function Uint8BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint8Array(array), itemSize, normalized);\n  }\n\n  Uint8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n  function Uint8ClampedBufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint8ClampedArray(array), itemSize, normalized);\n  }\n\n  Uint8ClampedBufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n  function Int16BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Int16Array(array), itemSize, normalized);\n  }\n\n  Int16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Int16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n  function Uint16BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint16Array(array), itemSize, normalized);\n  }\n\n  Uint16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n  function Int32BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Int32Array(array), itemSize, normalized);\n  }\n\n  Int32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Int32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n  function Uint32BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint32Array(array), itemSize, normalized);\n  }\n\n  Uint32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n  function Float16BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint16Array(array), itemSize, normalized);\n  }\n\n  Float16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Float16BufferAttribute.prototype.constructor = Float16BufferAttribute;\n  Float16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\n  function Float32BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Float32Array(array), itemSize, normalized);\n  }\n\n  Float32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Float32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n  function Float64BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Float64Array(array), itemSize, normalized);\n  }\n\n  Float64BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Float64BufferAttribute.prototype.constructor = Float64BufferAttribute; //\n\n  function arrayMax(array) {\n    if (array.length === 0) return -Infinity;\n    var max = array[0];\n\n    for (var i = 1, l = array.length; i < l; ++i) {\n      if (array[i] > max) max = array[i];\n    }\n\n    return max;\n  }\n\n  var TYPED_ARRAYS = {\n    Int8Array: Int8Array,\n    Uint8Array: Uint8Array,\n    // Workaround for IE11 pre KB2929437. See #11440\n    Uint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n    Int16Array: Int16Array,\n    Uint16Array: Uint16Array,\n    Int32Array: Int32Array,\n    Uint32Array: Uint32Array,\n    Float32Array: Float32Array,\n    Float64Array: Float64Array\n  };\n\n  function getTypedArray(type, buffer) {\n    return new TYPED_ARRAYS[type](buffer);\n  }\n\n  var _id = 0;\n\n  var _m1$2 = new Matrix4();\n\n  var _obj = new Object3D();\n\n  var _offset = new Vector3();\n\n  var _box$2 = new Box3();\n\n  var _boxMorphTargets = new Box3();\n\n  var _vector$4 = new Vector3();\n\n  function BufferGeometry() {\n    Object.defineProperty(this, 'id', {\n      value: _id++\n    });\n    this.uuid = MathUtils.generateUUID();\n    this.name = '';\n    this.type = 'BufferGeometry';\n    this.index = null;\n    this.attributes = {};\n    this.morphAttributes = {};\n    this.morphTargetsRelative = false;\n    this.groups = [];\n    this.boundingBox = null;\n    this.boundingSphere = null;\n    this.drawRange = {\n      start: 0,\n      count: Infinity\n    };\n    this.userData = {};\n  }\n\n  BufferGeometry.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: BufferGeometry,\n    isBufferGeometry: true,\n    getIndex: function getIndex() {\n      return this.index;\n    },\n    setIndex: function setIndex(index) {\n      if (Array.isArray(index)) {\n        this.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n      } else {\n        this.index = index;\n      }\n\n      return this;\n    },\n    getAttribute: function getAttribute(name) {\n      return this.attributes[name];\n    },\n    setAttribute: function setAttribute(name, attribute) {\n      this.attributes[name] = attribute;\n      return this;\n    },\n    deleteAttribute: function deleteAttribute(name) {\n      delete this.attributes[name];\n      return this;\n    },\n    hasAttribute: function hasAttribute(name) {\n      return this.attributes[name] !== undefined;\n    },\n    addGroup: function addGroup(start, count, materialIndex) {\n      if (materialIndex === void 0) {\n        materialIndex = 0;\n      }\n\n      this.groups.push({\n        start: start,\n        count: count,\n        materialIndex: materialIndex\n      });\n    },\n    clearGroups: function clearGroups() {\n      this.groups = [];\n    },\n    setDrawRange: function setDrawRange(start, count) {\n      this.drawRange.start = start;\n      this.drawRange.count = count;\n    },\n    applyMatrix4: function applyMatrix4(matrix) {\n      var position = this.attributes.position;\n\n      if (position !== undefined) {\n        position.applyMatrix4(matrix);\n        position.needsUpdate = true;\n      }\n\n      var normal = this.attributes.normal;\n\n      if (normal !== undefined) {\n        var normalMatrix = new Matrix3().getNormalMatrix(matrix);\n        normal.applyNormalMatrix(normalMatrix);\n        normal.needsUpdate = true;\n      }\n\n      var tangent = this.attributes.tangent;\n\n      if (tangent !== undefined) {\n        tangent.transformDirection(matrix);\n        tangent.needsUpdate = true;\n      }\n\n      if (this.boundingBox !== null) {\n        this.computeBoundingBox();\n      }\n\n      if (this.boundingSphere !== null) {\n        this.computeBoundingSphere();\n      }\n\n      return this;\n    },\n    rotateX: function rotateX(angle) {\n      // rotate geometry around world x-axis\n      _m1$2.makeRotationX(angle);\n\n      this.applyMatrix4(_m1$2);\n      return this;\n    },\n    rotateY: function rotateY(angle) {\n      // rotate geometry around world y-axis\n      _m1$2.makeRotationY(angle);\n\n      this.applyMatrix4(_m1$2);\n      return this;\n    },\n    rotateZ: function rotateZ(angle) {\n      // rotate geometry around world z-axis\n      _m1$2.makeRotationZ(angle);\n\n      this.applyMatrix4(_m1$2);\n      return this;\n    },\n    translate: function translate(x, y, z) {\n      // translate geometry\n      _m1$2.makeTranslation(x, y, z);\n\n      this.applyMatrix4(_m1$2);\n      return this;\n    },\n    scale: function scale(x, y, z) {\n      // scale geometry\n      _m1$2.makeScale(x, y, z);\n\n      this.applyMatrix4(_m1$2);\n      return this;\n    },\n    lookAt: function lookAt(vector) {\n      _obj.lookAt(vector);\n\n      _obj.updateMatrix();\n\n      this.applyMatrix4(_obj.matrix);\n      return this;\n    },\n    center: function center() {\n      this.computeBoundingBox();\n      this.boundingBox.getCenter(_offset).negate();\n      this.translate(_offset.x, _offset.y, _offset.z);\n      return this;\n    },\n    setFromPoints: function setFromPoints(points) {\n      var position = [];\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        var point = points[i];\n        position.push(point.x, point.y, point.z || 0);\n      }\n\n      this.setAttribute('position', new Float32BufferAttribute(position, 3));\n      return this;\n    },\n    computeBoundingBox: function computeBoundingBox() {\n      if (this.boundingBox === null) {\n        this.boundingBox = new Box3();\n      }\n\n      var position = this.attributes.position;\n      var morphAttributesPosition = this.morphAttributes.position;\n\n      if (position && position.isGLBufferAttribute) {\n        console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n        this.boundingBox.set(new Vector3(-Infinity, -Infinity, -Infinity), new Vector3(+Infinity, +Infinity, +Infinity));\n        return;\n      }\n\n      if (position !== undefined) {\n        this.boundingBox.setFromBufferAttribute(position); // process morph attributes if present\n\n        if (morphAttributesPosition) {\n          for (var i = 0, il = morphAttributesPosition.length; i < il; i++) {\n            var morphAttribute = morphAttributesPosition[i];\n\n            _box$2.setFromBufferAttribute(morphAttribute);\n\n            if (this.morphTargetsRelative) {\n              _vector$4.addVectors(this.boundingBox.min, _box$2.min);\n\n              this.boundingBox.expandByPoint(_vector$4);\n\n              _vector$4.addVectors(this.boundingBox.max, _box$2.max);\n\n              this.boundingBox.expandByPoint(_vector$4);\n            } else {\n              this.boundingBox.expandByPoint(_box$2.min);\n              this.boundingBox.expandByPoint(_box$2.max);\n            }\n          }\n        }\n      } else {\n        this.boundingBox.makeEmpty();\n      }\n\n      if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n        console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n      }\n    },\n    computeBoundingSphere: function computeBoundingSphere() {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new Sphere();\n      }\n\n      var position = this.attributes.position;\n      var morphAttributesPosition = this.morphAttributes.position;\n\n      if (position && position.isGLBufferAttribute) {\n        console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n        this.boundingSphere.set(new Vector3(), Infinity);\n        return;\n      }\n\n      if (position) {\n        // first, find the center of the bounding sphere\n        var center = this.boundingSphere.center;\n\n        _box$2.setFromBufferAttribute(position); // process morph attributes if present\n\n\n        if (morphAttributesPosition) {\n          for (var i = 0, il = morphAttributesPosition.length; i < il; i++) {\n            var morphAttribute = morphAttributesPosition[i];\n\n            _boxMorphTargets.setFromBufferAttribute(morphAttribute);\n\n            if (this.morphTargetsRelative) {\n              _vector$4.addVectors(_box$2.min, _boxMorphTargets.min);\n\n              _box$2.expandByPoint(_vector$4);\n\n              _vector$4.addVectors(_box$2.max, _boxMorphTargets.max);\n\n              _box$2.expandByPoint(_vector$4);\n            } else {\n              _box$2.expandByPoint(_boxMorphTargets.min);\n\n              _box$2.expandByPoint(_boxMorphTargets.max);\n            }\n          }\n        }\n\n        _box$2.getCenter(center); // second, try to find a boundingSphere with a radius smaller than the\n        // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\n        var maxRadiusSq = 0;\n\n        for (var _i = 0, _il = position.count; _i < _il; _i++) {\n          _vector$4.fromBufferAttribute(position, _i);\n\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$4));\n        } // process morph attributes if present\n\n\n        if (morphAttributesPosition) {\n          for (var _i2 = 0, _il2 = morphAttributesPosition.length; _i2 < _il2; _i2++) {\n            var _morphAttribute = morphAttributesPosition[_i2];\n            var morphTargetsRelative = this.morphTargetsRelative;\n\n            for (var j = 0, jl = _morphAttribute.count; j < jl; j++) {\n              _vector$4.fromBufferAttribute(_morphAttribute, j);\n\n              if (morphTargetsRelative) {\n                _offset.fromBufferAttribute(position, j);\n\n                _vector$4.add(_offset);\n              }\n\n              maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$4));\n            }\n          }\n        }\n\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n        if (isNaN(this.boundingSphere.radius)) {\n          console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n        }\n      }\n    },\n    computeFaceNormals: function computeFaceNormals() {// backwards compatibility\n    },\n    computeTangents: function computeTangents() {\n      var index = this.index;\n      var attributes = this.attributes; // based on http://www.terathon.com/code/tangent.html\n      // (per vertex tangents)\n\n      if (index === null || attributes.position === undefined || attributes.normal === undefined || attributes.uv === undefined) {\n        console.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');\n        return;\n      }\n\n      var indices = index.array;\n      var positions = attributes.position.array;\n      var normals = attributes.normal.array;\n      var uvs = attributes.uv.array;\n      var nVertices = positions.length / 3;\n\n      if (attributes.tangent === undefined) {\n        this.setAttribute('tangent', new BufferAttribute(new Float32Array(4 * nVertices), 4));\n      }\n\n      var tangents = attributes.tangent.array;\n      var tan1 = [],\n          tan2 = [];\n\n      for (var i = 0; i < nVertices; i++) {\n        tan1[i] = new Vector3();\n        tan2[i] = new Vector3();\n      }\n\n      var vA = new Vector3(),\n          vB = new Vector3(),\n          vC = new Vector3(),\n          uvA = new Vector2(),\n          uvB = new Vector2(),\n          uvC = new Vector2(),\n          sdir = new Vector3(),\n          tdir = new Vector3();\n\n      function handleTriangle(a, b, c) {\n        vA.fromArray(positions, a * 3);\n        vB.fromArray(positions, b * 3);\n        vC.fromArray(positions, c * 3);\n        uvA.fromArray(uvs, a * 2);\n        uvB.fromArray(uvs, b * 2);\n        uvC.fromArray(uvs, c * 2);\n        vB.sub(vA);\n        vC.sub(vA);\n        uvB.sub(uvA);\n        uvC.sub(uvA);\n        var r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y); // silently ignore degenerate uv triangles having coincident or colinear vertices\n\n        if (!isFinite(r)) return;\n        sdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC, -uvB.y).multiplyScalar(r);\n        tdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB, -uvC.x).multiplyScalar(r);\n        tan1[a].add(sdir);\n        tan1[b].add(sdir);\n        tan1[c].add(sdir);\n        tan2[a].add(tdir);\n        tan2[b].add(tdir);\n        tan2[c].add(tdir);\n      }\n\n      var groups = this.groups;\n\n      if (groups.length === 0) {\n        groups = [{\n          start: 0,\n          count: indices.length\n        }];\n      }\n\n      for (var _i3 = 0, il = groups.length; _i3 < il; ++_i3) {\n        var group = groups[_i3];\n        var start = group.start;\n        var count = group.count;\n\n        for (var j = start, jl = start + count; j < jl; j += 3) {\n          handleTriangle(indices[j + 0], indices[j + 1], indices[j + 2]);\n        }\n      }\n\n      var tmp = new Vector3(),\n          tmp2 = new Vector3();\n      var n = new Vector3(),\n          n2 = new Vector3();\n\n      function handleVertex(v) {\n        n.fromArray(normals, v * 3);\n        n2.copy(n);\n        var t = tan1[v]; // Gram-Schmidt orthogonalize\n\n        tmp.copy(t);\n        tmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\n\n        tmp2.crossVectors(n2, t);\n        var test = tmp2.dot(tan2[v]);\n        var w = test < 0.0 ? -1.0 : 1.0;\n        tangents[v * 4] = tmp.x;\n        tangents[v * 4 + 1] = tmp.y;\n        tangents[v * 4 + 2] = tmp.z;\n        tangents[v * 4 + 3] = w;\n      }\n\n      for (var _i4 = 0, _il3 = groups.length; _i4 < _il3; ++_i4) {\n        var _group = groups[_i4];\n        var _start = _group.start;\n        var _count = _group.count;\n\n        for (var _j = _start, _jl = _start + _count; _j < _jl; _j += 3) {\n          handleVertex(indices[_j + 0]);\n          handleVertex(indices[_j + 1]);\n          handleVertex(indices[_j + 2]);\n        }\n      }\n    },\n    computeVertexNormals: function computeVertexNormals() {\n      var index = this.index;\n      var positionAttribute = this.getAttribute('position');\n\n      if (positionAttribute !== undefined) {\n        var normalAttribute = this.getAttribute('normal');\n\n        if (normalAttribute === undefined) {\n          normalAttribute = new BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);\n          this.setAttribute('normal', normalAttribute);\n        } else {\n          // reset existing normals to zero\n          for (var i = 0, il = normalAttribute.count; i < il; i++) {\n            normalAttribute.setXYZ(i, 0, 0, 0);\n          }\n        }\n\n        var pA = new Vector3(),\n            pB = new Vector3(),\n            pC = new Vector3();\n        var nA = new Vector3(),\n            nB = new Vector3(),\n            nC = new Vector3();\n        var cb = new Vector3(),\n            ab = new Vector3(); // indexed elements\n\n        if (index) {\n          for (var _i5 = 0, _il4 = index.count; _i5 < _il4; _i5 += 3) {\n            var vA = index.getX(_i5 + 0);\n            var vB = index.getX(_i5 + 1);\n            var vC = index.getX(_i5 + 2);\n            pA.fromBufferAttribute(positionAttribute, vA);\n            pB.fromBufferAttribute(positionAttribute, vB);\n            pC.fromBufferAttribute(positionAttribute, vC);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            nA.fromBufferAttribute(normalAttribute, vA);\n            nB.fromBufferAttribute(normalAttribute, vB);\n            nC.fromBufferAttribute(normalAttribute, vC);\n            nA.add(cb);\n            nB.add(cb);\n            nC.add(cb);\n            normalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\n            normalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\n            normalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\n          }\n        } else {\n          // non-indexed elements (unconnected triangle soup)\n          for (var _i6 = 0, _il5 = positionAttribute.count; _i6 < _il5; _i6 += 3) {\n            pA.fromBufferAttribute(positionAttribute, _i6 + 0);\n            pB.fromBufferAttribute(positionAttribute, _i6 + 1);\n            pC.fromBufferAttribute(positionAttribute, _i6 + 2);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normalAttribute.setXYZ(_i6 + 0, cb.x, cb.y, cb.z);\n            normalAttribute.setXYZ(_i6 + 1, cb.x, cb.y, cb.z);\n            normalAttribute.setXYZ(_i6 + 2, cb.x, cb.y, cb.z);\n          }\n        }\n\n        this.normalizeNormals();\n        normalAttribute.needsUpdate = true;\n      }\n    },\n    merge: function merge(geometry, offset) {\n      if (!(geometry && geometry.isBufferGeometry)) {\n        console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n        return;\n      }\n\n      if (offset === undefined) {\n        offset = 0;\n        console.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\n      }\n\n      var attributes = this.attributes;\n\n      for (var key in attributes) {\n        if (geometry.attributes[key] === undefined) continue;\n        var attribute1 = attributes[key];\n        var attributeArray1 = attribute1.array;\n        var attribute2 = geometry.attributes[key];\n        var attributeArray2 = attribute2.array;\n        var attributeOffset = attribute2.itemSize * offset;\n        var length = Math.min(attributeArray2.length, attributeArray1.length - attributeOffset);\n\n        for (var i = 0, j = attributeOffset; i < length; i++, j++) {\n          attributeArray1[j] = attributeArray2[i];\n        }\n      }\n\n      return this;\n    },\n    normalizeNormals: function normalizeNormals() {\n      var normals = this.attributes.normal;\n\n      for (var i = 0, il = normals.count; i < il; i++) {\n        _vector$4.fromBufferAttribute(normals, i);\n\n        _vector$4.normalize();\n\n        normals.setXYZ(i, _vector$4.x, _vector$4.y, _vector$4.z);\n      }\n    },\n    toNonIndexed: function toNonIndexed() {\n      function convertBufferAttribute(attribute, indices) {\n        var array = attribute.array;\n        var itemSize = attribute.itemSize;\n        var normalized = attribute.normalized;\n        var array2 = new array.constructor(indices.length * itemSize);\n        var index = 0,\n            index2 = 0;\n\n        for (var i = 0, l = indices.length; i < l; i++) {\n          index = indices[i] * itemSize;\n\n          for (var j = 0; j < itemSize; j++) {\n            array2[index2++] = array[index++];\n          }\n        }\n\n        return new BufferAttribute(array2, itemSize, normalized);\n      } //\n\n\n      if (this.index === null) {\n        console.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');\n        return this;\n      }\n\n      var geometry2 = new BufferGeometry();\n      var indices = this.index.array;\n      var attributes = this.attributes; // attributes\n\n      for (var name in attributes) {\n        var attribute = attributes[name];\n        var newAttribute = convertBufferAttribute(attribute, indices);\n        geometry2.setAttribute(name, newAttribute);\n      } // morph attributes\n\n\n      var morphAttributes = this.morphAttributes;\n\n      for (var _name in morphAttributes) {\n        var morphArray = [];\n        var morphAttribute = morphAttributes[_name]; // morphAttribute: array of Float32BufferAttributes\n\n        for (var i = 0, il = morphAttribute.length; i < il; i++) {\n          var _attribute = morphAttribute[i];\n\n          var _newAttribute = convertBufferAttribute(_attribute, indices);\n\n          morphArray.push(_newAttribute);\n        }\n\n        geometry2.morphAttributes[_name] = morphArray;\n      }\n\n      geometry2.morphTargetsRelative = this.morphTargetsRelative; // groups\n\n      var groups = this.groups;\n\n      for (var _i7 = 0, l = groups.length; _i7 < l; _i7++) {\n        var group = groups[_i7];\n        geometry2.addGroup(group.start, group.count, group.materialIndex);\n      }\n\n      return geometry2;\n    },\n    toJSON: function toJSON() {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'BufferGeometry',\n          generator: 'BufferGeometry.toJSON'\n        }\n      }; // standard BufferGeometry serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n      if (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n      if (this.parameters !== undefined) {\n        var parameters = this.parameters;\n\n        for (var key in parameters) {\n          if (parameters[key] !== undefined) data[key] = parameters[key];\n        }\n\n        return data;\n      }\n\n      data.data = {\n        attributes: {}\n      };\n      var index = this.index;\n\n      if (index !== null) {\n        data.data.index = {\n          type: index.array.constructor.name,\n          array: Array.prototype.slice.call(index.array)\n        };\n      }\n\n      var attributes = this.attributes;\n\n      for (var _key in attributes) {\n        var attribute = attributes[_key];\n        var attributeData = attribute.toJSON(data.data);\n        if (attribute.name !== '') attributeData.name = attribute.name;\n        data.data.attributes[_key] = attributeData;\n      }\n\n      var morphAttributes = {};\n      var hasMorphAttributes = false;\n\n      for (var _key2 in this.morphAttributes) {\n        var attributeArray = this.morphAttributes[_key2];\n        var array = [];\n\n        for (var i = 0, il = attributeArray.length; i < il; i++) {\n          var _attribute2 = attributeArray[i];\n\n          var _attributeData = _attribute2.toJSON(data.data);\n\n          if (_attribute2.name !== '') _attributeData.name = _attribute2.name;\n          array.push(_attributeData);\n        }\n\n        if (array.length > 0) {\n          morphAttributes[_key2] = array;\n          hasMorphAttributes = true;\n        }\n      }\n\n      if (hasMorphAttributes) {\n        data.data.morphAttributes = morphAttributes;\n        data.data.morphTargetsRelative = this.morphTargetsRelative;\n      }\n\n      var groups = this.groups;\n\n      if (groups.length > 0) {\n        data.data.groups = JSON.parse(JSON.stringify(groups));\n      }\n\n      var boundingSphere = this.boundingSphere;\n\n      if (boundingSphere !== null) {\n        data.data.boundingSphere = {\n          center: boundingSphere.center.toArray(),\n          radius: boundingSphere.radius\n        };\n      }\n\n      return data;\n    },\n    clone: function clone() {\n      /*\n       // Handle primitives\n      \t const parameters = this.parameters;\n      \t if ( parameters !== undefined ) {\n      \t const values = [];\n      \t for ( const key in parameters ) {\n      \t values.push( parameters[ key ] );\n      \t }\n      \t const geometry = Object.create( this.constructor.prototype );\n       this.constructor.apply( geometry, values );\n       return geometry;\n      \t }\n      \t return new this.constructor().copy( this );\n       */\n      return new BufferGeometry().copy(this);\n    },\n    copy: function copy(source) {\n      // reset\n      this.index = null;\n      this.attributes = {};\n      this.morphAttributes = {};\n      this.groups = [];\n      this.boundingBox = null;\n      this.boundingSphere = null; // used for storing cloned, shared data\n\n      var data = {}; // name\n\n      this.name = source.name; // index\n\n      var index = source.index;\n\n      if (index !== null) {\n        this.setIndex(index.clone(data));\n      } // attributes\n\n\n      var attributes = source.attributes;\n\n      for (var name in attributes) {\n        var attribute = attributes[name];\n        this.setAttribute(name, attribute.clone(data));\n      } // morph attributes\n\n\n      var morphAttributes = source.morphAttributes;\n\n      for (var _name2 in morphAttributes) {\n        var array = [];\n        var morphAttribute = morphAttributes[_name2]; // morphAttribute: array of Float32BufferAttributes\n\n        for (var i = 0, l = morphAttribute.length; i < l; i++) {\n          array.push(morphAttribute[i].clone(data));\n        }\n\n        this.morphAttributes[_name2] = array;\n      }\n\n      this.morphTargetsRelative = source.morphTargetsRelative; // groups\n\n      var groups = source.groups;\n\n      for (var _i8 = 0, _l = groups.length; _i8 < _l; _i8++) {\n        var group = groups[_i8];\n        this.addGroup(group.start, group.count, group.materialIndex);\n      } // bounding box\n\n\n      var boundingBox = source.boundingBox;\n\n      if (boundingBox !== null) {\n        this.boundingBox = boundingBox.clone();\n      } // bounding sphere\n\n\n      var boundingSphere = source.boundingSphere;\n\n      if (boundingSphere !== null) {\n        this.boundingSphere = boundingSphere.clone();\n      } // draw range\n\n\n      this.drawRange.start = source.drawRange.start;\n      this.drawRange.count = source.drawRange.count; // user data\n\n      this.userData = source.userData;\n      return this;\n    },\n    dispose: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n\n  var _inverseMatrix = new Matrix4();\n\n  var _ray = new Ray();\n\n  var _sphere = new Sphere();\n\n  var _vA = new Vector3();\n\n  var _vB = new Vector3();\n\n  var _vC = new Vector3();\n\n  var _tempA = new Vector3();\n\n  var _tempB = new Vector3();\n\n  var _tempC = new Vector3();\n\n  var _morphA = new Vector3();\n\n  var _morphB = new Vector3();\n\n  var _morphC = new Vector3();\n\n  var _uvA = new Vector2();\n\n  var _uvB = new Vector2();\n\n  var _uvC = new Vector2();\n\n  var _intersectionPoint = new Vector3();\n\n  var _intersectionPointWorld = new Vector3();\n\n  function Mesh(geometry, material) {\n    if (geometry === void 0) {\n      geometry = new BufferGeometry();\n    }\n\n    if (material === void 0) {\n      material = new MeshBasicMaterial();\n    }\n\n    Object3D.call(this);\n    this.type = 'Mesh';\n    this.geometry = geometry;\n    this.material = material;\n    this.updateMorphTargets();\n  }\n\n  Mesh.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Mesh,\n    isMesh: true,\n    copy: function copy(source) {\n      Object3D.prototype.copy.call(this, source);\n\n      if (source.morphTargetInfluences !== undefined) {\n        this.morphTargetInfluences = source.morphTargetInfluences.slice();\n      }\n\n      if (source.morphTargetDictionary !== undefined) {\n        this.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n      }\n\n      this.material = source.material;\n      this.geometry = source.geometry;\n      return this;\n    },\n    updateMorphTargets: function updateMorphTargets() {\n      var geometry = this.geometry;\n\n      if (geometry.isBufferGeometry) {\n        var morphAttributes = geometry.morphAttributes;\n        var keys = Object.keys(morphAttributes);\n\n        if (keys.length > 0) {\n          var morphAttribute = morphAttributes[keys[0]];\n\n          if (morphAttribute !== undefined) {\n            this.morphTargetInfluences = [];\n            this.morphTargetDictionary = {};\n\n            for (var m = 0, ml = morphAttribute.length; m < ml; m++) {\n              var name = morphAttribute[m].name || String(m);\n              this.morphTargetInfluences.push(0);\n              this.morphTargetDictionary[name] = m;\n            }\n          }\n        }\n      } else {\n        var morphTargets = geometry.morphTargets;\n\n        if (morphTargets !== undefined && morphTargets.length > 0) {\n          console.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n        }\n      }\n    },\n    raycast: function raycast(raycaster, intersects) {\n      var geometry = this.geometry;\n      var material = this.material;\n      var matrixWorld = this.matrixWorld;\n      if (material === undefined) return; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n      _sphere.copy(geometry.boundingSphere);\n\n      _sphere.applyMatrix4(matrixWorld);\n\n      if (raycaster.ray.intersectsSphere(_sphere) === false) return; //\n\n      _inverseMatrix.copy(matrixWorld).invert();\n\n      _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix); // Check boundingBox before continuing\n\n\n      if (geometry.boundingBox !== null) {\n        if (_ray.intersectsBox(geometry.boundingBox) === false) return;\n      }\n\n      var intersection;\n\n      if (geometry.isBufferGeometry) {\n        var index = geometry.index;\n        var position = geometry.attributes.position;\n        var morphPosition = geometry.morphAttributes.position;\n        var morphTargetsRelative = geometry.morphTargetsRelative;\n        var uv = geometry.attributes.uv;\n        var uv2 = geometry.attributes.uv2;\n        var groups = geometry.groups;\n        var drawRange = geometry.drawRange;\n\n        if (index !== null) {\n          // indexed buffer geometry\n          if (Array.isArray(material)) {\n            for (var i = 0, il = groups.length; i < il; i++) {\n              var group = groups[i];\n              var groupMaterial = material[group.materialIndex];\n              var start = Math.max(group.start, drawRange.start);\n              var end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n              for (var j = start, jl = end; j < jl; j += 3) {\n                var a = index.getX(j);\n                var b = index.getX(j + 1);\n                var c = index.getX(j + 2);\n                intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n                if (intersection) {\n                  intersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n\n                  intersection.face.materialIndex = group.materialIndex;\n                  intersects.push(intersection);\n                }\n              }\n            }\n          } else {\n            var _start = Math.max(0, drawRange.start);\n\n            var _end = Math.min(index.count, drawRange.start + drawRange.count);\n\n            for (var _i = _start, _il = _end; _i < _il; _i += 3) {\n              var _a = index.getX(_i);\n\n              var _b = index.getX(_i + 1);\n\n              var _c = index.getX(_i + 2);\n\n              intersection = checkBufferGeometryIntersection(this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, _a, _b, _c);\n\n              if (intersection) {\n                intersection.faceIndex = Math.floor(_i / 3); // triangle number in indexed buffer semantics\n\n                intersects.push(intersection);\n              }\n            }\n          }\n        } else if (position !== undefined) {\n          // non-indexed buffer geometry\n          if (Array.isArray(material)) {\n            for (var _i2 = 0, _il2 = groups.length; _i2 < _il2; _i2++) {\n              var _group = groups[_i2];\n              var _groupMaterial = material[_group.materialIndex];\n\n              var _start2 = Math.max(_group.start, drawRange.start);\n\n              var _end2 = Math.min(_group.start + _group.count, drawRange.start + drawRange.count);\n\n              for (var _j = _start2, _jl = _end2; _j < _jl; _j += 3) {\n                var _a2 = _j;\n\n                var _b2 = _j + 1;\n\n                var _c2 = _j + 2;\n\n                intersection = checkBufferGeometryIntersection(this, _groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, _a2, _b2, _c2);\n\n                if (intersection) {\n                  intersection.faceIndex = Math.floor(_j / 3); // triangle number in non-indexed buffer semantics\n\n                  intersection.face.materialIndex = _group.materialIndex;\n                  intersects.push(intersection);\n                }\n              }\n            }\n          } else {\n            var _start3 = Math.max(0, drawRange.start);\n\n            var _end3 = Math.min(position.count, drawRange.start + drawRange.count);\n\n            for (var _i3 = _start3, _il3 = _end3; _i3 < _il3; _i3 += 3) {\n              var _a3 = _i3;\n\n              var _b3 = _i3 + 1;\n\n              var _c3 = _i3 + 2;\n\n              intersection = checkBufferGeometryIntersection(this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, _a3, _b3, _c3);\n\n              if (intersection) {\n                intersection.faceIndex = Math.floor(_i3 / 3); // triangle number in non-indexed buffer semantics\n\n                intersects.push(intersection);\n              }\n            }\n          }\n        }\n      } else if (geometry.isGeometry) {\n        console.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n      }\n    }\n  });\n\n  function checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n    var intersect;\n\n    if (material.side === BackSide) {\n      intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n    } else {\n      intersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n    }\n\n    if (intersect === null) return null;\n\n    _intersectionPointWorld.copy(point);\n\n    _intersectionPointWorld.applyMatrix4(object.matrixWorld);\n\n    var distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\n    if (distance < raycaster.near || distance > raycaster.far) return null;\n    return {\n      distance: distance,\n      point: _intersectionPointWorld.clone(),\n      object: object\n    };\n  }\n\n  function checkBufferGeometryIntersection(object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c) {\n    _vA.fromBufferAttribute(position, a);\n\n    _vB.fromBufferAttribute(position, b);\n\n    _vC.fromBufferAttribute(position, c);\n\n    var morphInfluences = object.morphTargetInfluences;\n\n    if (material.morphTargets && morphPosition && morphInfluences) {\n      _morphA.set(0, 0, 0);\n\n      _morphB.set(0, 0, 0);\n\n      _morphC.set(0, 0, 0);\n\n      for (var i = 0, il = morphPosition.length; i < il; i++) {\n        var influence = morphInfluences[i];\n        var morphAttribute = morphPosition[i];\n        if (influence === 0) continue;\n\n        _tempA.fromBufferAttribute(morphAttribute, a);\n\n        _tempB.fromBufferAttribute(morphAttribute, b);\n\n        _tempC.fromBufferAttribute(morphAttribute, c);\n\n        if (morphTargetsRelative) {\n          _morphA.addScaledVector(_tempA, influence);\n\n          _morphB.addScaledVector(_tempB, influence);\n\n          _morphC.addScaledVector(_tempC, influence);\n        } else {\n          _morphA.addScaledVector(_tempA.sub(_vA), influence);\n\n          _morphB.addScaledVector(_tempB.sub(_vB), influence);\n\n          _morphC.addScaledVector(_tempC.sub(_vC), influence);\n        }\n      }\n\n      _vA.add(_morphA);\n\n      _vB.add(_morphB);\n\n      _vC.add(_morphC);\n    }\n\n    if (object.isSkinnedMesh) {\n      object.boneTransform(a, _vA);\n      object.boneTransform(b, _vB);\n      object.boneTransform(c, _vC);\n    }\n\n    var intersection = checkIntersection(object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint);\n\n    if (intersection) {\n      if (uv) {\n        _uvA.fromBufferAttribute(uv, a);\n\n        _uvB.fromBufferAttribute(uv, b);\n\n        _uvC.fromBufferAttribute(uv, c);\n\n        intersection.uv = Triangle.getUV(_intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2());\n      }\n\n      if (uv2) {\n        _uvA.fromBufferAttribute(uv2, a);\n\n        _uvB.fromBufferAttribute(uv2, b);\n\n        _uvC.fromBufferAttribute(uv2, c);\n\n        intersection.uv2 = Triangle.getUV(_intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2());\n      }\n\n      var face = new Face3(a, b, c);\n      Triangle.getNormal(_vA, _vB, _vC, face.normal);\n      intersection.face = face;\n    }\n\n    return intersection;\n  }\n\n  var BoxGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inheritsLoose(BoxGeometry, _BufferGeometry);\n\n    function BoxGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n      var _this;\n\n      if (width === void 0) {\n        width = 1;\n      }\n\n      if (height === void 0) {\n        height = 1;\n      }\n\n      if (depth === void 0) {\n        depth = 1;\n      }\n\n      if (widthSegments === void 0) {\n        widthSegments = 1;\n      }\n\n      if (heightSegments === void 0) {\n        heightSegments = 1;\n      }\n\n      if (depthSegments === void 0) {\n        depthSegments = 1;\n      }\n\n      _this = _BufferGeometry.call(this) || this;\n      _this.type = 'BoxGeometry';\n      _this.parameters = {\n        width: width,\n        height: height,\n        depth: depth,\n        widthSegments: widthSegments,\n        heightSegments: heightSegments,\n        depthSegments: depthSegments\n      };\n\n      var scope = _assertThisInitialized(_this); // segments\n\n\n      widthSegments = Math.floor(widthSegments);\n      heightSegments = Math.floor(heightSegments);\n      depthSegments = Math.floor(depthSegments); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // helper variables\n\n      var numberOfVertices = 0;\n      var groupStart = 0; // build each side of the box geometry\n\n      buildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n      buildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n      buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n      buildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n      buildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n      buildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n      // build geometry\n\n      _this.setIndex(indices);\n\n      _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n      function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n        var segmentWidth = width / gridX;\n        var segmentHeight = height / gridY;\n        var widthHalf = width / 2;\n        var heightHalf = height / 2;\n        var depthHalf = depth / 2;\n        var gridX1 = gridX + 1;\n        var gridY1 = gridY + 1;\n        var vertexCounter = 0;\n        var groupCount = 0;\n        var vector = new Vector3(); // generate vertices, normals and uvs\n\n        for (var iy = 0; iy < gridY1; iy++) {\n          var y = iy * segmentHeight - heightHalf;\n\n          for (var ix = 0; ix < gridX1; ix++) {\n            var x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n            vector[u] = x * udir;\n            vector[v] = y * vdir;\n            vector[w] = depthHalf; // now apply vector to vertex buffer\n\n            vertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n            vector[u] = 0;\n            vector[v] = 0;\n            vector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n            normals.push(vector.x, vector.y, vector.z); // uvs\n\n            uvs.push(ix / gridX);\n            uvs.push(1 - iy / gridY); // counters\n\n            vertexCounter += 1;\n          }\n        } // indices\n        // 1. you need three indices to draw a single face\n        // 2. a single segment consists of two faces\n        // 3. so we need to generate six (2*3) indices per segment\n\n\n        for (var _iy = 0; _iy < gridY; _iy++) {\n          for (var _ix = 0; _ix < gridX; _ix++) {\n            var a = numberOfVertices + _ix + gridX1 * _iy;\n            var b = numberOfVertices + _ix + gridX1 * (_iy + 1);\n            var c = numberOfVertices + (_ix + 1) + gridX1 * (_iy + 1);\n            var d = numberOfVertices + (_ix + 1) + gridX1 * _iy; // faces\n\n            indices.push(a, b, d);\n            indices.push(b, c, d); // increase counter\n\n            groupCount += 6;\n          }\n        } // add a group to the geometry. this will ensure multi material support\n\n\n        scope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n        groupStart += groupCount; // update total number of vertices\n\n        numberOfVertices += vertexCounter;\n      }\n\n      return _this;\n    }\n\n    return BoxGeometry;\n  }(BufferGeometry);\n  /**\n   * Uniform Utilities\n   */\n\n\n  function cloneUniforms(src) {\n    var dst = {};\n\n    for (var u in src) {\n      dst[u] = {};\n\n      for (var p in src[u]) {\n        var property = src[u][p];\n\n        if (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture)) {\n          dst[u][p] = property.clone();\n        } else if (Array.isArray(property)) {\n          dst[u][p] = property.slice();\n        } else {\n          dst[u][p] = property;\n        }\n      }\n    }\n\n    return dst;\n  }\n\n  function mergeUniforms(uniforms) {\n    var merged = {};\n\n    for (var u = 0; u < uniforms.length; u++) {\n      var tmp = cloneUniforms(uniforms[u]);\n\n      for (var p in tmp) {\n        merged[p] = tmp[p];\n      }\n    }\n\n    return merged;\n  } // Legacy\n\n\n  var UniformsUtils = {\n    clone: cloneUniforms,\n    merge: mergeUniforms\n  };\n  var default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n  var default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n  /**\n   * parameters = {\n   *\tdefines: { \"label\" : \"value\" },\n   *\tuniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n   *\n   *\tfragmentShader: <string>,\n   *\tvertexShader: <string>,\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>,\n   *\n   *\tlights: <bool>,\n   *\n   *\tskinning: <bool>,\n   *\tmorphTargets: <bool>,\n   *\tmorphNormals: <bool>\n   * }\n   */\n\n  function ShaderMaterial(parameters) {\n    Material.call(this);\n    this.type = 'ShaderMaterial';\n    this.defines = {};\n    this.uniforms = {};\n    this.vertexShader = default_vertex;\n    this.fragmentShader = default_fragment;\n    this.linewidth = 1;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false; // set to use scene fog\n\n    this.lights = false; // set to use scene lights\n\n    this.clipping = false; // set to use user-defined clipping planes\n\n    this.skinning = false; // set to use skinning attribute streams\n\n    this.morphTargets = false; // set to use morph targets\n\n    this.morphNormals = false; // set to use morph normals\n\n    this.extensions = {\n      derivatives: false,\n      // set to use derivatives\n      fragDepth: false,\n      // set to use fragment depth values\n      drawBuffers: false,\n      // set to use draw buffers\n      shaderTextureLOD: false // set to use shader texture LOD\n\n    }; // When rendered geometry doesn't include these attributes but the material does,\n    // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n    this.defaultAttributeValues = {\n      'color': [1, 1, 1],\n      'uv': [0, 0],\n      'uv2': [0, 0]\n    };\n    this.index0AttributeName = undefined;\n    this.uniformsNeedUpdate = false;\n    this.glslVersion = null;\n\n    if (parameters !== undefined) {\n      if (parameters.attributes !== undefined) {\n        console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n      }\n\n      this.setValues(parameters);\n    }\n  }\n\n  ShaderMaterial.prototype = Object.create(Material.prototype);\n  ShaderMaterial.prototype.constructor = ShaderMaterial;\n  ShaderMaterial.prototype.isShaderMaterial = true;\n\n  ShaderMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.fragmentShader = source.fragmentShader;\n    this.vertexShader = source.vertexShader;\n    this.uniforms = cloneUniforms(source.uniforms);\n    this.defines = Object.assign({}, source.defines);\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.lights = source.lights;\n    this.clipping = source.clipping;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    this.extensions = Object.assign({}, source.extensions);\n    this.glslVersion = source.glslVersion;\n    return this;\n  };\n\n  ShaderMaterial.prototype.toJSON = function (meta) {\n    var data = Material.prototype.toJSON.call(this, meta);\n    data.glslVersion = this.glslVersion;\n    data.uniforms = {};\n\n    for (var name in this.uniforms) {\n      var uniform = this.uniforms[name];\n      var value = uniform.value;\n\n      if (value && value.isTexture) {\n        data.uniforms[name] = {\n          type: 't',\n          value: value.toJSON(meta).uuid\n        };\n      } else if (value && value.isColor) {\n        data.uniforms[name] = {\n          type: 'c',\n          value: value.getHex()\n        };\n      } else if (value && value.isVector2) {\n        data.uniforms[name] = {\n          type: 'v2',\n          value: value.toArray()\n        };\n      } else if (value && value.isVector3) {\n        data.uniforms[name] = {\n          type: 'v3',\n          value: value.toArray()\n        };\n      } else if (value && value.isVector4) {\n        data.uniforms[name] = {\n          type: 'v4',\n          value: value.toArray()\n        };\n      } else if (value && value.isMatrix3) {\n        data.uniforms[name] = {\n          type: 'm3',\n          value: value.toArray()\n        };\n      } else if (value && value.isMatrix4) {\n        data.uniforms[name] = {\n          type: 'm4',\n          value: value.toArray()\n        };\n      } else {\n        data.uniforms[name] = {\n          value: value\n        }; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n      }\n    }\n\n    if (Object.keys(this.defines).length > 0) data.defines = this.defines;\n    data.vertexShader = this.vertexShader;\n    data.fragmentShader = this.fragmentShader;\n    var extensions = {};\n\n    for (var key in this.extensions) {\n      if (this.extensions[key] === true) extensions[key] = true;\n    }\n\n    if (Object.keys(extensions).length > 0) data.extensions = extensions;\n    return data;\n  };\n\n  function Camera() {\n    Object3D.call(this);\n    this.type = 'Camera';\n    this.matrixWorldInverse = new Matrix4();\n    this.projectionMatrix = new Matrix4();\n    this.projectionMatrixInverse = new Matrix4();\n  }\n\n  Camera.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Camera,\n    isCamera: true,\n    copy: function copy(source, recursive) {\n      Object3D.prototype.copy.call(this, source, recursive);\n      this.matrixWorldInverse.copy(source.matrixWorldInverse);\n      this.projectionMatrix.copy(source.projectionMatrix);\n      this.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n      return this;\n    },\n    getWorldDirection: function getWorldDirection(target) {\n      if (target === undefined) {\n        console.warn('THREE.Camera: .getWorldDirection() target is now required');\n        target = new Vector3();\n      }\n\n      this.updateWorldMatrix(true, false);\n      var e = this.matrixWorld.elements;\n      return target.set(-e[8], -e[9], -e[10]).normalize();\n    },\n    updateMatrixWorld: function updateMatrixWorld(force) {\n      Object3D.prototype.updateMatrixWorld.call(this, force);\n      this.matrixWorldInverse.copy(this.matrixWorld).invert();\n    },\n    updateWorldMatrix: function updateWorldMatrix(updateParents, updateChildren) {\n      Object3D.prototype.updateWorldMatrix.call(this, updateParents, updateChildren);\n      this.matrixWorldInverse.copy(this.matrixWorld).invert();\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    }\n  });\n\n  function PerspectiveCamera(fov, aspect, near, far) {\n    if (fov === void 0) {\n      fov = 50;\n    }\n\n    if (aspect === void 0) {\n      aspect = 1;\n    }\n\n    if (near === void 0) {\n      near = 0.1;\n    }\n\n    if (far === void 0) {\n      far = 2000;\n    }\n\n    Camera.call(this);\n    this.type = 'PerspectiveCamera';\n    this.fov = fov;\n    this.zoom = 1;\n    this.near = near;\n    this.far = far;\n    this.focus = 10;\n    this.aspect = aspect;\n    this.view = null;\n    this.filmGauge = 35; // width of the film (default in millimeters)\n\n    this.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n    this.updateProjectionMatrix();\n  }\n\n  PerspectiveCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n    constructor: PerspectiveCamera,\n    isPerspectiveCamera: true,\n    copy: function copy(source, recursive) {\n      Camera.prototype.copy.call(this, source, recursive);\n      this.fov = source.fov;\n      this.zoom = source.zoom;\n      this.near = source.near;\n      this.far = source.far;\n      this.focus = source.focus;\n      this.aspect = source.aspect;\n      this.view = source.view === null ? null : Object.assign({}, source.view);\n      this.filmGauge = source.filmGauge;\n      this.filmOffset = source.filmOffset;\n      return this;\n    },\n\n    /**\n     * Sets the FOV by focal length in respect to the current .filmGauge.\n     *\n     * The default film gauge is 35, so that the focal length can be specified for\n     * a 35mm (full frame) camera.\n     *\n     * Values for focal length and film gauge must have the same unit.\n     */\n    setFocalLength: function setFocalLength(focalLength) {\n      /** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n      var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n      this.fov = MathUtils.RAD2DEG * 2 * Math.atan(vExtentSlope);\n      this.updateProjectionMatrix();\n    },\n\n    /**\n     * Calculates the focal length from the current .fov and .filmGauge.\n     */\n    getFocalLength: function getFocalLength() {\n      var vExtentSlope = Math.tan(MathUtils.DEG2RAD * 0.5 * this.fov);\n      return 0.5 * this.getFilmHeight() / vExtentSlope;\n    },\n    getEffectiveFOV: function getEffectiveFOV() {\n      return MathUtils.RAD2DEG * 2 * Math.atan(Math.tan(MathUtils.DEG2RAD * 0.5 * this.fov) / this.zoom);\n    },\n    getFilmWidth: function getFilmWidth() {\n      // film not completely covered in portrait format (aspect < 1)\n      return this.filmGauge * Math.min(this.aspect, 1);\n    },\n    getFilmHeight: function getFilmHeight() {\n      // film not completely covered in landscape format (aspect > 1)\n      return this.filmGauge / Math.max(this.aspect, 1);\n    },\n\n    /**\n     * Sets an offset in a larger frustum. This is useful for multi-window or\n     * multi-monitor/multi-machine setups.\n     *\n     * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n     * the monitors are in grid like this\n     *\n     *\t +---+---+---+\n     *\t | A | B | C |\n     *\t +---+---+---+\n     *\t | D | E | F |\n     *\t +---+---+---+\n     *\n     * then for each monitor you would call it like this\n     *\n     *\t const w = 1920;\n     *\t const h = 1080;\n     *\t const fullWidth = w * 3;\n     *\t const fullHeight = h * 2;\n     *\n     *\t --A--\n     *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n     *\t --B--\n     *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n     *\t --C--\n     *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n     *\t --D--\n     *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n     *\t --E--\n     *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n     *\t --F--\n     *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n     *\n     *\t Note there is no reason monitors have to be the same size or in a grid.\n     */\n    setViewOffset: function setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n      this.aspect = fullWidth / fullHeight;\n\n      if (this.view === null) {\n        this.view = {\n          enabled: true,\n          fullWidth: 1,\n          fullHeight: 1,\n          offsetX: 0,\n          offsetY: 0,\n          width: 1,\n          height: 1\n        };\n      }\n\n      this.view.enabled = true;\n      this.view.fullWidth = fullWidth;\n      this.view.fullHeight = fullHeight;\n      this.view.offsetX = x;\n      this.view.offsetY = y;\n      this.view.width = width;\n      this.view.height = height;\n      this.updateProjectionMatrix();\n    },\n    clearViewOffset: function clearViewOffset() {\n      if (this.view !== null) {\n        this.view.enabled = false;\n      }\n\n      this.updateProjectionMatrix();\n    },\n    updateProjectionMatrix: function updateProjectionMatrix() {\n      var near = this.near;\n      var top = near * Math.tan(MathUtils.DEG2RAD * 0.5 * this.fov) / this.zoom;\n      var height = 2 * top;\n      var width = this.aspect * height;\n      var left = -0.5 * width;\n      var view = this.view;\n\n      if (this.view !== null && this.view.enabled) {\n        var fullWidth = view.fullWidth,\n            fullHeight = view.fullHeight;\n        left += view.offsetX * width / fullWidth;\n        top -= view.offsetY * height / fullHeight;\n        width *= view.width / fullWidth;\n        height *= view.height / fullHeight;\n      }\n\n      var skew = this.filmOffset;\n      if (skew !== 0) left += near * skew / this.getFilmWidth();\n      this.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n      this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n    },\n    toJSON: function toJSON(meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.fov = this.fov;\n      data.object.zoom = this.zoom;\n      data.object.near = this.near;\n      data.object.far = this.far;\n      data.object.focus = this.focus;\n      data.object.aspect = this.aspect;\n      if (this.view !== null) data.object.view = Object.assign({}, this.view);\n      data.object.filmGauge = this.filmGauge;\n      data.object.filmOffset = this.filmOffset;\n      return data;\n    }\n  });\n  var fov = 90,\n      aspect = 1;\n\n  function CubeCamera(near, far, renderTarget) {\n    Object3D.call(this);\n    this.type = 'CubeCamera';\n\n    if (renderTarget.isWebGLCubeRenderTarget !== true) {\n      console.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');\n      return;\n    }\n\n    this.renderTarget = renderTarget;\n    var cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPX.layers = this.layers;\n    cameraPX.up.set(0, -1, 0);\n    cameraPX.lookAt(new Vector3(1, 0, 0));\n    this.add(cameraPX);\n    var cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNX.layers = this.layers;\n    cameraNX.up.set(0, -1, 0);\n    cameraNX.lookAt(new Vector3(-1, 0, 0));\n    this.add(cameraNX);\n    var cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPY.layers = this.layers;\n    cameraPY.up.set(0, 0, 1);\n    cameraPY.lookAt(new Vector3(0, 1, 0));\n    this.add(cameraPY);\n    var cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNY.layers = this.layers;\n    cameraNY.up.set(0, 0, -1);\n    cameraNY.lookAt(new Vector3(0, -1, 0));\n    this.add(cameraNY);\n    var cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPZ.layers = this.layers;\n    cameraPZ.up.set(0, -1, 0);\n    cameraPZ.lookAt(new Vector3(0, 0, 1));\n    this.add(cameraPZ);\n    var cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNZ.layers = this.layers;\n    cameraNZ.up.set(0, -1, 0);\n    cameraNZ.lookAt(new Vector3(0, 0, -1));\n    this.add(cameraNZ);\n\n    this.update = function (renderer, scene) {\n      if (this.parent === null) this.updateMatrixWorld();\n      var currentXrEnabled = renderer.xr.enabled;\n      var currentRenderTarget = renderer.getRenderTarget();\n      renderer.xr.enabled = false;\n      var generateMipmaps = renderTarget.texture.generateMipmaps;\n      renderTarget.texture.generateMipmaps = false;\n      renderer.setRenderTarget(renderTarget, 0);\n      renderer.render(scene, cameraPX);\n      renderer.setRenderTarget(renderTarget, 1);\n      renderer.render(scene, cameraNX);\n      renderer.setRenderTarget(renderTarget, 2);\n      renderer.render(scene, cameraPY);\n      renderer.setRenderTarget(renderTarget, 3);\n      renderer.render(scene, cameraNY);\n      renderer.setRenderTarget(renderTarget, 4);\n      renderer.render(scene, cameraPZ);\n      renderTarget.texture.generateMipmaps = generateMipmaps;\n      renderer.setRenderTarget(renderTarget, 5);\n      renderer.render(scene, cameraNZ);\n      renderer.setRenderTarget(currentRenderTarget);\n      renderer.xr.enabled = currentXrEnabled;\n    };\n  }\n\n  CubeCamera.prototype = Object.create(Object3D.prototype);\n  CubeCamera.prototype.constructor = CubeCamera;\n\n  function CubeTexture(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n    images = images !== undefined ? images : [];\n    mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n    format = format !== undefined ? format : RGBFormat;\n    Texture.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.flipY = false; // Why CubeTexture._needsFlipEnvMap is necessary:\n    //\n    // By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n    // in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n    // in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n    // three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n    // and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n    // when using WebGLCubeRenderTarget.texture as a cube texture.\n\n    this._needsFlipEnvMap = true;\n  }\n\n  CubeTexture.prototype = Object.create(Texture.prototype);\n  CubeTexture.prototype.constructor = CubeTexture;\n  CubeTexture.prototype.isCubeTexture = true;\n  Object.defineProperty(CubeTexture.prototype, 'images', {\n    get: function get() {\n      return this.image;\n    },\n    set: function set(value) {\n      this.image = value;\n    }\n  });\n\n  var WebGLCubeRenderTarget = /*#__PURE__*/function (_WebGLRenderTarget) {\n    _inheritsLoose(WebGLCubeRenderTarget, _WebGLRenderTarget);\n\n    function WebGLCubeRenderTarget(size, options, dummy) {\n      var _this;\n\n      if (Number.isInteger(options)) {\n        console.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');\n        options = dummy;\n      }\n\n      _this = _WebGLRenderTarget.call(this, size, size, options) || this;\n      Object.defineProperty(_assertThisInitialized(_this), 'isWebGLCubeRenderTarget', {\n        value: true\n      });\n      options = options || {};\n      _this.texture = new CubeTexture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n      _this.texture._needsFlipEnvMap = false;\n      return _this;\n    }\n\n    var _proto = WebGLCubeRenderTarget.prototype;\n\n    _proto.fromEquirectangularTexture = function fromEquirectangularTexture(renderer, texture) {\n      this.texture.type = texture.type;\n      this.texture.format = RGBAFormat; // see #18859\n\n      this.texture.encoding = texture.encoding;\n      this.texture.generateMipmaps = texture.generateMipmaps;\n      this.texture.minFilter = texture.minFilter;\n      this.texture.magFilter = texture.magFilter;\n      var shader = {\n        uniforms: {\n          tEquirect: {\n            value: null\n          }\n        },\n        vertexShader:\n        /* glsl */\n        \"\\n\\n\\t\\t\\t\\tvarying vec3 vWorldDirection;\\n\\n\\t\\t\\t\\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\n\\t\\t\\t\\t\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\t\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\n\\t\\t\\t\\t\\t#include <begin_vertex>\\n\\t\\t\\t\\t\\t#include <project_vertex>\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\",\n        fragmentShader:\n        /* glsl */\n        \"\\n\\n\\t\\t\\t\\tuniform sampler2D tEquirect;\\n\\n\\t\\t\\t\\tvarying vec3 vWorldDirection;\\n\\n\\t\\t\\t\\t#include <common>\\n\\n\\t\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\t\\tvec3 direction = normalize( vWorldDirection );\\n\\n\\t\\t\\t\\t\\tvec2 sampleUV = equirectUv( direction );\\n\\n\\t\\t\\t\\t\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\"\n      };\n      var geometry = new BoxGeometry(5, 5, 5);\n      var material = new ShaderMaterial({\n        name: 'CubemapFromEquirect',\n        uniforms: cloneUniforms(shader.uniforms),\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader,\n        side: BackSide,\n        blending: NoBlending\n      });\n      material.uniforms.tEquirect.value = texture;\n      var mesh = new Mesh(geometry, material);\n      var currentMinFilter = texture.minFilter; // Avoid blurred poles\n\n      if (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\n      var camera = new CubeCamera(1, 10, this);\n      camera.update(renderer, mesh);\n      texture.minFilter = currentMinFilter;\n      mesh.geometry.dispose();\n      mesh.material.dispose();\n      return this;\n    };\n\n    _proto.clear = function clear(renderer, color, depth, stencil) {\n      var currentRenderTarget = renderer.getRenderTarget();\n\n      for (var i = 0; i < 6; i++) {\n        renderer.setRenderTarget(this, i);\n        renderer.clear(color, depth, stencil);\n      }\n\n      renderer.setRenderTarget(currentRenderTarget);\n    };\n\n    return WebGLCubeRenderTarget;\n  }(WebGLRenderTarget);\n\n  function DataTexture(data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n    Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.image = {\n      data: data || null,\n      width: width || 1,\n      height: height || 1\n    };\n    this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.unpackAlignment = 1;\n    this.needsUpdate = true;\n  }\n\n  DataTexture.prototype = Object.create(Texture.prototype);\n  DataTexture.prototype.constructor = DataTexture;\n  DataTexture.prototype.isDataTexture = true;\n\n  var _sphere$1 = /*@__PURE__*/new Sphere();\n\n  var _vector$5 = /*@__PURE__*/new Vector3();\n\n  var Frustum = /*#__PURE__*/function () {\n    function Frustum(p0, p1, p2, p3, p4, p5) {\n      this.planes = [p0 !== undefined ? p0 : new Plane(), p1 !== undefined ? p1 : new Plane(), p2 !== undefined ? p2 : new Plane(), p3 !== undefined ? p3 : new Plane(), p4 !== undefined ? p4 : new Plane(), p5 !== undefined ? p5 : new Plane()];\n    }\n\n    var _proto = Frustum.prototype;\n\n    _proto.set = function set(p0, p1, p2, p3, p4, p5) {\n      var planes = this.planes;\n      planes[0].copy(p0);\n      planes[1].copy(p1);\n      planes[2].copy(p2);\n      planes[3].copy(p3);\n      planes[4].copy(p4);\n      planes[5].copy(p5);\n      return this;\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor().copy(this);\n    };\n\n    _proto.copy = function copy(frustum) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        planes[i].copy(frustum.planes[i]);\n      }\n\n      return this;\n    };\n\n    _proto.setFromProjectionMatrix = function setFromProjectionMatrix(m) {\n      var planes = this.planes;\n      var me = m.elements;\n      var me0 = me[0],\n          me1 = me[1],\n          me2 = me[2],\n          me3 = me[3];\n      var me4 = me[4],\n          me5 = me[5],\n          me6 = me[6],\n          me7 = me[7];\n      var me8 = me[8],\n          me9 = me[9],\n          me10 = me[10],\n          me11 = me[11];\n      var me12 = me[12],\n          me13 = me[13],\n          me14 = me[14],\n          me15 = me[15];\n      planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n      planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n      planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n      planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n      planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n      planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n      return this;\n    };\n\n    _proto.intersectsObject = function intersectsObject(object) {\n      var geometry = object.geometry;\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n      _sphere$1.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n      return this.intersectsSphere(_sphere$1);\n    };\n\n    _proto.intersectsSprite = function intersectsSprite(sprite) {\n      _sphere$1.center.set(0, 0, 0);\n\n      _sphere$1.radius = 0.7071067811865476;\n\n      _sphere$1.applyMatrix4(sprite.matrixWorld);\n\n      return this.intersectsSphere(_sphere$1);\n    };\n\n    _proto.intersectsSphere = function intersectsSphere(sphere) {\n      var planes = this.planes;\n      var center = sphere.center;\n      var negRadius = -sphere.radius;\n\n      for (var i = 0; i < 6; i++) {\n        var distance = planes[i].distanceToPoint(center);\n\n        if (distance < negRadius) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    _proto.intersectsBox = function intersectsBox(box) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        var plane = planes[i]; // corner at max distance\n\n        _vector$5.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n        _vector$5.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n        _vector$5.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n        if (plane.distanceToPoint(_vector$5) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    _proto.containsPoint = function containsPoint(point) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        if (planes[i].distanceToPoint(point) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    return Frustum;\n  }();\n\n  function WebGLAnimation() {\n    var context = null;\n    var isAnimating = false;\n    var animationLoop = null;\n    var requestId = null;\n\n    function onAnimationFrame(time, frame) {\n      animationLoop(time, frame);\n      requestId = context.requestAnimationFrame(onAnimationFrame);\n    }\n\n    return {\n      start: function start() {\n        if (isAnimating === true) return;\n        if (animationLoop === null) return;\n        requestId = context.requestAnimationFrame(onAnimationFrame);\n        isAnimating = true;\n      },\n      stop: function stop() {\n        context.cancelAnimationFrame(requestId);\n        isAnimating = false;\n      },\n      setAnimationLoop: function setAnimationLoop(callback) {\n        animationLoop = callback;\n      },\n      setContext: function setContext(value) {\n        context = value;\n      }\n    };\n  }\n\n  function WebGLAttributes(gl, capabilities) {\n    var isWebGL2 = capabilities.isWebGL2;\n    var buffers = new WeakMap();\n\n    function createBuffer(attribute, bufferType) {\n      var array = attribute.array;\n      var usage = attribute.usage;\n      var buffer = gl.createBuffer();\n      gl.bindBuffer(bufferType, buffer);\n      gl.bufferData(bufferType, array, usage);\n      attribute.onUploadCallback();\n      var type = 5126;\n\n      if (array instanceof Float32Array) {\n        type = 5126;\n      } else if (array instanceof Float64Array) {\n        console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\n      } else if (array instanceof Uint16Array) {\n        if (attribute.isFloat16BufferAttribute) {\n          if (isWebGL2) {\n            type = 5131;\n          } else {\n            console.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');\n          }\n        } else {\n          type = 5123;\n        }\n      } else if (array instanceof Int16Array) {\n        type = 5122;\n      } else if (array instanceof Uint32Array) {\n        type = 5125;\n      } else if (array instanceof Int32Array) {\n        type = 5124;\n      } else if (array instanceof Int8Array) {\n        type = 5120;\n      } else if (array instanceof Uint8Array) {\n        type = 5121;\n      }\n\n      return {\n        buffer: buffer,\n        type: type,\n        bytesPerElement: array.BYTES_PER_ELEMENT,\n        version: attribute.version\n      };\n    }\n\n    function updateBuffer(buffer, attribute, bufferType) {\n      var array = attribute.array;\n      var updateRange = attribute.updateRange;\n      gl.bindBuffer(bufferType, buffer);\n\n      if (updateRange.count === -1) {\n        // Not using update ranges\n        gl.bufferSubData(bufferType, 0, array);\n      } else {\n        if (isWebGL2) {\n          gl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array, updateRange.offset, updateRange.count);\n        } else {\n          gl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n        }\n\n        updateRange.count = -1; // reset range\n      }\n    } //\n\n\n    function get(attribute) {\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n      return buffers.get(attribute);\n    }\n\n    function remove(attribute) {\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n      var data = buffers.get(attribute);\n\n      if (data) {\n        gl.deleteBuffer(data.buffer);\n        buffers.delete(attribute);\n      }\n    }\n\n    function update(attribute, bufferType) {\n      if (attribute.isGLBufferAttribute) {\n        var cached = buffers.get(attribute);\n\n        if (!cached || cached.version < attribute.version) {\n          buffers.set(attribute, {\n            buffer: attribute.buffer,\n            type: attribute.type,\n            bytesPerElement: attribute.elementSize,\n            version: attribute.version\n          });\n        }\n\n        return;\n      }\n\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n      var data = buffers.get(attribute);\n\n      if (data === undefined) {\n        buffers.set(attribute, createBuffer(attribute, bufferType));\n      } else if (data.version < attribute.version) {\n        updateBuffer(data.buffer, attribute, bufferType);\n        data.version = attribute.version;\n      }\n    }\n\n    return {\n      get: get,\n      remove: remove,\n      update: update\n    };\n  }\n\n  var PlaneGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inheritsLoose(PlaneGeometry, _BufferGeometry);\n\n    function PlaneGeometry(width, height, widthSegments, heightSegments) {\n      var _this;\n\n      if (width === void 0) {\n        width = 1;\n      }\n\n      if (height === void 0) {\n        height = 1;\n      }\n\n      if (widthSegments === void 0) {\n        widthSegments = 1;\n      }\n\n      if (heightSegments === void 0) {\n        heightSegments = 1;\n      }\n\n      _this = _BufferGeometry.call(this) || this;\n      _this.type = 'PlaneGeometry';\n      _this.parameters = {\n        width: width,\n        height: height,\n        widthSegments: widthSegments,\n        heightSegments: heightSegments\n      };\n      var width_half = width / 2;\n      var height_half = height / 2;\n      var gridX = Math.floor(widthSegments);\n      var gridY = Math.floor(heightSegments);\n      var gridX1 = gridX + 1;\n      var gridY1 = gridY + 1;\n      var segment_width = width / gridX;\n      var segment_height = height / gridY; //\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = [];\n\n      for (var iy = 0; iy < gridY1; iy++) {\n        var y = iy * segment_height - height_half;\n\n        for (var ix = 0; ix < gridX1; ix++) {\n          var x = ix * segment_width - width_half;\n          vertices.push(x, -y, 0);\n          normals.push(0, 0, 1);\n          uvs.push(ix / gridX);\n          uvs.push(1 - iy / gridY);\n        }\n      }\n\n      for (var _iy = 0; _iy < gridY; _iy++) {\n        for (var _ix = 0; _ix < gridX; _ix++) {\n          var a = _ix + gridX1 * _iy;\n          var b = _ix + gridX1 * (_iy + 1);\n          var c = _ix + 1 + gridX1 * (_iy + 1);\n          var d = _ix + 1 + gridX1 * _iy;\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      }\n\n      _this.setIndex(indices);\n\n      _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n      return _this;\n    }\n\n    return PlaneGeometry;\n  }(BufferGeometry);\n\n  var alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n  var alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n  var alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n  var aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n  var aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n  var begin_vertex = \"vec3 transformed = vec3( position );\";\n  var beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n  var bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n  var bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n  var clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n  var clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n  var clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n  var clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n  var color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n  var color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n  var color_pars_vertex = \"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n  var color_vertex = \"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor.xyz *= color.xyz;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n  var common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n  var cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n  var defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n  var displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n  var displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n  var emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n  var emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n  var encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n  var encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n  var envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n  var envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n  var envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n  var envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n  var envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n  var fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";\n  var fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n  var fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n  var fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n  var gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n  var lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\n  var lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n  var lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n  var lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n  var envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n  var lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n  var lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n  var lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n  var lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n  var lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n  var lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(\t\t0, 1,\t\t0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n  var lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n  var lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n  var lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n  var logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n  var logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n  var logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n  var logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n  var map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n  var map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n  var map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n  var map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n  var metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n  var metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n  var morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n  var morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n  var morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n  var normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n  var normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n  var normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\";\n  var clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n  var clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\\n\\t#endif\\n#endif\";\n  var clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n  var packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n  var premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n  var project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n  var dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n  var dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n  var roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n  var roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n  var shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n  var shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n  var shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n  var shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n  var skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n  var skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n  var skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n  var skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n  var specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n  var specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n  var tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n  var tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(\t1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,\t1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,\t1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n  var transmissionmap_fragment = \"#ifdef USE_TRANSMISSIONMAP\\n\\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\\n#endif\";\n  var transmissionmap_pars_fragment = \"#ifdef USE_TRANSMISSIONMAP\\n\\tuniform sampler2D transmissionMap;\\n#endif\";\n  var uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n  var uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n  var uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n  var uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n  var uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n  var uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n  var worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n  var background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n  var background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n  var cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n  var cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n  var depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n  var depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n  var distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n  var distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n  var equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n  var equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n  var linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n  var linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n  var meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSMISSION\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSMISSION\\n\\tuniform float transmission;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <transmissionmap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#ifdef TRANSMISSION\\n\\t\\tfloat totalTransmission = transmission;\\n\\t#endif\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <transmissionmap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSMISSION\\n\\t\\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n  var normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n  var points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n  var points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n  var shadow_vert = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n  var sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var ShaderChunk = {\n    alphamap_fragment: alphamap_fragment,\n    alphamap_pars_fragment: alphamap_pars_fragment,\n    alphatest_fragment: alphatest_fragment,\n    aomap_fragment: aomap_fragment,\n    aomap_pars_fragment: aomap_pars_fragment,\n    begin_vertex: begin_vertex,\n    beginnormal_vertex: beginnormal_vertex,\n    bsdfs: bsdfs,\n    bumpmap_pars_fragment: bumpmap_pars_fragment,\n    clipping_planes_fragment: clipping_planes_fragment,\n    clipping_planes_pars_fragment: clipping_planes_pars_fragment,\n    clipping_planes_pars_vertex: clipping_planes_pars_vertex,\n    clipping_planes_vertex: clipping_planes_vertex,\n    color_fragment: color_fragment,\n    color_pars_fragment: color_pars_fragment,\n    color_pars_vertex: color_pars_vertex,\n    color_vertex: color_vertex,\n    common: common,\n    cube_uv_reflection_fragment: cube_uv_reflection_fragment,\n    defaultnormal_vertex: defaultnormal_vertex,\n    displacementmap_pars_vertex: displacementmap_pars_vertex,\n    displacementmap_vertex: displacementmap_vertex,\n    emissivemap_fragment: emissivemap_fragment,\n    emissivemap_pars_fragment: emissivemap_pars_fragment,\n    encodings_fragment: encodings_fragment,\n    encodings_pars_fragment: encodings_pars_fragment,\n    envmap_fragment: envmap_fragment,\n    envmap_common_pars_fragment: envmap_common_pars_fragment,\n    envmap_pars_fragment: envmap_pars_fragment,\n    envmap_pars_vertex: envmap_pars_vertex,\n    envmap_physical_pars_fragment: envmap_physical_pars_fragment,\n    envmap_vertex: envmap_vertex,\n    fog_vertex: fog_vertex,\n    fog_pars_vertex: fog_pars_vertex,\n    fog_fragment: fog_fragment,\n    fog_pars_fragment: fog_pars_fragment,\n    gradientmap_pars_fragment: gradientmap_pars_fragment,\n    lightmap_fragment: lightmap_fragment,\n    lightmap_pars_fragment: lightmap_pars_fragment,\n    lights_lambert_vertex: lights_lambert_vertex,\n    lights_pars_begin: lights_pars_begin,\n    lights_toon_fragment: lights_toon_fragment,\n    lights_toon_pars_fragment: lights_toon_pars_fragment,\n    lights_phong_fragment: lights_phong_fragment,\n    lights_phong_pars_fragment: lights_phong_pars_fragment,\n    lights_physical_fragment: lights_physical_fragment,\n    lights_physical_pars_fragment: lights_physical_pars_fragment,\n    lights_fragment_begin: lights_fragment_begin,\n    lights_fragment_maps: lights_fragment_maps,\n    lights_fragment_end: lights_fragment_end,\n    logdepthbuf_fragment: logdepthbuf_fragment,\n    logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n    logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n    logdepthbuf_vertex: logdepthbuf_vertex,\n    map_fragment: map_fragment,\n    map_pars_fragment: map_pars_fragment,\n    map_particle_fragment: map_particle_fragment,\n    map_particle_pars_fragment: map_particle_pars_fragment,\n    metalnessmap_fragment: metalnessmap_fragment,\n    metalnessmap_pars_fragment: metalnessmap_pars_fragment,\n    morphnormal_vertex: morphnormal_vertex,\n    morphtarget_pars_vertex: morphtarget_pars_vertex,\n    morphtarget_vertex: morphtarget_vertex,\n    normal_fragment_begin: normal_fragment_begin,\n    normal_fragment_maps: normal_fragment_maps,\n    normalmap_pars_fragment: normalmap_pars_fragment,\n    clearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n    clearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n    clearcoat_pars_fragment: clearcoat_pars_fragment,\n    packing: packing,\n    premultiplied_alpha_fragment: premultiplied_alpha_fragment,\n    project_vertex: project_vertex,\n    dithering_fragment: dithering_fragment,\n    dithering_pars_fragment: dithering_pars_fragment,\n    roughnessmap_fragment: roughnessmap_fragment,\n    roughnessmap_pars_fragment: roughnessmap_pars_fragment,\n    shadowmap_pars_fragment: shadowmap_pars_fragment,\n    shadowmap_pars_vertex: shadowmap_pars_vertex,\n    shadowmap_vertex: shadowmap_vertex,\n    shadowmask_pars_fragment: shadowmask_pars_fragment,\n    skinbase_vertex: skinbase_vertex,\n    skinning_pars_vertex: skinning_pars_vertex,\n    skinning_vertex: skinning_vertex,\n    skinnormal_vertex: skinnormal_vertex,\n    specularmap_fragment: specularmap_fragment,\n    specularmap_pars_fragment: specularmap_pars_fragment,\n    tonemapping_fragment: tonemapping_fragment,\n    tonemapping_pars_fragment: tonemapping_pars_fragment,\n    transmissionmap_fragment: transmissionmap_fragment,\n    transmissionmap_pars_fragment: transmissionmap_pars_fragment,\n    uv_pars_fragment: uv_pars_fragment,\n    uv_pars_vertex: uv_pars_vertex,\n    uv_vertex: uv_vertex,\n    uv2_pars_fragment: uv2_pars_fragment,\n    uv2_pars_vertex: uv2_pars_vertex,\n    uv2_vertex: uv2_vertex,\n    worldpos_vertex: worldpos_vertex,\n    background_frag: background_frag,\n    background_vert: background_vert,\n    cube_frag: cube_frag,\n    cube_vert: cube_vert,\n    depth_frag: depth_frag,\n    depth_vert: depth_vert,\n    distanceRGBA_frag: distanceRGBA_frag,\n    distanceRGBA_vert: distanceRGBA_vert,\n    equirect_frag: equirect_frag,\n    equirect_vert: equirect_vert,\n    linedashed_frag: linedashed_frag,\n    linedashed_vert: linedashed_vert,\n    meshbasic_frag: meshbasic_frag,\n    meshbasic_vert: meshbasic_vert,\n    meshlambert_frag: meshlambert_frag,\n    meshlambert_vert: meshlambert_vert,\n    meshmatcap_frag: meshmatcap_frag,\n    meshmatcap_vert: meshmatcap_vert,\n    meshtoon_frag: meshtoon_frag,\n    meshtoon_vert: meshtoon_vert,\n    meshphong_frag: meshphong_frag,\n    meshphong_vert: meshphong_vert,\n    meshphysical_frag: meshphysical_frag,\n    meshphysical_vert: meshphysical_vert,\n    normal_frag: normal_frag,\n    normal_vert: normal_vert,\n    points_frag: points_frag,\n    points_vert: points_vert,\n    shadow_frag: shadow_frag,\n    shadow_vert: shadow_vert,\n    sprite_frag: sprite_frag,\n    sprite_vert: sprite_vert\n  };\n  /**\n   * Uniforms library for shared webgl shaders\n   */\n\n  var UniformsLib = {\n    common: {\n      diffuse: {\n        value: new Color(0xeeeeee)\n      },\n      opacity: {\n        value: 1.0\n      },\n      map: {\n        value: null\n      },\n      uvTransform: {\n        value: new Matrix3()\n      },\n      uv2Transform: {\n        value: new Matrix3()\n      },\n      alphaMap: {\n        value: null\n      }\n    },\n    specularmap: {\n      specularMap: {\n        value: null\n      }\n    },\n    envmap: {\n      envMap: {\n        value: null\n      },\n      flipEnvMap: {\n        value: -1\n      },\n      reflectivity: {\n        value: 1.0\n      },\n      refractionRatio: {\n        value: 0.98\n      },\n      maxMipLevel: {\n        value: 0\n      }\n    },\n    aomap: {\n      aoMap: {\n        value: null\n      },\n      aoMapIntensity: {\n        value: 1\n      }\n    },\n    lightmap: {\n      lightMap: {\n        value: null\n      },\n      lightMapIntensity: {\n        value: 1\n      }\n    },\n    emissivemap: {\n      emissiveMap: {\n        value: null\n      }\n    },\n    bumpmap: {\n      bumpMap: {\n        value: null\n      },\n      bumpScale: {\n        value: 1\n      }\n    },\n    normalmap: {\n      normalMap: {\n        value: null\n      },\n      normalScale: {\n        value: new Vector2(1, 1)\n      }\n    },\n    displacementmap: {\n      displacementMap: {\n        value: null\n      },\n      displacementScale: {\n        value: 1\n      },\n      displacementBias: {\n        value: 0\n      }\n    },\n    roughnessmap: {\n      roughnessMap: {\n        value: null\n      }\n    },\n    metalnessmap: {\n      metalnessMap: {\n        value: null\n      }\n    },\n    gradientmap: {\n      gradientMap: {\n        value: null\n      }\n    },\n    fog: {\n      fogDensity: {\n        value: 0.00025\n      },\n      fogNear: {\n        value: 1\n      },\n      fogFar: {\n        value: 2000\n      },\n      fogColor: {\n        value: new Color(0xffffff)\n      }\n    },\n    lights: {\n      ambientLightColor: {\n        value: []\n      },\n      lightProbe: {\n        value: []\n      },\n      directionalLights: {\n        value: [],\n        properties: {\n          direction: {},\n          color: {}\n        }\n      },\n      directionalLightShadows: {\n        value: [],\n        properties: {\n          shadowBias: {},\n          shadowNormalBias: {},\n          shadowRadius: {},\n          shadowMapSize: {}\n        }\n      },\n      directionalShadowMap: {\n        value: []\n      },\n      directionalShadowMatrix: {\n        value: []\n      },\n      spotLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          direction: {},\n          distance: {},\n          coneCos: {},\n          penumbraCos: {},\n          decay: {}\n        }\n      },\n      spotLightShadows: {\n        value: [],\n        properties: {\n          shadowBias: {},\n          shadowNormalBias: {},\n          shadowRadius: {},\n          shadowMapSize: {}\n        }\n      },\n      spotShadowMap: {\n        value: []\n      },\n      spotShadowMatrix: {\n        value: []\n      },\n      pointLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          decay: {},\n          distance: {}\n        }\n      },\n      pointLightShadows: {\n        value: [],\n        properties: {\n          shadowBias: {},\n          shadowNormalBias: {},\n          shadowRadius: {},\n          shadowMapSize: {},\n          shadowCameraNear: {},\n          shadowCameraFar: {}\n        }\n      },\n      pointShadowMap: {\n        value: []\n      },\n      pointShadowMatrix: {\n        value: []\n      },\n      hemisphereLights: {\n        value: [],\n        properties: {\n          direction: {},\n          skyColor: {},\n          groundColor: {}\n        }\n      },\n      // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n      rectAreaLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          width: {},\n          height: {}\n        }\n      },\n      ltc_1: {\n        value: null\n      },\n      ltc_2: {\n        value: null\n      }\n    },\n    points: {\n      diffuse: {\n        value: new Color(0xeeeeee)\n      },\n      opacity: {\n        value: 1.0\n      },\n      size: {\n        value: 1.0\n      },\n      scale: {\n        value: 1.0\n      },\n      map: {\n        value: null\n      },\n      alphaMap: {\n        value: null\n      },\n      uvTransform: {\n        value: new Matrix3()\n      }\n    },\n    sprite: {\n      diffuse: {\n        value: new Color(0xeeeeee)\n      },\n      opacity: {\n        value: 1.0\n      },\n      center: {\n        value: new Vector2(0.5, 0.5)\n      },\n      rotation: {\n        value: 0.0\n      },\n      map: {\n        value: null\n      },\n      alphaMap: {\n        value: null\n      },\n      uvTransform: {\n        value: new Matrix3()\n      }\n    }\n  };\n  var ShaderLib = {\n    basic: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n      vertexShader: ShaderChunk.meshbasic_vert,\n      fragmentShader: ShaderChunk.meshbasic_frag\n    },\n    lambert: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        }\n      }]),\n      vertexShader: ShaderChunk.meshlambert_vert,\n      fragmentShader: ShaderChunk.meshlambert_frag\n    },\n    phong: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        },\n        specular: {\n          value: new Color(0x111111)\n        },\n        shininess: {\n          value: 30\n        }\n      }]),\n      vertexShader: ShaderChunk.meshphong_vert,\n      fragmentShader: ShaderChunk.meshphong_frag\n    },\n    standard: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        },\n        roughness: {\n          value: 1.0\n        },\n        metalness: {\n          value: 0.0\n        },\n        envMapIntensity: {\n          value: 1\n        } // temporary\n\n      }]),\n      vertexShader: ShaderChunk.meshphysical_vert,\n      fragmentShader: ShaderChunk.meshphysical_frag\n    },\n    toon: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        }\n      }]),\n      vertexShader: ShaderChunk.meshtoon_vert,\n      fragmentShader: ShaderChunk.meshtoon_frag\n    },\n    matcap: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n        matcap: {\n          value: null\n        }\n      }]),\n      vertexShader: ShaderChunk.meshmatcap_vert,\n      fragmentShader: ShaderChunk.meshmatcap_frag\n    },\n    points: {\n      uniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n      vertexShader: ShaderChunk.points_vert,\n      fragmentShader: ShaderChunk.points_frag\n    },\n    dashed: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.fog, {\n        scale: {\n          value: 1\n        },\n        dashSize: {\n          value: 1\n        },\n        totalSize: {\n          value: 2\n        }\n      }]),\n      vertexShader: ShaderChunk.linedashed_vert,\n      fragmentShader: ShaderChunk.linedashed_frag\n    },\n    depth: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n      vertexShader: ShaderChunk.depth_vert,\n      fragmentShader: ShaderChunk.depth_frag\n    },\n    normal: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n        opacity: {\n          value: 1.0\n        }\n      }]),\n      vertexShader: ShaderChunk.normal_vert,\n      fragmentShader: ShaderChunk.normal_frag\n    },\n    sprite: {\n      uniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n      vertexShader: ShaderChunk.sprite_vert,\n      fragmentShader: ShaderChunk.sprite_frag\n    },\n    background: {\n      uniforms: {\n        uvTransform: {\n          value: new Matrix3()\n        },\n        t2D: {\n          value: null\n        }\n      },\n      vertexShader: ShaderChunk.background_vert,\n      fragmentShader: ShaderChunk.background_frag\n    },\n\n    /* -------------------------------------------------------------------------\n    //\tCube map shader\n     ------------------------------------------------------------------------- */\n    cube: {\n      uniforms: mergeUniforms([UniformsLib.envmap, {\n        opacity: {\n          value: 1.0\n        }\n      }]),\n      vertexShader: ShaderChunk.cube_vert,\n      fragmentShader: ShaderChunk.cube_frag\n    },\n    equirect: {\n      uniforms: {\n        tEquirect: {\n          value: null\n        }\n      },\n      vertexShader: ShaderChunk.equirect_vert,\n      fragmentShader: ShaderChunk.equirect_frag\n    },\n    distanceRGBA: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\n        referencePosition: {\n          value: new Vector3()\n        },\n        nearDistance: {\n          value: 1\n        },\n        farDistance: {\n          value: 1000\n        }\n      }]),\n      vertexShader: ShaderChunk.distanceRGBA_vert,\n      fragmentShader: ShaderChunk.distanceRGBA_frag\n    },\n    shadow: {\n      uniforms: mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\n        color: {\n          value: new Color(0x00000)\n        },\n        opacity: {\n          value: 1.0\n        }\n      }]),\n      vertexShader: ShaderChunk.shadow_vert,\n      fragmentShader: ShaderChunk.shadow_frag\n    }\n  };\n  ShaderLib.physical = {\n    uniforms: mergeUniforms([ShaderLib.standard.uniforms, {\n      clearcoat: {\n        value: 0\n      },\n      clearcoatMap: {\n        value: null\n      },\n      clearcoatRoughness: {\n        value: 0\n      },\n      clearcoatRoughnessMap: {\n        value: null\n      },\n      clearcoatNormalScale: {\n        value: new Vector2(1, 1)\n      },\n      clearcoatNormalMap: {\n        value: null\n      },\n      sheen: {\n        value: new Color(0x000000)\n      },\n      transmission: {\n        value: 0\n      },\n      transmissionMap: {\n        value: null\n      }\n    }]),\n    vertexShader: ShaderChunk.meshphysical_vert,\n    fragmentShader: ShaderChunk.meshphysical_frag\n  };\n\n  function WebGLBackground(renderer, cubemaps, state, objects, premultipliedAlpha) {\n    var clearColor = new Color(0x000000);\n    var clearAlpha = 0;\n    var planeMesh;\n    var boxMesh;\n    var currentBackground = null;\n    var currentBackgroundVersion = 0;\n    var currentTonemapping = null;\n\n    function render(renderList, scene, camera, forceClear) {\n      var background = scene.isScene === true ? scene.background : null;\n\n      if (background && background.isTexture) {\n        background = cubemaps.get(background);\n      } // Ignore background in AR\n      // TODO: Reconsider this.\n\n\n      var xr = renderer.xr;\n      var session = xr.getSession && xr.getSession();\n\n      if (session && session.environmentBlendMode === 'additive') {\n        background = null;\n      }\n\n      if (background === null) {\n        setClear(clearColor, clearAlpha);\n      } else if (background && background.isColor) {\n        setClear(background, 1);\n        forceClear = true;\n      }\n\n      if (renderer.autoClear || forceClear) {\n        renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n      }\n\n      if (background && (background.isCubeTexture || background.isWebGLCubeRenderTarget || background.mapping === CubeUVReflectionMapping)) {\n        if (boxMesh === undefined) {\n          boxMesh = new Mesh(new BoxGeometry(1, 1, 1), new ShaderMaterial({\n            name: 'BackgroundCubeMaterial',\n            uniforms: cloneUniforms(ShaderLib.cube.uniforms),\n            vertexShader: ShaderLib.cube.vertexShader,\n            fragmentShader: ShaderLib.cube.fragmentShader,\n            side: BackSide,\n            depthTest: false,\n            depthWrite: false,\n            fog: false\n          }));\n          boxMesh.geometry.deleteAttribute('normal');\n          boxMesh.geometry.deleteAttribute('uv');\n\n          boxMesh.onBeforeRender = function (renderer, scene, camera) {\n            this.matrixWorld.copyPosition(camera.matrixWorld);\n          }; // enable code injection for non-built-in material\n\n\n          Object.defineProperty(boxMesh.material, 'envMap', {\n            get: function get() {\n              return this.uniforms.envMap.value;\n            }\n          });\n          objects.update(boxMesh);\n        }\n\n        if (background.isWebGLCubeRenderTarget) {\n          // TODO Deprecate\n          background = background.texture;\n        }\n\n        boxMesh.material.uniforms.envMap.value = background;\n        boxMesh.material.uniforms.flipEnvMap.value = background.isCubeTexture && background._needsFlipEnvMap ? -1 : 1;\n\n        if (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n          boxMesh.material.needsUpdate = true;\n          currentBackground = background;\n          currentBackgroundVersion = background.version;\n          currentTonemapping = renderer.toneMapping;\n        } // push to the pre-sorted opaque render list\n\n\n        renderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null);\n      } else if (background && background.isTexture) {\n        if (planeMesh === undefined) {\n          planeMesh = new Mesh(new PlaneGeometry(2, 2), new ShaderMaterial({\n            name: 'BackgroundMaterial',\n            uniforms: cloneUniforms(ShaderLib.background.uniforms),\n            vertexShader: ShaderLib.background.vertexShader,\n            fragmentShader: ShaderLib.background.fragmentShader,\n            side: FrontSide,\n            depthTest: false,\n            depthWrite: false,\n            fog: false\n          }));\n          planeMesh.geometry.deleteAttribute('normal'); // enable code injection for non-built-in material\n\n          Object.defineProperty(planeMesh.material, 'map', {\n            get: function get() {\n              return this.uniforms.t2D.value;\n            }\n          });\n          objects.update(planeMesh);\n        }\n\n        planeMesh.material.uniforms.t2D.value = background;\n\n        if (background.matrixAutoUpdate === true) {\n          background.updateMatrix();\n        }\n\n        planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);\n\n        if (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n          planeMesh.material.needsUpdate = true;\n          currentBackground = background;\n          currentBackgroundVersion = background.version;\n          currentTonemapping = renderer.toneMapping;\n        } // push to the pre-sorted opaque render list\n\n\n        renderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null);\n      }\n    }\n\n    function setClear(color, alpha) {\n      state.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n    }\n\n    return {\n      getClearColor: function getClearColor() {\n        return clearColor;\n      },\n      setClearColor: function setClearColor(color, alpha) {\n        if (alpha === void 0) {\n          alpha = 1;\n        }\n\n        clearColor.set(color);\n        clearAlpha = alpha;\n        setClear(clearColor, clearAlpha);\n      },\n      getClearAlpha: function getClearAlpha() {\n        return clearAlpha;\n      },\n      setClearAlpha: function setClearAlpha(alpha) {\n        clearAlpha = alpha;\n        setClear(clearColor, clearAlpha);\n      },\n      render: render\n    };\n  }\n\n  function WebGLBindingStates(gl, extensions, attributes, capabilities) {\n    var maxVertexAttributes = gl.getParameter(34921);\n    var extension = capabilities.isWebGL2 ? null : extensions.get('OES_vertex_array_object');\n    var vaoAvailable = capabilities.isWebGL2 || extension !== null;\n    var bindingStates = {};\n    var defaultState = createBindingState(null);\n    var currentState = defaultState;\n\n    function setup(object, material, program, geometry, index) {\n      var updateBuffers = false;\n\n      if (vaoAvailable) {\n        var state = getBindingState(geometry, program, material);\n\n        if (currentState !== state) {\n          currentState = state;\n          bindVertexArrayObject(currentState.object);\n        }\n\n        updateBuffers = needsUpdate(geometry, index);\n        if (updateBuffers) saveCache(geometry, index);\n      } else {\n        var wireframe = material.wireframe === true;\n\n        if (currentState.geometry !== geometry.id || currentState.program !== program.id || currentState.wireframe !== wireframe) {\n          currentState.geometry = geometry.id;\n          currentState.program = program.id;\n          currentState.wireframe = wireframe;\n          updateBuffers = true;\n        }\n      }\n\n      if (object.isInstancedMesh === true) {\n        updateBuffers = true;\n      }\n\n      if (index !== null) {\n        attributes.update(index, 34963);\n      }\n\n      if (updateBuffers) {\n        setupVertexAttributes(object, material, program, geometry);\n\n        if (index !== null) {\n          gl.bindBuffer(34963, attributes.get(index).buffer);\n        }\n      }\n    }\n\n    function createVertexArrayObject() {\n      if (capabilities.isWebGL2) return gl.createVertexArray();\n      return extension.createVertexArrayOES();\n    }\n\n    function bindVertexArrayObject(vao) {\n      if (capabilities.isWebGL2) return gl.bindVertexArray(vao);\n      return extension.bindVertexArrayOES(vao);\n    }\n\n    function deleteVertexArrayObject(vao) {\n      if (capabilities.isWebGL2) return gl.deleteVertexArray(vao);\n      return extension.deleteVertexArrayOES(vao);\n    }\n\n    function getBindingState(geometry, program, material) {\n      var wireframe = material.wireframe === true;\n      var programMap = bindingStates[geometry.id];\n\n      if (programMap === undefined) {\n        programMap = {};\n        bindingStates[geometry.id] = programMap;\n      }\n\n      var stateMap = programMap[program.id];\n\n      if (stateMap === undefined) {\n        stateMap = {};\n        programMap[program.id] = stateMap;\n      }\n\n      var state = stateMap[wireframe];\n\n      if (state === undefined) {\n        state = createBindingState(createVertexArrayObject());\n        stateMap[wireframe] = state;\n      }\n\n      return state;\n    }\n\n    function createBindingState(vao) {\n      var newAttributes = [];\n      var enabledAttributes = [];\n      var attributeDivisors = [];\n\n      for (var i = 0; i < maxVertexAttributes; i++) {\n        newAttributes[i] = 0;\n        enabledAttributes[i] = 0;\n        attributeDivisors[i] = 0;\n      }\n\n      return {\n        // for backward compatibility on non-VAO support browser\n        geometry: null,\n        program: null,\n        wireframe: false,\n        newAttributes: newAttributes,\n        enabledAttributes: enabledAttributes,\n        attributeDivisors: attributeDivisors,\n        object: vao,\n        attributes: {},\n        index: null\n      };\n    }\n\n    function needsUpdate(geometry, index) {\n      var cachedAttributes = currentState.attributes;\n      var geometryAttributes = geometry.attributes;\n      var attributesNum = 0;\n\n      for (var key in geometryAttributes) {\n        var cachedAttribute = cachedAttributes[key];\n        var geometryAttribute = geometryAttributes[key];\n        if (cachedAttribute === undefined) return true;\n        if (cachedAttribute.attribute !== geometryAttribute) return true;\n        if (cachedAttribute.data !== geometryAttribute.data) return true;\n        attributesNum++;\n      }\n\n      if (currentState.attributesNum !== attributesNum) return true;\n      if (currentState.index !== index) return true;\n      return false;\n    }\n\n    function saveCache(geometry, index) {\n      var cache = {};\n      var attributes = geometry.attributes;\n      var attributesNum = 0;\n\n      for (var key in attributes) {\n        var attribute = attributes[key];\n        var data = {};\n        data.attribute = attribute;\n\n        if (attribute.data) {\n          data.data = attribute.data;\n        }\n\n        cache[key] = data;\n        attributesNum++;\n      }\n\n      currentState.attributes = cache;\n      currentState.attributesNum = attributesNum;\n      currentState.index = index;\n    }\n\n    function initAttributes() {\n      var newAttributes = currentState.newAttributes;\n\n      for (var i = 0, il = newAttributes.length; i < il; i++) {\n        newAttributes[i] = 0;\n      }\n    }\n\n    function enableAttribute(attribute) {\n      enableAttributeAndDivisor(attribute, 0);\n    }\n\n    function enableAttributeAndDivisor(attribute, meshPerAttribute) {\n      var newAttributes = currentState.newAttributes;\n      var enabledAttributes = currentState.enabledAttributes;\n      var attributeDivisors = currentState.attributeDivisors;\n      newAttributes[attribute] = 1;\n\n      if (enabledAttributes[attribute] === 0) {\n        gl.enableVertexAttribArray(attribute);\n        enabledAttributes[attribute] = 1;\n      }\n\n      if (attributeDivisors[attribute] !== meshPerAttribute) {\n        var _extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\n\n        _extension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\n\n        attributeDivisors[attribute] = meshPerAttribute;\n      }\n    }\n\n    function disableUnusedAttributes() {\n      var newAttributes = currentState.newAttributes;\n      var enabledAttributes = currentState.enabledAttributes;\n\n      for (var i = 0, il = enabledAttributes.length; i < il; i++) {\n        if (enabledAttributes[i] !== newAttributes[i]) {\n          gl.disableVertexAttribArray(i);\n          enabledAttributes[i] = 0;\n        }\n      }\n    }\n\n    function vertexAttribPointer(index, size, type, normalized, stride, offset) {\n      if (capabilities.isWebGL2 === true && (type === 5124 || type === 5125)) {\n        gl.vertexAttribIPointer(index, size, type, stride, offset);\n      } else {\n        gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n      }\n    }\n\n    function setupVertexAttributes(object, material, program, geometry) {\n      if (capabilities.isWebGL2 === false && (object.isInstancedMesh || geometry.isInstancedBufferGeometry)) {\n        if (extensions.get('ANGLE_instanced_arrays') === null) return;\n      }\n\n      initAttributes();\n      var geometryAttributes = geometry.attributes;\n      var programAttributes = program.getAttributes();\n      var materialDefaultAttributeValues = material.defaultAttributeValues;\n\n      for (var name in programAttributes) {\n        var programAttribute = programAttributes[name];\n\n        if (programAttribute >= 0) {\n          var geometryAttribute = geometryAttributes[name];\n\n          if (geometryAttribute !== undefined) {\n            var normalized = geometryAttribute.normalized;\n            var size = geometryAttribute.itemSize;\n            var attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n            if (attribute === undefined) continue;\n            var buffer = attribute.buffer;\n            var type = attribute.type;\n            var bytesPerElement = attribute.bytesPerElement;\n\n            if (geometryAttribute.isInterleavedBufferAttribute) {\n              var data = geometryAttribute.data;\n              var stride = data.stride;\n              var offset = geometryAttribute.offset;\n\n              if (data && data.isInstancedInterleavedBuffer) {\n                enableAttributeAndDivisor(programAttribute, data.meshPerAttribute);\n\n                if (geometry._maxInstanceCount === undefined) {\n                  geometry._maxInstanceCount = data.meshPerAttribute * data.count;\n                }\n              } else {\n                enableAttribute(programAttribute);\n              }\n\n              gl.bindBuffer(34962, buffer);\n              vertexAttribPointer(programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement);\n            } else {\n              if (geometryAttribute.isInstancedBufferAttribute) {\n                enableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute);\n\n                if (geometry._maxInstanceCount === undefined) {\n                  geometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n                }\n              } else {\n                enableAttribute(programAttribute);\n              }\n\n              gl.bindBuffer(34962, buffer);\n              vertexAttribPointer(programAttribute, size, type, normalized, 0, 0);\n            }\n          } else if (name === 'instanceMatrix') {\n            var _attribute = attributes.get(object.instanceMatrix); // TODO Attribute may not be available on context restore\n\n\n            if (_attribute === undefined) continue;\n            var _buffer = _attribute.buffer;\n            var _type = _attribute.type;\n            enableAttributeAndDivisor(programAttribute + 0, 1);\n            enableAttributeAndDivisor(programAttribute + 1, 1);\n            enableAttributeAndDivisor(programAttribute + 2, 1);\n            enableAttributeAndDivisor(programAttribute + 3, 1);\n            gl.bindBuffer(34962, _buffer);\n            gl.vertexAttribPointer(programAttribute + 0, 4, _type, false, 64, 0);\n            gl.vertexAttribPointer(programAttribute + 1, 4, _type, false, 64, 16);\n            gl.vertexAttribPointer(programAttribute + 2, 4, _type, false, 64, 32);\n            gl.vertexAttribPointer(programAttribute + 3, 4, _type, false, 64, 48);\n          } else if (name === 'instanceColor') {\n            var _attribute2 = attributes.get(object.instanceColor); // TODO Attribute may not be available on context restore\n\n\n            if (_attribute2 === undefined) continue;\n            var _buffer2 = _attribute2.buffer;\n            var _type2 = _attribute2.type;\n            enableAttributeAndDivisor(programAttribute, 1);\n            gl.bindBuffer(34962, _buffer2);\n            gl.vertexAttribPointer(programAttribute, 3, _type2, false, 12, 0);\n          } else if (materialDefaultAttributeValues !== undefined) {\n            var value = materialDefaultAttributeValues[name];\n\n            if (value !== undefined) {\n              switch (value.length) {\n                case 2:\n                  gl.vertexAttrib2fv(programAttribute, value);\n                  break;\n\n                case 3:\n                  gl.vertexAttrib3fv(programAttribute, value);\n                  break;\n\n                case 4:\n                  gl.vertexAttrib4fv(programAttribute, value);\n                  break;\n\n                default:\n                  gl.vertexAttrib1fv(programAttribute, value);\n              }\n            }\n          }\n        }\n      }\n\n      disableUnusedAttributes();\n    }\n\n    function dispose() {\n      reset();\n\n      for (var geometryId in bindingStates) {\n        var programMap = bindingStates[geometryId];\n\n        for (var programId in programMap) {\n          var stateMap = programMap[programId];\n\n          for (var wireframe in stateMap) {\n            deleteVertexArrayObject(stateMap[wireframe].object);\n            delete stateMap[wireframe];\n          }\n\n          delete programMap[programId];\n        }\n\n        delete bindingStates[geometryId];\n      }\n    }\n\n    function releaseStatesOfGeometry(geometry) {\n      if (bindingStates[geometry.id] === undefined) return;\n      var programMap = bindingStates[geometry.id];\n\n      for (var programId in programMap) {\n        var stateMap = programMap[programId];\n\n        for (var wireframe in stateMap) {\n          deleteVertexArrayObject(stateMap[wireframe].object);\n          delete stateMap[wireframe];\n        }\n\n        delete programMap[programId];\n      }\n\n      delete bindingStates[geometry.id];\n    }\n\n    function releaseStatesOfProgram(program) {\n      for (var geometryId in bindingStates) {\n        var programMap = bindingStates[geometryId];\n        if (programMap[program.id] === undefined) continue;\n        var stateMap = programMap[program.id];\n\n        for (var wireframe in stateMap) {\n          deleteVertexArrayObject(stateMap[wireframe].object);\n          delete stateMap[wireframe];\n        }\n\n        delete programMap[program.id];\n      }\n    }\n\n    function reset() {\n      resetDefaultState();\n      if (currentState === defaultState) return;\n      currentState = defaultState;\n      bindVertexArrayObject(currentState.object);\n    } // for backward-compatilibity\n\n\n    function resetDefaultState() {\n      defaultState.geometry = null;\n      defaultState.program = null;\n      defaultState.wireframe = false;\n    }\n\n    return {\n      setup: setup,\n      reset: reset,\n      resetDefaultState: resetDefaultState,\n      dispose: dispose,\n      releaseStatesOfGeometry: releaseStatesOfGeometry,\n      releaseStatesOfProgram: releaseStatesOfProgram,\n      initAttributes: initAttributes,\n      enableAttribute: enableAttribute,\n      disableUnusedAttributes: disableUnusedAttributes\n    };\n  }\n\n  function WebGLBufferRenderer(gl, extensions, info, capabilities) {\n    var isWebGL2 = capabilities.isWebGL2;\n    var mode;\n\n    function setMode(value) {\n      mode = value;\n    }\n\n    function render(start, count) {\n      gl.drawArrays(mode, start, count);\n      info.update(count, mode, 1);\n    }\n\n    function renderInstances(start, count, primcount) {\n      if (primcount === 0) return;\n      var extension, methodName;\n\n      if (isWebGL2) {\n        extension = gl;\n        methodName = 'drawArraysInstanced';\n      } else {\n        extension = extensions.get('ANGLE_instanced_arrays');\n        methodName = 'drawArraysInstancedANGLE';\n\n        if (extension === null) {\n          console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n          return;\n        }\n      }\n\n      extension[methodName](mode, start, count, primcount);\n      info.update(count, mode, primcount);\n    } //\n\n\n    this.setMode = setMode;\n    this.render = render;\n    this.renderInstances = renderInstances;\n  }\n\n  function WebGLCapabilities(gl, extensions, parameters) {\n    var maxAnisotropy;\n\n    function getMaxAnisotropy() {\n      if (maxAnisotropy !== undefined) return maxAnisotropy;\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension !== null) {\n        maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n      } else {\n        maxAnisotropy = 0;\n      }\n\n      return maxAnisotropy;\n    }\n\n    function getMaxPrecision(precision) {\n      if (precision === 'highp') {\n        if (gl.getShaderPrecisionFormat(35633, 36338).precision > 0 && gl.getShaderPrecisionFormat(35632, 36338).precision > 0) {\n          return 'highp';\n        }\n\n        precision = 'mediump';\n      }\n\n      if (precision === 'mediump') {\n        if (gl.getShaderPrecisionFormat(35633, 36337).precision > 0 && gl.getShaderPrecisionFormat(35632, 36337).precision > 0) {\n          return 'mediump';\n        }\n      }\n\n      return 'lowp';\n    }\n    /* eslint-disable no-undef */\n\n\n    var isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\n    /* eslint-enable no-undef */\n\n    var precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n    var maxPrecision = getMaxPrecision(precision);\n\n    if (maxPrecision !== precision) {\n      console.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n      precision = maxPrecision;\n    }\n\n    var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n    var maxTextures = gl.getParameter(34930);\n    var maxVertexTextures = gl.getParameter(35660);\n    var maxTextureSize = gl.getParameter(3379);\n    var maxCubemapSize = gl.getParameter(34076);\n    var maxAttributes = gl.getParameter(34921);\n    var maxVertexUniforms = gl.getParameter(36347);\n    var maxVaryings = gl.getParameter(36348);\n    var maxFragmentUniforms = gl.getParameter(36349);\n    var vertexTextures = maxVertexTextures > 0;\n    var floatFragmentTextures = isWebGL2 || !!extensions.get('OES_texture_float');\n    var floatVertexTextures = vertexTextures && floatFragmentTextures;\n    var maxSamples = isWebGL2 ? gl.getParameter(36183) : 0;\n    return {\n      isWebGL2: isWebGL2,\n      getMaxAnisotropy: getMaxAnisotropy,\n      getMaxPrecision: getMaxPrecision,\n      precision: precision,\n      logarithmicDepthBuffer: logarithmicDepthBuffer,\n      maxTextures: maxTextures,\n      maxVertexTextures: maxVertexTextures,\n      maxTextureSize: maxTextureSize,\n      maxCubemapSize: maxCubemapSize,\n      maxAttributes: maxAttributes,\n      maxVertexUniforms: maxVertexUniforms,\n      maxVaryings: maxVaryings,\n      maxFragmentUniforms: maxFragmentUniforms,\n      vertexTextures: vertexTextures,\n      floatFragmentTextures: floatFragmentTextures,\n      floatVertexTextures: floatVertexTextures,\n      maxSamples: maxSamples\n    };\n  }\n\n  function WebGLClipping(properties) {\n    var scope = this;\n    var globalState = null,\n        numGlobalPlanes = 0,\n        localClippingEnabled = false,\n        renderingShadows = false;\n    var plane = new Plane(),\n        viewNormalMatrix = new Matrix3(),\n        uniform = {\n      value: null,\n      needsUpdate: false\n    };\n    this.uniform = uniform;\n    this.numPlanes = 0;\n    this.numIntersection = 0;\n\n    this.init = function (planes, enableLocalClipping, camera) {\n      var enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n      // run another frame in order to reset the state:\n      numGlobalPlanes !== 0 || localClippingEnabled;\n      localClippingEnabled = enableLocalClipping;\n      globalState = projectPlanes(planes, camera, 0);\n      numGlobalPlanes = planes.length;\n      return enabled;\n    };\n\n    this.beginShadows = function () {\n      renderingShadows = true;\n      projectPlanes(null);\n    };\n\n    this.endShadows = function () {\n      renderingShadows = false;\n      resetGlobalState();\n    };\n\n    this.setState = function (material, camera, useCache) {\n      var planes = material.clippingPlanes,\n          clipIntersection = material.clipIntersection,\n          clipShadows = material.clipShadows;\n      var materialProperties = properties.get(material);\n\n      if (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n        // there's no local clipping\n        if (renderingShadows) {\n          // there's no global clipping\n          projectPlanes(null);\n        } else {\n          resetGlobalState();\n        }\n      } else {\n        var nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n            lGlobal = nGlobal * 4;\n        var dstArray = materialProperties.clippingState || null;\n        uniform.value = dstArray; // ensure unique state\n\n        dstArray = projectPlanes(planes, camera, lGlobal, useCache);\n\n        for (var i = 0; i !== lGlobal; ++i) {\n          dstArray[i] = globalState[i];\n        }\n\n        materialProperties.clippingState = dstArray;\n        this.numIntersection = clipIntersection ? this.numPlanes : 0;\n        this.numPlanes += nGlobal;\n      }\n    };\n\n    function resetGlobalState() {\n      if (uniform.value !== globalState) {\n        uniform.value = globalState;\n        uniform.needsUpdate = numGlobalPlanes > 0;\n      }\n\n      scope.numPlanes = numGlobalPlanes;\n      scope.numIntersection = 0;\n    }\n\n    function projectPlanes(planes, camera, dstOffset, skipTransform) {\n      var nPlanes = planes !== null ? planes.length : 0;\n      var dstArray = null;\n\n      if (nPlanes !== 0) {\n        dstArray = uniform.value;\n\n        if (skipTransform !== true || dstArray === null) {\n          var flatSize = dstOffset + nPlanes * 4,\n              viewMatrix = camera.matrixWorldInverse;\n          viewNormalMatrix.getNormalMatrix(viewMatrix);\n\n          if (dstArray === null || dstArray.length < flatSize) {\n            dstArray = new Float32Array(flatSize);\n          }\n\n          for (var i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n            plane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n            plane.normal.toArray(dstArray, i4);\n            dstArray[i4 + 3] = plane.constant;\n          }\n        }\n\n        uniform.value = dstArray;\n        uniform.needsUpdate = true;\n      }\n\n      scope.numPlanes = nPlanes;\n      scope.numIntersection = 0;\n      return dstArray;\n    }\n  }\n\n  function WebGLCubeMaps(renderer) {\n    var cubemaps = new WeakMap();\n\n    function mapTextureMapping(texture, mapping) {\n      if (mapping === EquirectangularReflectionMapping) {\n        texture.mapping = CubeReflectionMapping;\n      } else if (mapping === EquirectangularRefractionMapping) {\n        texture.mapping = CubeRefractionMapping;\n      }\n\n      return texture;\n    }\n\n    function get(texture) {\n      if (texture && texture.isTexture) {\n        var mapping = texture.mapping;\n\n        if (mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping) {\n          if (cubemaps.has(texture)) {\n            var cubemap = cubemaps.get(texture).texture;\n            return mapTextureMapping(cubemap, texture.mapping);\n          } else {\n            var image = texture.image;\n\n            if (image && image.height > 0) {\n              var currentRenderList = renderer.getRenderList();\n              var currentRenderTarget = renderer.getRenderTarget();\n              var renderTarget = new WebGLCubeRenderTarget(image.height / 2);\n              renderTarget.fromEquirectangularTexture(renderer, texture);\n              cubemaps.set(texture, renderTarget);\n              renderer.setRenderTarget(currentRenderTarget);\n              renderer.setRenderList(currentRenderList);\n              texture.addEventListener('dispose', onTextureDispose);\n              return mapTextureMapping(renderTarget.texture, texture.mapping);\n            } else {\n              // image not yet ready. try the conversion next frame\n              return null;\n            }\n          }\n        }\n      }\n\n      return texture;\n    }\n\n    function onTextureDispose(event) {\n      var texture = event.target;\n      texture.removeEventListener('dispose', onTextureDispose);\n      var cubemap = cubemaps.get(texture);\n\n      if (cubemap !== undefined) {\n        cubemaps.delete(texture);\n        cubemap.dispose();\n      }\n    }\n\n    function dispose() {\n      cubemaps = new WeakMap();\n    }\n\n    return {\n      get: get,\n      dispose: dispose\n    };\n  }\n\n  function WebGLExtensions(gl) {\n    var extensions = {};\n\n    function getExtension(name) {\n      if (extensions[name] !== undefined) {\n        return extensions[name];\n      }\n\n      var extension;\n\n      switch (name) {\n        case 'WEBGL_depth_texture':\n          extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n          break;\n\n        case 'EXT_texture_filter_anisotropic':\n          extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n          break;\n\n        case 'WEBGL_compressed_texture_s3tc':\n          extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n          break;\n\n        case 'WEBGL_compressed_texture_pvrtc':\n          extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n          break;\n\n        default:\n          extension = gl.getExtension(name);\n      }\n\n      extensions[name] = extension;\n      return extension;\n    }\n\n    return {\n      has: function has(name) {\n        return getExtension(name) !== null;\n      },\n      init: function init(capabilities) {\n        if (capabilities.isWebGL2) {\n          getExtension('EXT_color_buffer_float');\n        } else {\n          getExtension('WEBGL_depth_texture');\n          getExtension('OES_texture_float');\n          getExtension('OES_texture_half_float');\n          getExtension('OES_texture_half_float_linear');\n          getExtension('OES_standard_derivatives');\n          getExtension('OES_element_index_uint');\n          getExtension('OES_vertex_array_object');\n          getExtension('ANGLE_instanced_arrays');\n        }\n\n        getExtension('OES_texture_float_linear');\n        getExtension('EXT_color_buffer_half_float');\n      },\n      get: function get(name) {\n        var extension = getExtension(name);\n\n        if (extension === null) {\n          console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n        }\n\n        return extension;\n      }\n    };\n  }\n\n  function WebGLGeometries(gl, attributes, info, bindingStates) {\n    var geometries = {};\n    var wireframeAttributes = new WeakMap();\n\n    function onGeometryDispose(event) {\n      var geometry = event.target;\n\n      if (geometry.index !== null) {\n        attributes.remove(geometry.index);\n      }\n\n      for (var name in geometry.attributes) {\n        attributes.remove(geometry.attributes[name]);\n      }\n\n      geometry.removeEventListener('dispose', onGeometryDispose);\n      delete geometries[geometry.id];\n      var attribute = wireframeAttributes.get(geometry);\n\n      if (attribute) {\n        attributes.remove(attribute);\n        wireframeAttributes.delete(geometry);\n      }\n\n      bindingStates.releaseStatesOfGeometry(geometry);\n\n      if (geometry.isInstancedBufferGeometry === true) {\n        delete geometry._maxInstanceCount;\n      } //\n\n\n      info.memory.geometries--;\n    }\n\n    function get(object, geometry) {\n      if (geometries[geometry.id] === true) return geometry;\n      geometry.addEventListener('dispose', onGeometryDispose);\n      geometries[geometry.id] = true;\n      info.memory.geometries++;\n      return geometry;\n    }\n\n    function update(geometry) {\n      var geometryAttributes = geometry.attributes; // Updating index buffer in VAO now. See WebGLBindingStates.\n\n      for (var name in geometryAttributes) {\n        attributes.update(geometryAttributes[name], 34962);\n      } // morph targets\n\n\n      var morphAttributes = geometry.morphAttributes;\n\n      for (var _name in morphAttributes) {\n        var array = morphAttributes[_name];\n\n        for (var i = 0, l = array.length; i < l; i++) {\n          attributes.update(array[i], 34962);\n        }\n      }\n    }\n\n    function updateWireframeAttribute(geometry) {\n      var indices = [];\n      var geometryIndex = geometry.index;\n      var geometryPosition = geometry.attributes.position;\n      var version = 0;\n\n      if (geometryIndex !== null) {\n        var array = geometryIndex.array;\n        version = geometryIndex.version;\n\n        for (var i = 0, l = array.length; i < l; i += 3) {\n          var a = array[i + 0];\n          var b = array[i + 1];\n          var c = array[i + 2];\n          indices.push(a, b, b, c, c, a);\n        }\n      } else {\n        var _array = geometryPosition.array;\n        version = geometryPosition.version;\n\n        for (var _i = 0, _l = _array.length / 3 - 1; _i < _l; _i += 3) {\n          var _a = _i + 0;\n\n          var _b = _i + 1;\n\n          var _c = _i + 2;\n\n          indices.push(_a, _b, _b, _c, _c, _a);\n        }\n      }\n\n      var attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n      attribute.version = version; // Updating index buffer in VAO now. See WebGLBindingStates\n      //\n\n      var previousAttribute = wireframeAttributes.get(geometry);\n      if (previousAttribute) attributes.remove(previousAttribute); //\n\n      wireframeAttributes.set(geometry, attribute);\n    }\n\n    function getWireframeAttribute(geometry) {\n      var currentAttribute = wireframeAttributes.get(geometry);\n\n      if (currentAttribute) {\n        var geometryIndex = geometry.index;\n\n        if (geometryIndex !== null) {\n          // if the attribute is obsolete, create a new one\n          if (currentAttribute.version < geometryIndex.version) {\n            updateWireframeAttribute(geometry);\n          }\n        }\n      } else {\n        updateWireframeAttribute(geometry);\n      }\n\n      return wireframeAttributes.get(geometry);\n    }\n\n    return {\n      get: get,\n      update: update,\n      getWireframeAttribute: getWireframeAttribute\n    };\n  }\n\n  function WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n    var isWebGL2 = capabilities.isWebGL2;\n    var mode;\n\n    function setMode(value) {\n      mode = value;\n    }\n\n    var type, bytesPerElement;\n\n    function setIndex(value) {\n      type = value.type;\n      bytesPerElement = value.bytesPerElement;\n    }\n\n    function render(start, count) {\n      gl.drawElements(mode, count, type, start * bytesPerElement);\n      info.update(count, mode, 1);\n    }\n\n    function renderInstances(start, count, primcount) {\n      if (primcount === 0) return;\n      var extension, methodName;\n\n      if (isWebGL2) {\n        extension = gl;\n        methodName = 'drawElementsInstanced';\n      } else {\n        extension = extensions.get('ANGLE_instanced_arrays');\n        methodName = 'drawElementsInstancedANGLE';\n\n        if (extension === null) {\n          console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n          return;\n        }\n      }\n\n      extension[methodName](mode, count, type, start * bytesPerElement, primcount);\n      info.update(count, mode, primcount);\n    } //\n\n\n    this.setMode = setMode;\n    this.setIndex = setIndex;\n    this.render = render;\n    this.renderInstances = renderInstances;\n  }\n\n  function WebGLInfo(gl) {\n    var memory = {\n      geometries: 0,\n      textures: 0\n    };\n    var render = {\n      frame: 0,\n      calls: 0,\n      triangles: 0,\n      points: 0,\n      lines: 0\n    };\n\n    function update(count, mode, instanceCount) {\n      render.calls++;\n\n      switch (mode) {\n        case 4:\n          render.triangles += instanceCount * (count / 3);\n          break;\n\n        case 1:\n          render.lines += instanceCount * (count / 2);\n          break;\n\n        case 3:\n          render.lines += instanceCount * (count - 1);\n          break;\n\n        case 2:\n          render.lines += instanceCount * count;\n          break;\n\n        case 0:\n          render.points += instanceCount * count;\n          break;\n\n        default:\n          console.error('THREE.WebGLInfo: Unknown draw mode:', mode);\n          break;\n      }\n    }\n\n    function reset() {\n      render.frame++;\n      render.calls = 0;\n      render.triangles = 0;\n      render.points = 0;\n      render.lines = 0;\n    }\n\n    return {\n      memory: memory,\n      render: render,\n      programs: null,\n      autoReset: true,\n      reset: reset,\n      update: update\n    };\n  }\n\n  function numericalSort(a, b) {\n    return a[0] - b[0];\n  }\n\n  function absNumericalSort(a, b) {\n    return Math.abs(b[1]) - Math.abs(a[1]);\n  }\n\n  function WebGLMorphtargets(gl) {\n    var influencesList = {};\n    var morphInfluences = new Float32Array(8);\n    var workInfluences = [];\n\n    for (var i = 0; i < 8; i++) {\n      workInfluences[i] = [i, 0];\n    }\n\n    function update(object, geometry, material, program) {\n      var objectInfluences = object.morphTargetInfluences; // When object doesn't have morph target influences defined, we treat it as a 0-length array\n      // This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n      var length = objectInfluences === undefined ? 0 : objectInfluences.length;\n      var influences = influencesList[geometry.id];\n\n      if (influences === undefined) {\n        // initialise list\n        influences = [];\n\n        for (var _i = 0; _i < length; _i++) {\n          influences[_i] = [_i, 0];\n        }\n\n        influencesList[geometry.id] = influences;\n      } // Collect influences\n\n\n      for (var _i2 = 0; _i2 < length; _i2++) {\n        var influence = influences[_i2];\n        influence[0] = _i2;\n        influence[1] = objectInfluences[_i2];\n      }\n\n      influences.sort(absNumericalSort);\n\n      for (var _i3 = 0; _i3 < 8; _i3++) {\n        if (_i3 < length && influences[_i3][1]) {\n          workInfluences[_i3][0] = influences[_i3][0];\n          workInfluences[_i3][1] = influences[_i3][1];\n        } else {\n          workInfluences[_i3][0] = Number.MAX_SAFE_INTEGER;\n          workInfluences[_i3][1] = 0;\n        }\n      }\n\n      workInfluences.sort(numericalSort);\n      var morphTargets = material.morphTargets && geometry.morphAttributes.position;\n      var morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n      var morphInfluencesSum = 0;\n\n      for (var _i4 = 0; _i4 < 8; _i4++) {\n        var _influence = workInfluences[_i4];\n        var index = _influence[0];\n        var value = _influence[1];\n\n        if (index !== Number.MAX_SAFE_INTEGER && value) {\n          if (morphTargets && geometry.getAttribute('morphTarget' + _i4) !== morphTargets[index]) {\n            geometry.setAttribute('morphTarget' + _i4, morphTargets[index]);\n          }\n\n          if (morphNormals && geometry.getAttribute('morphNormal' + _i4) !== morphNormals[index]) {\n            geometry.setAttribute('morphNormal' + _i4, morphNormals[index]);\n          }\n\n          morphInfluences[_i4] = value;\n          morphInfluencesSum += value;\n        } else {\n          if (morphTargets && geometry.hasAttribute('morphTarget' + _i4) === true) {\n            geometry.deleteAttribute('morphTarget' + _i4);\n          }\n\n          if (morphNormals && geometry.hasAttribute('morphNormal' + _i4) === true) {\n            geometry.deleteAttribute('morphNormal' + _i4);\n          }\n\n          morphInfluences[_i4] = 0;\n        }\n      } // GLSL shader uses formula baseinfluence * base + sum(target * influence)\n      // This allows us to switch between absolute morphs and relative morphs without changing shader code\n      // When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\n\n      var morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n      program.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\n      program.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\n    }\n\n    return {\n      update: update\n    };\n  }\n\n  function WebGLObjects(gl, geometries, attributes, info) {\n    var updateMap = new WeakMap();\n\n    function update(object) {\n      var frame = info.render.frame;\n      var geometry = object.geometry;\n      var buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n      if (updateMap.get(buffergeometry) !== frame) {\n        geometries.update(buffergeometry);\n        updateMap.set(buffergeometry, frame);\n      }\n\n      if (object.isInstancedMesh) {\n        if (object.hasEventListener('dispose', onInstancedMeshDispose) === false) {\n          object.addEventListener('dispose', onInstancedMeshDispose);\n        }\n\n        attributes.update(object.instanceMatrix, 34962);\n\n        if (object.instanceColor !== null) {\n          attributes.update(object.instanceColor, 34962);\n        }\n      }\n\n      return buffergeometry;\n    }\n\n    function dispose() {\n      updateMap = new WeakMap();\n    }\n\n    function onInstancedMeshDispose(event) {\n      var instancedMesh = event.target;\n      instancedMesh.removeEventListener('dispose', onInstancedMeshDispose);\n      attributes.remove(instancedMesh.instanceMatrix);\n      if (instancedMesh.instanceColor !== null) attributes.remove(instancedMesh.instanceColor);\n    }\n\n    return {\n      update: update,\n      dispose: dispose\n    };\n  }\n\n  function DataTexture2DArray(data, width, height, depth) {\n    if (data === void 0) {\n      data = null;\n    }\n\n    if (width === void 0) {\n      width = 1;\n    }\n\n    if (height === void 0) {\n      height = 1;\n    }\n\n    if (depth === void 0) {\n      depth = 1;\n    }\n\n    Texture.call(this, null);\n    this.image = {\n      data: data,\n      width: width,\n      height: height,\n      depth: depth\n    };\n    this.magFilter = NearestFilter;\n    this.minFilter = NearestFilter;\n    this.wrapR = ClampToEdgeWrapping;\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.needsUpdate = true;\n  }\n\n  DataTexture2DArray.prototype = Object.create(Texture.prototype);\n  DataTexture2DArray.prototype.constructor = DataTexture2DArray;\n  DataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n  function DataTexture3D(data, width, height, depth) {\n    if (data === void 0) {\n      data = null;\n    }\n\n    if (width === void 0) {\n      width = 1;\n    }\n\n    if (height === void 0) {\n      height = 1;\n    }\n\n    if (depth === void 0) {\n      depth = 1;\n    } // We're going to add .setXXX() methods for setting properties later.\n    // Users can still set in DataTexture3D directly.\n    //\n    //\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n    // \ttexture.anisotropy = 16;\n    //\n    // See #14839\n\n\n    Texture.call(this, null);\n    this.image = {\n      data: data,\n      width: width,\n      height: height,\n      depth: depth\n    };\n    this.magFilter = NearestFilter;\n    this.minFilter = NearestFilter;\n    this.wrapR = ClampToEdgeWrapping;\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.needsUpdate = true;\n  }\n\n  DataTexture3D.prototype = Object.create(Texture.prototype);\n  DataTexture3D.prototype.constructor = DataTexture3D;\n  DataTexture3D.prototype.isDataTexture3D = true;\n  /**\n   * Uniforms of a program.\n   * Those form a tree structure with a special top-level container for the root,\n   * which you get by calling 'new WebGLUniforms( gl, program )'.\n   *\n   *\n   * Properties of inner nodes including the top-level container:\n   *\n   * .seq - array of nested uniforms\n   * .map - nested uniforms by name\n   *\n   *\n   * Methods of all nodes except the top-level container:\n   *\n   * .setValue( gl, value, [textures] )\n   *\n   * \t\tuploads a uniform value(s)\n   *\t\tthe 'textures' parameter is needed for sampler uniforms\n   *\n   *\n   * Static methods of the top-level container (textures factorizations):\n   *\n   * .upload( gl, seq, values, textures )\n   *\n   * \t\tsets uniforms in 'seq' to 'values[id].value'\n   *\n   * .seqWithValue( seq, values ) : filteredSeq\n   *\n   * \t\tfilters 'seq' entries with corresponding entry in values\n   *\n   *\n   * Methods of the top-level container (textures factorizations):\n   *\n   * .setValue( gl, name, value, textures )\n   *\n   * \t\tsets uniform with\tname 'name' to 'value'\n   *\n   * .setOptional( gl, obj, prop )\n   *\n   * \t\tlike .set for an optional property of the object\n   *\n   */\n\n  var emptyTexture = new Texture();\n  var emptyTexture2dArray = new DataTexture2DArray();\n  var emptyTexture3d = new DataTexture3D();\n  var emptyCubeTexture = new CubeTexture(); // --- Utilities ---\n  // Array Caches (provide typed arrays for temporary by size)\n\n  var arrayCacheF32 = [];\n  var arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\n  var mat4array = new Float32Array(16);\n  var mat3array = new Float32Array(9);\n  var mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\n\n  function flatten(array, nBlocks, blockSize) {\n    var firstElem = array[0];\n    if (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n    // see http://jacksondunstan.com/articles/983\n\n    var n = nBlocks * blockSize;\n    var r = arrayCacheF32[n];\n\n    if (r === undefined) {\n      r = new Float32Array(n);\n      arrayCacheF32[n] = r;\n    }\n\n    if (nBlocks !== 0) {\n      firstElem.toArray(r, 0);\n\n      for (var i = 1, offset = 0; i !== nBlocks; ++i) {\n        offset += blockSize;\n        array[i].toArray(r, offset);\n      }\n    }\n\n    return r;\n  }\n\n  function arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n\n    for (var i = 0, l = a.length; i < l; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n\n    return true;\n  }\n\n  function copyArray(a, b) {\n    for (var i = 0, l = b.length; i < l; i++) {\n      a[i] = b[i];\n    }\n  } // Texture unit allocation\n\n\n  function allocTexUnits(textures, n) {\n    var r = arrayCacheI32[n];\n\n    if (r === undefined) {\n      r = new Int32Array(n);\n      arrayCacheI32[n] = r;\n    }\n\n    for (var i = 0; i !== n; ++i) {\n      r[i] = textures.allocateTextureUnit();\n    }\n\n    return r;\n  } // --- Setters ---\n  // Note: Defining these methods externally, because they come in a bunch\n  // and this way their names minify.\n  // Single scalar\n\n\n  function setValueV1f(gl, v) {\n    var cache = this.cache;\n    if (cache[0] === v) return;\n    gl.uniform1f(this.addr, v);\n    cache[0] = v;\n  } // Single float vector (from flat array or THREE.VectorN)\n\n\n  function setValueV2f(gl, v) {\n    var cache = this.cache;\n\n    if (v.x !== undefined) {\n      if (cache[0] !== v.x || cache[1] !== v.y) {\n        gl.uniform2f(this.addr, v.x, v.y);\n        cache[0] = v.x;\n        cache[1] = v.y;\n      }\n    } else {\n      if (arraysEqual(cache, v)) return;\n      gl.uniform2fv(this.addr, v);\n      copyArray(cache, v);\n    }\n  }\n\n  function setValueV3f(gl, v) {\n    var cache = this.cache;\n\n    if (v.x !== undefined) {\n      if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n        gl.uniform3f(this.addr, v.x, v.y, v.z);\n        cache[0] = v.x;\n        cache[1] = v.y;\n        cache[2] = v.z;\n      }\n    } else if (v.r !== undefined) {\n      if (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n        gl.uniform3f(this.addr, v.r, v.g, v.b);\n        cache[0] = v.r;\n        cache[1] = v.g;\n        cache[2] = v.b;\n      }\n    } else {\n      if (arraysEqual(cache, v)) return;\n      gl.uniform3fv(this.addr, v);\n      copyArray(cache, v);\n    }\n  }\n\n  function setValueV4f(gl, v) {\n    var cache = this.cache;\n\n    if (v.x !== undefined) {\n      if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n        gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n        cache[0] = v.x;\n        cache[1] = v.y;\n        cache[2] = v.z;\n        cache[3] = v.w;\n      }\n    } else {\n      if (arraysEqual(cache, v)) return;\n      gl.uniform4fv(this.addr, v);\n      copyArray(cache, v);\n    }\n  } // Single matrix (from flat array or MatrixN)\n\n\n  function setValueM2(gl, v) {\n    var cache = this.cache;\n    var elements = v.elements;\n\n    if (elements === undefined) {\n      if (arraysEqual(cache, v)) return;\n      gl.uniformMatrix2fv(this.addr, false, v);\n      copyArray(cache, v);\n    } else {\n      if (arraysEqual(cache, elements)) return;\n      mat2array.set(elements);\n      gl.uniformMatrix2fv(this.addr, false, mat2array);\n      copyArray(cache, elements);\n    }\n  }\n\n  function setValueM3(gl, v) {\n    var cache = this.cache;\n    var elements = v.elements;\n\n    if (elements === undefined) {\n      if (arraysEqual(cache, v)) return;\n      gl.uniformMatrix3fv(this.addr, false, v);\n      copyArray(cache, v);\n    } else {\n      if (arraysEqual(cache, elements)) return;\n      mat3array.set(elements);\n      gl.uniformMatrix3fv(this.addr, false, mat3array);\n      copyArray(cache, elements);\n    }\n  }\n\n  function setValueM4(gl, v) {\n    var cache = this.cache;\n    var elements = v.elements;\n\n    if (elements === undefined) {\n      if (arraysEqual(cache, v)) return;\n      gl.uniformMatrix4fv(this.addr, false, v);\n      copyArray(cache, v);\n    } else {\n      if (arraysEqual(cache, elements)) return;\n      mat4array.set(elements);\n      gl.uniformMatrix4fv(this.addr, false, mat4array);\n      copyArray(cache, elements);\n    }\n  } // Single texture (2D / Cube)\n\n\n  function setValueT1(gl, v, textures) {\n    var cache = this.cache;\n    var unit = textures.allocateTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    textures.safeSetTexture2D(v || emptyTexture, unit);\n  }\n\n  function setValueT2DArray1(gl, v, textures) {\n    var cache = this.cache;\n    var unit = textures.allocateTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    textures.setTexture2DArray(v || emptyTexture2dArray, unit);\n  }\n\n  function setValueT3D1(gl, v, textures) {\n    var cache = this.cache;\n    var unit = textures.allocateTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    textures.setTexture3D(v || emptyTexture3d, unit);\n  }\n\n  function setValueT6(gl, v, textures) {\n    var cache = this.cache;\n    var unit = textures.allocateTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    textures.safeSetTextureCube(v || emptyCubeTexture, unit);\n  } // Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\n  function setValueV1i(gl, v) {\n    var cache = this.cache;\n    if (cache[0] === v) return;\n    gl.uniform1i(this.addr, v);\n    cache[0] = v;\n  }\n\n  function setValueV2i(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform2iv(this.addr, v);\n    copyArray(cache, v);\n  }\n\n  function setValueV3i(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform3iv(this.addr, v);\n    copyArray(cache, v);\n  }\n\n  function setValueV4i(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform4iv(this.addr, v);\n    copyArray(cache, v);\n  } // uint\n\n\n  function setValueV1ui(gl, v) {\n    var cache = this.cache;\n    if (cache[0] === v) return;\n    gl.uniform1ui(this.addr, v);\n    cache[0] = v;\n  } // Helper to pick the right setter for the singular case\n\n\n  function getSingularSetter(type) {\n    switch (type) {\n      case 0x1406:\n        return setValueV1f;\n      // FLOAT\n\n      case 0x8b50:\n        return setValueV2f;\n      // _VEC2\n\n      case 0x8b51:\n        return setValueV3f;\n      // _VEC3\n\n      case 0x8b52:\n        return setValueV4f;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValueM2;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValueM3;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValueM4;\n      // _MAT4\n\n      case 0x1404:\n      case 0x8b56:\n        return setValueV1i;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValueV2i;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValueV3i;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValueV4i;\n      // _VEC4\n\n      case 0x1405:\n        return setValueV1ui;\n      // UINT\n\n      case 0x8b5e: // SAMPLER_2D\n\n      case 0x8d66: // SAMPLER_EXTERNAL_OES\n\n      case 0x8dca: // INT_SAMPLER_2D\n\n      case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n      case 0x8b62:\n        // SAMPLER_2D_SHADOW\n        return setValueT1;\n\n      case 0x8b5f: // SAMPLER_3D\n\n      case 0x8dcb: // INT_SAMPLER_3D\n\n      case 0x8dd3:\n        // UNSIGNED_INT_SAMPLER_3D\n        return setValueT3D1;\n\n      case 0x8b60: // SAMPLER_CUBE\n\n      case 0x8dcc: // INT_SAMPLER_CUBE\n\n      case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n      case 0x8dc5:\n        // SAMPLER_CUBE_SHADOW\n        return setValueT6;\n\n      case 0x8dc1: // SAMPLER_2D_ARRAY\n\n      case 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\n      case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\n      case 0x8dc4:\n        // SAMPLER_2D_ARRAY_SHADOW\n        return setValueT2DArray1;\n    }\n  } // Array of scalars\n\n\n  function setValueV1fArray(gl, v) {\n    gl.uniform1fv(this.addr, v);\n  } // Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\n  function setValueV1iArray(gl, v) {\n    gl.uniform1iv(this.addr, v);\n  }\n\n  function setValueV2iArray(gl, v) {\n    gl.uniform2iv(this.addr, v);\n  }\n\n  function setValueV3iArray(gl, v) {\n    gl.uniform3iv(this.addr, v);\n  }\n\n  function setValueV4iArray(gl, v) {\n    gl.uniform4iv(this.addr, v);\n  } // Array of vectors (flat or from THREE classes)\n\n\n  function setValueV2fArray(gl, v) {\n    var data = flatten(v, this.size, 2);\n    gl.uniform2fv(this.addr, data);\n  }\n\n  function setValueV3fArray(gl, v) {\n    var data = flatten(v, this.size, 3);\n    gl.uniform3fv(this.addr, data);\n  }\n\n  function setValueV4fArray(gl, v) {\n    var data = flatten(v, this.size, 4);\n    gl.uniform4fv(this.addr, data);\n  } // Array of matrices (flat or from THREE clases)\n\n\n  function setValueM2Array(gl, v) {\n    var data = flatten(v, this.size, 4);\n    gl.uniformMatrix2fv(this.addr, false, data);\n  }\n\n  function setValueM3Array(gl, v) {\n    var data = flatten(v, this.size, 9);\n    gl.uniformMatrix3fv(this.addr, false, data);\n  }\n\n  function setValueM4Array(gl, v) {\n    var data = flatten(v, this.size, 16);\n    gl.uniformMatrix4fv(this.addr, false, data);\n  } // Array of textures (2D / Cube)\n\n\n  function setValueT1Array(gl, v, textures) {\n    var n = v.length;\n    var units = allocTexUnits(textures, n);\n    gl.uniform1iv(this.addr, units);\n\n    for (var i = 0; i !== n; ++i) {\n      textures.safeSetTexture2D(v[i] || emptyTexture, units[i]);\n    }\n  }\n\n  function setValueT6Array(gl, v, textures) {\n    var n = v.length;\n    var units = allocTexUnits(textures, n);\n    gl.uniform1iv(this.addr, units);\n\n    for (var i = 0; i !== n; ++i) {\n      textures.safeSetTextureCube(v[i] || emptyCubeTexture, units[i]);\n    }\n  } // Helper to pick the right setter for a pure (bottom-level) array\n\n\n  function getPureArraySetter(type) {\n    switch (type) {\n      case 0x1406:\n        return setValueV1fArray;\n      // FLOAT\n\n      case 0x8b50:\n        return setValueV2fArray;\n      // _VEC2\n\n      case 0x8b51:\n        return setValueV3fArray;\n      // _VEC3\n\n      case 0x8b52:\n        return setValueV4fArray;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValueM2Array;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValueM3Array;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValueM4Array;\n      // _MAT4\n\n      case 0x1404:\n      case 0x8b56:\n        return setValueV1iArray;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValueV2iArray;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValueV3iArray;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValueV4iArray;\n      // _VEC4\n\n      case 0x8b5e: // SAMPLER_2D\n\n      case 0x8d66: // SAMPLER_EXTERNAL_OES\n\n      case 0x8dca: // INT_SAMPLER_2D\n\n      case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n      case 0x8b62:\n        // SAMPLER_2D_SHADOW\n        return setValueT1Array;\n\n      case 0x8b60: // SAMPLER_CUBE\n\n      case 0x8dcc: // INT_SAMPLER_CUBE\n\n      case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n      case 0x8dc5:\n        // SAMPLER_CUBE_SHADOW\n        return setValueT6Array;\n    }\n  } // --- Uniform Classes ---\n\n\n  function SingleUniform(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.cache = [];\n    this.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  }\n\n  function PureArrayUniform(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.cache = [];\n    this.size = activeInfo.size;\n    this.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  }\n\n  PureArrayUniform.prototype.updateCache = function (data) {\n    var cache = this.cache;\n\n    if (data instanceof Float32Array && cache.length !== data.length) {\n      this.cache = new Float32Array(data.length);\n    }\n\n    copyArray(cache, data);\n  };\n\n  function StructuredUniform(id) {\n    this.id = id;\n    this.seq = [];\n    this.map = {};\n  }\n\n  StructuredUniform.prototype.setValue = function (gl, value, textures) {\n    var seq = this.seq;\n\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i];\n      u.setValue(gl, value[u.id], textures);\n    }\n  }; // --- Top-level ---\n  // Parser - builds up the property tree from the path strings\n\n\n  var RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g; // extracts\n  // \t- the identifier (member name or array index)\n  //\t- followed by an optional right bracket (found when array index)\n  //\t- followed by an optional left bracket or dot (type of subscript)\n  //\n  // Note: These portions can be read in a non-overlapping fashion and\n  // allow straightforward parsing of the hierarchy that WebGL encodes\n  // in the uniform names.\n\n  function addUniform(container, uniformObject) {\n    container.seq.push(uniformObject);\n    container.map[uniformObject.id] = uniformObject;\n  }\n\n  function parseUniform(activeInfo, addr, container) {\n    var path = activeInfo.name,\n        pathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n    RePathPart.lastIndex = 0;\n\n    while (true) {\n      var match = RePathPart.exec(path),\n          matchEnd = RePathPart.lastIndex;\n      var id = match[1];\n      var idIsIndex = match[2] === ']',\n          subscript = match[3];\n      if (idIsIndex) id = id | 0; // convert to integer\n\n      if (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n        // bare name or \"pure\" bottom-level array \"[0]\" suffix\n        addUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n        break;\n      } else {\n        // step into inner node / create it in case it doesn't exist\n        var map = container.map;\n        var next = map[id];\n\n        if (next === undefined) {\n          next = new StructuredUniform(id);\n          addUniform(container, next);\n        }\n\n        container = next;\n      }\n    }\n  } // Root Container\n\n\n  function WebGLUniforms(gl, program) {\n    this.seq = [];\n    this.map = {};\n    var n = gl.getProgramParameter(program, 35718);\n\n    for (var i = 0; i < n; ++i) {\n      var info = gl.getActiveUniform(program, i),\n          addr = gl.getUniformLocation(program, info.name);\n      parseUniform(info, addr, this);\n    }\n  }\n\n  WebGLUniforms.prototype.setValue = function (gl, name, value, textures) {\n    var u = this.map[name];\n    if (u !== undefined) u.setValue(gl, value, textures);\n  };\n\n  WebGLUniforms.prototype.setOptional = function (gl, object, name) {\n    var v = object[name];\n    if (v !== undefined) this.setValue(gl, name, v);\n  }; // Static interface\n\n\n  WebGLUniforms.upload = function (gl, seq, values, textures) {\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i],\n          v = values[u.id];\n\n      if (v.needsUpdate !== false) {\n        // note: always updating when .needsUpdate is undefined\n        u.setValue(gl, v.value, textures);\n      }\n    }\n  };\n\n  WebGLUniforms.seqWithValue = function (seq, values) {\n    var r = [];\n\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i];\n      if (u.id in values) r.push(u);\n    }\n\n    return r;\n  };\n\n  function WebGLShader(gl, type, string) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, string);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  var programIdCount = 0;\n\n  function addLineNumbers(string) {\n    var lines = string.split('\\n');\n\n    for (var i = 0; i < lines.length; i++) {\n      lines[i] = i + 1 + ': ' + lines[i];\n    }\n\n    return lines.join('\\n');\n  }\n\n  function getEncodingComponents(encoding) {\n    switch (encoding) {\n      case LinearEncoding:\n        return ['Linear', '( value )'];\n\n      case sRGBEncoding:\n        return ['sRGB', '( value )'];\n\n      case RGBEEncoding:\n        return ['RGBE', '( value )'];\n\n      case RGBM7Encoding:\n        return ['RGBM', '( value, 7.0 )'];\n\n      case RGBM16Encoding:\n        return ['RGBM', '( value, 16.0 )'];\n\n      case RGBDEncoding:\n        return ['RGBD', '( value, 256.0 )'];\n\n      case GammaEncoding:\n        return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n      case LogLuvEncoding:\n        return ['LogLuv', '( value )'];\n\n      default:\n        console.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\n        return ['Linear', '( value )'];\n    }\n  }\n\n  function getShaderErrors(gl, shader, type) {\n    var status = gl.getShaderParameter(shader, 35713);\n    var log = gl.getShaderInfoLog(shader).trim();\n    if (status && log === '') return ''; // --enable-privileged-webgl-extension\n    // console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n    var source = gl.getShaderSource(shader);\n    return 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers(source);\n  }\n\n  function getTexelDecodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return 'vec4 ' + functionName + '( vec4 value ) { return ' + components[0] + 'ToLinear' + components[1] + '; }';\n  }\n\n  function getTexelEncodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n  }\n\n  function getToneMappingFunction(functionName, toneMapping) {\n    var toneMappingName;\n\n    switch (toneMapping) {\n      case LinearToneMapping:\n        toneMappingName = 'Linear';\n        break;\n\n      case ReinhardToneMapping:\n        toneMappingName = 'Reinhard';\n        break;\n\n      case CineonToneMapping:\n        toneMappingName = 'OptimizedCineon';\n        break;\n\n      case ACESFilmicToneMapping:\n        toneMappingName = 'ACESFilmic';\n        break;\n\n      case CustomToneMapping:\n        toneMappingName = 'Custom';\n        break;\n\n      default:\n        console.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\n        toneMappingName = 'Linear';\n    }\n\n    return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n  }\n\n  function generateExtensions(parameters) {\n    var chunks = [parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ? '#extension GL_OES_standard_derivatives : enable' : '', (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '', parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? '#extension GL_EXT_draw_buffers : require' : '', (parameters.extensionShaderTextureLOD || parameters.envMap) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n    return chunks.filter(filterEmptyLine).join('\\n');\n  }\n\n  function generateDefines(defines) {\n    var chunks = [];\n\n    for (var name in defines) {\n      var value = defines[name];\n      if (value === false) continue;\n      chunks.push('#define ' + name + ' ' + value);\n    }\n\n    return chunks.join('\\n');\n  }\n\n  function fetchAttributeLocations(gl, program) {\n    var attributes = {};\n    var n = gl.getProgramParameter(program, 35721);\n\n    for (var i = 0; i < n; i++) {\n      var info = gl.getActiveAttrib(program, i);\n      var name = info.name; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n      attributes[name] = gl.getAttribLocation(program, name);\n    }\n\n    return attributes;\n  }\n\n  function filterEmptyLine(string) {\n    return string !== '';\n  }\n\n  function replaceLightNums(string, parameters) {\n    return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\n  }\n\n  function replaceClippingPlaneNums(string, parameters) {\n    return string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n  } // Resolve Includes\n\n\n  var includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n  function resolveIncludes(string) {\n    return string.replace(includePattern, includeReplacer);\n  }\n\n  function includeReplacer(match, include) {\n    var string = ShaderChunk[include];\n\n    if (string === undefined) {\n      throw new Error('Can not resolve #include <' + include + '>');\n    }\n\n    return resolveIncludes(string);\n  } // Unroll Loops\n\n\n  var deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n  var unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\n  function unrollLoops(string) {\n    return string.replace(unrollLoopPattern, loopReplacer).replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\n  }\n\n  function deprecatedLoopReplacer(match, start, end, snippet) {\n    console.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');\n    return loopReplacer(match, start, end, snippet);\n  }\n\n  function loopReplacer(match, start, end, snippet) {\n    var string = '';\n\n    for (var i = parseInt(start); i < parseInt(end); i++) {\n      string += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\n    }\n\n    return string;\n  } //\n\n\n  function generatePrecision(parameters) {\n    var precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n    if (parameters.precision === 'highp') {\n      precisionstring += '\\n#define HIGH_PRECISION';\n    } else if (parameters.precision === 'mediump') {\n      precisionstring += '\\n#define MEDIUM_PRECISION';\n    } else if (parameters.precision === 'lowp') {\n      precisionstring += '\\n#define LOW_PRECISION';\n    }\n\n    return precisionstring;\n  }\n\n  function generateShadowMapTypeDefine(parameters) {\n    var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n    if (parameters.shadowMapType === PCFShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n    } else if (parameters.shadowMapType === PCFSoftShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n    } else if (parameters.shadowMapType === VSMShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n    }\n\n    return shadowMapTypeDefine;\n  }\n\n  function generateEnvMapTypeDefine(parameters) {\n    var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n    if (parameters.envMap) {\n      switch (parameters.envMapMode) {\n        case CubeReflectionMapping:\n        case CubeRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n          break;\n\n        case CubeUVReflectionMapping:\n        case CubeUVRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n          break;\n      }\n    }\n\n    return envMapTypeDefine;\n  }\n\n  function generateEnvMapModeDefine(parameters) {\n    var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n    if (parameters.envMap) {\n      switch (parameters.envMapMode) {\n        case CubeRefractionMapping:\n        case CubeUVRefractionMapping:\n          envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n          break;\n      }\n    }\n\n    return envMapModeDefine;\n  }\n\n  function generateEnvMapBlendingDefine(parameters) {\n    var envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n    if (parameters.envMap) {\n      switch (parameters.combine) {\n        case MultiplyOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n          break;\n\n        case MixOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n          break;\n\n        case AddOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n          break;\n      }\n    }\n\n    return envMapBlendingDefine;\n  }\n\n  function WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\n    var gl = renderer.getContext();\n    var defines = parameters.defines;\n    var vertexShader = parameters.vertexShader;\n    var fragmentShader = parameters.fragmentShader;\n    var shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\n    var envMapTypeDefine = generateEnvMapTypeDefine(parameters);\n    var envMapModeDefine = generateEnvMapModeDefine(parameters);\n    var envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\n    var gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0;\n    var customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\n    var customDefines = generateDefines(defines);\n    var program = gl.createProgram();\n    var prefixVertex, prefixFragment;\n    var versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n    if (parameters.isRawShaderMaterial) {\n      prefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n      if (prefixVertex.length > 0) {\n        prefixVertex += '\\n';\n      }\n\n      prefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n      if (prefixFragment.length > 0) {\n        prefixFragment += '\\n';\n      }\n    } else {\n      prefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', '\tattribute mat4 instanceMatrix;', '#endif', '#ifdef USE_INSTANCING_COLOR', '\tattribute vec3 instanceColor;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#ifdef USE_COLOR', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n      prefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + (parameters.alphaTest % 1 ? '' : '.0') : '', // add '.0' if integer\n      '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', (parameters.extensionShaderTextureLOD || parameters.envMap) && parameters.rendererExtensionShaderTextureLod ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n      parameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', ShaderChunk['encodings_pars_fragment'], // this code is required here because it is used by the various encoding/decoding function defined below\n      parameters.map ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.matcap ? getTexelDecodingFunction('matcapTexelToLinear', parameters.matcapEncoding) : '', parameters.envMap ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMap ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.lightMap ? getTexelDecodingFunction('lightMapTexelToLinear', parameters.lightMapEncoding) : '', getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding), parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n    }\n\n    vertexShader = resolveIncludes(vertexShader);\n    vertexShader = replaceLightNums(vertexShader, parameters);\n    vertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n    fragmentShader = resolveIncludes(fragmentShader);\n    fragmentShader = replaceLightNums(fragmentShader, parameters);\n    fragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n    vertexShader = unrollLoops(vertexShader);\n    fragmentShader = unrollLoops(fragmentShader);\n\n    if (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\n      // GLSL 3.0 conversion for built-in materials and ShaderMaterial\n      versionString = '#version 300 es\\n';\n      prefixVertex = ['#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n      prefixFragment = ['#define varying in', parameters.glslVersion === GLSL3 ? '' : 'out highp vec4 pc_fragColor;', parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\n    }\n\n    var vertexGlsl = versionString + prefixVertex + vertexShader;\n    var fragmentGlsl = versionString + prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n    // console.log( '*FRAGMENT*', fragmentGlsl );\n\n    var glVertexShader = WebGLShader(gl, 35633, vertexGlsl);\n    var glFragmentShader = WebGLShader(gl, 35632, fragmentGlsl);\n    gl.attachShader(program, glVertexShader);\n    gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n    if (parameters.index0AttributeName !== undefined) {\n      gl.bindAttribLocation(program, 0, parameters.index0AttributeName);\n    } else if (parameters.morphTargets === true) {\n      // programs with morphTargets displace position out of attribute 0\n      gl.bindAttribLocation(program, 0, 'position');\n    }\n\n    gl.linkProgram(program); // check for link errors\n\n    if (renderer.debug.checkShaderErrors) {\n      var programLog = gl.getProgramInfoLog(program).trim();\n      var vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n      var fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n      var runnable = true;\n      var haveDiagnostics = true;\n\n      if (gl.getProgramParameter(program, 35714) === false) {\n        runnable = false;\n        var vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\n        var fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\n        console.error('THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter(program, 35715), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors);\n      } else if (programLog !== '') {\n        console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n      } else if (vertexLog === '' || fragmentLog === '') {\n        haveDiagnostics = false;\n      }\n\n      if (haveDiagnostics) {\n        this.diagnostics = {\n          runnable: runnable,\n          programLog: programLog,\n          vertexShader: {\n            log: vertexLog,\n            prefix: prefixVertex\n          },\n          fragmentShader: {\n            log: fragmentLog,\n            prefix: prefixFragment\n          }\n        };\n      }\n    } // Clean up\n    // Crashes in iOS9 and iOS10. #18402\n    // gl.detachShader( program, glVertexShader );\n    // gl.detachShader( program, glFragmentShader );\n\n\n    gl.deleteShader(glVertexShader);\n    gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n    var cachedUniforms;\n\n    this.getUniforms = function () {\n      if (cachedUniforms === undefined) {\n        cachedUniforms = new WebGLUniforms(gl, program);\n      }\n\n      return cachedUniforms;\n    }; // set up caching for attribute locations\n\n\n    var cachedAttributes;\n\n    this.getAttributes = function () {\n      if (cachedAttributes === undefined) {\n        cachedAttributes = fetchAttributeLocations(gl, program);\n      }\n\n      return cachedAttributes;\n    }; // free resource\n\n\n    this.destroy = function () {\n      bindingStates.releaseStatesOfProgram(this);\n      gl.deleteProgram(program);\n      this.program = undefined;\n    }; //\n\n\n    this.name = parameters.shaderName;\n    this.id = programIdCount++;\n    this.cacheKey = cacheKey;\n    this.usedTimes = 1;\n    this.program = program;\n    this.vertexShader = glVertexShader;\n    this.fragmentShader = glFragmentShader;\n    return this;\n  }\n\n  function WebGLPrograms(renderer, cubemaps, extensions, capabilities, bindingStates, clipping) {\n    var programs = [];\n    var isWebGL2 = capabilities.isWebGL2;\n    var logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n    var floatVertexTextures = capabilities.floatVertexTextures;\n    var maxVertexUniforms = capabilities.maxVertexUniforms;\n    var vertexTextures = capabilities.vertexTextures;\n    var precision = capabilities.precision;\n    var shaderIDs = {\n      MeshDepthMaterial: 'depth',\n      MeshDistanceMaterial: 'distanceRGBA',\n      MeshNormalMaterial: 'normal',\n      MeshBasicMaterial: 'basic',\n      MeshLambertMaterial: 'lambert',\n      MeshPhongMaterial: 'phong',\n      MeshToonMaterial: 'toon',\n      MeshStandardMaterial: 'physical',\n      MeshPhysicalMaterial: 'physical',\n      MeshMatcapMaterial: 'matcap',\n      LineBasicMaterial: 'basic',\n      LineDashedMaterial: 'dashed',\n      PointsMaterial: 'points',\n      ShadowMaterial: 'shadow',\n      SpriteMaterial: 'sprite'\n    };\n    var parameterNames = ['precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor', 'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV', 'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap', 'roughnessMap', 'metalnessMap', 'gradientMap', 'alphaMap', 'combine', 'vertexColors', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2', 'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning', 'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'maxMorphTargets', 'maxMorphNormals', 'premultipliedAlpha', 'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights', 'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows', 'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights', 'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering', 'sheen', 'transmissionMap'];\n\n    function getMaxBones(object) {\n      var skeleton = object.skeleton;\n      var bones = skeleton.bones;\n\n      if (floatVertexTextures) {\n        return 1024;\n      } else {\n        // default for when object is not specified\n        // ( for example when prebuilding shader to be used with multiple objects )\n        //\n        //\t- leave some extra space for other uniforms\n        //\t- limit here is ANGLE's 254 max uniform vectors\n        //\t\t(up to 54 should be safe)\n        var nVertexUniforms = maxVertexUniforms;\n        var nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n        var maxBones = Math.min(nVertexMatrices, bones.length);\n\n        if (maxBones < bones.length) {\n          console.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\n          return 0;\n        }\n\n        return maxBones;\n      }\n    }\n\n    function getTextureEncodingFromMap(map) {\n      var encoding;\n\n      if (map && map.isTexture) {\n        encoding = map.encoding;\n      } else if (map && map.isWebGLRenderTarget) {\n        console.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.');\n        encoding = map.texture.encoding;\n      } else {\n        encoding = LinearEncoding;\n      }\n\n      return encoding;\n    }\n\n    function getParameters(material, lights, shadows, scene, object) {\n      var fog = scene.fog;\n      var environment = material.isMeshStandardMaterial ? scene.environment : null;\n      var envMap = cubemaps.get(material.envMap || environment);\n      var shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n      // (not to blow over maxLights budget)\n\n      var maxBones = object.isSkinnedMesh ? getMaxBones(object) : 0;\n\n      if (material.precision !== null) {\n        precision = capabilities.getMaxPrecision(material.precision);\n\n        if (precision !== material.precision) {\n          console.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n        }\n      }\n\n      var vertexShader, fragmentShader;\n\n      if (shaderID) {\n        var shader = ShaderLib[shaderID];\n        vertexShader = shader.vertexShader;\n        fragmentShader = shader.fragmentShader;\n      } else {\n        vertexShader = material.vertexShader;\n        fragmentShader = material.fragmentShader;\n      }\n\n      var currentRenderTarget = renderer.getRenderTarget();\n      var parameters = {\n        isWebGL2: isWebGL2,\n        shaderID: shaderID,\n        shaderName: material.type,\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader,\n        defines: material.defines,\n        isRawShaderMaterial: material.isRawShaderMaterial === true,\n        glslVersion: material.glslVersion,\n        precision: precision,\n        instancing: object.isInstancedMesh === true,\n        instancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n        supportsVertexTextures: vertexTextures,\n        outputEncoding: currentRenderTarget !== null ? getTextureEncodingFromMap(currentRenderTarget.texture) : renderer.outputEncoding,\n        map: !!material.map,\n        mapEncoding: getTextureEncodingFromMap(material.map),\n        matcap: !!material.matcap,\n        matcapEncoding: getTextureEncodingFromMap(material.matcap),\n        envMap: !!envMap,\n        envMapMode: envMap && envMap.mapping,\n        envMapEncoding: getTextureEncodingFromMap(envMap),\n        envMapCubeUV: !!envMap && (envMap.mapping === CubeUVReflectionMapping || envMap.mapping === CubeUVRefractionMapping),\n        lightMap: !!material.lightMap,\n        lightMapEncoding: getTextureEncodingFromMap(material.lightMap),\n        aoMap: !!material.aoMap,\n        emissiveMap: !!material.emissiveMap,\n        emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap),\n        bumpMap: !!material.bumpMap,\n        normalMap: !!material.normalMap,\n        objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n        tangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n        clearcoatMap: !!material.clearcoatMap,\n        clearcoatRoughnessMap: !!material.clearcoatRoughnessMap,\n        clearcoatNormalMap: !!material.clearcoatNormalMap,\n        displacementMap: !!material.displacementMap,\n        roughnessMap: !!material.roughnessMap,\n        metalnessMap: !!material.metalnessMap,\n        specularMap: !!material.specularMap,\n        alphaMap: !!material.alphaMap,\n        gradientMap: !!material.gradientMap,\n        sheen: !!material.sheen,\n        transmissionMap: !!material.transmissionMap,\n        combine: material.combine,\n        vertexTangents: material.normalMap && material.vertexTangents,\n        vertexColors: material.vertexColors,\n        vertexUvs: !!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatMap || !!material.clearcoatRoughnessMap || !!material.clearcoatNormalMap || !!material.displacementMap || !!material.transmissionMap,\n        uvsVertexOnly: !(!!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap || !!material.transmissionMap) && !!material.displacementMap,\n        fog: !!fog,\n        useFog: material.fog,\n        fogExp2: fog && fog.isFogExp2,\n        flatShading: material.flatShading,\n        sizeAttenuation: material.sizeAttenuation,\n        logarithmicDepthBuffer: logarithmicDepthBuffer,\n        skinning: material.skinning && maxBones > 0,\n        maxBones: maxBones,\n        useVertexTexture: floatVertexTextures,\n        morphTargets: material.morphTargets,\n        morphNormals: material.morphNormals,\n        maxMorphTargets: renderer.maxMorphTargets,\n        maxMorphNormals: renderer.maxMorphNormals,\n        numDirLights: lights.directional.length,\n        numPointLights: lights.point.length,\n        numSpotLights: lights.spot.length,\n        numRectAreaLights: lights.rectArea.length,\n        numHemiLights: lights.hemi.length,\n        numDirLightShadows: lights.directionalShadowMap.length,\n        numPointLightShadows: lights.pointShadowMap.length,\n        numSpotLightShadows: lights.spotShadowMap.length,\n        numClippingPlanes: clipping.numPlanes,\n        numClipIntersection: clipping.numIntersection,\n        dithering: material.dithering,\n        shadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n        shadowMapType: renderer.shadowMap.type,\n        toneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n        physicallyCorrectLights: renderer.physicallyCorrectLights,\n        premultipliedAlpha: material.premultipliedAlpha,\n        alphaTest: material.alphaTest,\n        doubleSided: material.side === DoubleSide,\n        flipSided: material.side === BackSide,\n        depthPacking: material.depthPacking !== undefined ? material.depthPacking : false,\n        index0AttributeName: material.index0AttributeName,\n        extensionDerivatives: material.extensions && material.extensions.derivatives,\n        extensionFragDepth: material.extensions && material.extensions.fragDepth,\n        extensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n        extensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n        rendererExtensionFragDepth: isWebGL2 || extensions.has('EXT_frag_depth'),\n        rendererExtensionDrawBuffers: isWebGL2 || extensions.has('WEBGL_draw_buffers'),\n        rendererExtensionShaderTextureLod: isWebGL2 || extensions.has('EXT_shader_texture_lod'),\n        customProgramCacheKey: material.customProgramCacheKey()\n      };\n      return parameters;\n    }\n\n    function getProgramCacheKey(parameters) {\n      var array = [];\n\n      if (parameters.shaderID) {\n        array.push(parameters.shaderID);\n      } else {\n        array.push(parameters.fragmentShader);\n        array.push(parameters.vertexShader);\n      }\n\n      if (parameters.defines !== undefined) {\n        for (var name in parameters.defines) {\n          array.push(name);\n          array.push(parameters.defines[name]);\n        }\n      }\n\n      if (parameters.isRawShaderMaterial === false) {\n        for (var i = 0; i < parameterNames.length; i++) {\n          array.push(parameters[parameterNames[i]]);\n        }\n\n        array.push(renderer.outputEncoding);\n        array.push(renderer.gammaFactor);\n      }\n\n      array.push(parameters.customProgramCacheKey);\n      return array.join();\n    }\n\n    function getUniforms(material) {\n      var shaderID = shaderIDs[material.type];\n      var uniforms;\n\n      if (shaderID) {\n        var shader = ShaderLib[shaderID];\n        uniforms = UniformsUtils.clone(shader.uniforms);\n      } else {\n        uniforms = material.uniforms;\n      }\n\n      return uniforms;\n    }\n\n    function acquireProgram(parameters, cacheKey) {\n      var program; // Check if code has been already compiled\n\n      for (var p = 0, pl = programs.length; p < pl; p++) {\n        var preexistingProgram = programs[p];\n\n        if (preexistingProgram.cacheKey === cacheKey) {\n          program = preexistingProgram;\n          ++program.usedTimes;\n          break;\n        }\n      }\n\n      if (program === undefined) {\n        program = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);\n        programs.push(program);\n      }\n\n      return program;\n    }\n\n    function releaseProgram(program) {\n      if (--program.usedTimes === 0) {\n        // Remove from unordered set\n        var i = programs.indexOf(program);\n        programs[i] = programs[programs.length - 1];\n        programs.pop(); // Free WebGL resources\n\n        program.destroy();\n      }\n    }\n\n    return {\n      getParameters: getParameters,\n      getProgramCacheKey: getProgramCacheKey,\n      getUniforms: getUniforms,\n      acquireProgram: acquireProgram,\n      releaseProgram: releaseProgram,\n      // Exposed for resource monitoring & error feedback via renderer.info:\n      programs: programs\n    };\n  }\n\n  function WebGLProperties() {\n    var properties = new WeakMap();\n\n    function get(object) {\n      var map = properties.get(object);\n\n      if (map === undefined) {\n        map = {};\n        properties.set(object, map);\n      }\n\n      return map;\n    }\n\n    function remove(object) {\n      properties.delete(object);\n    }\n\n    function update(object, key, value) {\n      properties.get(object)[key] = value;\n    }\n\n    function dispose() {\n      properties = new WeakMap();\n    }\n\n    return {\n      get: get,\n      remove: remove,\n      update: update,\n      dispose: dispose\n    };\n  }\n\n  function painterSortStable(a, b) {\n    if (a.groupOrder !== b.groupOrder) {\n      return a.groupOrder - b.groupOrder;\n    } else if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.program !== b.program) {\n      return a.program.id - b.program.id;\n    } else if (a.material.id !== b.material.id) {\n      return a.material.id - b.material.id;\n    } else if (a.z !== b.z) {\n      return a.z - b.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function reversePainterSortStable(a, b) {\n    if (a.groupOrder !== b.groupOrder) {\n      return a.groupOrder - b.groupOrder;\n    } else if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function WebGLRenderList(properties) {\n    var renderItems = [];\n    var renderItemsIndex = 0;\n    var opaque = [];\n    var transparent = [];\n    var defaultProgram = {\n      id: -1\n    };\n\n    function init() {\n      renderItemsIndex = 0;\n      opaque.length = 0;\n      transparent.length = 0;\n    }\n\n    function getNextRenderItem(object, geometry, material, groupOrder, z, group) {\n      var renderItem = renderItems[renderItemsIndex];\n      var materialProperties = properties.get(material);\n\n      if (renderItem === undefined) {\n        renderItem = {\n          id: object.id,\n          object: object,\n          geometry: geometry,\n          material: material,\n          program: materialProperties.program || defaultProgram,\n          groupOrder: groupOrder,\n          renderOrder: object.renderOrder,\n          z: z,\n          group: group\n        };\n        renderItems[renderItemsIndex] = renderItem;\n      } else {\n        renderItem.id = object.id;\n        renderItem.object = object;\n        renderItem.geometry = geometry;\n        renderItem.material = material;\n        renderItem.program = materialProperties.program || defaultProgram;\n        renderItem.groupOrder = groupOrder;\n        renderItem.renderOrder = object.renderOrder;\n        renderItem.z = z;\n        renderItem.group = group;\n      }\n\n      renderItemsIndex++;\n      return renderItem;\n    }\n\n    function push(object, geometry, material, groupOrder, z, group) {\n      var renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n      (material.transparent === true ? transparent : opaque).push(renderItem);\n    }\n\n    function unshift(object, geometry, material, groupOrder, z, group) {\n      var renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n      (material.transparent === true ? transparent : opaque).unshift(renderItem);\n    }\n\n    function sort(customOpaqueSort, customTransparentSort) {\n      if (opaque.length > 1) opaque.sort(customOpaqueSort || painterSortStable);\n      if (transparent.length > 1) transparent.sort(customTransparentSort || reversePainterSortStable);\n    }\n\n    function finish() {\n      // Clear references from inactive renderItems in the list\n      for (var i = renderItemsIndex, il = renderItems.length; i < il; i++) {\n        var renderItem = renderItems[i];\n        if (renderItem.id === null) break;\n        renderItem.id = null;\n        renderItem.object = null;\n        renderItem.geometry = null;\n        renderItem.material = null;\n        renderItem.program = null;\n        renderItem.group = null;\n      }\n    }\n\n    return {\n      opaque: opaque,\n      transparent: transparent,\n      init: init,\n      push: push,\n      unshift: unshift,\n      finish: finish,\n      sort: sort\n    };\n  }\n\n  function WebGLRenderLists(properties) {\n    var lists = new WeakMap();\n\n    function get(scene, camera) {\n      var cameras = lists.get(scene);\n      var list;\n\n      if (cameras === undefined) {\n        list = new WebGLRenderList(properties);\n        lists.set(scene, new WeakMap());\n        lists.get(scene).set(camera, list);\n      } else {\n        list = cameras.get(camera);\n\n        if (list === undefined) {\n          list = new WebGLRenderList(properties);\n          cameras.set(camera, list);\n        }\n      }\n\n      return list;\n    }\n\n    function dispose() {\n      lists = new WeakMap();\n    }\n\n    return {\n      get: get,\n      dispose: dispose\n    };\n  }\n\n  function UniformsCache() {\n    var lights = {};\n    return {\n      get: function get(light) {\n        if (lights[light.id] !== undefined) {\n          return lights[light.id];\n        }\n\n        var uniforms;\n\n        switch (light.type) {\n          case 'DirectionalLight':\n            uniforms = {\n              direction: new Vector3(),\n              color: new Color()\n            };\n            break;\n\n          case 'SpotLight':\n            uniforms = {\n              position: new Vector3(),\n              direction: new Vector3(),\n              color: new Color(),\n              distance: 0,\n              coneCos: 0,\n              penumbraCos: 0,\n              decay: 0\n            };\n            break;\n\n          case 'PointLight':\n            uniforms = {\n              position: new Vector3(),\n              color: new Color(),\n              distance: 0,\n              decay: 0\n            };\n            break;\n\n          case 'HemisphereLight':\n            uniforms = {\n              direction: new Vector3(),\n              skyColor: new Color(),\n              groundColor: new Color()\n            };\n            break;\n\n          case 'RectAreaLight':\n            uniforms = {\n              color: new Color(),\n              position: new Vector3(),\n              halfWidth: new Vector3(),\n              halfHeight: new Vector3()\n            };\n            break;\n        }\n\n        lights[light.id] = uniforms;\n        return uniforms;\n      }\n    };\n  }\n\n  function ShadowUniformsCache() {\n    var lights = {};\n    return {\n      get: function get(light) {\n        if (lights[light.id] !== undefined) {\n          return lights[light.id];\n        }\n\n        var uniforms;\n\n        switch (light.type) {\n          case 'DirectionalLight':\n            uniforms = {\n              shadowBias: 0,\n              shadowNormalBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2()\n            };\n            break;\n\n          case 'SpotLight':\n            uniforms = {\n              shadowBias: 0,\n              shadowNormalBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2()\n            };\n            break;\n\n          case 'PointLight':\n            uniforms = {\n              shadowBias: 0,\n              shadowNormalBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2(),\n              shadowCameraNear: 1,\n              shadowCameraFar: 1000\n            };\n            break;\n          // TODO (abelnation): set RectAreaLight shadow uniforms\n        }\n\n        lights[light.id] = uniforms;\n        return uniforms;\n      }\n    };\n  }\n\n  var nextVersion = 0;\n\n  function shadowCastingLightsFirst(lightA, lightB) {\n    return (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\n  }\n\n  function WebGLLights(extensions, capabilities) {\n    var cache = new UniformsCache();\n    var shadowCache = ShadowUniformsCache();\n    var state = {\n      version: 0,\n      hash: {\n        directionalLength: -1,\n        pointLength: -1,\n        spotLength: -1,\n        rectAreaLength: -1,\n        hemiLength: -1,\n        numDirectionalShadows: -1,\n        numPointShadows: -1,\n        numSpotShadows: -1\n      },\n      ambient: [0, 0, 0],\n      probe: [],\n      directional: [],\n      directionalShadow: [],\n      directionalShadowMap: [],\n      directionalShadowMatrix: [],\n      spot: [],\n      spotShadow: [],\n      spotShadowMap: [],\n      spotShadowMatrix: [],\n      rectArea: [],\n      rectAreaLTC1: null,\n      rectAreaLTC2: null,\n      point: [],\n      pointShadow: [],\n      pointShadowMap: [],\n      pointShadowMatrix: [],\n      hemi: []\n    };\n\n    for (var i = 0; i < 9; i++) {\n      state.probe.push(new Vector3());\n    }\n\n    var vector3 = new Vector3();\n    var matrix4 = new Matrix4();\n    var matrix42 = new Matrix4();\n\n    function setup(lights) {\n      var r = 0,\n          g = 0,\n          b = 0;\n\n      for (var _i = 0; _i < 9; _i++) {\n        state.probe[_i].set(0, 0, 0);\n      }\n\n      var directionalLength = 0;\n      var pointLength = 0;\n      var spotLength = 0;\n      var rectAreaLength = 0;\n      var hemiLength = 0;\n      var numDirectionalShadows = 0;\n      var numPointShadows = 0;\n      var numSpotShadows = 0;\n      lights.sort(shadowCastingLightsFirst);\n\n      for (var _i2 = 0, l = lights.length; _i2 < l; _i2++) {\n        var light = lights[_i2];\n        var color = light.color;\n        var intensity = light.intensity;\n        var distance = light.distance;\n        var shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n        if (light.isAmbientLight) {\n          r += color.r * intensity;\n          g += color.g * intensity;\n          b += color.b * intensity;\n        } else if (light.isLightProbe) {\n          for (var j = 0; j < 9; j++) {\n            state.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\n          }\n        } else if (light.isDirectionalLight) {\n          var uniforms = cache.get(light);\n          uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n\n          if (light.castShadow) {\n            var shadow = light.shadow;\n            var shadowUniforms = shadowCache.get(light);\n            shadowUniforms.shadowBias = shadow.bias;\n            shadowUniforms.shadowNormalBias = shadow.normalBias;\n            shadowUniforms.shadowRadius = shadow.radius;\n            shadowUniforms.shadowMapSize = shadow.mapSize;\n            state.directionalShadow[directionalLength] = shadowUniforms;\n            state.directionalShadowMap[directionalLength] = shadowMap;\n            state.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n            numDirectionalShadows++;\n          }\n\n          state.directional[directionalLength] = uniforms;\n          directionalLength++;\n        } else if (light.isSpotLight) {\n          var _uniforms = cache.get(light);\n\n          _uniforms.position.setFromMatrixPosition(light.matrixWorld);\n\n          _uniforms.color.copy(color).multiplyScalar(intensity);\n\n          _uniforms.distance = distance;\n          _uniforms.coneCos = Math.cos(light.angle);\n          _uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n          _uniforms.decay = light.decay;\n\n          if (light.castShadow) {\n            var _shadow = light.shadow;\n\n            var _shadowUniforms = shadowCache.get(light);\n\n            _shadowUniforms.shadowBias = _shadow.bias;\n            _shadowUniforms.shadowNormalBias = _shadow.normalBias;\n            _shadowUniforms.shadowRadius = _shadow.radius;\n            _shadowUniforms.shadowMapSize = _shadow.mapSize;\n            state.spotShadow[spotLength] = _shadowUniforms;\n            state.spotShadowMap[spotLength] = shadowMap;\n            state.spotShadowMatrix[spotLength] = light.shadow.matrix;\n            numSpotShadows++;\n          }\n\n          state.spot[spotLength] = _uniforms;\n          spotLength++;\n        } else if (light.isRectAreaLight) {\n          var _uniforms2 = cache.get(light); // (a) intensity is the total visible light emitted\n          //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n          // (b) intensity is the brightness of the light\n\n\n          _uniforms2.color.copy(color).multiplyScalar(intensity);\n\n          _uniforms2.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\n          _uniforms2.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\n          state.rectArea[rectAreaLength] = _uniforms2;\n          rectAreaLength++;\n        } else if (light.isPointLight) {\n          var _uniforms3 = cache.get(light);\n\n          _uniforms3.color.copy(light.color).multiplyScalar(light.intensity);\n\n          _uniforms3.distance = light.distance;\n          _uniforms3.decay = light.decay;\n\n          if (light.castShadow) {\n            var _shadow2 = light.shadow;\n\n            var _shadowUniforms2 = shadowCache.get(light);\n\n            _shadowUniforms2.shadowBias = _shadow2.bias;\n            _shadowUniforms2.shadowNormalBias = _shadow2.normalBias;\n            _shadowUniforms2.shadowRadius = _shadow2.radius;\n            _shadowUniforms2.shadowMapSize = _shadow2.mapSize;\n            _shadowUniforms2.shadowCameraNear = _shadow2.camera.near;\n            _shadowUniforms2.shadowCameraFar = _shadow2.camera.far;\n            state.pointShadow[pointLength] = _shadowUniforms2;\n            state.pointShadowMap[pointLength] = shadowMap;\n            state.pointShadowMatrix[pointLength] = light.shadow.matrix;\n            numPointShadows++;\n          }\n\n          state.point[pointLength] = _uniforms3;\n          pointLength++;\n        } else if (light.isHemisphereLight) {\n          var _uniforms4 = cache.get(light);\n\n          _uniforms4.skyColor.copy(light.color).multiplyScalar(intensity);\n\n          _uniforms4.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n\n          state.hemi[hemiLength] = _uniforms4;\n          hemiLength++;\n        }\n      }\n\n      if (rectAreaLength > 0) {\n        if (capabilities.isWebGL2) {\n          // WebGL 2\n          state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n          state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n        } else {\n          // WebGL 1\n          if (extensions.has('OES_texture_float_linear') === true) {\n            state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n            state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n          } else if (extensions.has('OES_texture_half_float_linear') === true) {\n            state.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n            state.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n          } else {\n            console.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');\n          }\n        }\n      }\n\n      state.ambient[0] = r;\n      state.ambient[1] = g;\n      state.ambient[2] = b;\n      var hash = state.hash;\n\n      if (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows) {\n        state.directional.length = directionalLength;\n        state.spot.length = spotLength;\n        state.rectArea.length = rectAreaLength;\n        state.point.length = pointLength;\n        state.hemi.length = hemiLength;\n        state.directionalShadow.length = numDirectionalShadows;\n        state.directionalShadowMap.length = numDirectionalShadows;\n        state.pointShadow.length = numPointShadows;\n        state.pointShadowMap.length = numPointShadows;\n        state.spotShadow.length = numSpotShadows;\n        state.spotShadowMap.length = numSpotShadows;\n        state.directionalShadowMatrix.length = numDirectionalShadows;\n        state.pointShadowMatrix.length = numPointShadows;\n        state.spotShadowMatrix.length = numSpotShadows;\n        hash.directionalLength = directionalLength;\n        hash.pointLength = pointLength;\n        hash.spotLength = spotLength;\n        hash.rectAreaLength = rectAreaLength;\n        hash.hemiLength = hemiLength;\n        hash.numDirectionalShadows = numDirectionalShadows;\n        hash.numPointShadows = numPointShadows;\n        hash.numSpotShadows = numSpotShadows;\n        state.version = nextVersion++;\n      }\n    }\n\n    function setupView(lights, camera) {\n      var directionalLength = 0;\n      var pointLength = 0;\n      var spotLength = 0;\n      var rectAreaLength = 0;\n      var hemiLength = 0;\n      var viewMatrix = camera.matrixWorldInverse;\n\n      for (var _i3 = 0, l = lights.length; _i3 < l; _i3++) {\n        var light = lights[_i3];\n\n        if (light.isDirectionalLight) {\n          var uniforms = state.directional[directionalLength];\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n          vector3.setFromMatrixPosition(light.target.matrixWorld);\n          uniforms.direction.sub(vector3);\n          uniforms.direction.transformDirection(viewMatrix);\n          directionalLength++;\n        } else if (light.isSpotLight) {\n          var _uniforms5 = state.spot[spotLength];\n\n          _uniforms5.position.setFromMatrixPosition(light.matrixWorld);\n\n          _uniforms5.position.applyMatrix4(viewMatrix);\n\n          _uniforms5.direction.setFromMatrixPosition(light.matrixWorld);\n\n          vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n          _uniforms5.direction.sub(vector3);\n\n          _uniforms5.direction.transformDirection(viewMatrix);\n\n          spotLength++;\n        } else if (light.isRectAreaLight) {\n          var _uniforms6 = state.rectArea[rectAreaLength];\n\n          _uniforms6.position.setFromMatrixPosition(light.matrixWorld);\n\n          _uniforms6.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n\n          matrix42.identity();\n          matrix4.copy(light.matrixWorld);\n          matrix4.premultiply(viewMatrix);\n          matrix42.extractRotation(matrix4);\n\n          _uniforms6.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\n          _uniforms6.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\n          _uniforms6.halfWidth.applyMatrix4(matrix42);\n\n          _uniforms6.halfHeight.applyMatrix4(matrix42);\n\n          rectAreaLength++;\n        } else if (light.isPointLight) {\n          var _uniforms7 = state.point[pointLength];\n\n          _uniforms7.position.setFromMatrixPosition(light.matrixWorld);\n\n          _uniforms7.position.applyMatrix4(viewMatrix);\n\n          pointLength++;\n        } else if (light.isHemisphereLight) {\n          var _uniforms8 = state.hemi[hemiLength];\n\n          _uniforms8.direction.setFromMatrixPosition(light.matrixWorld);\n\n          _uniforms8.direction.transformDirection(viewMatrix);\n\n          _uniforms8.direction.normalize();\n\n          hemiLength++;\n        }\n      }\n    }\n\n    return {\n      setup: setup,\n      setupView: setupView,\n      state: state\n    };\n  }\n\n  function WebGLRenderState(extensions, capabilities) {\n    var lights = new WebGLLights(extensions, capabilities);\n    var lightsArray = [];\n    var shadowsArray = [];\n\n    function init() {\n      lightsArray.length = 0;\n      shadowsArray.length = 0;\n    }\n\n    function pushLight(light) {\n      lightsArray.push(light);\n    }\n\n    function pushShadow(shadowLight) {\n      shadowsArray.push(shadowLight);\n    }\n\n    function setupLights() {\n      lights.setup(lightsArray);\n    }\n\n    function setupLightsView(camera) {\n      lights.setupView(lightsArray, camera);\n    }\n\n    var state = {\n      lightsArray: lightsArray,\n      shadowsArray: shadowsArray,\n      lights: lights\n    };\n    return {\n      init: init,\n      state: state,\n      setupLights: setupLights,\n      setupLightsView: setupLightsView,\n      pushLight: pushLight,\n      pushShadow: pushShadow\n    };\n  }\n\n  function WebGLRenderStates(extensions, capabilities) {\n    var renderStates = new WeakMap();\n\n    function get(scene, renderCallDepth) {\n      if (renderCallDepth === void 0) {\n        renderCallDepth = 0;\n      }\n\n      var renderState;\n\n      if (renderStates.has(scene) === false) {\n        renderState = new WebGLRenderState(extensions, capabilities);\n        renderStates.set(scene, []);\n        renderStates.get(scene).push(renderState);\n      } else {\n        if (renderCallDepth >= renderStates.get(scene).length) {\n          renderState = new WebGLRenderState(extensions, capabilities);\n          renderStates.get(scene).push(renderState);\n        } else {\n          renderState = renderStates.get(scene)[renderCallDepth];\n        }\n      }\n\n      return renderState;\n    }\n\n    function dispose() {\n      renderStates = new WeakMap();\n    }\n\n    return {\n      get: get,\n      dispose: dispose\n    };\n  }\n  /**\n   * parameters = {\n   *\n   *\topacity: <float>,\n   *\n   *\tmap: new THREE.Texture( <Image> ),\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\n   *\tdisplacementScale: <float>,\n   *\tdisplacementBias: <float>,\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>\n   * }\n   */\n\n\n  function MeshDepthMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshDepthMaterial';\n    this.depthPacking = BasicDepthPacking;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.map = null;\n    this.alphaMap = null;\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false;\n    this.setValues(parameters);\n  }\n\n  MeshDepthMaterial.prototype = Object.create(Material.prototype);\n  MeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n  MeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n  MeshDepthMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.depthPacking = source.depthPacking;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    return this;\n  };\n  /**\n   * parameters = {\n   *\n   *\treferencePosition: <float>,\n   *\tnearDistance: <float>,\n   *\tfarDistance: <float>,\n   *\n   *\tskinning: <bool>,\n   *\tmorphTargets: <bool>,\n   *\n   *\tmap: new THREE.Texture( <Image> ),\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\n   *\tdisplacementScale: <float>,\n   *\tdisplacementBias: <float>\n   *\n   * }\n   */\n\n\n  function MeshDistanceMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshDistanceMaterial';\n    this.referencePosition = new Vector3();\n    this.nearDistance = 1;\n    this.farDistance = 1000;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.map = null;\n    this.alphaMap = null;\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.fog = false;\n    this.setValues(parameters);\n  }\n\n  MeshDistanceMaterial.prototype = Object.create(Material.prototype);\n  MeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n  MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n  MeshDistanceMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.referencePosition.copy(source.referencePosition);\n    this.nearDistance = source.nearDistance;\n    this.farDistance = source.farDistance;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    return this;\n  };\n\n  var vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n  var vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\n  function WebGLShadowMap(_renderer, _objects, maxTextureSize) {\n    var _frustum = new Frustum();\n\n    var _shadowMapSize = new Vector2(),\n        _viewportSize = new Vector2(),\n        _viewport = new Vector4(),\n        _depthMaterials = [],\n        _distanceMaterials = [],\n        _materialCache = {};\n\n    var shadowSide = {\n      0: BackSide,\n      1: FrontSide,\n      2: DoubleSide\n    };\n    var shadowMaterialVertical = new ShaderMaterial({\n      defines: {\n        SAMPLE_RATE: 2.0 / 8.0,\n        HALF_SAMPLE_RATE: 1.0 / 8.0\n      },\n      uniforms: {\n        shadow_pass: {\n          value: null\n        },\n        resolution: {\n          value: new Vector2()\n        },\n        radius: {\n          value: 4.0\n        }\n      },\n      vertexShader: vsm_vert,\n      fragmentShader: vsm_frag\n    });\n    var shadowMaterialHorizontal = shadowMaterialVertical.clone();\n    shadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n    var fullScreenTri = new BufferGeometry();\n    fullScreenTri.setAttribute('position', new BufferAttribute(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));\n    var fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);\n    var scope = this;\n    this.enabled = false;\n    this.autoUpdate = true;\n    this.needsUpdate = false;\n    this.type = PCFShadowMap;\n\n    this.render = function (lights, scene, camera) {\n      if (scope.enabled === false) return;\n      if (scope.autoUpdate === false && scope.needsUpdate === false) return;\n      if (lights.length === 0) return;\n\n      var currentRenderTarget = _renderer.getRenderTarget();\n\n      var activeCubeFace = _renderer.getActiveCubeFace();\n\n      var activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n      var _state = _renderer.state; // Set GL state for depth map.\n\n      _state.setBlending(NoBlending);\n\n      _state.buffers.color.setClear(1, 1, 1, 1);\n\n      _state.buffers.depth.setTest(true);\n\n      _state.setScissorTest(false); // render depth map\n\n\n      for (var i = 0, il = lights.length; i < il; i++) {\n        var light = lights[i];\n        var shadow = light.shadow;\n\n        if (shadow === undefined) {\n          console.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n          continue;\n        }\n\n        if (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;\n\n        _shadowMapSize.copy(shadow.mapSize);\n\n        var shadowFrameExtents = shadow.getFrameExtents();\n\n        _shadowMapSize.multiply(shadowFrameExtents);\n\n        _viewportSize.copy(shadow.mapSize);\n\n        if (_shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize) {\n          if (_shadowMapSize.x > maxTextureSize) {\n            _viewportSize.x = Math.floor(maxTextureSize / shadowFrameExtents.x);\n            _shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n            shadow.mapSize.x = _viewportSize.x;\n          }\n\n          if (_shadowMapSize.y > maxTextureSize) {\n            _viewportSize.y = Math.floor(maxTextureSize / shadowFrameExtents.y);\n            _shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n            shadow.mapSize.y = _viewportSize.y;\n          }\n        }\n\n        if (shadow.map === null && !shadow.isPointLightShadow && this.type === VSMShadowMap) {\n          var pars = {\n            minFilter: LinearFilter,\n            magFilter: LinearFilter,\n            format: RGBAFormat\n          };\n          shadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n          shadow.map.texture.name = light.name + '.shadowMap';\n          shadow.mapPass = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n          shadow.camera.updateProjectionMatrix();\n        }\n\n        if (shadow.map === null) {\n          var _pars = {\n            minFilter: NearestFilter,\n            magFilter: NearestFilter,\n            format: RGBAFormat\n          };\n          shadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, _pars);\n          shadow.map.texture.name = light.name + '.shadowMap';\n          shadow.camera.updateProjectionMatrix();\n        }\n\n        _renderer.setRenderTarget(shadow.map);\n\n        _renderer.clear();\n\n        var viewportCount = shadow.getViewportCount();\n\n        for (var vp = 0; vp < viewportCount; vp++) {\n          var viewport = shadow.getViewport(vp);\n\n          _viewport.set(_viewportSize.x * viewport.x, _viewportSize.y * viewport.y, _viewportSize.x * viewport.z, _viewportSize.y * viewport.w);\n\n          _state.viewport(_viewport);\n\n          shadow.updateMatrices(light, vp);\n          _frustum = shadow.getFrustum();\n          renderObject(scene, camera, shadow.camera, light, this.type);\n        } // do blur pass for VSM\n\n\n        if (!shadow.isPointLightShadow && this.type === VSMShadowMap) {\n          VSMPass(shadow, camera);\n        }\n\n        shadow.needsUpdate = false;\n      }\n\n      scope.needsUpdate = false;\n\n      _renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\n    };\n\n    function VSMPass(shadow, camera) {\n      var geometry = _objects.update(fullScreenMesh); // vertical pass\n\n\n      shadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n      shadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n      shadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\n      _renderer.setRenderTarget(shadow.mapPass);\n\n      _renderer.clear();\n\n      _renderer.renderBufferDirect(camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null); // horizontal pass\n\n\n      shadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n      shadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n      shadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\n      _renderer.setRenderTarget(shadow.map);\n\n      _renderer.clear();\n\n      _renderer.renderBufferDirect(camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null);\n    }\n\n    function getDepthMaterialVariant(useMorphing, useSkinning, useInstancing) {\n      var index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n      var material = _depthMaterials[index];\n\n      if (material === undefined) {\n        material = new MeshDepthMaterial({\n          depthPacking: RGBADepthPacking,\n          morphTargets: useMorphing,\n          skinning: useSkinning\n        });\n        _depthMaterials[index] = material;\n      }\n\n      return material;\n    }\n\n    function getDistanceMaterialVariant(useMorphing, useSkinning, useInstancing) {\n      var index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n      var material = _distanceMaterials[index];\n\n      if (material === undefined) {\n        material = new MeshDistanceMaterial({\n          morphTargets: useMorphing,\n          skinning: useSkinning\n        });\n        _distanceMaterials[index] = material;\n      }\n\n      return material;\n    }\n\n    function getDepthMaterial(object, geometry, material, light, shadowCameraNear, shadowCameraFar, type) {\n      var result = null;\n      var getMaterialVariant = getDepthMaterialVariant;\n      var customMaterial = object.customDepthMaterial;\n\n      if (light.isPointLight === true) {\n        getMaterialVariant = getDistanceMaterialVariant;\n        customMaterial = object.customDistanceMaterial;\n      }\n\n      if (customMaterial === undefined) {\n        var useMorphing = false;\n\n        if (material.morphTargets === true) {\n          useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n        }\n\n        var useSkinning = false;\n\n        if (object.isSkinnedMesh === true) {\n          if (material.skinning === true) {\n            useSkinning = true;\n          } else {\n            console.warn('THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object);\n          }\n        }\n\n        var useInstancing = object.isInstancedMesh === true;\n        result = getMaterialVariant(useMorphing, useSkinning, useInstancing);\n      } else {\n        result = customMaterial;\n      }\n\n      if (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0) {\n        // in this case we need a unique material instance reflecting the\n        // appropriate state\n        var keyA = result.uuid,\n            keyB = material.uuid;\n        var materialsForVariant = _materialCache[keyA];\n\n        if (materialsForVariant === undefined) {\n          materialsForVariant = {};\n          _materialCache[keyA] = materialsForVariant;\n        }\n\n        var cachedMaterial = materialsForVariant[keyB];\n\n        if (cachedMaterial === undefined) {\n          cachedMaterial = result.clone();\n          materialsForVariant[keyB] = cachedMaterial;\n        }\n\n        result = cachedMaterial;\n      }\n\n      result.visible = material.visible;\n      result.wireframe = material.wireframe;\n\n      if (type === VSMShadowMap) {\n        result.side = material.shadowSide !== null ? material.shadowSide : material.side;\n      } else {\n        result.side = material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];\n      }\n\n      result.clipShadows = material.clipShadows;\n      result.clippingPlanes = material.clippingPlanes;\n      result.clipIntersection = material.clipIntersection;\n      result.wireframeLinewidth = material.wireframeLinewidth;\n      result.linewidth = material.linewidth;\n\n      if (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\n        result.referencePosition.setFromMatrixPosition(light.matrixWorld);\n        result.nearDistance = shadowCameraNear;\n        result.farDistance = shadowCameraFar;\n      }\n\n      return result;\n    }\n\n    function renderObject(object, camera, shadowCamera, light, type) {\n      if (object.visible === false) return;\n      var visible = object.layers.test(camera.layers);\n\n      if (visible && (object.isMesh || object.isLine || object.isPoints)) {\n        if ((object.castShadow || object.receiveShadow && type === VSMShadowMap) && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n          object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n          var geometry = _objects.update(object);\n\n          var material = object.material;\n\n          if (Array.isArray(material)) {\n            var groups = geometry.groups;\n\n            for (var k = 0, kl = groups.length; k < kl; k++) {\n              var group = groups[k];\n              var groupMaterial = material[group.materialIndex];\n\n              if (groupMaterial && groupMaterial.visible) {\n                var depthMaterial = getDepthMaterial(object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type);\n\n                _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n              }\n            }\n          } else if (material.visible) {\n            var _depthMaterial = getDepthMaterial(object, geometry, material, light, shadowCamera.near, shadowCamera.far, type);\n\n            _renderer.renderBufferDirect(shadowCamera, null, geometry, _depthMaterial, object, null);\n          }\n        }\n      }\n\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        renderObject(children[i], camera, shadowCamera, light, type);\n      }\n    }\n  }\n\n  function WebGLState(gl, extensions, capabilities) {\n    var _s4 = $RefreshSig$();\n\n    var _equationToGL, _factorToGL;\n\n    var isWebGL2 = capabilities.isWebGL2;\n\n    function ColorBuffer() {\n      var locked = false;\n      var color = new Vector4();\n      var currentColorMask = null;\n      var currentColorClear = new Vector4(0, 0, 0, 0);\n      return {\n        setMask: function setMask(colorMask) {\n          if (currentColorMask !== colorMask && !locked) {\n            gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n            currentColorMask = colorMask;\n          }\n        },\n        setLocked: function setLocked(lock) {\n          locked = lock;\n        },\n        setClear: function setClear(r, g, b, a, premultipliedAlpha) {\n          if (premultipliedAlpha === true) {\n            r *= a;\n            g *= a;\n            b *= a;\n          }\n\n          color.set(r, g, b, a);\n\n          if (currentColorClear.equals(color) === false) {\n            gl.clearColor(r, g, b, a);\n            currentColorClear.copy(color);\n          }\n        },\n        reset: function reset() {\n          locked = false;\n          currentColorMask = null;\n          currentColorClear.set(-1, 0, 0, 0); // set to invalid state\n        }\n      };\n    }\n\n    function DepthBuffer() {\n      var locked = false;\n      var currentDepthMask = null;\n      var currentDepthFunc = null;\n      var currentDepthClear = null;\n      return {\n        setTest: function setTest(depthTest) {\n          if (depthTest) {\n            enable(2929);\n          } else {\n            disable(2929);\n          }\n        },\n        setMask: function setMask(depthMask) {\n          if (currentDepthMask !== depthMask && !locked) {\n            gl.depthMask(depthMask);\n            currentDepthMask = depthMask;\n          }\n        },\n        setFunc: function setFunc(depthFunc) {\n          if (currentDepthFunc !== depthFunc) {\n            if (depthFunc) {\n              switch (depthFunc) {\n                case NeverDepth:\n                  gl.depthFunc(512);\n                  break;\n\n                case AlwaysDepth:\n                  gl.depthFunc(519);\n                  break;\n\n                case LessDepth:\n                  gl.depthFunc(513);\n                  break;\n\n                case LessEqualDepth:\n                  gl.depthFunc(515);\n                  break;\n\n                case EqualDepth:\n                  gl.depthFunc(514);\n                  break;\n\n                case GreaterEqualDepth:\n                  gl.depthFunc(518);\n                  break;\n\n                case GreaterDepth:\n                  gl.depthFunc(516);\n                  break;\n\n                case NotEqualDepth:\n                  gl.depthFunc(517);\n                  break;\n\n                default:\n                  gl.depthFunc(515);\n              }\n            } else {\n              gl.depthFunc(515);\n            }\n\n            currentDepthFunc = depthFunc;\n          }\n        },\n        setLocked: function setLocked(lock) {\n          locked = lock;\n        },\n        setClear: function setClear(depth) {\n          if (currentDepthClear !== depth) {\n            gl.clearDepth(depth);\n            currentDepthClear = depth;\n          }\n        },\n        reset: function reset() {\n          locked = false;\n          currentDepthMask = null;\n          currentDepthFunc = null;\n          currentDepthClear = null;\n        }\n      };\n    }\n\n    function StencilBuffer() {\n      var locked = false;\n      var currentStencilMask = null;\n      var currentStencilFunc = null;\n      var currentStencilRef = null;\n      var currentStencilFuncMask = null;\n      var currentStencilFail = null;\n      var currentStencilZFail = null;\n      var currentStencilZPass = null;\n      var currentStencilClear = null;\n      return {\n        setTest: function setTest(stencilTest) {\n          if (!locked) {\n            if (stencilTest) {\n              enable(2960);\n            } else {\n              disable(2960);\n            }\n          }\n        },\n        setMask: function setMask(stencilMask) {\n          if (currentStencilMask !== stencilMask && !locked) {\n            gl.stencilMask(stencilMask);\n            currentStencilMask = stencilMask;\n          }\n        },\n        setFunc: function setFunc(stencilFunc, stencilRef, stencilMask) {\n          if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n            gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n            currentStencilFunc = stencilFunc;\n            currentStencilRef = stencilRef;\n            currentStencilFuncMask = stencilMask;\n          }\n        },\n        setOp: function setOp(stencilFail, stencilZFail, stencilZPass) {\n          if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n            gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n            currentStencilFail = stencilFail;\n            currentStencilZFail = stencilZFail;\n            currentStencilZPass = stencilZPass;\n          }\n        },\n        setLocked: function setLocked(lock) {\n          locked = lock;\n        },\n        setClear: function setClear(stencil) {\n          if (currentStencilClear !== stencil) {\n            gl.clearStencil(stencil);\n            currentStencilClear = stencil;\n          }\n        },\n        reset: function reset() {\n          locked = false;\n          currentStencilMask = null;\n          currentStencilFunc = null;\n          currentStencilRef = null;\n          currentStencilFuncMask = null;\n          currentStencilFail = null;\n          currentStencilZFail = null;\n          currentStencilZPass = null;\n          currentStencilClear = null;\n        }\n      };\n    } //\n\n\n    var colorBuffer = new ColorBuffer();\n    var depthBuffer = new DepthBuffer();\n    var stencilBuffer = new StencilBuffer();\n    var enabledCapabilities = {};\n    var currentProgram = null;\n    var currentBlendingEnabled = null;\n    var currentBlending = null;\n    var currentBlendEquation = null;\n    var currentBlendSrc = null;\n    var currentBlendDst = null;\n    var currentBlendEquationAlpha = null;\n    var currentBlendSrcAlpha = null;\n    var currentBlendDstAlpha = null;\n    var currentPremultipledAlpha = false;\n    var currentFlipSided = null;\n    var currentCullFace = null;\n    var currentLineWidth = null;\n    var currentPolygonOffsetFactor = null;\n    var currentPolygonOffsetUnits = null;\n    var maxTextures = gl.getParameter(35661);\n    var lineWidthAvailable = false;\n    var version = 0;\n    var glVersion = gl.getParameter(7938);\n\n    if (glVersion.indexOf('WebGL') !== -1) {\n      version = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\n      lineWidthAvailable = version >= 1.0;\n    } else if (glVersion.indexOf('OpenGL ES') !== -1) {\n      version = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\n      lineWidthAvailable = version >= 2.0;\n    }\n\n    var currentTextureSlot = null;\n    var currentBoundTextures = {};\n    var currentScissor = new Vector4();\n    var currentViewport = new Vector4();\n\n    function createTexture(type, target, count) {\n      var data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n      var texture = gl.createTexture();\n      gl.bindTexture(type, texture);\n      gl.texParameteri(type, 10241, 9728);\n      gl.texParameteri(type, 10240, 9728);\n\n      for (var i = 0; i < count; i++) {\n        gl.texImage2D(target + i, 0, 6408, 1, 1, 0, 6408, 5121, data);\n      }\n\n      return texture;\n    }\n\n    var emptyTextures = {};\n    emptyTextures[3553] = createTexture(3553, 3553, 1);\n    emptyTextures[34067] = createTexture(34067, 34069, 6); // init\n\n    colorBuffer.setClear(0, 0, 0, 1);\n    depthBuffer.setClear(1);\n    stencilBuffer.setClear(0);\n    enable(2929);\n    depthBuffer.setFunc(LessEqualDepth);\n    setFlipSided(false);\n    setCullFace(CullFaceBack);\n    enable(2884);\n    setBlending(NoBlending); //\n\n    function enable(id) {\n      if (enabledCapabilities[id] !== true) {\n        gl.enable(id);\n        enabledCapabilities[id] = true;\n      }\n    }\n\n    function disable(id) {\n      if (enabledCapabilities[id] !== false) {\n        gl.disable(id);\n        enabledCapabilities[id] = false;\n      }\n    }\n\n    function useProgram(program) {\n      _s4();\n\n      if (currentProgram !== program) {\n        gl.useProgram(program);\n        currentProgram = program;\n        return true;\n      }\n\n      return false;\n    }\n\n    _s4(useProgram, \"ZdQBZ3rq7bWAAMQq6hlVCmYF0jM=\", false, function () {\n      return [gl.useProgram];\n    });\n\n    var equationToGL = (_equationToGL = {}, _equationToGL[AddEquation] = 32774, _equationToGL[SubtractEquation] = 32778, _equationToGL[ReverseSubtractEquation] = 32779, _equationToGL);\n\n    if (isWebGL2) {\n      equationToGL[MinEquation] = 32775;\n      equationToGL[MaxEquation] = 32776;\n    } else {\n      var extension = extensions.get('EXT_blend_minmax');\n\n      if (extension !== null) {\n        equationToGL[MinEquation] = extension.MIN_EXT;\n        equationToGL[MaxEquation] = extension.MAX_EXT;\n      }\n    }\n\n    var factorToGL = (_factorToGL = {}, _factorToGL[ZeroFactor] = 0, _factorToGL[OneFactor] = 1, _factorToGL[SrcColorFactor] = 768, _factorToGL[SrcAlphaFactor] = 770, _factorToGL[SrcAlphaSaturateFactor] = 776, _factorToGL[DstColorFactor] = 774, _factorToGL[DstAlphaFactor] = 772, _factorToGL[OneMinusSrcColorFactor] = 769, _factorToGL[OneMinusSrcAlphaFactor] = 771, _factorToGL[OneMinusDstColorFactor] = 775, _factorToGL[OneMinusDstAlphaFactor] = 773, _factorToGL);\n\n    function setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n      if (blending === NoBlending) {\n        if (currentBlendingEnabled) {\n          disable(3042);\n          currentBlendingEnabled = false;\n        }\n\n        return;\n      }\n\n      if (!currentBlendingEnabled) {\n        enable(3042);\n        currentBlendingEnabled = true;\n      }\n\n      if (blending !== CustomBlending) {\n        if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n          if (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\n            gl.blendEquation(32774);\n            currentBlendEquation = AddEquation;\n            currentBlendEquationAlpha = AddEquation;\n          }\n\n          if (premultipliedAlpha) {\n            switch (blending) {\n              case NormalBlending:\n                gl.blendFuncSeparate(1, 771, 1, 771);\n                break;\n\n              case AdditiveBlending:\n                gl.blendFunc(1, 1);\n                break;\n\n              case SubtractiveBlending:\n                gl.blendFuncSeparate(0, 0, 769, 771);\n                break;\n\n              case MultiplyBlending:\n                gl.blendFuncSeparate(0, 768, 0, 770);\n                break;\n\n              default:\n                console.error('THREE.WebGLState: Invalid blending: ', blending);\n                break;\n            }\n          } else {\n            switch (blending) {\n              case NormalBlending:\n                gl.blendFuncSeparate(770, 771, 1, 771);\n                break;\n\n              case AdditiveBlending:\n                gl.blendFunc(770, 1);\n                break;\n\n              case SubtractiveBlending:\n                gl.blendFunc(0, 769);\n                break;\n\n              case MultiplyBlending:\n                gl.blendFunc(0, 768);\n                break;\n\n              default:\n                console.error('THREE.WebGLState: Invalid blending: ', blending);\n                break;\n            }\n          }\n\n          currentBlendSrc = null;\n          currentBlendDst = null;\n          currentBlendSrcAlpha = null;\n          currentBlendDstAlpha = null;\n          currentBlending = blending;\n          currentPremultipledAlpha = premultipliedAlpha;\n        }\n\n        return;\n      } // custom blending\n\n\n      blendEquationAlpha = blendEquationAlpha || blendEquation;\n      blendSrcAlpha = blendSrcAlpha || blendSrc;\n      blendDstAlpha = blendDstAlpha || blendDst;\n\n      if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n        gl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\n        currentBlendEquation = blendEquation;\n        currentBlendEquationAlpha = blendEquationAlpha;\n      }\n\n      if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n        gl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\n        currentBlendSrc = blendSrc;\n        currentBlendDst = blendDst;\n        currentBlendSrcAlpha = blendSrcAlpha;\n        currentBlendDstAlpha = blendDstAlpha;\n      }\n\n      currentBlending = blending;\n      currentPremultipledAlpha = null;\n    }\n\n    function setMaterial(material, frontFaceCW) {\n      material.side === DoubleSide ? disable(2884) : enable(2884);\n      var flipSided = material.side === BackSide;\n      if (frontFaceCW) flipSided = !flipSided;\n      setFlipSided(flipSided);\n      material.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n      depthBuffer.setFunc(material.depthFunc);\n      depthBuffer.setTest(material.depthTest);\n      depthBuffer.setMask(material.depthWrite);\n      colorBuffer.setMask(material.colorWrite);\n      var stencilWrite = material.stencilWrite;\n      stencilBuffer.setTest(stencilWrite);\n\n      if (stencilWrite) {\n        stencilBuffer.setMask(material.stencilWriteMask);\n        stencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\n        stencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\n      }\n\n      setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n    } //\n\n\n    function setFlipSided(flipSided) {\n      if (currentFlipSided !== flipSided) {\n        if (flipSided) {\n          gl.frontFace(2304);\n        } else {\n          gl.frontFace(2305);\n        }\n\n        currentFlipSided = flipSided;\n      }\n    }\n\n    function setCullFace(cullFace) {\n      if (cullFace !== CullFaceNone) {\n        enable(2884);\n\n        if (cullFace !== currentCullFace) {\n          if (cullFace === CullFaceBack) {\n            gl.cullFace(1029);\n          } else if (cullFace === CullFaceFront) {\n            gl.cullFace(1028);\n          } else {\n            gl.cullFace(1032);\n          }\n        }\n      } else {\n        disable(2884);\n      }\n\n      currentCullFace = cullFace;\n    }\n\n    function setLineWidth(width) {\n      if (width !== currentLineWidth) {\n        if (lineWidthAvailable) gl.lineWidth(width);\n        currentLineWidth = width;\n      }\n    }\n\n    function setPolygonOffset(polygonOffset, factor, units) {\n      if (polygonOffset) {\n        enable(32823);\n\n        if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n          gl.polygonOffset(factor, units);\n          currentPolygonOffsetFactor = factor;\n          currentPolygonOffsetUnits = units;\n        }\n      } else {\n        disable(32823);\n      }\n    }\n\n    function setScissorTest(scissorTest) {\n      if (scissorTest) {\n        enable(3089);\n      } else {\n        disable(3089);\n      }\n    } // texture\n\n\n    function activeTexture(webglSlot) {\n      if (webglSlot === undefined) webglSlot = 33984 + maxTextures - 1;\n\n      if (currentTextureSlot !== webglSlot) {\n        gl.activeTexture(webglSlot);\n        currentTextureSlot = webglSlot;\n      }\n    }\n\n    function bindTexture(webglType, webglTexture) {\n      if (currentTextureSlot === null) {\n        activeTexture();\n      }\n\n      var boundTexture = currentBoundTextures[currentTextureSlot];\n\n      if (boundTexture === undefined) {\n        boundTexture = {\n          type: undefined,\n          texture: undefined\n        };\n        currentBoundTextures[currentTextureSlot] = boundTexture;\n      }\n\n      if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n        gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n        boundTexture.type = webglType;\n        boundTexture.texture = webglTexture;\n      }\n    }\n\n    function unbindTexture() {\n      var boundTexture = currentBoundTextures[currentTextureSlot];\n\n      if (boundTexture !== undefined && boundTexture.type !== undefined) {\n        gl.bindTexture(boundTexture.type, null);\n        boundTexture.type = undefined;\n        boundTexture.texture = undefined;\n      }\n    }\n\n    function compressedTexImage2D() {\n      try {\n        gl.compressedTexImage2D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    }\n\n    function texImage2D() {\n      try {\n        gl.texImage2D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    }\n\n    function texImage3D() {\n      try {\n        gl.texImage3D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    } //\n\n\n    function scissor(scissor) {\n      if (currentScissor.equals(scissor) === false) {\n        gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n        currentScissor.copy(scissor);\n      }\n    }\n\n    function viewport(viewport) {\n      if (currentViewport.equals(viewport) === false) {\n        gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n        currentViewport.copy(viewport);\n      }\n    } //\n\n\n    function reset() {\n      enabledCapabilities = {};\n      currentTextureSlot = null;\n      currentBoundTextures = {};\n      currentProgram = null;\n      currentBlendingEnabled = null;\n      currentBlending = null;\n      currentBlendEquation = null;\n      currentBlendSrc = null;\n      currentBlendDst = null;\n      currentBlendEquationAlpha = null;\n      currentBlendSrcAlpha = null;\n      currentBlendDstAlpha = null;\n      currentPremultipledAlpha = false;\n      currentFlipSided = null;\n      currentCullFace = null;\n      currentLineWidth = null;\n      currentPolygonOffsetFactor = null;\n      currentPolygonOffsetUnits = null;\n      colorBuffer.reset();\n      depthBuffer.reset();\n      stencilBuffer.reset();\n    }\n\n    return {\n      buffers: {\n        color: colorBuffer,\n        depth: depthBuffer,\n        stencil: stencilBuffer\n      },\n      enable: enable,\n      disable: disable,\n      useProgram: useProgram,\n      setBlending: setBlending,\n      setMaterial: setMaterial,\n      setFlipSided: setFlipSided,\n      setCullFace: setCullFace,\n      setLineWidth: setLineWidth,\n      setPolygonOffset: setPolygonOffset,\n      setScissorTest: setScissorTest,\n      activeTexture: activeTexture,\n      bindTexture: bindTexture,\n      unbindTexture: unbindTexture,\n      compressedTexImage2D: compressedTexImage2D,\n      texImage2D: texImage2D,\n      texImage3D: texImage3D,\n      scissor: scissor,\n      viewport: viewport,\n      reset: reset\n    };\n  }\n\n  function WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\n    var _wrappingToGL, _filterToGL;\n\n    var isWebGL2 = capabilities.isWebGL2;\n    var maxTextures = capabilities.maxTextures;\n    var maxCubemapSize = capabilities.maxCubemapSize;\n    var maxTextureSize = capabilities.maxTextureSize;\n    var maxSamples = capabilities.maxSamples;\n\n    var _videoTextures = new WeakMap();\n\n    var _canvas; // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n    // also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n    // Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\n    var useOffscreenCanvas = false;\n\n    try {\n      useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined' && new OffscreenCanvas(1, 1).getContext('2d') !== null;\n    } catch (err) {// Ignore any errors\n    }\n\n    function createCanvas(width, height) {\n      // Use OffscreenCanvas when available. Specially needed in web workers\n      return useOffscreenCanvas ? new OffscreenCanvas(width, height) : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n    }\n\n    function resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {\n      var scale = 1; // handle case if texture exceeds max size\n\n      if (image.width > maxSize || image.height > maxSize) {\n        scale = maxSize / Math.max(image.width, image.height);\n      } // only perform resize if necessary\n\n\n      if (scale < 1 || needsPowerOfTwo === true) {\n        // only perform resize for certain image types\n        if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n          var floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;\n          var width = floor(scale * image.width);\n          var height = floor(scale * image.height);\n          if (_canvas === undefined) _canvas = createCanvas(width, height); // cube textures can't reuse the same canvas\n\n          var canvas = needsNewCanvas ? createCanvas(width, height) : _canvas;\n          canvas.width = width;\n          canvas.height = height;\n          var context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, width, height);\n          console.warn('THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').');\n          return canvas;\n        } else {\n          if ('data' in image) {\n            console.warn('THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\n          }\n\n          return image;\n        }\n      }\n\n      return image;\n    }\n\n    function isPowerOfTwo(image) {\n      return MathUtils.isPowerOfTwo(image.width) && MathUtils.isPowerOfTwo(image.height);\n    }\n\n    function textureNeedsPowerOfTwo(texture) {\n      if (isWebGL2) return false;\n      return texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n    }\n\n    function textureNeedsGenerateMipmaps(texture, supportsMips) {\n      return texture.generateMipmaps && supportsMips && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n    }\n\n    function generateMipmap(target, texture, width, height) {\n      _gl.generateMipmap(target);\n\n      var textureProperties = properties.get(texture); // Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\n      textureProperties.__maxMipLevel = Math.log(Math.max(width, height)) * Math.LOG2E;\n    }\n\n    function getInternalFormat(internalFormatName, glFormat, glType) {\n      if (isWebGL2 === false) return glFormat;\n\n      if (internalFormatName !== null) {\n        if (_gl[internalFormatName] !== undefined) return _gl[internalFormatName];\n        console.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'');\n      }\n\n      var internalFormat = glFormat;\n\n      if (glFormat === 6403) {\n        if (glType === 5126) internalFormat = 33326;\n        if (glType === 5131) internalFormat = 33325;\n        if (glType === 5121) internalFormat = 33321;\n      }\n\n      if (glFormat === 6407) {\n        if (glType === 5126) internalFormat = 34837;\n        if (glType === 5131) internalFormat = 34843;\n        if (glType === 5121) internalFormat = 32849;\n      }\n\n      if (glFormat === 6408) {\n        if (glType === 5126) internalFormat = 34836;\n        if (glType === 5131) internalFormat = 34842;\n        if (glType === 5121) internalFormat = 32856;\n      }\n\n      if (internalFormat === 33325 || internalFormat === 33326 || internalFormat === 34842 || internalFormat === 34836) {\n        extensions.get('EXT_color_buffer_float');\n      }\n\n      return internalFormat;\n    } // Fallback filters for non-power-of-2 textures\n\n\n    function filterFallback(f) {\n      if (f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter) {\n        return 9728;\n      }\n\n      return 9729;\n    } //\n\n\n    function onTextureDispose(event) {\n      var texture = event.target;\n      texture.removeEventListener('dispose', onTextureDispose);\n      deallocateTexture(texture);\n\n      if (texture.isVideoTexture) {\n        _videoTextures.delete(texture);\n      }\n\n      info.memory.textures--;\n    }\n\n    function onRenderTargetDispose(event) {\n      var renderTarget = event.target;\n      renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n      deallocateRenderTarget(renderTarget);\n      info.memory.textures--;\n    } //\n\n\n    function deallocateTexture(texture) {\n      var textureProperties = properties.get(texture);\n      if (textureProperties.__webglInit === undefined) return;\n\n      _gl.deleteTexture(textureProperties.__webglTexture);\n\n      properties.remove(texture);\n    }\n\n    function deallocateRenderTarget(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var textureProperties = properties.get(renderTarget.texture);\n      if (!renderTarget) return;\n\n      if (textureProperties.__webglTexture !== undefined) {\n        _gl.deleteTexture(textureProperties.__webglTexture);\n      }\n\n      if (renderTarget.depthTexture) {\n        renderTarget.depthTexture.dispose();\n      }\n\n      if (renderTarget.isWebGLCubeRenderTarget) {\n        for (var i = 0; i < 6; i++) {\n          _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n          if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n        }\n      } else {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n        if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n        if (renderTargetProperties.__webglMultisampledFramebuffer) _gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);\n        if (renderTargetProperties.__webglColorRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);\n        if (renderTargetProperties.__webglDepthRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);\n      }\n\n      properties.remove(renderTarget.texture);\n      properties.remove(renderTarget);\n    } //\n\n\n    var textureUnits = 0;\n\n    function resetTextureUnits() {\n      textureUnits = 0;\n    }\n\n    function allocateTextureUnit() {\n      var textureUnit = textureUnits;\n\n      if (textureUnit >= maxTextures) {\n        console.warn('THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures);\n      }\n\n      textureUnits += 1;\n      return textureUnit;\n    } //\n\n\n    function setTexture2D(texture, slot) {\n      var textureProperties = properties.get(texture);\n      if (texture.isVideoTexture) updateVideoTexture(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        var image = texture.image;\n\n        if (image === undefined) {\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');\n        } else if (image.complete === false) {\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\n        } else {\n          uploadTexture(textureProperties, texture, slot);\n          return;\n        }\n      }\n\n      state.activeTexture(33984 + slot);\n      state.bindTexture(3553, textureProperties.__webglTexture);\n    }\n\n    function setTexture2DArray(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        uploadTexture(textureProperties, texture, slot);\n        return;\n      }\n\n      state.activeTexture(33984 + slot);\n      state.bindTexture(35866, textureProperties.__webglTexture);\n    }\n\n    function setTexture3D(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        uploadTexture(textureProperties, texture, slot);\n        return;\n      }\n\n      state.activeTexture(33984 + slot);\n      state.bindTexture(32879, textureProperties.__webglTexture);\n    }\n\n    function setTextureCube(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        uploadCubeTexture(textureProperties, texture, slot);\n        return;\n      }\n\n      state.activeTexture(33984 + slot);\n      state.bindTexture(34067, textureProperties.__webglTexture);\n    }\n\n    var wrappingToGL = (_wrappingToGL = {}, _wrappingToGL[RepeatWrapping] = 10497, _wrappingToGL[ClampToEdgeWrapping] = 33071, _wrappingToGL[MirroredRepeatWrapping] = 33648, _wrappingToGL);\n    var filterToGL = (_filterToGL = {}, _filterToGL[NearestFilter] = 9728, _filterToGL[NearestMipmapNearestFilter] = 9984, _filterToGL[NearestMipmapLinearFilter] = 9986, _filterToGL[LinearFilter] = 9729, _filterToGL[LinearMipmapNearestFilter] = 9985, _filterToGL[LinearMipmapLinearFilter] = 9987, _filterToGL);\n\n    function setTextureParameters(textureType, texture, supportsMips) {\n      if (supportsMips) {\n        _gl.texParameteri(textureType, 10242, wrappingToGL[texture.wrapS]);\n\n        _gl.texParameteri(textureType, 10243, wrappingToGL[texture.wrapT]);\n\n        if (textureType === 32879 || textureType === 35866) {\n          _gl.texParameteri(textureType, 32882, wrappingToGL[texture.wrapR]);\n        }\n\n        _gl.texParameteri(textureType, 10240, filterToGL[texture.magFilter]);\n\n        _gl.texParameteri(textureType, 10241, filterToGL[texture.minFilter]);\n      } else {\n        _gl.texParameteri(textureType, 10242, 33071);\n\n        _gl.texParameteri(textureType, 10243, 33071);\n\n        if (textureType === 32879 || textureType === 35866) {\n          _gl.texParameteri(textureType, 32882, 33071);\n        }\n\n        if (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n          console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');\n        }\n\n        _gl.texParameteri(textureType, 10240, filterFallback(texture.magFilter));\n\n        _gl.texParameteri(textureType, 10241, filterFallback(texture.minFilter));\n\n        if (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n          console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');\n        }\n      }\n\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension) {\n        if (texture.type === FloatType && extensions.get('OES_texture_float_linear') === null) return;\n        if (texture.type === HalfFloatType && (isWebGL2 || extensions.get('OES_texture_half_float_linear')) === null) return;\n\n        if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n          _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n          properties.get(texture).__currentAnisotropy = texture.anisotropy;\n        }\n      }\n    }\n\n    function initTexture(textureProperties, texture) {\n      if (textureProperties.__webglInit === undefined) {\n        textureProperties.__webglInit = true;\n        texture.addEventListener('dispose', onTextureDispose);\n        textureProperties.__webglTexture = _gl.createTexture();\n        info.memory.textures++;\n      }\n    }\n\n    function uploadTexture(textureProperties, texture, slot) {\n      var textureType = 3553;\n      if (texture.isDataTexture2DArray) textureType = 35866;\n      if (texture.isDataTexture3D) textureType = 32879;\n      initTexture(textureProperties, texture);\n      state.activeTexture(33984 + slot);\n      state.bindTexture(textureType, textureProperties.__webglTexture);\n\n      _gl.pixelStorei(37440, texture.flipY);\n\n      _gl.pixelStorei(37441, texture.premultiplyAlpha);\n\n      _gl.pixelStorei(3317, texture.unpackAlignment);\n\n      var needsPowerOfTwo = textureNeedsPowerOfTwo(texture) && isPowerOfTwo(texture.image) === false;\n      var image = resizeImage(texture.image, needsPowerOfTwo, false, maxTextureSize);\n      var supportsMips = isPowerOfTwo(image) || isWebGL2,\n          glFormat = utils.convert(texture.format);\n      var glType = utils.convert(texture.type),\n          glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n      setTextureParameters(textureType, texture, supportsMips);\n      var mipmap;\n      var mipmaps = texture.mipmaps;\n\n      if (texture.isDepthTexture) {\n        // populate depth texture with dummy data\n        glInternalFormat = 6402;\n\n        if (isWebGL2) {\n          if (texture.type === FloatType) {\n            glInternalFormat = 36012;\n          } else if (texture.type === UnsignedIntType) {\n            glInternalFormat = 33190;\n          } else if (texture.type === UnsignedInt248Type) {\n            glInternalFormat = 35056;\n          } else {\n            glInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n          }\n        } else {\n          if (texture.type === FloatType) {\n            console.error('WebGLRenderer: Floating point depth texture requires WebGL2.');\n          }\n        } // validation checks for WebGL 1\n\n\n        if (texture.format === DepthFormat && glInternalFormat === 6402) {\n          // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n          // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n          if (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n            console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n            texture.type = UnsignedShortType;\n            glType = utils.convert(texture.type);\n          }\n        }\n\n        if (texture.format === DepthStencilFormat && glInternalFormat === 6402) {\n          // Depth stencil textures need the DEPTH_STENCIL internal format\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n          glInternalFormat = 34041; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n          // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n          if (texture.type !== UnsignedInt248Type) {\n            console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n            texture.type = UnsignedInt248Type;\n            glType = utils.convert(texture.type);\n          }\n        } //\n\n\n        state.texImage2D(3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\n      } else if (texture.isDataTexture) {\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && supportsMips) {\n          for (var i = 0, il = mipmaps.length; i < il; i++) {\n            mipmap = mipmaps[i];\n            state.texImage2D(3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n          }\n\n          texture.generateMipmaps = false;\n          textureProperties.__maxMipLevel = mipmaps.length - 1;\n        } else {\n          state.texImage2D(3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);\n          textureProperties.__maxMipLevel = 0;\n        }\n      } else if (texture.isCompressedTexture) {\n        for (var _i = 0, _il = mipmaps.length; _i < _il; _i++) {\n          mipmap = mipmaps[_i];\n\n          if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n            if (glFormat !== null) {\n              state.compressedTexImage2D(3553, _i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n            } else {\n              console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\n            }\n          } else {\n            state.texImage2D(3553, _i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n          }\n        }\n\n        textureProperties.__maxMipLevel = mipmaps.length - 1;\n      } else if (texture.isDataTexture2DArray) {\n        state.texImage3D(35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n        textureProperties.__maxMipLevel = 0;\n      } else if (texture.isDataTexture3D) {\n        state.texImage3D(32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n        textureProperties.__maxMipLevel = 0;\n      } else {\n        // regular Texture (image, video, canvas)\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && supportsMips) {\n          for (var _i2 = 0, _il2 = mipmaps.length; _i2 < _il2; _i2++) {\n            mipmap = mipmaps[_i2];\n            state.texImage2D(3553, _i2, glInternalFormat, glFormat, glType, mipmap);\n          }\n\n          texture.generateMipmaps = false;\n          textureProperties.__maxMipLevel = mipmaps.length - 1;\n        } else {\n          state.texImage2D(3553, 0, glInternalFormat, glFormat, glType, image);\n          textureProperties.__maxMipLevel = 0;\n        }\n      }\n\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n        generateMipmap(textureType, texture, image.width, image.height);\n      }\n\n      textureProperties.__version = texture.version;\n      if (texture.onUpdate) texture.onUpdate(texture);\n    }\n\n    function uploadCubeTexture(textureProperties, texture, slot) {\n      if (texture.image.length !== 6) return;\n      initTexture(textureProperties, texture);\n      state.activeTexture(33984 + slot);\n      state.bindTexture(34067, textureProperties.__webglTexture);\n\n      _gl.pixelStorei(37440, texture.flipY);\n\n      _gl.pixelStorei(37441, texture.premultiplyAlpha);\n\n      _gl.pixelStorei(3317, texture.unpackAlignment);\n\n      var isCompressed = texture && (texture.isCompressedTexture || texture.image[0].isCompressedTexture);\n      var isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n      var cubeImage = [];\n\n      for (var i = 0; i < 6; i++) {\n        if (!isCompressed && !isDataTexture) {\n          cubeImage[i] = resizeImage(texture.image[i], false, true, maxCubemapSize);\n        } else {\n          cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n        }\n      }\n\n      var image = cubeImage[0],\n          supportsMips = isPowerOfTwo(image) || isWebGL2,\n          glFormat = utils.convert(texture.format),\n          glType = utils.convert(texture.type),\n          glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n      setTextureParameters(34067, texture, supportsMips);\n      var mipmaps;\n\n      if (isCompressed) {\n        for (var _i3 = 0; _i3 < 6; _i3++) {\n          mipmaps = cubeImage[_i3].mipmaps;\n\n          for (var j = 0; j < mipmaps.length; j++) {\n            var mipmap = mipmaps[j];\n\n            if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n              if (glFormat !== null) {\n                state.compressedTexImage2D(34069 + _i3, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n              } else {\n                console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\n              }\n            } else {\n              state.texImage2D(34069 + _i3, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n            }\n          }\n        }\n\n        textureProperties.__maxMipLevel = mipmaps.length - 1;\n      } else {\n        mipmaps = texture.mipmaps;\n\n        for (var _i4 = 0; _i4 < 6; _i4++) {\n          if (isDataTexture) {\n            state.texImage2D(34069 + _i4, 0, glInternalFormat, cubeImage[_i4].width, cubeImage[_i4].height, 0, glFormat, glType, cubeImage[_i4].data);\n\n            for (var _j = 0; _j < mipmaps.length; _j++) {\n              var _mipmap = mipmaps[_j];\n              var mipmapImage = _mipmap.image[_i4].image;\n              state.texImage2D(34069 + _i4, _j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data);\n            }\n          } else {\n            state.texImage2D(34069 + _i4, 0, glInternalFormat, glFormat, glType, cubeImage[_i4]);\n\n            for (var _j2 = 0; _j2 < mipmaps.length; _j2++) {\n              var _mipmap2 = mipmaps[_j2];\n              state.texImage2D(34069 + _i4, _j2 + 1, glInternalFormat, glFormat, glType, _mipmap2.image[_i4]);\n            }\n          }\n        }\n\n        textureProperties.__maxMipLevel = mipmaps.length;\n      }\n\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n        // We assume images for cube map have the same size.\n        generateMipmap(34067, texture, image.width, image.height);\n      }\n\n      textureProperties.__version = texture.version;\n      if (texture.onUpdate) texture.onUpdate(texture);\n    } // Render targets\n    // Setup storage for target texture and bind it to correct framebuffer\n\n\n    function setupFrameBufferTexture(framebuffer, renderTarget, attachment, textureTarget) {\n      var glFormat = utils.convert(renderTarget.texture.format);\n      var glType = utils.convert(renderTarget.texture.type);\n      var glInternalFormat = getInternalFormat(renderTarget.texture.internalFormat, glFormat, glType);\n      state.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\n      _gl.bindFramebuffer(36160, framebuffer);\n\n      _gl.framebufferTexture2D(36160, attachment, textureTarget, properties.get(renderTarget.texture).__webglTexture, 0);\n\n      _gl.bindFramebuffer(36160, null);\n    } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n    function setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {\n      _gl.bindRenderbuffer(36161, renderbuffer);\n\n      if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n        var glInternalFormat = 33189;\n\n        if (isMultisample) {\n          var depthTexture = renderTarget.depthTexture;\n\n          if (depthTexture && depthTexture.isDepthTexture) {\n            if (depthTexture.type === FloatType) {\n              glInternalFormat = 36012;\n            } else if (depthTexture.type === UnsignedIntType) {\n              glInternalFormat = 33190;\n            }\n          }\n\n          var samples = getRenderTargetSamples(renderTarget);\n\n          _gl.renderbufferStorageMultisample(36161, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n        } else {\n          _gl.renderbufferStorage(36161, glInternalFormat, renderTarget.width, renderTarget.height);\n        }\n\n        _gl.framebufferRenderbuffer(36160, 36096, 36161, renderbuffer);\n      } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n        if (isMultisample) {\n          var _samples = getRenderTargetSamples(renderTarget);\n\n          _gl.renderbufferStorageMultisample(36161, _samples, 35056, renderTarget.width, renderTarget.height);\n        } else {\n          _gl.renderbufferStorage(36161, 34041, renderTarget.width, renderTarget.height);\n        }\n\n        _gl.framebufferRenderbuffer(36160, 33306, 36161, renderbuffer);\n      } else {\n        var glFormat = utils.convert(renderTarget.texture.format);\n        var glType = utils.convert(renderTarget.texture.type);\n\n        var _glInternalFormat = getInternalFormat(renderTarget.texture.internalFormat, glFormat, glType);\n\n        if (isMultisample) {\n          var _samples2 = getRenderTargetSamples(renderTarget);\n\n          _gl.renderbufferStorageMultisample(36161, _samples2, _glInternalFormat, renderTarget.width, renderTarget.height);\n        } else {\n          _gl.renderbufferStorage(36161, _glInternalFormat, renderTarget.width, renderTarget.height);\n        }\n      }\n\n      _gl.bindRenderbuffer(36161, null);\n    } // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n    function setupDepthTexture(framebuffer, renderTarget) {\n      var isCube = renderTarget && renderTarget.isWebGLCubeRenderTarget;\n      if (isCube) throw new Error('Depth Texture with cube render targets is not supported');\n\n      _gl.bindFramebuffer(36160, framebuffer);\n\n      if (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n        throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n      } // upload an empty depth texture with framebuffer size\n\n\n      if (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n        renderTarget.depthTexture.image.width = renderTarget.width;\n        renderTarget.depthTexture.image.height = renderTarget.height;\n        renderTarget.depthTexture.needsUpdate = true;\n      }\n\n      setTexture2D(renderTarget.depthTexture, 0);\n\n      var webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n      if (renderTarget.depthTexture.format === DepthFormat) {\n        _gl.framebufferTexture2D(36160, 36096, 3553, webglDepthTexture, 0);\n      } else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n        _gl.framebufferTexture2D(36160, 33306, 3553, webglDepthTexture, 0);\n      } else {\n        throw new Error('Unknown depthTexture format');\n      }\n    } // Setup GL resources for a non-texture depth buffer\n\n\n    function setupDepthRenderbuffer(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\n      if (renderTarget.depthTexture) {\n        if (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n        setupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n      } else {\n        if (isCube) {\n          renderTargetProperties.__webglDepthbuffer = [];\n\n          for (var i = 0; i < 6; i++) {\n            _gl.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer[i]);\n\n            renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n            setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget, false);\n          }\n        } else {\n          _gl.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer);\n\n          renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n          setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget, false);\n        }\n      }\n\n      _gl.bindFramebuffer(36160, null);\n    } // Set up GL resources for the render target\n\n\n    function setupRenderTarget(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var textureProperties = properties.get(renderTarget.texture);\n      renderTarget.addEventListener('dispose', onRenderTargetDispose);\n      textureProperties.__webglTexture = _gl.createTexture();\n      info.memory.textures++;\n      var isCube = renderTarget.isWebGLCubeRenderTarget === true;\n      var isMultisample = renderTarget.isWebGLMultisampleRenderTarget === true;\n      var supportsMips = isPowerOfTwo(renderTarget) || isWebGL2; // Handles WebGL2 RGBFormat fallback - #18858\n\n      if (isWebGL2 && renderTarget.texture.format === RGBFormat && (renderTarget.texture.type === FloatType || renderTarget.texture.type === HalfFloatType)) {\n        renderTarget.texture.format = RGBAFormat;\n        console.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');\n      } // Setup framebuffer\n\n\n      if (isCube) {\n        renderTargetProperties.__webglFramebuffer = [];\n\n        for (var i = 0; i < 6; i++) {\n          renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n        }\n      } else {\n        renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n        if (isMultisample) {\n          if (isWebGL2) {\n            renderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n            renderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n            _gl.bindRenderbuffer(36161, renderTargetProperties.__webglColorRenderbuffer);\n\n            var glFormat = utils.convert(renderTarget.texture.format);\n            var glType = utils.convert(renderTarget.texture.type);\n            var glInternalFormat = getInternalFormat(renderTarget.texture.internalFormat, glFormat, glType);\n            var samples = getRenderTargetSamples(renderTarget);\n\n            _gl.renderbufferStorageMultisample(36161, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\n            _gl.bindFramebuffer(36160, renderTargetProperties.__webglMultisampledFramebuffer);\n\n            _gl.framebufferRenderbuffer(36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer);\n\n            _gl.bindRenderbuffer(36161, null);\n\n            if (renderTarget.depthBuffer) {\n              renderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n              setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true);\n            }\n\n            _gl.bindFramebuffer(36160, null);\n          } else {\n            console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n          }\n        }\n      } // Setup color buffer\n\n\n      if (isCube) {\n        state.bindTexture(34067, textureProperties.__webglTexture);\n        setTextureParameters(34067, renderTarget.texture, supportsMips);\n\n        for (var _i5 = 0; _i5 < 6; _i5++) {\n          setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[_i5], renderTarget, 36064, 34069 + _i5);\n        }\n\n        if (textureNeedsGenerateMipmaps(renderTarget.texture, supportsMips)) {\n          generateMipmap(34067, renderTarget.texture, renderTarget.width, renderTarget.height);\n        }\n\n        state.bindTexture(34067, null);\n      } else {\n        state.bindTexture(3553, textureProperties.__webglTexture);\n        setTextureParameters(3553, renderTarget.texture, supportsMips);\n        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553);\n\n        if (textureNeedsGenerateMipmaps(renderTarget.texture, supportsMips)) {\n          generateMipmap(3553, renderTarget.texture, renderTarget.width, renderTarget.height);\n        }\n\n        state.bindTexture(3553, null);\n      } // Setup depth and stencil buffers\n\n\n      if (renderTarget.depthBuffer) {\n        setupDepthRenderbuffer(renderTarget);\n      }\n    }\n\n    function updateRenderTargetMipmap(renderTarget) {\n      var texture = renderTarget.texture;\n      var supportsMips = isPowerOfTwo(renderTarget) || isWebGL2;\n\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n        var target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\n        var webglTexture = properties.get(texture).__webglTexture;\n\n        state.bindTexture(target, webglTexture);\n        generateMipmap(target, texture, renderTarget.width, renderTarget.height);\n        state.bindTexture(target, null);\n      }\n    }\n\n    function updateMultisampleRenderTarget(renderTarget) {\n      if (renderTarget.isWebGLMultisampleRenderTarget) {\n        if (isWebGL2) {\n          var renderTargetProperties = properties.get(renderTarget);\n\n          _gl.bindFramebuffer(36008, renderTargetProperties.__webglMultisampledFramebuffer);\n\n          _gl.bindFramebuffer(36009, renderTargetProperties.__webglFramebuffer);\n\n          var width = renderTarget.width;\n          var height = renderTarget.height;\n          var mask = 16384;\n          if (renderTarget.depthBuffer) mask |= 256;\n          if (renderTarget.stencilBuffer) mask |= 1024;\n\n          _gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, 9728);\n\n          _gl.bindFramebuffer(36160, renderTargetProperties.__webglMultisampledFramebuffer); // see #18905\n\n        } else {\n          console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n        }\n      }\n    }\n\n    function getRenderTargetSamples(renderTarget) {\n      return isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ? Math.min(maxSamples, renderTarget.samples) : 0;\n    }\n\n    function updateVideoTexture(texture) {\n      var frame = info.render.frame; // Check the last frame we updated the VideoTexture\n\n      if (_videoTextures.get(texture) !== frame) {\n        _videoTextures.set(texture, frame);\n\n        texture.update();\n      }\n    } // backwards compatibility\n\n\n    var warnedTexture2D = false;\n    var warnedTextureCube = false;\n\n    function safeSetTexture2D(texture, slot) {\n      if (texture && texture.isWebGLRenderTarget) {\n        if (warnedTexture2D === false) {\n          console.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');\n          warnedTexture2D = true;\n        }\n\n        texture = texture.texture;\n      }\n\n      setTexture2D(texture, slot);\n    }\n\n    function safeSetTextureCube(texture, slot) {\n      if (texture && texture.isWebGLCubeRenderTarget) {\n        if (warnedTextureCube === false) {\n          console.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');\n          warnedTextureCube = true;\n        }\n\n        texture = texture.texture;\n      }\n\n      setTextureCube(texture, slot);\n    } //\n\n\n    this.allocateTextureUnit = allocateTextureUnit;\n    this.resetTextureUnits = resetTextureUnits;\n    this.setTexture2D = setTexture2D;\n    this.setTexture2DArray = setTexture2DArray;\n    this.setTexture3D = setTexture3D;\n    this.setTextureCube = setTextureCube;\n    this.setupRenderTarget = setupRenderTarget;\n    this.updateRenderTargetMipmap = updateRenderTargetMipmap;\n    this.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n    this.safeSetTexture2D = safeSetTexture2D;\n    this.safeSetTextureCube = safeSetTextureCube;\n  }\n\n  function WebGLUtils(gl, extensions, capabilities) {\n    var isWebGL2 = capabilities.isWebGL2;\n\n    function convert(p) {\n      var extension;\n      if (p === UnsignedByteType) return 5121;\n      if (p === UnsignedShort4444Type) return 32819;\n      if (p === UnsignedShort5551Type) return 32820;\n      if (p === UnsignedShort565Type) return 33635;\n      if (p === ByteType) return 5120;\n      if (p === ShortType) return 5122;\n      if (p === UnsignedShortType) return 5123;\n      if (p === IntType) return 5124;\n      if (p === UnsignedIntType) return 5125;\n      if (p === FloatType) return 5126;\n\n      if (p === HalfFloatType) {\n        if (isWebGL2) return 5131;\n        extension = extensions.get('OES_texture_half_float');\n\n        if (extension !== null) {\n          return extension.HALF_FLOAT_OES;\n        } else {\n          return null;\n        }\n      }\n\n      if (p === AlphaFormat) return 6406;\n      if (p === RGBFormat) return 6407;\n      if (p === RGBAFormat) return 6408;\n      if (p === LuminanceFormat) return 6409;\n      if (p === LuminanceAlphaFormat) return 6410;\n      if (p === DepthFormat) return 6402;\n      if (p === DepthStencilFormat) return 34041;\n      if (p === RedFormat) return 6403; // WebGL2 formats.\n\n      if (p === RedIntegerFormat) return 36244;\n      if (p === RGFormat) return 33319;\n      if (p === RGIntegerFormat) return 33320;\n      if (p === RGBIntegerFormat) return 36248;\n      if (p === RGBAIntegerFormat) return 36249;\n\n      if (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n        if (extension !== null) {\n          if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n          if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n        } else {\n          return null;\n        }\n      }\n\n      if (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n        if (extension !== null) {\n          if (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n          if (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n          if (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n          if (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n        } else {\n          return null;\n        }\n      }\n\n      if (p === RGB_ETC1_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_etc1');\n\n        if (extension !== null) {\n          return extension.COMPRESSED_RGB_ETC1_WEBGL;\n        } else {\n          return null;\n        }\n      }\n\n      if (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_etc');\n\n        if (extension !== null) {\n          if (p === RGB_ETC2_Format) return extension.COMPRESSED_RGB8_ETC2;\n          if (p === RGBA_ETC2_EAC_Format) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n        }\n      }\n\n      if (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format || p === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format || p === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format || p === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format || p === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format || p === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_astc');\n\n        if (extension !== null) {\n          // TODO Complete?\n          return p;\n        } else {\n          return null;\n        }\n      }\n\n      if (p === RGBA_BPTC_Format) {\n        extension = extensions.get('EXT_texture_compression_bptc');\n\n        if (extension !== null) {\n          // TODO Complete?\n          return p;\n        } else {\n          return null;\n        }\n      }\n\n      if (p === UnsignedInt248Type) {\n        if (isWebGL2) return 34042;\n        extension = extensions.get('WEBGL_depth_texture');\n\n        if (extension !== null) {\n          return extension.UNSIGNED_INT_24_8_WEBGL;\n        } else {\n          return null;\n        }\n      }\n    }\n\n    return {\n      convert: convert\n    };\n  }\n\n  function ArrayCamera(array) {\n    if (array === void 0) {\n      array = [];\n    }\n\n    PerspectiveCamera.call(this);\n    this.cameras = array;\n  }\n\n  ArrayCamera.prototype = Object.assign(Object.create(PerspectiveCamera.prototype), {\n    constructor: ArrayCamera,\n    isArrayCamera: true\n  });\n\n  function Group() {\n    Object3D.call(this);\n    this.type = 'Group';\n  }\n\n  Group.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Group,\n    isGroup: true\n  });\n\n  function WebXRController() {\n    this._targetRay = null;\n    this._grip = null;\n    this._hand = null;\n  }\n\n  Object.assign(WebXRController.prototype, {\n    constructor: WebXRController,\n    getHandSpace: function getHandSpace() {\n      if (this._hand === null) {\n        this._hand = new Group();\n        this._hand.matrixAutoUpdate = false;\n        this._hand.visible = false;\n        this._hand.joints = {};\n        this._hand.inputState = {\n          pinching: false\n        };\n      }\n\n      return this._hand;\n    },\n    getTargetRaySpace: function getTargetRaySpace() {\n      if (this._targetRay === null) {\n        this._targetRay = new Group();\n        this._targetRay.matrixAutoUpdate = false;\n        this._targetRay.visible = false;\n      }\n\n      return this._targetRay;\n    },\n    getGripSpace: function getGripSpace() {\n      if (this._grip === null) {\n        this._grip = new Group();\n        this._grip.matrixAutoUpdate = false;\n        this._grip.visible = false;\n      }\n\n      return this._grip;\n    },\n    dispatchEvent: function dispatchEvent(event) {\n      if (this._targetRay !== null) {\n        this._targetRay.dispatchEvent(event);\n      }\n\n      if (this._grip !== null) {\n        this._grip.dispatchEvent(event);\n      }\n\n      if (this._hand !== null) {\n        this._hand.dispatchEvent(event);\n      }\n\n      return this;\n    },\n    disconnect: function disconnect(inputSource) {\n      this.dispatchEvent({\n        type: 'disconnected',\n        data: inputSource\n      });\n\n      if (this._targetRay !== null) {\n        this._targetRay.visible = false;\n      }\n\n      if (this._grip !== null) {\n        this._grip.visible = false;\n      }\n\n      if (this._hand !== null) {\n        this._hand.visible = false;\n      }\n\n      return this;\n    },\n    update: function update(inputSource, frame, referenceSpace) {\n      var inputPose = null;\n      var gripPose = null;\n      var handPose = null;\n      var targetRay = this._targetRay;\n      var grip = this._grip;\n      var hand = this._hand;\n\n      if (inputSource && frame.session.visibilityState !== 'visible-blurred') {\n        if (hand && inputSource.hand) {\n          handPose = true;\n\n          for (var _iterator = _createForOfIteratorHelperLoose(inputSource.hand.values()), _step; !(_step = _iterator()).done;) {\n            var inputjoint = _step.value; // Update the joints groups with the XRJoint poses\n\n            var jointPose = frame.getJointPose(inputjoint, referenceSpace);\n\n            if (hand.joints[inputjoint.jointName] === undefined) {\n              // The transform of this joint will be updated with the joint pose on each frame\n              var _joint = new Group();\n\n              _joint.matrixAutoUpdate = false;\n              _joint.visible = false;\n              hand.joints[inputjoint.jointName] = _joint; // ??\n\n              hand.add(_joint);\n            }\n\n            var joint = hand.joints[inputjoint.jointName];\n\n            if (jointPose !== null) {\n              joint.matrix.fromArray(jointPose.transform.matrix);\n              joint.matrix.decompose(joint.position, joint.rotation, joint.scale);\n              joint.jointRadius = jointPose.radius;\n            }\n\n            joint.visible = jointPose !== null;\n          } // Custom events\n          // Check pinchz\n\n\n          var indexTip = hand.joints['index-finger-tip'];\n          var thumbTip = hand.joints['thumb-tip'];\n          var distance = indexTip.position.distanceTo(thumbTip.position);\n          var distanceToPinch = 0.02;\n          var threshold = 0.005;\n\n          if (hand.inputState.pinching && distance > distanceToPinch + threshold) {\n            hand.inputState.pinching = false;\n            this.dispatchEvent({\n              type: 'pinchend',\n              handedness: inputSource.handedness,\n              target: this\n            });\n          } else if (!hand.inputState.pinching && distance <= distanceToPinch - threshold) {\n            hand.inputState.pinching = true;\n            this.dispatchEvent({\n              type: 'pinchstart',\n              handedness: inputSource.handedness,\n              target: this\n            });\n          }\n        } else {\n          if (targetRay !== null) {\n            inputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n\n            if (inputPose !== null) {\n              targetRay.matrix.fromArray(inputPose.transform.matrix);\n              targetRay.matrix.decompose(targetRay.position, targetRay.rotation, targetRay.scale);\n            }\n          }\n\n          if (grip !== null && inputSource.gripSpace) {\n            gripPose = frame.getPose(inputSource.gripSpace, referenceSpace);\n\n            if (gripPose !== null) {\n              grip.matrix.fromArray(gripPose.transform.matrix);\n              grip.matrix.decompose(grip.position, grip.rotation, grip.scale);\n            }\n          }\n        }\n      }\n\n      if (targetRay !== null) {\n        targetRay.visible = inputPose !== null;\n      }\n\n      if (grip !== null) {\n        grip.visible = gripPose !== null;\n      }\n\n      if (hand !== null) {\n        hand.visible = handPose !== null;\n      }\n\n      return this;\n    }\n  });\n\n  function WebXRManager(renderer, gl) {\n    var scope = this;\n    var session = null;\n    var framebufferScaleFactor = 1.0;\n    var referenceSpace = null;\n    var referenceSpaceType = 'local-floor';\n    var pose = null;\n    var controllers = [];\n    var inputSourcesMap = new Map(); //\n\n    var cameraL = new PerspectiveCamera();\n    cameraL.layers.enable(1);\n    cameraL.viewport = new Vector4();\n    var cameraR = new PerspectiveCamera();\n    cameraR.layers.enable(2);\n    cameraR.viewport = new Vector4();\n    var cameras = [cameraL, cameraR];\n    var cameraVR = new ArrayCamera();\n    cameraVR.layers.enable(1);\n    cameraVR.layers.enable(2);\n    var _currentDepthNear = null;\n    var _currentDepthFar = null; //\n\n    this.enabled = false;\n    this.isPresenting = false;\n\n    this.getController = function (index) {\n      var controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getTargetRaySpace();\n    };\n\n    this.getControllerGrip = function (index) {\n      var controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getGripSpace();\n    };\n\n    this.getHand = function (index) {\n      var controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getHandSpace();\n    }; //\n\n\n    function onSessionEvent(event) {\n      var controller = inputSourcesMap.get(event.inputSource);\n\n      if (controller) {\n        controller.dispatchEvent({\n          type: event.type,\n          data: event.inputSource\n        });\n      }\n    }\n\n    function onSessionEnd() {\n      inputSourcesMap.forEach(function (controller, inputSource) {\n        controller.disconnect(inputSource);\n      });\n      inputSourcesMap.clear();\n      _currentDepthNear = null;\n      _currentDepthFar = null; //\n\n      renderer.setFramebuffer(null);\n      renderer.setRenderTarget(renderer.getRenderTarget()); // Hack #15830\n\n      animation.stop();\n      scope.isPresenting = false;\n      scope.dispatchEvent({\n        type: 'sessionend'\n      });\n    }\n\n    this.setFramebufferScaleFactor = function (value) {\n      framebufferScaleFactor = value;\n\n      if (scope.isPresenting === true) {\n        console.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\n      }\n    };\n\n    this.setReferenceSpaceType = function (value) {\n      referenceSpaceType = value;\n\n      if (scope.isPresenting === true) {\n        console.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\n      }\n    };\n\n    this.getReferenceSpace = function () {\n      return referenceSpace;\n    };\n\n    this.getSession = function () {\n      return session;\n    };\n\n    this.setSession = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n        var attributes, layerInit, baseLayer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                session = value;\n\n                if (!(session !== null)) {\n                  _context.next = 24;\n                  break;\n                }\n\n                session.addEventListener('select', onSessionEvent);\n                session.addEventListener('selectstart', onSessionEvent);\n                session.addEventListener('selectend', onSessionEvent);\n                session.addEventListener('squeeze', onSessionEvent);\n                session.addEventListener('squeezestart', onSessionEvent);\n                session.addEventListener('squeezeend', onSessionEvent);\n                session.addEventListener('end', onSessionEnd);\n                session.addEventListener('inputsourceschange', onInputSourcesChange);\n                attributes = gl.getContextAttributes();\n\n                if (!(attributes.xrCompatible !== true)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 14;\n                return gl.makeXRCompatible();\n\n              case 14:\n                layerInit = {\n                  antialias: attributes.antialias,\n                  alpha: attributes.alpha,\n                  depth: attributes.depth,\n                  stencil: attributes.stencil,\n                  framebufferScaleFactor: framebufferScaleFactor\n                }; // eslint-disable-next-line no-undef\n\n                baseLayer = new XRWebGLLayer(session, gl, layerInit);\n                session.updateRenderState({\n                  baseLayer: baseLayer\n                });\n                _context.next = 19;\n                return session.requestReferenceSpace(referenceSpaceType);\n\n              case 19:\n                referenceSpace = _context.sent;\n                animation.setContext(session);\n                animation.start();\n                scope.isPresenting = true;\n                scope.dispatchEvent({\n                  type: 'sessionstart'\n                });\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    function onInputSourcesChange(event) {\n      var inputSources = session.inputSources; // Assign inputSources to available controllers\n\n      for (var i = 0; i < controllers.length; i++) {\n        inputSourcesMap.set(inputSources[i], controllers[i]);\n      } // Notify disconnected\n\n\n      for (var _i = 0; _i < event.removed.length; _i++) {\n        var inputSource = event.removed[_i];\n        var controller = inputSourcesMap.get(inputSource);\n\n        if (controller) {\n          controller.dispatchEvent({\n            type: 'disconnected',\n            data: inputSource\n          });\n          inputSourcesMap.delete(inputSource);\n        }\n      } // Notify connected\n\n\n      for (var _i2 = 0; _i2 < event.added.length; _i2++) {\n        var _inputSource = event.added[_i2];\n\n        var _controller = inputSourcesMap.get(_inputSource);\n\n        if (_controller) {\n          _controller.dispatchEvent({\n            type: 'connected',\n            data: _inputSource\n          });\n        }\n      }\n    } //\n\n\n    var cameraLPos = new Vector3();\n    var cameraRPos = new Vector3();\n    /**\n     * Assumes 2 cameras that are parallel and share an X-axis, and that\n     * the cameras' projection and world matrices have already been set.\n     * And that near and far planes are identical for both cameras.\n     * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n     */\n\n    function setProjectionFromUnion(camera, cameraL, cameraR) {\n      cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n      cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n      var ipd = cameraLPos.distanceTo(cameraRPos);\n      var projL = cameraL.projectionMatrix.elements;\n      var projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\n      // most likely identical top and bottom frustum extents.\n      // Use the left camera for these values.\n\n      var near = projL[14] / (projL[10] - 1);\n      var far = projL[14] / (projL[10] + 1);\n      var topFov = (projL[9] + 1) / projL[5];\n      var bottomFov = (projL[9] - 1) / projL[5];\n      var leftFov = (projL[8] - 1) / projL[0];\n      var rightFov = (projR[8] + 1) / projR[0];\n      var left = near * leftFov;\n      var right = near * rightFov; // Calculate the new camera's position offset from the\n      // left camera. xOffset should be roughly half `ipd`.\n\n      var zOffset = ipd / (-leftFov + rightFov);\n      var xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\n\n      cameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n      camera.translateX(xOffset);\n      camera.translateZ(zOffset);\n      camera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\n      camera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\n      // the values so that the near plane's position does not change in world space,\n      // although must now be relative to the new union camera.\n\n      var near2 = near + zOffset;\n      var far2 = far + zOffset;\n      var left2 = left - xOffset;\n      var right2 = right + (ipd - xOffset);\n      var top2 = topFov * far / far2 * near2;\n      var bottom2 = bottomFov * far / far2 * near2;\n      camera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\n    }\n\n    function updateCamera(camera, parent) {\n      if (parent === null) {\n        camera.matrixWorld.copy(camera.matrix);\n      } else {\n        camera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n      }\n\n      camera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n    }\n\n    this.getCamera = function (camera) {\n      cameraVR.near = cameraR.near = cameraL.near = camera.near;\n      cameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n      if (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\n        // Note that the new renderState won't apply until the next frame. See #18320\n        session.updateRenderState({\n          depthNear: cameraVR.near,\n          depthFar: cameraVR.far\n        });\n        _currentDepthNear = cameraVR.near;\n        _currentDepthFar = cameraVR.far;\n      }\n\n      var parent = camera.parent;\n      var cameras = cameraVR.cameras;\n      updateCamera(cameraVR, parent);\n\n      for (var i = 0; i < cameras.length; i++) {\n        updateCamera(cameras[i], parent);\n      } // update camera and its children\n\n\n      camera.matrixWorld.copy(cameraVR.matrixWorld);\n      camera.matrix.copy(cameraVR.matrix);\n      camera.matrix.decompose(camera.position, camera.quaternion, camera.scale);\n      var children = camera.children;\n\n      for (var _i3 = 0, l = children.length; _i3 < l; _i3++) {\n        children[_i3].updateMatrixWorld(true);\n      } // update projection matrix for proper view frustum culling\n\n\n      if (cameras.length === 2) {\n        setProjectionFromUnion(cameraVR, cameraL, cameraR);\n      } else {\n        // assume single camera setup (AR)\n        cameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\n      }\n\n      return cameraVR;\n    }; // Animation Loop\n\n\n    var onAnimationFrameCallback = null;\n\n    function onAnimationFrame(time, frame) {\n      pose = frame.getViewerPose(referenceSpace);\n\n      if (pose !== null) {\n        var views = pose.views;\n        var baseLayer = session.renderState.baseLayer;\n        renderer.setFramebuffer(baseLayer.framebuffer);\n        var cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\n\n        if (views.length !== cameraVR.cameras.length) {\n          cameraVR.cameras.length = 0;\n          cameraVRNeedsUpdate = true;\n        }\n\n        for (var i = 0; i < views.length; i++) {\n          var view = views[i];\n          var viewport = baseLayer.getViewport(view);\n          var camera = cameras[i];\n          camera.matrix.fromArray(view.transform.matrix);\n          camera.projectionMatrix.fromArray(view.projectionMatrix);\n          camera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n          if (i === 0) {\n            cameraVR.matrix.copy(camera.matrix);\n          }\n\n          if (cameraVRNeedsUpdate === true) {\n            cameraVR.cameras.push(camera);\n          }\n        }\n      } //\n\n\n      var inputSources = session.inputSources;\n\n      for (var _i4 = 0; _i4 < controllers.length; _i4++) {\n        var controller = controllers[_i4];\n        var inputSource = inputSources[_i4];\n        controller.update(inputSource, frame, referenceSpace);\n      }\n\n      if (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\n    }\n\n    var animation = new WebGLAnimation();\n    animation.setAnimationLoop(onAnimationFrame);\n\n    this.setAnimationLoop = function (callback) {\n      onAnimationFrameCallback = callback;\n    };\n\n    this.dispose = function () {};\n  }\n\n  Object.assign(WebXRManager.prototype, EventDispatcher.prototype);\n\n  function WebGLMaterials(properties) {\n    function refreshFogUniforms(uniforms, fog) {\n      uniforms.fogColor.value.copy(fog.color);\n\n      if (fog.isFog) {\n        uniforms.fogNear.value = fog.near;\n        uniforms.fogFar.value = fog.far;\n      } else if (fog.isFogExp2) {\n        uniforms.fogDensity.value = fog.density;\n      }\n    }\n\n    function refreshMaterialUniforms(uniforms, material, pixelRatio, height) {\n      if (material.isMeshBasicMaterial) {\n        refreshUniformsCommon(uniforms, material);\n      } else if (material.isMeshLambertMaterial) {\n        refreshUniformsCommon(uniforms, material);\n        refreshUniformsLambert(uniforms, material);\n      } else if (material.isMeshToonMaterial) {\n        refreshUniformsCommon(uniforms, material);\n        refreshUniformsToon(uniforms, material);\n      } else if (material.isMeshPhongMaterial) {\n        refreshUniformsCommon(uniforms, material);\n        refreshUniformsPhong(uniforms, material);\n      } else if (material.isMeshStandardMaterial) {\n        refreshUniformsCommon(uniforms, material);\n\n        if (material.isMeshPhysicalMaterial) {\n          refreshUniformsPhysical(uniforms, material);\n        } else {\n          refreshUniformsStandard(uniforms, material);\n        }\n      } else if (material.isMeshMatcapMaterial) {\n        refreshUniformsCommon(uniforms, material);\n        refreshUniformsMatcap(uniforms, material);\n      } else if (material.isMeshDepthMaterial) {\n        refreshUniformsCommon(uniforms, material);\n        refreshUniformsDepth(uniforms, material);\n      } else if (material.isMeshDistanceMaterial) {\n        refreshUniformsCommon(uniforms, material);\n        refreshUniformsDistance(uniforms, material);\n      } else if (material.isMeshNormalMaterial) {\n        refreshUniformsCommon(uniforms, material);\n        refreshUniformsNormal(uniforms, material);\n      } else if (material.isLineBasicMaterial) {\n        refreshUniformsLine(uniforms, material);\n\n        if (material.isLineDashedMaterial) {\n          refreshUniformsDash(uniforms, material);\n        }\n      } else if (material.isPointsMaterial) {\n        refreshUniformsPoints(uniforms, material, pixelRatio, height);\n      } else if (material.isSpriteMaterial) {\n        refreshUniformsSprites(uniforms, material);\n      } else if (material.isShadowMaterial) {\n        uniforms.color.value.copy(material.color);\n        uniforms.opacity.value = material.opacity;\n      } else if (material.isShaderMaterial) {\n        material.uniformsNeedUpdate = false; // #15581\n      }\n    }\n\n    function refreshUniformsCommon(uniforms, material) {\n      uniforms.opacity.value = material.opacity;\n\n      if (material.color) {\n        uniforms.diffuse.value.copy(material.color);\n      }\n\n      if (material.emissive) {\n        uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n      }\n\n      if (material.map) {\n        uniforms.map.value = material.map;\n      }\n\n      if (material.alphaMap) {\n        uniforms.alphaMap.value = material.alphaMap;\n      }\n\n      if (material.specularMap) {\n        uniforms.specularMap.value = material.specularMap;\n      }\n\n      var envMap = properties.get(material).envMap;\n\n      if (envMap) {\n        uniforms.envMap.value = envMap;\n        uniforms.flipEnvMap.value = envMap.isCubeTexture && envMap._needsFlipEnvMap ? -1 : 1;\n        uniforms.reflectivity.value = material.reflectivity;\n        uniforms.refractionRatio.value = material.refractionRatio;\n\n        var maxMipLevel = properties.get(envMap).__maxMipLevel;\n\n        if (maxMipLevel !== undefined) {\n          uniforms.maxMipLevel.value = maxMipLevel;\n        }\n      }\n\n      if (material.lightMap) {\n        uniforms.lightMap.value = material.lightMap;\n        uniforms.lightMapIntensity.value = material.lightMapIntensity;\n      }\n\n      if (material.aoMap) {\n        uniforms.aoMap.value = material.aoMap;\n        uniforms.aoMapIntensity.value = material.aoMapIntensity;\n      } // uv repeat and offset setting priorities\n      // 1. color map\n      // 2. specular map\n      // 3. displacementMap map\n      // 4. normal map\n      // 5. bump map\n      // 6. roughnessMap map\n      // 7. metalnessMap map\n      // 8. alphaMap map\n      // 9. emissiveMap map\n      // 10. clearcoat map\n      // 11. clearcoat normal map\n      // 12. clearcoat roughnessMap map\n\n\n      var uvScaleMap;\n\n      if (material.map) {\n        uvScaleMap = material.map;\n      } else if (material.specularMap) {\n        uvScaleMap = material.specularMap;\n      } else if (material.displacementMap) {\n        uvScaleMap = material.displacementMap;\n      } else if (material.normalMap) {\n        uvScaleMap = material.normalMap;\n      } else if (material.bumpMap) {\n        uvScaleMap = material.bumpMap;\n      } else if (material.roughnessMap) {\n        uvScaleMap = material.roughnessMap;\n      } else if (material.metalnessMap) {\n        uvScaleMap = material.metalnessMap;\n      } else if (material.alphaMap) {\n        uvScaleMap = material.alphaMap;\n      } else if (material.emissiveMap) {\n        uvScaleMap = material.emissiveMap;\n      } else if (material.clearcoatMap) {\n        uvScaleMap = material.clearcoatMap;\n      } else if (material.clearcoatNormalMap) {\n        uvScaleMap = material.clearcoatNormalMap;\n      } else if (material.clearcoatRoughnessMap) {\n        uvScaleMap = material.clearcoatRoughnessMap;\n      }\n\n      if (uvScaleMap !== undefined) {\n        // backwards compatibility\n        if (uvScaleMap.isWebGLRenderTarget) {\n          uvScaleMap = uvScaleMap.texture;\n        }\n\n        if (uvScaleMap.matrixAutoUpdate === true) {\n          uvScaleMap.updateMatrix();\n        }\n\n        uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n      } // uv repeat and offset setting priorities for uv2\n      // 1. ao map\n      // 2. light map\n\n\n      var uv2ScaleMap;\n\n      if (material.aoMap) {\n        uv2ScaleMap = material.aoMap;\n      } else if (material.lightMap) {\n        uv2ScaleMap = material.lightMap;\n      }\n\n      if (uv2ScaleMap !== undefined) {\n        // backwards compatibility\n        if (uv2ScaleMap.isWebGLRenderTarget) {\n          uv2ScaleMap = uv2ScaleMap.texture;\n        }\n\n        if (uv2ScaleMap.matrixAutoUpdate === true) {\n          uv2ScaleMap.updateMatrix();\n        }\n\n        uniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);\n      }\n    }\n\n    function refreshUniformsLine(uniforms, material) {\n      uniforms.diffuse.value.copy(material.color);\n      uniforms.opacity.value = material.opacity;\n    }\n\n    function refreshUniformsDash(uniforms, material) {\n      uniforms.dashSize.value = material.dashSize;\n      uniforms.totalSize.value = material.dashSize + material.gapSize;\n      uniforms.scale.value = material.scale;\n    }\n\n    function refreshUniformsPoints(uniforms, material, pixelRatio, height) {\n      uniforms.diffuse.value.copy(material.color);\n      uniforms.opacity.value = material.opacity;\n      uniforms.size.value = material.size * pixelRatio;\n      uniforms.scale.value = height * 0.5;\n\n      if (material.map) {\n        uniforms.map.value = material.map;\n      }\n\n      if (material.alphaMap) {\n        uniforms.alphaMap.value = material.alphaMap;\n      } // uv repeat and offset setting priorities\n      // 1. color map\n      // 2. alpha map\n\n\n      var uvScaleMap;\n\n      if (material.map) {\n        uvScaleMap = material.map;\n      } else if (material.alphaMap) {\n        uvScaleMap = material.alphaMap;\n      }\n\n      if (uvScaleMap !== undefined) {\n        if (uvScaleMap.matrixAutoUpdate === true) {\n          uvScaleMap.updateMatrix();\n        }\n\n        uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n      }\n    }\n\n    function refreshUniformsSprites(uniforms, material) {\n      uniforms.diffuse.value.copy(material.color);\n      uniforms.opacity.value = material.opacity;\n      uniforms.rotation.value = material.rotation;\n\n      if (material.map) {\n        uniforms.map.value = material.map;\n      }\n\n      if (material.alphaMap) {\n        uniforms.alphaMap.value = material.alphaMap;\n      } // uv repeat and offset setting priorities\n      // 1. color map\n      // 2. alpha map\n\n\n      var uvScaleMap;\n\n      if (material.map) {\n        uvScaleMap = material.map;\n      } else if (material.alphaMap) {\n        uvScaleMap = material.alphaMap;\n      }\n\n      if (uvScaleMap !== undefined) {\n        if (uvScaleMap.matrixAutoUpdate === true) {\n          uvScaleMap.updateMatrix();\n        }\n\n        uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n      }\n    }\n\n    function refreshUniformsLambert(uniforms, material) {\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n    }\n\n    function refreshUniformsPhong(uniforms, material) {\n      uniforms.specular.value.copy(material.specular);\n      uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsToon(uniforms, material) {\n      if (material.gradientMap) {\n        uniforms.gradientMap.value = material.gradientMap;\n      }\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsStandard(uniforms, material) {\n      uniforms.roughness.value = material.roughness;\n      uniforms.metalness.value = material.metalness;\n\n      if (material.roughnessMap) {\n        uniforms.roughnessMap.value = material.roughnessMap;\n      }\n\n      if (material.metalnessMap) {\n        uniforms.metalnessMap.value = material.metalnessMap;\n      }\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n\n      var envMap = properties.get(material).envMap;\n\n      if (envMap) {\n        //uniforms.envMap.value = material.envMap; // part of uniforms common\n        uniforms.envMapIntensity.value = material.envMapIntensity;\n      }\n    }\n\n    function refreshUniformsPhysical(uniforms, material) {\n      refreshUniformsStandard(uniforms, material);\n      uniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n      uniforms.clearcoat.value = material.clearcoat;\n      uniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n      if (material.sheen) uniforms.sheen.value.copy(material.sheen);\n\n      if (material.clearcoatMap) {\n        uniforms.clearcoatMap.value = material.clearcoatMap;\n      }\n\n      if (material.clearcoatRoughnessMap) {\n        uniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n      }\n\n      if (material.clearcoatNormalMap) {\n        uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);\n        uniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n        if (material.side === BackSide) {\n          uniforms.clearcoatNormalScale.value.negate();\n        }\n      }\n\n      uniforms.transmission.value = material.transmission;\n\n      if (material.transmissionMap) {\n        uniforms.transmissionMap.value = material.transmissionMap;\n      }\n    }\n\n    function refreshUniformsMatcap(uniforms, material) {\n      if (material.matcap) {\n        uniforms.matcap.value = material.matcap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsDepth(uniforms, material) {\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsDistance(uniforms, material) {\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n\n      uniforms.referencePosition.value.copy(material.referencePosition);\n      uniforms.nearDistance.value = material.nearDistance;\n      uniforms.farDistance.value = material.farDistance;\n    }\n\n    function refreshUniformsNormal(uniforms, material) {\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    return {\n      refreshFogUniforms: refreshFogUniforms,\n      refreshMaterialUniforms: refreshMaterialUniforms\n    };\n  }\n\n  function createCanvasElement() {\n    var canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n    canvas.style.display = 'block';\n    return canvas;\n  }\n\n  function WebGLRenderer(parameters) {\n    var _s5 = $RefreshSig$();\n\n    parameters = parameters || {};\n\n    var _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n        _context = parameters.context !== undefined ? parameters.context : null,\n        _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n        _depth = parameters.depth !== undefined ? parameters.depth : true,\n        _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n        _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n        _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n        _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n        _powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n        _failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n    var currentRenderList = null;\n    var currentRenderState = null; // render() can be called from within a callback triggered by another render.\n    // We track this so that the nested render call gets its state isolated from the parent render call.\n\n    var renderStateStack = []; // public properties\n\n    this.domElement = _canvas; // Debug configuration container\n\n    this.debug = {\n      /**\n       * Enables error checking and reporting when shader programs are being compiled\n       * @type {boolean}\n       */\n      checkShaderErrors: true\n    }; // clearing\n\n    this.autoClear = true;\n    this.autoClearColor = true;\n    this.autoClearDepth = true;\n    this.autoClearStencil = true; // scene graph\n\n    this.sortObjects = true; // user-defined clipping\n\n    this.clippingPlanes = [];\n    this.localClippingEnabled = false; // physically based shading\n\n    this.gammaFactor = 2.0; // for backwards compatibility\n\n    this.outputEncoding = LinearEncoding; // physical lights\n\n    this.physicallyCorrectLights = false; // tone mapping\n\n    this.toneMapping = NoToneMapping;\n    this.toneMappingExposure = 1.0; // morphs\n\n    this.maxMorphTargets = 8;\n    this.maxMorphNormals = 4; // internal properties\n\n    var _this = this;\n\n    var _isContextLost = false; // internal state cache\n\n    var _framebuffer = null;\n    var _currentActiveCubeFace = 0;\n    var _currentActiveMipmapLevel = 0;\n    var _currentRenderTarget = null;\n    var _currentFramebuffer = null;\n\n    var _currentMaterialId = -1;\n\n    var _currentCamera = null;\n\n    var _currentViewport = new Vector4();\n\n    var _currentScissor = new Vector4();\n\n    var _currentScissorTest = null; //\n\n    var _width = _canvas.width;\n    var _height = _canvas.height;\n    var _pixelRatio = 1;\n    var _opaqueSort = null;\n    var _transparentSort = null;\n\n    var _viewport = new Vector4(0, 0, _width, _height);\n\n    var _scissor = new Vector4(0, 0, _width, _height);\n\n    var _scissorTest = false; // frustum\n\n    var _frustum = new Frustum(); // clipping\n\n\n    var _clippingEnabled = false;\n    var _localClippingEnabled = false; // camera matrices cache\n\n    var _projScreenMatrix = new Matrix4();\n\n    var _vector3 = new Vector3();\n\n    var _emptyScene = {\n      background: null,\n      fog: null,\n      environment: null,\n      overrideMaterial: null,\n      isScene: true\n    };\n\n    function getTargetPixelRatio() {\n      return _currentRenderTarget === null ? _pixelRatio : 1;\n    } // initialize\n\n\n    var _gl = _context;\n\n    function getContext(contextNames, contextAttributes) {\n      for (var i = 0; i < contextNames.length; i++) {\n        var contextName = contextNames[i];\n\n        var context = _canvas.getContext(contextName, contextAttributes);\n\n        if (context !== null) return context;\n      }\n\n      return null;\n    }\n\n    try {\n      var contextAttributes = {\n        alpha: _alpha,\n        depth: _depth,\n        stencil: _stencil,\n        antialias: _antialias,\n        premultipliedAlpha: _premultipliedAlpha,\n        preserveDrawingBuffer: _preserveDrawingBuffer,\n        powerPreference: _powerPreference,\n        failIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n      }; // event listeners must be registered before WebGL context is created, see #12753\n\n      _canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n      _canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n      if (_gl === null) {\n        var contextNames = ['webgl2', 'webgl', 'experimental-webgl'];\n\n        if (_this.isWebGL1Renderer === true) {\n          contextNames.shift();\n        }\n\n        _gl = getContext(contextNames, contextAttributes);\n\n        if (_gl === null) {\n          if (getContext(contextNames)) {\n            throw new Error('Error creating WebGL context with your selected attributes.');\n          } else {\n            throw new Error('Error creating WebGL context.');\n          }\n        }\n      } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n      if (_gl.getShaderPrecisionFormat === undefined) {\n        _gl.getShaderPrecisionFormat = function () {\n          return {\n            'rangeMin': 1,\n            'rangeMax': 1,\n            'precision': 1\n          };\n        };\n      }\n    } catch (error) {\n      console.error('THREE.WebGLRenderer: ' + error.message);\n      throw error;\n    }\n\n    var extensions, capabilities, state, info;\n    var properties, textures, cubemaps, attributes, geometries, objects;\n    var programCache, materials, renderLists, renderStates, clipping;\n    var background, morphtargets, bufferRenderer, indexedBufferRenderer;\n    var utils, bindingStates;\n\n    function initGLContext() {\n      extensions = new WebGLExtensions(_gl);\n      capabilities = new WebGLCapabilities(_gl, extensions, parameters);\n      extensions.init(capabilities);\n      utils = new WebGLUtils(_gl, extensions, capabilities);\n      state = new WebGLState(_gl, extensions, capabilities);\n      state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n      state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n      info = new WebGLInfo(_gl);\n      properties = new WebGLProperties();\n      textures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n      cubemaps = new WebGLCubeMaps(_this);\n      attributes = new WebGLAttributes(_gl, capabilities);\n      bindingStates = new WebGLBindingStates(_gl, extensions, attributes, capabilities);\n      geometries = new WebGLGeometries(_gl, attributes, info, bindingStates);\n      objects = new WebGLObjects(_gl, geometries, attributes, info);\n      morphtargets = new WebGLMorphtargets(_gl);\n      clipping = new WebGLClipping(properties);\n      programCache = new WebGLPrograms(_this, cubemaps, extensions, capabilities, bindingStates, clipping);\n      materials = new WebGLMaterials(properties);\n      renderLists = new WebGLRenderLists(properties);\n      renderStates = new WebGLRenderStates(extensions, capabilities);\n      background = new WebGLBackground(_this, cubemaps, state, objects, _premultipliedAlpha);\n      bufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\n      indexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\n      info.programs = programCache.programs;\n      _this.capabilities = capabilities;\n      _this.extensions = extensions;\n      _this.properties = properties;\n      _this.renderLists = renderLists;\n      _this.state = state;\n      _this.info = info;\n    }\n\n    initGLContext(); // xr\n\n    var xr = new WebXRManager(_this, _gl);\n    this.xr = xr; // shadow map\n\n    var shadowMap = new WebGLShadowMap(_this, objects, capabilities.maxTextureSize);\n    this.shadowMap = shadowMap; // API\n\n    this.getContext = function () {\n      return _gl;\n    };\n\n    this.getContextAttributes = function () {\n      return _gl.getContextAttributes();\n    };\n\n    this.forceContextLoss = function () {\n      var extension = extensions.get('WEBGL_lose_context');\n      if (extension) extension.loseContext();\n    };\n\n    this.forceContextRestore = function () {\n      var extension = extensions.get('WEBGL_lose_context');\n      if (extension) extension.restoreContext();\n    };\n\n    this.getPixelRatio = function () {\n      return _pixelRatio;\n    };\n\n    this.setPixelRatio = function (value) {\n      if (value === undefined) return;\n      _pixelRatio = value;\n      this.setSize(_width, _height, false);\n    };\n\n    this.getSize = function (target) {\n      if (target === undefined) {\n        console.warn('WebGLRenderer: .getsize() now requires a Vector2 as an argument');\n        target = new Vector2();\n      }\n\n      return target.set(_width, _height);\n    };\n\n    this.setSize = function (width, height, updateStyle) {\n      if (xr.isPresenting) {\n        console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n        return;\n      }\n\n      _width = width;\n      _height = height;\n      _canvas.width = Math.floor(width * _pixelRatio);\n      _canvas.height = Math.floor(height * _pixelRatio);\n\n      if (updateStyle !== false) {\n        _canvas.style.width = width + 'px';\n        _canvas.style.height = height + 'px';\n      }\n\n      this.setViewport(0, 0, width, height);\n    };\n\n    this.getDrawingBufferSize = function (target) {\n      if (target === undefined) {\n        console.warn('WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument');\n        target = new Vector2();\n      }\n\n      return target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\n    };\n\n    this.setDrawingBufferSize = function (width, height, pixelRatio) {\n      _width = width;\n      _height = height;\n      _pixelRatio = pixelRatio;\n      _canvas.width = Math.floor(width * pixelRatio);\n      _canvas.height = Math.floor(height * pixelRatio);\n      this.setViewport(0, 0, width, height);\n    };\n\n    this.getCurrentViewport = function (target) {\n      if (target === undefined) {\n        console.warn('WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument');\n        target = new Vector4();\n      }\n\n      return target.copy(_currentViewport);\n    };\n\n    this.getViewport = function (target) {\n      return target.copy(_viewport);\n    };\n\n    this.setViewport = function (x, y, width, height) {\n      if (x.isVector4) {\n        _viewport.set(x.x, x.y, x.z, x.w);\n      } else {\n        _viewport.set(x, y, width, height);\n      }\n\n      state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n    };\n\n    this.getScissor = function (target) {\n      return target.copy(_scissor);\n    };\n\n    this.setScissor = function (x, y, width, height) {\n      if (x.isVector4) {\n        _scissor.set(x.x, x.y, x.z, x.w);\n      } else {\n        _scissor.set(x, y, width, height);\n      }\n\n      state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n    };\n\n    this.getScissorTest = function () {\n      return _scissorTest;\n    };\n\n    this.setScissorTest = function (boolean) {\n      state.setScissorTest(_scissorTest = boolean);\n    };\n\n    this.setOpaqueSort = function (method) {\n      _opaqueSort = method;\n    };\n\n    this.setTransparentSort = function (method) {\n      _transparentSort = method;\n    }; // Clearing\n\n\n    this.getClearColor = function (target) {\n      if (target === undefined) {\n        console.warn('WebGLRenderer: .getClearColor() now requires a Color as an argument');\n        target = new Color();\n      }\n\n      return target.copy(background.getClearColor());\n    };\n\n    this.setClearColor = function () {\n      background.setClearColor.apply(background, arguments);\n    };\n\n    this.getClearAlpha = function () {\n      return background.getClearAlpha();\n    };\n\n    this.setClearAlpha = function () {\n      background.setClearAlpha.apply(background, arguments);\n    };\n\n    this.clear = function (color, depth, stencil) {\n      var bits = 0;\n      if (color === undefined || color) bits |= 16384;\n      if (depth === undefined || depth) bits |= 256;\n      if (stencil === undefined || stencil) bits |= 1024;\n\n      _gl.clear(bits);\n    };\n\n    this.clearColor = function () {\n      this.clear(true, false, false);\n    };\n\n    this.clearDepth = function () {\n      this.clear(false, true, false);\n    };\n\n    this.clearStencil = function () {\n      this.clear(false, false, true);\n    }; //\n\n\n    this.dispose = function () {\n      _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n      _canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n      renderLists.dispose();\n      renderStates.dispose();\n      properties.dispose();\n      cubemaps.dispose();\n      objects.dispose();\n      bindingStates.dispose();\n      xr.dispose();\n      animation.stop();\n    }; // Events\n\n\n    function onContextLost(event) {\n      event.preventDefault();\n      console.log('THREE.WebGLRenderer: Context Lost.');\n      _isContextLost = true;\n    }\n\n    function onContextRestore()\n    /* event */\n    {\n      console.log('THREE.WebGLRenderer: Context Restored.');\n      _isContextLost = false;\n      initGLContext();\n    }\n\n    function onMaterialDispose(event) {\n      var material = event.target;\n      material.removeEventListener('dispose', onMaterialDispose);\n      deallocateMaterial(material);\n    } // Buffer deallocation\n\n\n    function deallocateMaterial(material) {\n      releaseMaterialProgramReference(material);\n      properties.remove(material);\n    }\n\n    function releaseMaterialProgramReference(material) {\n      var programInfo = properties.get(material).program;\n\n      if (programInfo !== undefined) {\n        programCache.releaseProgram(programInfo);\n      }\n    } // Buffer rendering\n\n\n    function renderObjectImmediate(object, program) {\n      object.render(function (object) {\n        _this.renderBufferImmediate(object, program);\n      });\n    }\n\n    this.renderBufferImmediate = function (object, program) {\n      bindingStates.initAttributes();\n      var buffers = properties.get(object);\n      if (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n      if (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n      if (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n      if (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n      var programAttributes = program.getAttributes();\n\n      if (object.hasPositions) {\n        _gl.bindBuffer(34962, buffers.position);\n\n        _gl.bufferData(34962, object.positionArray, 35048);\n\n        bindingStates.enableAttribute(programAttributes.position);\n\n        _gl.vertexAttribPointer(programAttributes.position, 3, 5126, false, 0, 0);\n      }\n\n      if (object.hasNormals) {\n        _gl.bindBuffer(34962, buffers.normal);\n\n        _gl.bufferData(34962, object.normalArray, 35048);\n\n        bindingStates.enableAttribute(programAttributes.normal);\n\n        _gl.vertexAttribPointer(programAttributes.normal, 3, 5126, false, 0, 0);\n      }\n\n      if (object.hasUvs) {\n        _gl.bindBuffer(34962, buffers.uv);\n\n        _gl.bufferData(34962, object.uvArray, 35048);\n\n        bindingStates.enableAttribute(programAttributes.uv);\n\n        _gl.vertexAttribPointer(programAttributes.uv, 2, 5126, false, 0, 0);\n      }\n\n      if (object.hasColors) {\n        _gl.bindBuffer(34962, buffers.color);\n\n        _gl.bufferData(34962, object.colorArray, 35048);\n\n        bindingStates.enableAttribute(programAttributes.color);\n\n        _gl.vertexAttribPointer(programAttributes.color, 3, 5126, false, 0, 0);\n      }\n\n      bindingStates.disableUnusedAttributes();\n\n      _gl.drawArrays(4, 0, object.count);\n\n      object.count = 0;\n    };\n\n    this.renderBufferDirect = function (camera, scene, geometry, material, object, group) {\n      if (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n      var frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n      var program = setProgram(camera, scene, material, object);\n      state.setMaterial(material, frontFaceCW); //\n\n      var index = geometry.index;\n      var position = geometry.attributes.position; //\n\n      if (index === null) {\n        if (position === undefined || position.count === 0) return;\n      } else if (index.count === 0) {\n        return;\n      } //\n\n\n      var rangeFactor = 1;\n\n      if (material.wireframe === true) {\n        index = geometries.getWireframeAttribute(geometry);\n        rangeFactor = 2;\n      }\n\n      if (material.morphTargets || material.morphNormals) {\n        morphtargets.update(object, geometry, material, program);\n      }\n\n      bindingStates.setup(object, material, program, geometry, index);\n      var attribute;\n      var renderer = bufferRenderer;\n\n      if (index !== null) {\n        attribute = attributes.get(index);\n        renderer = indexedBufferRenderer;\n        renderer.setIndex(attribute);\n      } //\n\n\n      var dataCount = index !== null ? index.count : position.count;\n      var rangeStart = geometry.drawRange.start * rangeFactor;\n      var rangeCount = geometry.drawRange.count * rangeFactor;\n      var groupStart = group !== null ? group.start * rangeFactor : 0;\n      var groupCount = group !== null ? group.count * rangeFactor : Infinity;\n      var drawStart = Math.max(rangeStart, groupStart);\n      var drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n      var drawCount = Math.max(0, drawEnd - drawStart + 1);\n      if (drawCount === 0) return; //\n\n      if (object.isMesh) {\n        if (material.wireframe === true) {\n          state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n          renderer.setMode(1);\n        } else {\n          renderer.setMode(4);\n        }\n      } else if (object.isLine) {\n        var lineWidth = material.linewidth;\n        if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n        state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n        if (object.isLineSegments) {\n          renderer.setMode(1);\n        } else if (object.isLineLoop) {\n          renderer.setMode(2);\n        } else {\n          renderer.setMode(3);\n        }\n      } else if (object.isPoints) {\n        renderer.setMode(0);\n      } else if (object.isSprite) {\n        renderer.setMode(4);\n      }\n\n      if (object.isInstancedMesh) {\n        renderer.renderInstances(drawStart, drawCount, object.count);\n      } else if (geometry.isInstancedBufferGeometry) {\n        var instanceCount = Math.min(geometry.instanceCount, geometry._maxInstanceCount);\n        renderer.renderInstances(drawStart, drawCount, instanceCount);\n      } else {\n        renderer.render(drawStart, drawCount);\n      }\n    }; // Compile\n\n\n    this.compile = function (scene, camera) {\n      currentRenderState = renderStates.get(scene);\n      currentRenderState.init();\n      scene.traverseVisible(function (object) {\n        if (object.isLight && object.layers.test(camera.layers)) {\n          currentRenderState.pushLight(object);\n\n          if (object.castShadow) {\n            currentRenderState.pushShadow(object);\n          }\n        }\n      });\n      currentRenderState.setupLights();\n      var compiled = new WeakMap();\n      scene.traverse(function (object) {\n        var material = object.material;\n\n        if (material) {\n          if (Array.isArray(material)) {\n            for (var i = 0; i < material.length; i++) {\n              var material2 = material[i];\n\n              if (compiled.has(material2) === false) {\n                initMaterial(material2, scene, object);\n                compiled.set(material2);\n              }\n            }\n          } else if (compiled.has(material) === false) {\n            initMaterial(material, scene, object);\n            compiled.set(material);\n          }\n        }\n      });\n    }; // Animation Loop\n\n\n    var onAnimationFrameCallback = null;\n\n    function onAnimationFrame(time) {\n      if (xr.isPresenting) return;\n      if (onAnimationFrameCallback) onAnimationFrameCallback(time);\n    }\n\n    var animation = new WebGLAnimation();\n    animation.setAnimationLoop(onAnimationFrame);\n    if (typeof window !== 'undefined') animation.setContext(window);\n\n    this.setAnimationLoop = function (callback) {\n      onAnimationFrameCallback = callback;\n      xr.setAnimationLoop(callback);\n      callback === null ? animation.stop() : animation.start();\n    }; // Rendering\n\n\n    this.render = function (scene, camera) {\n      var renderTarget, forceClear;\n\n      if (arguments[2] !== undefined) {\n        console.warn('THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.');\n        renderTarget = arguments[2];\n      }\n\n      if (arguments[3] !== undefined) {\n        console.warn('THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.');\n        forceClear = arguments[3];\n      }\n\n      if (camera !== undefined && camera.isCamera !== true) {\n        console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n        return;\n      }\n\n      if (_isContextLost === true) return; // reset caching for this frame\n\n      bindingStates.resetDefaultState();\n      _currentMaterialId = -1;\n      _currentCamera = null; // update scene graph\n\n      if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n      if (camera.parent === null) camera.updateMatrixWorld();\n\n      if (xr.enabled === true && xr.isPresenting === true) {\n        camera = xr.getCamera(camera);\n      } //\n\n\n      if (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, renderTarget || _currentRenderTarget);\n      currentRenderState = renderStates.get(scene, renderStateStack.length);\n      currentRenderState.init();\n      renderStateStack.push(currentRenderState);\n\n      _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n      _frustum.setFromProjectionMatrix(_projScreenMatrix);\n\n      _localClippingEnabled = this.localClippingEnabled;\n      _clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n      currentRenderList = renderLists.get(scene, camera);\n      currentRenderList.init();\n      projectObject(scene, camera, 0, _this.sortObjects);\n      currentRenderList.finish();\n\n      if (_this.sortObjects === true) {\n        currentRenderList.sort(_opaqueSort, _transparentSort);\n      } //\n\n\n      if (_clippingEnabled === true) clipping.beginShadows();\n      var shadowsArray = currentRenderState.state.shadowsArray;\n      shadowMap.render(shadowsArray, scene, camera);\n      currentRenderState.setupLights();\n      currentRenderState.setupLightsView(camera);\n      if (_clippingEnabled === true) clipping.endShadows(); //\n\n      if (this.info.autoReset === true) this.info.reset();\n\n      if (renderTarget !== undefined) {\n        this.setRenderTarget(renderTarget);\n      } //\n\n\n      background.render(currentRenderList, scene, camera, forceClear); // render scene\n\n      var opaqueObjects = currentRenderList.opaque;\n      var transparentObjects = currentRenderList.transparent;\n      if (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\n      if (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera); //\n\n      if (scene.isScene === true) scene.onAfterRender(_this, scene, camera); //\n\n      if (_currentRenderTarget !== null) {\n        // Generate mipmap if we're using any kind of mipmap filtering\n        textures.updateRenderTargetMipmap(_currentRenderTarget); // resolve multisample renderbuffers to a single-sample texture if necessary\n\n        textures.updateMultisampleRenderTarget(_currentRenderTarget);\n      } // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\n      state.buffers.depth.setTest(true);\n      state.buffers.depth.setMask(true);\n      state.buffers.color.setMask(true);\n      state.setPolygonOffset(false); // _gl.finish();\n\n      renderStateStack.pop();\n\n      if (renderStateStack.length > 0) {\n        currentRenderState = renderStateStack[renderStateStack.length - 1];\n      } else {\n        currentRenderState = null;\n      }\n\n      currentRenderList = null;\n    };\n\n    function projectObject(object, camera, groupOrder, sortObjects) {\n      if (object.visible === false) return;\n      var visible = object.layers.test(camera.layers);\n\n      if (visible) {\n        if (object.isGroup) {\n          groupOrder = object.renderOrder;\n        } else if (object.isLOD) {\n          if (object.autoUpdate === true) object.update(camera);\n        } else if (object.isLight) {\n          currentRenderState.pushLight(object);\n\n          if (object.castShadow) {\n            currentRenderState.pushShadow(object);\n          }\n        } else if (object.isSprite) {\n          if (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n            if (sortObjects) {\n              _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n            }\n\n            var geometry = objects.update(object);\n            var material = object.material;\n\n            if (material.visible) {\n              currentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n            }\n          }\n        } else if (object.isImmediateRenderObject) {\n          if (sortObjects) {\n            _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n          }\n\n          currentRenderList.push(object, null, object.material, groupOrder, _vector3.z, null);\n        } else if (object.isMesh || object.isLine || object.isPoints) {\n          if (object.isSkinnedMesh) {\n            // update skeleton only once in a frame\n            if (object.skeleton.frame !== info.render.frame) {\n              object.skeleton.update();\n              object.skeleton.frame = info.render.frame;\n            }\n          }\n\n          if (!object.frustumCulled || _frustum.intersectsObject(object)) {\n            if (sortObjects) {\n              _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n            }\n\n            var _geometry = objects.update(object);\n\n            var _material = object.material;\n\n            if (Array.isArray(_material)) {\n              var groups = _geometry.groups;\n\n              for (var i = 0, l = groups.length; i < l; i++) {\n                var group = groups[i];\n                var groupMaterial = _material[group.materialIndex];\n\n                if (groupMaterial && groupMaterial.visible) {\n                  currentRenderList.push(object, _geometry, groupMaterial, groupOrder, _vector3.z, group);\n                }\n              }\n            } else if (_material.visible) {\n              currentRenderList.push(object, _geometry, _material, groupOrder, _vector3.z, null);\n            }\n          }\n        }\n      }\n\n      var children = object.children;\n\n      for (var _i = 0, _l = children.length; _i < _l; _i++) {\n        projectObject(children[_i], camera, groupOrder, sortObjects);\n      }\n    }\n\n    function renderObjects(renderList, scene, camera) {\n      var overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n      for (var i = 0, l = renderList.length; i < l; i++) {\n        var renderItem = renderList[i];\n        var object = renderItem.object;\n        var geometry = renderItem.geometry;\n        var material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n        var group = renderItem.group;\n\n        if (camera.isArrayCamera) {\n          var cameras = camera.cameras;\n\n          for (var j = 0, jl = cameras.length; j < jl; j++) {\n            var camera2 = cameras[j];\n\n            if (object.layers.test(camera2.layers)) {\n              state.viewport(_currentViewport.copy(camera2.viewport));\n              currentRenderState.setupLightsView(camera2);\n              renderObject(object, scene, camera2, geometry, material, group);\n            }\n          }\n        } else {\n          renderObject(object, scene, camera, geometry, material, group);\n        }\n      }\n    }\n\n    function renderObject(object, scene, camera, geometry, material, group) {\n      object.onBeforeRender(_this, scene, camera, geometry, material, group);\n      object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n      object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n      if (object.isImmediateRenderObject) {\n        var program = setProgram(camera, scene, material, object);\n        state.setMaterial(material);\n        bindingStates.reset();\n        renderObjectImmediate(object, program);\n      } else {\n        _this.renderBufferDirect(camera, scene, geometry, material, object, group);\n      }\n\n      object.onAfterRender(_this, scene, camera, geometry, material, group);\n    }\n\n    function initMaterial(material, scene, object) {\n      if (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n      var materialProperties = properties.get(material);\n      var lights = currentRenderState.state.lights;\n      var shadowsArray = currentRenderState.state.shadowsArray;\n      var lightsStateVersion = lights.state.version;\n      var parameters = programCache.getParameters(material, lights.state, shadowsArray, scene, object);\n      var programCacheKey = programCache.getProgramCacheKey(parameters);\n      var program = materialProperties.program;\n      var programChange = true; // always update environment and fog - changing these trigger an initMaterial call, but it's possible that the program doesn't change\n\n      materialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n      materialProperties.fog = scene.fog;\n      materialProperties.envMap = cubemaps.get(material.envMap || materialProperties.environment);\n\n      if (program === undefined) {\n        // new material\n        material.addEventListener('dispose', onMaterialDispose);\n      } else if (program.cacheKey !== programCacheKey) {\n        // changed glsl or parameters\n        releaseMaterialProgramReference(material);\n      } else if (materialProperties.lightsStateVersion !== lightsStateVersion) {\n        programChange = false;\n      } else if (parameters.shaderID !== undefined) {\n        // same glsl and uniform list\n        return;\n      } else {\n        // only rebuild uniform list\n        programChange = false;\n      }\n\n      if (programChange) {\n        parameters.uniforms = programCache.getUniforms(material);\n        material.onBeforeCompile(parameters, _this);\n        program = programCache.acquireProgram(parameters, programCacheKey);\n        materialProperties.program = program;\n        materialProperties.uniforms = parameters.uniforms;\n        materialProperties.outputEncoding = parameters.outputEncoding;\n      }\n\n      var uniforms = materialProperties.uniforms;\n\n      if (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n        materialProperties.numClippingPlanes = clipping.numPlanes;\n        materialProperties.numIntersection = clipping.numIntersection;\n        uniforms.clippingPlanes = clipping.uniform;\n      } // store the light setup it was created for\n\n\n      materialProperties.needsLights = materialNeedsLights(material);\n      materialProperties.lightsStateVersion = lightsStateVersion;\n\n      if (materialProperties.needsLights) {\n        // wire up the material to this renderer's lighting state\n        uniforms.ambientLightColor.value = lights.state.ambient;\n        uniforms.lightProbe.value = lights.state.probe;\n        uniforms.directionalLights.value = lights.state.directional;\n        uniforms.directionalLightShadows.value = lights.state.directionalShadow;\n        uniforms.spotLights.value = lights.state.spot;\n        uniforms.spotLightShadows.value = lights.state.spotShadow;\n        uniforms.rectAreaLights.value = lights.state.rectArea;\n        uniforms.ltc_1.value = lights.state.rectAreaLTC1;\n        uniforms.ltc_2.value = lights.state.rectAreaLTC2;\n        uniforms.pointLights.value = lights.state.point;\n        uniforms.pointLightShadows.value = lights.state.pointShadow;\n        uniforms.hemisphereLights.value = lights.state.hemi;\n        uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n        uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n        uniforms.spotShadowMap.value = lights.state.spotShadowMap;\n        uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n        uniforms.pointShadowMap.value = lights.state.pointShadowMap;\n        uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n      }\n\n      var progUniforms = materialProperties.program.getUniforms();\n      var uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n      materialProperties.uniformsList = uniformsList;\n    }\n\n    function setProgram(camera, scene, material, object) {\n      _s5();\n\n      if (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n      textures.resetTextureUnits();\n      var fog = scene.fog;\n      var environment = material.isMeshStandardMaterial ? scene.environment : null;\n      var encoding = _currentRenderTarget === null ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n      var envMap = cubemaps.get(material.envMap || environment);\n      var materialProperties = properties.get(material);\n      var lights = currentRenderState.state.lights;\n\n      if (_clippingEnabled === true) {\n        if (_localClippingEnabled === true || camera !== _currentCamera) {\n          var useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n          // object instead of the material, once it becomes feasible\n          // (#8465, #8379)\n\n          clipping.setState(material, camera, useCache);\n        }\n      }\n\n      if (material.version === materialProperties.__version) {\n        if (material.fog && materialProperties.fog !== fog) {\n          initMaterial(material, scene, object);\n        } else if (materialProperties.environment !== environment) {\n          initMaterial(material, scene, object);\n        } else if (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {\n          initMaterial(material, scene, object);\n        } else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== clipping.numPlanes || materialProperties.numIntersection !== clipping.numIntersection)) {\n          initMaterial(material, scene, object);\n        } else if (materialProperties.outputEncoding !== encoding) {\n          initMaterial(material, scene, object);\n        } else if (materialProperties.envMap !== envMap) {\n          initMaterial(material, scene, object);\n        }\n      } else {\n        initMaterial(material, scene, object);\n        materialProperties.__version = material.version;\n      }\n\n      var refreshProgram = false;\n      var refreshMaterial = false;\n      var refreshLights = false;\n      var program = materialProperties.program,\n          p_uniforms = program.getUniforms(),\n          m_uniforms = materialProperties.uniforms;\n\n      if (state.useProgram(program.program)) {\n        refreshProgram = true;\n        refreshMaterial = true;\n        refreshLights = true;\n      }\n\n      if (material.id !== _currentMaterialId) {\n        _currentMaterialId = material.id;\n        refreshMaterial = true;\n      }\n\n      if (refreshProgram || _currentCamera !== camera) {\n        p_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n        if (capabilities.logarithmicDepthBuffer) {\n          p_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n        }\n\n        if (_currentCamera !== camera) {\n          _currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n          // now, in case this material supports lights - or later, when\n          // the next material that does gets activated:\n\n          refreshMaterial = true; // set to true on material change\n\n          refreshLights = true; // remains set until update done\n        } // load material specific uniforms\n        // (shader material also gets them for the sake of genericity)\n\n\n        if (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshStandardMaterial || material.envMap) {\n          var uCamPos = p_uniforms.map.cameraPosition;\n\n          if (uCamPos !== undefined) {\n            uCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n          }\n        }\n\n        if (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {\n          p_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\n        }\n\n        if (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.isShadowMaterial || material.skinning) {\n          p_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n        }\n      } // skinning uniforms must be set even if material didn't change\n      // auto-setting of texture unit for bone texture must go before other textures\n      // otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\n      if (material.skinning) {\n        p_uniforms.setOptional(_gl, object, 'bindMatrix');\n        p_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n        var skeleton = object.skeleton;\n\n        if (skeleton) {\n          var bones = skeleton.bones;\n\n          if (capabilities.floatVertexTextures) {\n            if (skeleton.boneTexture === null) {\n              // layout (1 matrix = 4 pixels)\n              //\t\t\tRGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n              //\twith\t8x8\tpixel texture max\t 16 bones * 4 pixels =\t(8 * 8)\n              //\t\t\t 16x16 pixel texture max\t 64 bones * 4 pixels = (16 * 16)\n              //\t\t\t 32x32 pixel texture max\t256 bones * 4 pixels = (32 * 32)\n              //\t\t\t 64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n              var size = Math.sqrt(bones.length * 4); // 4 pixels needed for 1 matrix\n\n              size = MathUtils.ceilPowerOfTwo(size);\n              size = Math.max(size, 4);\n              var boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n              boneMatrices.set(skeleton.boneMatrices); // copy current values\n\n              var boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n              skeleton.boneMatrices = boneMatrices;\n              skeleton.boneTexture = boneTexture;\n              skeleton.boneTextureSize = size;\n            }\n\n            p_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\n            p_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n          } else {\n            p_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n          }\n        }\n      }\n\n      if (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\n        materialProperties.receiveShadow = object.receiveShadow;\n        p_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\n      }\n\n      if (refreshMaterial) {\n        p_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n\n        if (materialProperties.needsLights) {\n          // the current material requires lighting info\n          // note: all lighting uniforms are always set correctly\n          // they simply reference the renderer's state for their\n          // values\n          //\n          // use the current material's .needsUpdate flags to set\n          // the GL state when required\n          markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n        } // refresh uniforms common to several materials\n\n\n        if (fog && material.fog) {\n          materials.refreshFogUniforms(m_uniforms, fog);\n        }\n\n        materials.refreshMaterialUniforms(m_uniforms, material, _pixelRatio, _height);\n        WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n      }\n\n      if (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n        WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n        material.uniformsNeedUpdate = false;\n      }\n\n      if (material.isSpriteMaterial) {\n        p_uniforms.setValue(_gl, 'center', object.center);\n      } // common matrices\n\n\n      p_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n      p_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n      p_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n      return program;\n    } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n    _s5(setProgram, \"ZdQBZ3rq7bWAAMQq6hlVCmYF0jM=\", false, function () {\n      return [state.useProgram];\n    });\n\n    function markUniformsLightsNeedsUpdate(uniforms, value) {\n      uniforms.ambientLightColor.needsUpdate = value;\n      uniforms.lightProbe.needsUpdate = value;\n      uniforms.directionalLights.needsUpdate = value;\n      uniforms.directionalLightShadows.needsUpdate = value;\n      uniforms.pointLights.needsUpdate = value;\n      uniforms.pointLightShadows.needsUpdate = value;\n      uniforms.spotLights.needsUpdate = value;\n      uniforms.spotLightShadows.needsUpdate = value;\n      uniforms.rectAreaLights.needsUpdate = value;\n      uniforms.hemisphereLights.needsUpdate = value;\n    }\n\n    function materialNeedsLights(material) {\n      return material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;\n    } //\n\n\n    this.setFramebuffer = function (value) {\n      if (_framebuffer !== value && _currentRenderTarget === null) _gl.bindFramebuffer(36160, value);\n      _framebuffer = value;\n    };\n\n    this.getActiveCubeFace = function () {\n      return _currentActiveCubeFace;\n    };\n\n    this.getActiveMipmapLevel = function () {\n      return _currentActiveMipmapLevel;\n    };\n\n    this.getRenderList = function () {\n      return currentRenderList;\n    };\n\n    this.setRenderList = function (renderList) {\n      currentRenderList = renderList;\n    };\n\n    this.getRenderTarget = function () {\n      return _currentRenderTarget;\n    };\n\n    this.setRenderTarget = function (renderTarget, activeCubeFace, activeMipmapLevel) {\n      if (activeCubeFace === void 0) {\n        activeCubeFace = 0;\n      }\n\n      if (activeMipmapLevel === void 0) {\n        activeMipmapLevel = 0;\n      }\n\n      _currentRenderTarget = renderTarget;\n      _currentActiveCubeFace = activeCubeFace;\n      _currentActiveMipmapLevel = activeMipmapLevel;\n\n      if (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n        textures.setupRenderTarget(renderTarget);\n      }\n\n      var framebuffer = _framebuffer;\n      var isCube = false;\n\n      if (renderTarget) {\n        var __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n        if (renderTarget.isWebGLCubeRenderTarget) {\n          framebuffer = __webglFramebuffer[activeCubeFace];\n          isCube = true;\n        } else if (renderTarget.isWebGLMultisampleRenderTarget) {\n          framebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\n        } else {\n          framebuffer = __webglFramebuffer;\n        }\n\n        _currentViewport.copy(renderTarget.viewport);\n\n        _currentScissor.copy(renderTarget.scissor);\n\n        _currentScissorTest = renderTarget.scissorTest;\n      } else {\n        _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\n\n        _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\n\n        _currentScissorTest = _scissorTest;\n      }\n\n      if (_currentFramebuffer !== framebuffer) {\n        _gl.bindFramebuffer(36160, framebuffer);\n\n        _currentFramebuffer = framebuffer;\n      }\n\n      state.viewport(_currentViewport);\n      state.scissor(_currentScissor);\n      state.setScissorTest(_currentScissorTest);\n\n      if (isCube) {\n        var textureProperties = properties.get(renderTarget.texture);\n\n        _gl.framebufferTexture2D(36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel);\n      }\n    };\n\n    this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer, activeCubeFaceIndex) {\n      if (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n        console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n        return;\n      }\n\n      var framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n      if (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined) {\n        framebuffer = framebuffer[activeCubeFaceIndex];\n      }\n\n      if (framebuffer) {\n        var restore = false;\n\n        if (framebuffer !== _currentFramebuffer) {\n          _gl.bindFramebuffer(36160, framebuffer);\n\n          restore = true;\n        }\n\n        try {\n          var texture = renderTarget.texture;\n          var textureFormat = texture.format;\n          var textureType = texture.type;\n\n          if (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(35739)) {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n            return;\n          }\n\n          var halfFloatSupportedByExt = textureType === HalfFloatType && (extensions.has('EXT_color_buffer_half_float') || capabilities.isWebGL2 && extensions.has('EXT_color_buffer_float'));\n\n          if (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(35738) && // IE11, Edge and Chrome Mac < 52 (#9513)\n          !(textureType === FloatType && (capabilities.isWebGL2 || extensions.has('OES_texture_float') || extensions.has('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n          !halfFloatSupportedByExt) {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n            return;\n          }\n\n          if (_gl.checkFramebufferStatus(36160) === 36053) {\n            // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n            if (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n              _gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n            }\n          } else {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n          }\n        } finally {\n          if (restore) {\n            _gl.bindFramebuffer(36160, _currentFramebuffer);\n          }\n        }\n      }\n    };\n\n    this.copyFramebufferToTexture = function (position, texture, level) {\n      if (level === void 0) {\n        level = 0;\n      }\n\n      var levelScale = Math.pow(2, -level);\n      var width = Math.floor(texture.image.width * levelScale);\n      var height = Math.floor(texture.image.height * levelScale);\n      var glFormat = utils.convert(texture.format);\n      textures.setTexture2D(texture, 0);\n\n      _gl.copyTexImage2D(3553, level, glFormat, position.x, position.y, width, height, 0);\n\n      state.unbindTexture();\n    };\n\n    this.copyTextureToTexture = function (position, srcTexture, dstTexture, level) {\n      if (level === void 0) {\n        level = 0;\n      }\n\n      var width = srcTexture.image.width;\n      var height = srcTexture.image.height;\n      var glFormat = utils.convert(dstTexture.format);\n      var glType = utils.convert(dstTexture.type);\n      textures.setTexture2D(dstTexture, 0); // As another texture upload may have changed pixelStorei\n      // parameters, make sure they are correct for the dstTexture\n\n      _gl.pixelStorei(37440, dstTexture.flipY);\n\n      _gl.pixelStorei(37441, dstTexture.premultiplyAlpha);\n\n      _gl.pixelStorei(3317, dstTexture.unpackAlignment);\n\n      if (srcTexture.isDataTexture) {\n        _gl.texSubImage2D(3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n      } else {\n        if (srcTexture.isCompressedTexture) {\n          _gl.compressedTexSubImage2D(3553, level, position.x, position.y, srcTexture.mipmaps[0].width, srcTexture.mipmaps[0].height, glFormat, srcTexture.mipmaps[0].data);\n        } else {\n          _gl.texSubImage2D(3553, level, position.x, position.y, glFormat, glType, srcTexture.image);\n        }\n      } // Generate mipmaps only when copying level 0\n\n\n      if (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(3553);\n      state.unbindTexture();\n    };\n\n    this.initTexture = function (texture) {\n      textures.setTexture2D(texture, 0);\n      state.unbindTexture();\n    };\n\n    this.resetState = function () {\n      state.reset();\n      bindingStates.reset();\n    };\n\n    if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n      __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n        detail: this\n      })); // eslint-disable-line no-undef\n\n    }\n  }\n\n  function WebGL1Renderer(parameters) {\n    WebGLRenderer.call(this, parameters);\n  }\n\n  WebGL1Renderer.prototype = Object.assign(Object.create(WebGLRenderer.prototype), {\n    constructor: WebGL1Renderer,\n    isWebGL1Renderer: true\n  });\n\n  var FogExp2 = /*#__PURE__*/function () {\n    function FogExp2(color, density) {\n      Object.defineProperty(this, 'isFogExp2', {\n        value: true\n      });\n      this.name = '';\n      this.color = new Color(color);\n      this.density = density !== undefined ? density : 0.00025;\n    }\n\n    var _proto = FogExp2.prototype;\n\n    _proto.clone = function clone() {\n      return new FogExp2(this.color, this.density);\n    };\n\n    _proto.toJSON = function toJSON()\n    /* meta */\n    {\n      return {\n        type: 'FogExp2',\n        color: this.color.getHex(),\n        density: this.density\n      };\n    };\n\n    return FogExp2;\n  }();\n\n  var Fog = /*#__PURE__*/function () {\n    function Fog(color, near, far) {\n      Object.defineProperty(this, 'isFog', {\n        value: true\n      });\n      this.name = '';\n      this.color = new Color(color);\n      this.near = near !== undefined ? near : 1;\n      this.far = far !== undefined ? far : 1000;\n    }\n\n    var _proto = Fog.prototype;\n\n    _proto.clone = function clone() {\n      return new Fog(this.color, this.near, this.far);\n    };\n\n    _proto.toJSON = function toJSON()\n    /* meta */\n    {\n      return {\n        type: 'Fog',\n        color: this.color.getHex(),\n        near: this.near,\n        far: this.far\n      };\n    };\n\n    return Fog;\n  }();\n\n  var Scene = /*#__PURE__*/function (_Object3D) {\n    _inheritsLoose(Scene, _Object3D);\n\n    function Scene() {\n      var _this;\n\n      _this = _Object3D.call(this) || this;\n      Object.defineProperty(_assertThisInitialized(_this), 'isScene', {\n        value: true\n      });\n      _this.type = 'Scene';\n      _this.background = null;\n      _this.environment = null;\n      _this.fog = null;\n      _this.overrideMaterial = null;\n      _this.autoUpdate = true; // checked by the renderer\n\n      if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n        __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n          detail: _assertThisInitialized(_this)\n        })); // eslint-disable-line no-undef\n\n      }\n\n      return _this;\n    }\n\n    var _proto = Scene.prototype;\n\n    _proto.copy = function copy(source, recursive) {\n      _Object3D.prototype.copy.call(this, source, recursive);\n\n      if (source.background !== null) this.background = source.background.clone();\n      if (source.environment !== null) this.environment = source.environment.clone();\n      if (source.fog !== null) this.fog = source.fog.clone();\n      if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n      this.autoUpdate = source.autoUpdate;\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      return this;\n    };\n\n    _proto.toJSON = function toJSON(meta) {\n      var data = _Object3D.prototype.toJSON.call(this, meta);\n\n      if (this.background !== null) data.object.background = this.background.toJSON(meta);\n      if (this.environment !== null) data.object.environment = this.environment.toJSON(meta);\n      if (this.fog !== null) data.object.fog = this.fog.toJSON();\n      return data;\n    };\n\n    return Scene;\n  }(Object3D);\n\n  function InterleavedBuffer(array, stride) {\n    this.array = array;\n    this.stride = stride;\n    this.count = array !== undefined ? array.length / stride : 0;\n    this.usage = StaticDrawUsage;\n    this.updateRange = {\n      offset: 0,\n      count: -1\n    };\n    this.version = 0;\n    this.uuid = MathUtils.generateUUID();\n  }\n\n  Object.defineProperty(InterleavedBuffer.prototype, 'needsUpdate', {\n    set: function set(value) {\n      if (value === true) this.version++;\n    }\n  });\n  Object.assign(InterleavedBuffer.prototype, {\n    isInterleavedBuffer: true,\n    onUploadCallback: function onUploadCallback() {},\n    setUsage: function setUsage(value) {\n      this.usage = value;\n      return this;\n    },\n    copy: function copy(source) {\n      this.array = new source.array.constructor(source.array);\n      this.count = source.count;\n      this.stride = source.stride;\n      this.usage = source.usage;\n      return this;\n    },\n    copyAt: function copyAt(index1, attribute, index2) {\n      index1 *= this.stride;\n      index2 *= attribute.stride;\n\n      for (var i = 0, l = this.stride; i < l; i++) {\n        this.array[index1 + i] = attribute.array[index2 + i];\n      }\n\n      return this;\n    },\n    set: function set(value, offset) {\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      this.array.set(value, offset);\n      return this;\n    },\n    clone: function clone(data) {\n      if (data.arrayBuffers === undefined) {\n        data.arrayBuffers = {};\n      }\n\n      if (this.array.buffer._uuid === undefined) {\n        this.array.buffer._uuid = MathUtils.generateUUID();\n      }\n\n      if (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n        data.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer;\n      }\n\n      var array = new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);\n      var ib = new InterleavedBuffer(array, this.stride);\n      ib.setUsage(this.usage);\n      return ib;\n    },\n    onUpload: function onUpload(callback) {\n      this.onUploadCallback = callback;\n      return this;\n    },\n    toJSON: function toJSON(data) {\n      if (data.arrayBuffers === undefined) {\n        data.arrayBuffers = {};\n      } // generate UUID for array buffer if necessary\n\n\n      if (this.array.buffer._uuid === undefined) {\n        this.array.buffer._uuid = MathUtils.generateUUID();\n      }\n\n      if (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n        data.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer));\n      } //\n\n\n      return {\n        uuid: this.uuid,\n        buffer: this.array.buffer._uuid,\n        type: this.array.constructor.name,\n        stride: this.stride\n      };\n    }\n  });\n\n  var _vector$6 = new Vector3();\n\n  function InterleavedBufferAttribute(interleavedBuffer, itemSize, offset, normalized) {\n    this.name = '';\n    this.data = interleavedBuffer;\n    this.itemSize = itemSize;\n    this.offset = offset;\n    this.normalized = normalized === true;\n  }\n\n  Object.defineProperties(InterleavedBufferAttribute.prototype, {\n    count: {\n      get: function get() {\n        return this.data.count;\n      }\n    },\n    array: {\n      get: function get() {\n        return this.data.array;\n      }\n    },\n    needsUpdate: {\n      set: function set(value) {\n        this.data.needsUpdate = value;\n      }\n    }\n  });\n  Object.assign(InterleavedBufferAttribute.prototype, {\n    isInterleavedBufferAttribute: true,\n    applyMatrix4: function applyMatrix4(m) {\n      for (var i = 0, l = this.data.count; i < l; i++) {\n        _vector$6.x = this.getX(i);\n        _vector$6.y = this.getY(i);\n        _vector$6.z = this.getZ(i);\n\n        _vector$6.applyMatrix4(m);\n\n        this.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n      }\n\n      return this;\n    },\n    setX: function setX(index, x) {\n      this.data.array[index * this.data.stride + this.offset] = x;\n      return this;\n    },\n    setY: function setY(index, y) {\n      this.data.array[index * this.data.stride + this.offset + 1] = y;\n      return this;\n    },\n    setZ: function setZ(index, z) {\n      this.data.array[index * this.data.stride + this.offset + 2] = z;\n      return this;\n    },\n    setW: function setW(index, w) {\n      this.data.array[index * this.data.stride + this.offset + 3] = w;\n      return this;\n    },\n    getX: function getX(index) {\n      return this.data.array[index * this.data.stride + this.offset];\n    },\n    getY: function getY(index) {\n      return this.data.array[index * this.data.stride + this.offset + 1];\n    },\n    getZ: function getZ(index) {\n      return this.data.array[index * this.data.stride + this.offset + 2];\n    },\n    getW: function getW(index) {\n      return this.data.array[index * this.data.stride + this.offset + 3];\n    },\n    setXY: function setXY(index, x, y) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      return this;\n    },\n    setXYZ: function setXYZ(index, x, y, z) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      this.data.array[index + 2] = z;\n      return this;\n    },\n    setXYZW: function setXYZW(index, x, y, z, w) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      this.data.array[index + 2] = z;\n      this.data.array[index + 3] = w;\n      return this;\n    },\n    clone: function clone(data) {\n      if (data === undefined) {\n        console.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');\n        var array = [];\n\n        for (var i = 0; i < this.count; i++) {\n          var index = i * this.data.stride + this.offset;\n\n          for (var j = 0; j < this.itemSize; j++) {\n            array.push(this.data.array[index + j]);\n          }\n        }\n\n        return new BufferAttribute(new this.array.constructor(array), this.itemSize, this.normalized);\n      } else {\n        if (data.interleavedBuffers === undefined) {\n          data.interleavedBuffers = {};\n        }\n\n        if (data.interleavedBuffers[this.data.uuid] === undefined) {\n          data.interleavedBuffers[this.data.uuid] = this.data.clone(data);\n        }\n\n        return new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);\n      }\n    },\n    toJSON: function toJSON(data) {\n      if (data === undefined) {\n        console.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');\n        var array = [];\n\n        for (var i = 0; i < this.count; i++) {\n          var index = i * this.data.stride + this.offset;\n\n          for (var j = 0; j < this.itemSize; j++) {\n            array.push(this.data.array[index + j]);\n          }\n        } // deinterleave data and save it as an ordinary buffer attribute for now\n\n\n        return {\n          itemSize: this.itemSize,\n          type: this.array.constructor.name,\n          array: array,\n          normalized: this.normalized\n        };\n      } else {\n        // save as true interlaved attribtue\n        if (data.interleavedBuffers === undefined) {\n          data.interleavedBuffers = {};\n        }\n\n        if (data.interleavedBuffers[this.data.uuid] === undefined) {\n          data.interleavedBuffers[this.data.uuid] = this.data.toJSON(data);\n        }\n\n        return {\n          isInterleavedBufferAttribute: true,\n          itemSize: this.itemSize,\n          data: this.data.uuid,\n          offset: this.offset,\n          normalized: this.normalized\n        };\n      }\n    }\n  });\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\tmap: new THREE.Texture( <Image> ),\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\trotation: <float>,\n   *\tsizeAttenuation: <bool>\n   * }\n   */\n\n  function SpriteMaterial(parameters) {\n    Material.call(this);\n    this.type = 'SpriteMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.alphaMap = null;\n    this.rotation = 0;\n    this.sizeAttenuation = true;\n    this.transparent = true;\n    this.setValues(parameters);\n  }\n\n  SpriteMaterial.prototype = Object.create(Material.prototype);\n  SpriteMaterial.prototype.constructor = SpriteMaterial;\n  SpriteMaterial.prototype.isSpriteMaterial = true;\n\n  SpriteMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.rotation = source.rotation;\n    this.sizeAttenuation = source.sizeAttenuation;\n    return this;\n  };\n\n  var _geometry;\n\n  var _intersectPoint = new Vector3();\n\n  var _worldScale = new Vector3();\n\n  var _mvPosition = new Vector3();\n\n  var _alignedPosition = new Vector2();\n\n  var _rotatedPosition = new Vector2();\n\n  var _viewWorldMatrix = new Matrix4();\n\n  var _vA$1 = new Vector3();\n\n  var _vB$1 = new Vector3();\n\n  var _vC$1 = new Vector3();\n\n  var _uvA$1 = new Vector2();\n\n  var _uvB$1 = new Vector2();\n\n  var _uvC$1 = new Vector2();\n\n  function Sprite(material) {\n    Object3D.call(this);\n    this.type = 'Sprite';\n\n    if (_geometry === undefined) {\n      _geometry = new BufferGeometry();\n      var float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\n      var interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n\n      _geometry.setIndex([0, 1, 2, 0, 2, 3]);\n\n      _geometry.setAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n\n      _geometry.setAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n    }\n\n    this.geometry = _geometry;\n    this.material = material !== undefined ? material : new SpriteMaterial();\n    this.center = new Vector2(0.5, 0.5);\n  }\n\n  Sprite.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Sprite,\n    isSprite: true,\n    raycast: function raycast(raycaster, intersects) {\n      if (raycaster.camera === null) {\n        console.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');\n      }\n\n      _worldScale.setFromMatrixScale(this.matrixWorld);\n\n      _viewWorldMatrix.copy(raycaster.camera.matrixWorld);\n\n      this.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse, this.matrixWorld);\n\n      _mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n\n      if (raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false) {\n        _worldScale.multiplyScalar(-_mvPosition.z);\n      }\n\n      var rotation = this.material.rotation;\n      var sin, cos;\n\n      if (rotation !== 0) {\n        cos = Math.cos(rotation);\n        sin = Math.sin(rotation);\n      }\n\n      var center = this.center;\n      transformVertex(_vA$1.set(-0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n      transformVertex(_vB$1.set(0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n      transformVertex(_vC$1.set(0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n      _uvA$1.set(0, 0);\n\n      _uvB$1.set(1, 0);\n\n      _uvC$1.set(1, 1); // check first triangle\n\n\n      var intersect = raycaster.ray.intersectTriangle(_vA$1, _vB$1, _vC$1, false, _intersectPoint);\n\n      if (intersect === null) {\n        // check second triangle\n        transformVertex(_vB$1.set(-0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n        _uvB$1.set(0, 1);\n\n        intersect = raycaster.ray.intersectTriangle(_vA$1, _vC$1, _vB$1, false, _intersectPoint);\n\n        if (intersect === null) {\n          return;\n        }\n      }\n\n      var distance = raycaster.ray.origin.distanceTo(_intersectPoint);\n      if (distance < raycaster.near || distance > raycaster.far) return;\n      intersects.push({\n        distance: distance,\n        point: _intersectPoint.clone(),\n        uv: Triangle.getUV(_intersectPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2()),\n        face: null,\n        object: this\n      });\n    },\n    copy: function copy(source) {\n      Object3D.prototype.copy.call(this, source);\n      if (source.center !== undefined) this.center.copy(source.center);\n      this.material = source.material;\n      return this;\n    }\n  });\n\n  function transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n    // compute position in camera space\n    _alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\n\n\n    if (sin !== undefined) {\n      _rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\n      _rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\n    } else {\n      _rotatedPosition.copy(_alignedPosition);\n    }\n\n    vertexPosition.copy(mvPosition);\n    vertexPosition.x += _rotatedPosition.x;\n    vertexPosition.y += _rotatedPosition.y; // transform to world space\n\n    vertexPosition.applyMatrix4(_viewWorldMatrix);\n  }\n\n  var _v1$4 = new Vector3();\n\n  var _v2$2 = new Vector3();\n\n  function LOD() {\n    Object3D.call(this);\n    this._currentLevel = 0;\n    this.type = 'LOD';\n    Object.defineProperties(this, {\n      levels: {\n        enumerable: true,\n        value: []\n      }\n    });\n    this.autoUpdate = true;\n  }\n\n  LOD.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: LOD,\n    isLOD: true,\n    copy: function copy(source) {\n      Object3D.prototype.copy.call(this, source, false);\n      var levels = source.levels;\n\n      for (var i = 0, l = levels.length; i < l; i++) {\n        var level = levels[i];\n        this.addLevel(level.object.clone(), level.distance);\n      }\n\n      this.autoUpdate = source.autoUpdate;\n      return this;\n    },\n    addLevel: function addLevel(object, distance) {\n      if (distance === void 0) {\n        distance = 0;\n      }\n\n      distance = Math.abs(distance);\n      var levels = this.levels;\n      var l;\n\n      for (l = 0; l < levels.length; l++) {\n        if (distance < levels[l].distance) {\n          break;\n        }\n      }\n\n      levels.splice(l, 0, {\n        distance: distance,\n        object: object\n      });\n      this.add(object);\n      return this;\n    },\n    getCurrentLevel: function getCurrentLevel() {\n      return this._currentLevel;\n    },\n    getObjectForDistance: function getObjectForDistance(distance) {\n      var levels = this.levels;\n\n      if (levels.length > 0) {\n        var i, l;\n\n        for (i = 1, l = levels.length; i < l; i++) {\n          if (distance < levels[i].distance) {\n            break;\n          }\n        }\n\n        return levels[i - 1].object;\n      }\n\n      return null;\n    },\n    raycast: function raycast(raycaster, intersects) {\n      var levels = this.levels;\n\n      if (levels.length > 0) {\n        _v1$4.setFromMatrixPosition(this.matrixWorld);\n\n        var distance = raycaster.ray.origin.distanceTo(_v1$4);\n        this.getObjectForDistance(distance).raycast(raycaster, intersects);\n      }\n    },\n    update: function update(camera) {\n      var levels = this.levels;\n\n      if (levels.length > 1) {\n        _v1$4.setFromMatrixPosition(camera.matrixWorld);\n\n        _v2$2.setFromMatrixPosition(this.matrixWorld);\n\n        var distance = _v1$4.distanceTo(_v2$2) / camera.zoom;\n        levels[0].object.visible = true;\n        var i, l;\n\n        for (i = 1, l = levels.length; i < l; i++) {\n          if (distance >= levels[i].distance) {\n            levels[i - 1].object.visible = false;\n            levels[i].object.visible = true;\n          } else {\n            break;\n          }\n        }\n\n        this._currentLevel = i - 1;\n\n        for (; i < l; i++) {\n          levels[i].object.visible = false;\n        }\n      }\n    },\n    toJSON: function toJSON(meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      if (this.autoUpdate === false) data.object.autoUpdate = false;\n      data.object.levels = [];\n      var levels = this.levels;\n\n      for (var i = 0, l = levels.length; i < l; i++) {\n        var level = levels[i];\n        data.object.levels.push({\n          object: level.object.uuid,\n          distance: level.distance\n        });\n      }\n\n      return data;\n    }\n  });\n\n  var _basePosition = new Vector3();\n\n  var _skinIndex = new Vector4();\n\n  var _skinWeight = new Vector4();\n\n  var _vector$7 = new Vector3();\n\n  var _matrix$1 = new Matrix4();\n\n  function SkinnedMesh(geometry, material) {\n    if (geometry && geometry.isGeometry) {\n      console.error('THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n    }\n\n    Mesh.call(this, geometry, material);\n    this.type = 'SkinnedMesh';\n    this.bindMode = 'attached';\n    this.bindMatrix = new Matrix4();\n    this.bindMatrixInverse = new Matrix4();\n  }\n\n  SkinnedMesh.prototype = Object.assign(Object.create(Mesh.prototype), {\n    constructor: SkinnedMesh,\n    isSkinnedMesh: true,\n    copy: function copy(source) {\n      Mesh.prototype.copy.call(this, source);\n      this.bindMode = source.bindMode;\n      this.bindMatrix.copy(source.bindMatrix);\n      this.bindMatrixInverse.copy(source.bindMatrixInverse);\n      this.skeleton = source.skeleton;\n      return this;\n    },\n    bind: function bind(skeleton, bindMatrix) {\n      this.skeleton = skeleton;\n\n      if (bindMatrix === undefined) {\n        this.updateMatrixWorld(true);\n        this.skeleton.calculateInverses();\n        bindMatrix = this.matrixWorld;\n      }\n\n      this.bindMatrix.copy(bindMatrix);\n      this.bindMatrixInverse.copy(bindMatrix).invert();\n    },\n    pose: function pose() {\n      this.skeleton.pose();\n    },\n    normalizeSkinWeights: function normalizeSkinWeights() {\n      var vector = new Vector4();\n      var skinWeight = this.geometry.attributes.skinWeight;\n\n      for (var i = 0, l = skinWeight.count; i < l; i++) {\n        vector.x = skinWeight.getX(i);\n        vector.y = skinWeight.getY(i);\n        vector.z = skinWeight.getZ(i);\n        vector.w = skinWeight.getW(i);\n        var scale = 1.0 / vector.manhattanLength();\n\n        if (scale !== Infinity) {\n          vector.multiplyScalar(scale);\n        } else {\n          vector.set(1, 0, 0, 0); // do something reasonable\n        }\n\n        skinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\n      }\n    },\n    updateMatrixWorld: function updateMatrixWorld(force) {\n      Mesh.prototype.updateMatrixWorld.call(this, force);\n\n      if (this.bindMode === 'attached') {\n        this.bindMatrixInverse.copy(this.matrixWorld).invert();\n      } else if (this.bindMode === 'detached') {\n        this.bindMatrixInverse.copy(this.bindMatrix).invert();\n      } else {\n        console.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n      }\n    },\n    boneTransform: function boneTransform(index, target) {\n      var skeleton = this.skeleton;\n      var geometry = this.geometry;\n\n      _skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\n\n      _skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\n\n      _basePosition.fromBufferAttribute(geometry.attributes.position, index).applyMatrix4(this.bindMatrix);\n\n      target.set(0, 0, 0);\n\n      for (var i = 0; i < 4; i++) {\n        var weight = _skinWeight.getComponent(i);\n\n        if (weight !== 0) {\n          var boneIndex = _skinIndex.getComponent(i);\n\n          _matrix$1.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld, skeleton.boneInverses[boneIndex]);\n\n          target.addScaledVector(_vector$7.copy(_basePosition).applyMatrix4(_matrix$1), weight);\n        }\n      }\n\n      return target.applyMatrix4(this.bindMatrixInverse);\n    }\n  });\n\n  function Bone() {\n    Object3D.call(this);\n    this.type = 'Bone';\n  }\n\n  Bone.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Bone,\n    isBone: true\n  });\n\n  var _offsetMatrix = new Matrix4();\n\n  var _identityMatrix = new Matrix4();\n\n  function Skeleton(bones, boneInverses) {\n    if (bones === void 0) {\n      bones = [];\n    }\n\n    if (boneInverses === void 0) {\n      boneInverses = [];\n    }\n\n    this.uuid = MathUtils.generateUUID();\n    this.bones = bones.slice(0);\n    this.boneInverses = boneInverses;\n    this.boneMatrices = null;\n    this.boneTexture = null;\n    this.boneTextureSize = 0;\n    this.frame = -1;\n    this.init();\n  }\n\n  Object.assign(Skeleton.prototype, {\n    init: function init() {\n      var bones = this.bones;\n      var boneInverses = this.boneInverses;\n      this.boneMatrices = new Float32Array(bones.length * 16); // calculate inverse bone matrices if necessary\n\n      if (boneInverses.length === 0) {\n        this.calculateInverses();\n      } else {\n        // handle special case\n        if (bones.length !== boneInverses.length) {\n          console.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');\n          this.boneInverses = [];\n\n          for (var i = 0, il = this.bones.length; i < il; i++) {\n            this.boneInverses.push(new Matrix4());\n          }\n        }\n      }\n    },\n    calculateInverses: function calculateInverses() {\n      this.boneInverses.length = 0;\n\n      for (var i = 0, il = this.bones.length; i < il; i++) {\n        var inverse = new Matrix4();\n\n        if (this.bones[i]) {\n          inverse.copy(this.bones[i].matrixWorld).invert();\n        }\n\n        this.boneInverses.push(inverse);\n      }\n    },\n    pose: function pose() {\n      // recover the bind-time world matrices\n      for (var i = 0, il = this.bones.length; i < il; i++) {\n        var bone = this.bones[i];\n\n        if (bone) {\n          bone.matrixWorld.copy(this.boneInverses[i]).invert();\n        }\n      } // compute the local matrices, positions, rotations and scales\n\n\n      for (var _i = 0, _il = this.bones.length; _i < _il; _i++) {\n        var _bone = this.bones[_i];\n\n        if (_bone) {\n          if (_bone.parent && _bone.parent.isBone) {\n            _bone.matrix.copy(_bone.parent.matrixWorld).invert();\n\n            _bone.matrix.multiply(_bone.matrixWorld);\n          } else {\n            _bone.matrix.copy(_bone.matrixWorld);\n          }\n\n          _bone.matrix.decompose(_bone.position, _bone.quaternion, _bone.scale);\n        }\n      }\n    },\n    update: function update() {\n      var bones = this.bones;\n      var boneInverses = this.boneInverses;\n      var boneMatrices = this.boneMatrices;\n      var boneTexture = this.boneTexture; // flatten bone matrices to array\n\n      for (var i = 0, il = bones.length; i < il; i++) {\n        // compute the offset between the current and the original transform\n        var matrix = bones[i] ? bones[i].matrixWorld : _identityMatrix;\n\n        _offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n\n        _offsetMatrix.toArray(boneMatrices, i * 16);\n      }\n\n      if (boneTexture !== null) {\n        boneTexture.needsUpdate = true;\n      }\n    },\n    clone: function clone() {\n      return new Skeleton(this.bones, this.boneInverses);\n    },\n    getBoneByName: function getBoneByName(name) {\n      for (var i = 0, il = this.bones.length; i < il; i++) {\n        var bone = this.bones[i];\n\n        if (bone.name === name) {\n          return bone;\n        }\n      }\n\n      return undefined;\n    },\n    dispose: function dispose() {\n      if (this.boneTexture !== null) {\n        this.boneTexture.dispose();\n        this.boneTexture = null;\n      }\n    },\n    fromJSON: function fromJSON(json, bones) {\n      this.uuid = json.uuid;\n\n      for (var i = 0, l = json.bones.length; i < l; i++) {\n        var uuid = json.bones[i];\n        var bone = bones[uuid];\n\n        if (bone === undefined) {\n          console.warn('THREE.Skeleton: No bone found with UUID:', uuid);\n          bone = new Bone();\n        }\n\n        this.bones.push(bone);\n        this.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));\n      }\n\n      this.init();\n      return this;\n    },\n    toJSON: function toJSON() {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Skeleton',\n          generator: 'Skeleton.toJSON'\n        },\n        bones: [],\n        boneInverses: []\n      };\n      data.uuid = this.uuid;\n      var bones = this.bones;\n      var boneInverses = this.boneInverses;\n\n      for (var i = 0, l = bones.length; i < l; i++) {\n        var bone = bones[i];\n        data.bones.push(bone.uuid);\n        var boneInverse = boneInverses[i];\n        data.boneInverses.push(boneInverse.toArray());\n      }\n\n      return data;\n    }\n  });\n\n  var _instanceLocalMatrix = new Matrix4();\n\n  var _instanceWorldMatrix = new Matrix4();\n\n  var _instanceIntersects = [];\n\n  var _mesh = new Mesh();\n\n  function InstancedMesh(geometry, material, count) {\n    Mesh.call(this, geometry, material);\n    this.instanceMatrix = new BufferAttribute(new Float32Array(count * 16), 16);\n    this.instanceColor = null;\n    this.count = count;\n    this.frustumCulled = false;\n  }\n\n  InstancedMesh.prototype = Object.assign(Object.create(Mesh.prototype), {\n    constructor: InstancedMesh,\n    isInstancedMesh: true,\n    copy: function copy(source) {\n      Mesh.prototype.copy.call(this, source);\n      this.instanceMatrix.copy(source.instanceMatrix);\n      if (source.instanceColor !== null) this.instanceColor = source.instanceColor.clone();\n      this.count = source.count;\n      return this;\n    },\n    getColorAt: function getColorAt(index, color) {\n      color.fromArray(this.instanceColor.array, index * 3);\n    },\n    getMatrixAt: function getMatrixAt(index, matrix) {\n      matrix.fromArray(this.instanceMatrix.array, index * 16);\n    },\n    raycast: function raycast(raycaster, intersects) {\n      var matrixWorld = this.matrixWorld;\n      var raycastTimes = this.count;\n      _mesh.geometry = this.geometry;\n      _mesh.material = this.material;\n      if (_mesh.material === undefined) return;\n\n      for (var instanceId = 0; instanceId < raycastTimes; instanceId++) {\n        // calculate the world matrix for each instance\n        this.getMatrixAt(instanceId, _instanceLocalMatrix);\n\n        _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\n\n\n        _mesh.matrixWorld = _instanceWorldMatrix;\n\n        _mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\n\n\n        for (var i = 0, l = _instanceIntersects.length; i < l; i++) {\n          var intersect = _instanceIntersects[i];\n          intersect.instanceId = instanceId;\n          intersect.object = this;\n          intersects.push(intersect);\n        }\n\n        _instanceIntersects.length = 0;\n      }\n    },\n    setColorAt: function setColorAt(index, color) {\n      if (this.instanceColor === null) {\n        this.instanceColor = new BufferAttribute(new Float32Array(this.count * 3), 3);\n      }\n\n      color.toArray(this.instanceColor.array, index * 3);\n    },\n    setMatrixAt: function setMatrixAt(index, matrix) {\n      matrix.toArray(this.instanceMatrix.array, index * 16);\n    },\n    updateMorphTargets: function updateMorphTargets() {},\n    dispose: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\topacity: <float>,\n   *\n   *\tlinewidth: <float>,\n   *\tlinecap: \"round\",\n   *\tlinejoin: \"round\"\n   * }\n   */\n\n  function LineBasicMaterial(parameters) {\n    Material.call(this);\n    this.type = 'LineBasicMaterial';\n    this.color = new Color(0xffffff);\n    this.linewidth = 1;\n    this.linecap = 'round';\n    this.linejoin = 'round';\n    this.morphTargets = false;\n    this.setValues(parameters);\n  }\n\n  LineBasicMaterial.prototype = Object.create(Material.prototype);\n  LineBasicMaterial.prototype.constructor = LineBasicMaterial;\n  LineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n  LineBasicMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.linewidth = source.linewidth;\n    this.linecap = source.linecap;\n    this.linejoin = source.linejoin;\n    this.morphTargets = source.morphTargets;\n    return this;\n  };\n\n  var _start = new Vector3();\n\n  var _end = new Vector3();\n\n  var _inverseMatrix$1 = new Matrix4();\n\n  var _ray$1 = new Ray();\n\n  var _sphere$2 = new Sphere();\n\n  function Line(geometry, material) {\n    if (geometry === void 0) {\n      geometry = new BufferGeometry();\n    }\n\n    if (material === void 0) {\n      material = new LineBasicMaterial();\n    }\n\n    Object3D.call(this);\n    this.type = 'Line';\n    this.geometry = geometry;\n    this.material = material;\n    this.updateMorphTargets();\n  }\n\n  Line.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Line,\n    isLine: true,\n    copy: function copy(source) {\n      Object3D.prototype.copy.call(this, source);\n      this.material = source.material;\n      this.geometry = source.geometry;\n      return this;\n    },\n    computeLineDistances: function computeLineDistances() {\n      var geometry = this.geometry;\n\n      if (geometry.isBufferGeometry) {\n        // we assume non-indexed geometry\n        if (geometry.index === null) {\n          var positionAttribute = geometry.attributes.position;\n          var lineDistances = [0];\n\n          for (var i = 1, l = positionAttribute.count; i < l; i++) {\n            _start.fromBufferAttribute(positionAttribute, i - 1);\n\n            _end.fromBufferAttribute(positionAttribute, i);\n\n            lineDistances[i] = lineDistances[i - 1];\n            lineDistances[i] += _start.distanceTo(_end);\n          }\n\n          geometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n        } else {\n          console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n        }\n      } else if (geometry.isGeometry) {\n        console.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n      }\n\n      return this;\n    },\n    raycast: function raycast(raycaster, intersects) {\n      var geometry = this.geometry;\n      var matrixWorld = this.matrixWorld;\n      var threshold = raycaster.params.Line.threshold; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n      _sphere$2.copy(geometry.boundingSphere);\n\n      _sphere$2.applyMatrix4(matrixWorld);\n\n      _sphere$2.radius += threshold;\n      if (raycaster.ray.intersectsSphere(_sphere$2) === false) return; //\n\n      _inverseMatrix$1.copy(matrixWorld).invert();\n\n      _ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\n\n      var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n      var localThresholdSq = localThreshold * localThreshold;\n      var vStart = new Vector3();\n      var vEnd = new Vector3();\n      var interSegment = new Vector3();\n      var interRay = new Vector3();\n      var step = this.isLineSegments ? 2 : 1;\n\n      if (geometry.isBufferGeometry) {\n        var index = geometry.index;\n        var attributes = geometry.attributes;\n        var positionAttribute = attributes.position;\n\n        if (index !== null) {\n          var indices = index.array;\n\n          for (var i = 0, l = indices.length - 1; i < l; i += step) {\n            var a = indices[i];\n            var b = indices[i + 1];\n            vStart.fromBufferAttribute(positionAttribute, a);\n            vEnd.fromBufferAttribute(positionAttribute, b);\n\n            var distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n            if (distSq > localThresholdSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var distance = raycaster.ray.origin.distanceTo(interRay);\n            if (distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        } else {\n          for (var _i = 0, _l = positionAttribute.count - 1; _i < _l; _i += step) {\n            vStart.fromBufferAttribute(positionAttribute, _i);\n            vEnd.fromBufferAttribute(positionAttribute, _i + 1);\n\n            var _distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n            if (_distSq > localThresholdSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var _distance = raycaster.ray.origin.distanceTo(interRay);\n\n            if (_distance < raycaster.near || _distance > raycaster.far) continue;\n            intersects.push({\n              distance: _distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: _i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        }\n      } else if (geometry.isGeometry) {\n        console.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n      }\n    },\n    updateMorphTargets: function updateMorphTargets() {\n      var geometry = this.geometry;\n\n      if (geometry.isBufferGeometry) {\n        var morphAttributes = geometry.morphAttributes;\n        var keys = Object.keys(morphAttributes);\n\n        if (keys.length > 0) {\n          var morphAttribute = morphAttributes[keys[0]];\n\n          if (morphAttribute !== undefined) {\n            this.morphTargetInfluences = [];\n            this.morphTargetDictionary = {};\n\n            for (var m = 0, ml = morphAttribute.length; m < ml; m++) {\n              var name = morphAttribute[m].name || String(m);\n              this.morphTargetInfluences.push(0);\n              this.morphTargetDictionary[name] = m;\n            }\n          }\n        }\n      } else {\n        var morphTargets = geometry.morphTargets;\n\n        if (morphTargets !== undefined && morphTargets.length > 0) {\n          console.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n        }\n      }\n    }\n  });\n\n  var _start$1 = new Vector3();\n\n  var _end$1 = new Vector3();\n\n  function LineSegments(geometry, material) {\n    Line.call(this, geometry, material);\n    this.type = 'LineSegments';\n  }\n\n  LineSegments.prototype = Object.assign(Object.create(Line.prototype), {\n    constructor: LineSegments,\n    isLineSegments: true,\n    computeLineDistances: function computeLineDistances() {\n      var geometry = this.geometry;\n\n      if (geometry.isBufferGeometry) {\n        // we assume non-indexed geometry\n        if (geometry.index === null) {\n          var positionAttribute = geometry.attributes.position;\n          var lineDistances = [];\n\n          for (var i = 0, l = positionAttribute.count; i < l; i += 2) {\n            _start$1.fromBufferAttribute(positionAttribute, i);\n\n            _end$1.fromBufferAttribute(positionAttribute, i + 1);\n\n            lineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n            lineDistances[i + 1] = lineDistances[i] + _start$1.distanceTo(_end$1);\n          }\n\n          geometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n        } else {\n          console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n        }\n      } else if (geometry.isGeometry) {\n        console.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n      }\n\n      return this;\n    }\n  });\n\n  function LineLoop(geometry, material) {\n    Line.call(this, geometry, material);\n    this.type = 'LineLoop';\n  }\n\n  LineLoop.prototype = Object.assign(Object.create(Line.prototype), {\n    constructor: LineLoop,\n    isLineLoop: true\n  });\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\topacity: <float>,\n   *\tmap: new THREE.Texture( <Image> ),\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tsize: <float>,\n   *\tsizeAttenuation: <bool>\n   *\n   *\tmorphTargets: <bool>\n   * }\n   */\n\n  function PointsMaterial(parameters) {\n    Material.call(this);\n    this.type = 'PointsMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.alphaMap = null;\n    this.size = 1;\n    this.sizeAttenuation = true;\n    this.morphTargets = false;\n    this.setValues(parameters);\n  }\n\n  PointsMaterial.prototype = Object.create(Material.prototype);\n  PointsMaterial.prototype.constructor = PointsMaterial;\n  PointsMaterial.prototype.isPointsMaterial = true;\n\n  PointsMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.size = source.size;\n    this.sizeAttenuation = source.sizeAttenuation;\n    this.morphTargets = source.morphTargets;\n    return this;\n  };\n\n  var _inverseMatrix$2 = new Matrix4();\n\n  var _ray$2 = new Ray();\n\n  var _sphere$3 = new Sphere();\n\n  var _position$1 = new Vector3();\n\n  function Points(geometry, material) {\n    if (geometry === void 0) {\n      geometry = new BufferGeometry();\n    }\n\n    if (material === void 0) {\n      material = new PointsMaterial();\n    }\n\n    Object3D.call(this);\n    this.type = 'Points';\n    this.geometry = geometry;\n    this.material = material;\n    this.updateMorphTargets();\n  }\n\n  Points.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Points,\n    isPoints: true,\n    copy: function copy(source) {\n      Object3D.prototype.copy.call(this, source);\n      this.material = source.material;\n      this.geometry = source.geometry;\n      return this;\n    },\n    raycast: function raycast(raycaster, intersects) {\n      var geometry = this.geometry;\n      var matrixWorld = this.matrixWorld;\n      var threshold = raycaster.params.Points.threshold; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n      _sphere$3.copy(geometry.boundingSphere);\n\n      _sphere$3.applyMatrix4(matrixWorld);\n\n      _sphere$3.radius += threshold;\n      if (raycaster.ray.intersectsSphere(_sphere$3) === false) return; //\n\n      _inverseMatrix$2.copy(matrixWorld).invert();\n\n      _ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2);\n\n      var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n      var localThresholdSq = localThreshold * localThreshold;\n\n      if (geometry.isBufferGeometry) {\n        var index = geometry.index;\n        var attributes = geometry.attributes;\n        var positionAttribute = attributes.position;\n\n        if (index !== null) {\n          var indices = index.array;\n\n          for (var i = 0, il = indices.length; i < il; i++) {\n            var a = indices[i];\n\n            _position$1.fromBufferAttribute(positionAttribute, a);\n\n            testPoint(_position$1, a, localThresholdSq, matrixWorld, raycaster, intersects, this);\n          }\n        } else {\n          for (var _i = 0, l = positionAttribute.count; _i < l; _i++) {\n            _position$1.fromBufferAttribute(positionAttribute, _i);\n\n            testPoint(_position$1, _i, localThresholdSq, matrixWorld, raycaster, intersects, this);\n          }\n        }\n      } else {\n        console.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n      }\n    },\n    updateMorphTargets: function updateMorphTargets() {\n      var geometry = this.geometry;\n\n      if (geometry.isBufferGeometry) {\n        var morphAttributes = geometry.morphAttributes;\n        var keys = Object.keys(morphAttributes);\n\n        if (keys.length > 0) {\n          var morphAttribute = morphAttributes[keys[0]];\n\n          if (morphAttribute !== undefined) {\n            this.morphTargetInfluences = [];\n            this.morphTargetDictionary = {};\n\n            for (var m = 0, ml = morphAttribute.length; m < ml; m++) {\n              var name = morphAttribute[m].name || String(m);\n              this.morphTargetInfluences.push(0);\n              this.morphTargetDictionary[name] = m;\n            }\n          }\n        }\n      } else {\n        var morphTargets = geometry.morphTargets;\n\n        if (morphTargets !== undefined && morphTargets.length > 0) {\n          console.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n        }\n      }\n    }\n  });\n\n  function testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\n    var rayPointDistanceSq = _ray$2.distanceSqToPoint(point);\n\n    if (rayPointDistanceSq < localThresholdSq) {\n      var intersectPoint = new Vector3();\n\n      _ray$2.closestPointToPoint(point, intersectPoint);\n\n      intersectPoint.applyMatrix4(matrixWorld);\n      var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n      if (distance < raycaster.near || distance > raycaster.far) return;\n      intersects.push({\n        distance: distance,\n        distanceToRay: Math.sqrt(rayPointDistanceSq),\n        point: intersectPoint,\n        index: index,\n        face: null,\n        object: object\n      });\n    }\n  }\n\n  function VideoTexture(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    Texture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.format = format !== undefined ? format : RGBFormat;\n    this.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n    this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n    this.generateMipmaps = false;\n    var scope = this;\n\n    function updateVideo() {\n      scope.needsUpdate = true;\n      video.requestVideoFrameCallback(updateVideo);\n    }\n\n    if ('requestVideoFrameCallback' in video) {\n      video.requestVideoFrameCallback(updateVideo);\n    }\n  }\n\n  VideoTexture.prototype = Object.assign(Object.create(Texture.prototype), {\n    constructor: VideoTexture,\n    clone: function clone() {\n      return new this.constructor(this.image).copy(this);\n    },\n    isVideoTexture: true,\n    update: function update() {\n      var video = this.image;\n      var hasVideoFrameCallback = ('requestVideoFrameCallback' in video);\n\n      if (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\n        this.needsUpdate = true;\n      }\n    }\n  });\n\n  function CompressedTexture(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n    Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.image = {\n      width: width,\n      height: height\n    };\n    this.mipmaps = mipmaps; // no flipping for cube textures\n    // (also flipping doesn't work for compressed textures )\n\n    this.flipY = false; // can't generate mipmaps for compressed textures\n    // mips must be embedded in DDS files\n\n    this.generateMipmaps = false;\n  }\n\n  CompressedTexture.prototype = Object.create(Texture.prototype);\n  CompressedTexture.prototype.constructor = CompressedTexture;\n  CompressedTexture.prototype.isCompressedTexture = true;\n\n  function CanvasTexture(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    Texture.call(this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.needsUpdate = true;\n  }\n\n  CanvasTexture.prototype = Object.create(Texture.prototype);\n  CanvasTexture.prototype.constructor = CanvasTexture;\n  CanvasTexture.prototype.isCanvasTexture = true;\n\n  function DepthTexture(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n    format = format !== undefined ? format : DepthFormat;\n\n    if (format !== DepthFormat && format !== DepthStencilFormat) {\n      throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n    }\n\n    if (type === undefined && format === DepthFormat) type = UnsignedShortType;\n    if (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n    Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.image = {\n      width: width,\n      height: height\n    };\n    this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n    this.flipY = false;\n    this.generateMipmaps = false;\n  }\n\n  DepthTexture.prototype = Object.create(Texture.prototype);\n  DepthTexture.prototype.constructor = DepthTexture;\n  DepthTexture.prototype.isDepthTexture = true;\n\n  var CircleGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inheritsLoose(CircleGeometry, _BufferGeometry);\n\n    function CircleGeometry(radius, segments, thetaStart, thetaLength) {\n      var _this;\n\n      if (radius === void 0) {\n        radius = 1;\n      }\n\n      if (segments === void 0) {\n        segments = 8;\n      }\n\n      if (thetaStart === void 0) {\n        thetaStart = 0;\n      }\n\n      if (thetaLength === void 0) {\n        thetaLength = Math.PI * 2;\n      }\n\n      _this = _BufferGeometry.call(this) || this;\n      _this.type = 'CircleGeometry';\n      _this.parameters = {\n        radius: radius,\n        segments: segments,\n        thetaStart: thetaStart,\n        thetaLength: thetaLength\n      };\n      segments = Math.max(3, segments); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // helper variables\n\n      var vertex = new Vector3();\n      var uv = new Vector2(); // center point\n\n      vertices.push(0, 0, 0);\n      normals.push(0, 0, 1);\n      uvs.push(0.5, 0.5);\n\n      for (var s = 0, i = 3; s <= segments; s++, i += 3) {\n        var segment = thetaStart + s / segments * thetaLength; // vertex\n\n        vertex.x = radius * Math.cos(segment);\n        vertex.y = radius * Math.sin(segment);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normals.push(0, 0, 1); // uvs\n\n        uv.x = (vertices[i] / radius + 1) / 2;\n        uv.y = (vertices[i + 1] / radius + 1) / 2;\n        uvs.push(uv.x, uv.y);\n      } // indices\n\n\n      for (var _i = 1; _i <= segments; _i++) {\n        indices.push(_i, _i + 1, 0);\n      } // build geometry\n\n\n      _this.setIndex(indices);\n\n      _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n      return _this;\n    }\n\n    return CircleGeometry;\n  }(BufferGeometry);\n\n  var CylinderGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inheritsLoose(CylinderGeometry, _BufferGeometry);\n\n    function CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n      var _this;\n\n      if (radiusTop === void 0) {\n        radiusTop = 1;\n      }\n\n      if (radiusBottom === void 0) {\n        radiusBottom = 1;\n      }\n\n      if (height === void 0) {\n        height = 1;\n      }\n\n      if (radialSegments === void 0) {\n        radialSegments = 8;\n      }\n\n      if (heightSegments === void 0) {\n        heightSegments = 1;\n      }\n\n      if (openEnded === void 0) {\n        openEnded = false;\n      }\n\n      if (thetaStart === void 0) {\n        thetaStart = 0;\n      }\n\n      if (thetaLength === void 0) {\n        thetaLength = Math.PI * 2;\n      }\n\n      _this = _BufferGeometry.call(this) || this;\n      _this.type = 'CylinderGeometry';\n      _this.parameters = {\n        radiusTop: radiusTop,\n        radiusBottom: radiusBottom,\n        height: height,\n        radialSegments: radialSegments,\n        heightSegments: heightSegments,\n        openEnded: openEnded,\n        thetaStart: thetaStart,\n        thetaLength: thetaLength\n      };\n\n      var scope = _assertThisInitialized(_this);\n\n      radialSegments = Math.floor(radialSegments);\n      heightSegments = Math.floor(heightSegments); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // helper variables\n\n      var index = 0;\n      var indexArray = [];\n      var halfHeight = height / 2;\n      var groupStart = 0; // generate geometry\n\n      generateTorso();\n\n      if (openEnded === false) {\n        if (radiusTop > 0) generateCap(true);\n        if (radiusBottom > 0) generateCap(false);\n      } // build geometry\n\n\n      _this.setIndex(indices);\n\n      _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n      function generateTorso() {\n        var normal = new Vector3();\n        var vertex = new Vector3();\n        var groupCount = 0; // this will be used to calculate the normal\n\n        var slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n        for (var y = 0; y <= heightSegments; y++) {\n          var indexRow = [];\n          var v = y / heightSegments; // calculate the radius of the current row\n\n          var radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n          for (var x = 0; x <= radialSegments; x++) {\n            var u = x / radialSegments;\n            var theta = u * thetaLength + thetaStart;\n            var sinTheta = Math.sin(theta);\n            var cosTheta = Math.cos(theta); // vertex\n\n            vertex.x = radius * sinTheta;\n            vertex.y = -v * height + halfHeight;\n            vertex.z = radius * cosTheta;\n            vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n            normal.set(sinTheta, slope, cosTheta).normalize();\n            normals.push(normal.x, normal.y, normal.z); // uv\n\n            uvs.push(u, 1 - v); // save index of vertex in respective row\n\n            indexRow.push(index++);\n          } // now save vertices of the row in our index array\n\n\n          indexArray.push(indexRow);\n        } // generate indices\n\n\n        for (var _x = 0; _x < radialSegments; _x++) {\n          for (var _y = 0; _y < heightSegments; _y++) {\n            // we use the index array to access the correct indices\n            var a = indexArray[_y][_x];\n            var b = indexArray[_y + 1][_x];\n            var c = indexArray[_y + 1][_x + 1];\n            var d = indexArray[_y][_x + 1]; // faces\n\n            indices.push(a, b, d);\n            indices.push(b, c, d); // update group counter\n\n            groupCount += 6;\n          }\n        } // add a group to the geometry. this will ensure multi material support\n\n\n        scope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n        groupStart += groupCount;\n      }\n\n      function generateCap(top) {\n        // save the index of the first center vertex\n        var centerIndexStart = index;\n        var uv = new Vector2();\n        var vertex = new Vector3();\n        var groupCount = 0;\n        var radius = top === true ? radiusTop : radiusBottom;\n        var sign = top === true ? 1 : -1; // first we generate the center vertex data of the cap.\n        // because the geometry needs one set of uvs per face,\n        // we must generate a center vertex per face/segment\n\n        for (var x = 1; x <= radialSegments; x++) {\n          // vertex\n          vertices.push(0, halfHeight * sign, 0); // normal\n\n          normals.push(0, sign, 0); // uv\n\n          uvs.push(0.5, 0.5); // increase index\n\n          index++;\n        } // save the index of the last center vertex\n\n\n        var centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n        for (var _x2 = 0; _x2 <= radialSegments; _x2++) {\n          var u = _x2 / radialSegments;\n          var theta = u * thetaLength + thetaStart;\n          var cosTheta = Math.cos(theta);\n          var sinTheta = Math.sin(theta); // vertex\n\n          vertex.x = radius * sinTheta;\n          vertex.y = halfHeight * sign;\n          vertex.z = radius * cosTheta;\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n          normals.push(0, sign, 0); // uv\n\n          uv.x = cosTheta * 0.5 + 0.5;\n          uv.y = sinTheta * 0.5 * sign + 0.5;\n          uvs.push(uv.x, uv.y); // increase index\n\n          index++;\n        } // generate indices\n\n\n        for (var _x3 = 0; _x3 < radialSegments; _x3++) {\n          var c = centerIndexStart + _x3;\n          var i = centerIndexEnd + _x3;\n\n          if (top === true) {\n            // face top\n            indices.push(i, i + 1, c);\n          } else {\n            // face bottom\n            indices.push(i + 1, i, c);\n          }\n\n          groupCount += 3;\n        } // add a group to the geometry. this will ensure multi material support\n\n\n        scope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n        groupStart += groupCount;\n      }\n\n      return _this;\n    }\n\n    return CylinderGeometry;\n  }(BufferGeometry);\n\n  var ConeGeometry = /*#__PURE__*/function (_CylinderGeometry) {\n    _inheritsLoose(ConeGeometry, _CylinderGeometry);\n\n    function ConeGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n      var _this;\n\n      if (radius === void 0) {\n        radius = 1;\n      }\n\n      if (height === void 0) {\n        height = 1;\n      }\n\n      if (radialSegments === void 0) {\n        radialSegments = 8;\n      }\n\n      if (heightSegments === void 0) {\n        heightSegments = 1;\n      }\n\n      if (openEnded === void 0) {\n        openEnded = false;\n      }\n\n      if (thetaStart === void 0) {\n        thetaStart = 0;\n      }\n\n      if (thetaLength === void 0) {\n        thetaLength = Math.PI * 2;\n      }\n\n      _this = _CylinderGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) || this;\n      _this.type = 'ConeGeometry';\n      _this.parameters = {\n        radius: radius,\n        height: height,\n        radialSegments: radialSegments,\n        heightSegments: heightSegments,\n        openEnded: openEnded,\n        thetaStart: thetaStart,\n        thetaLength: thetaLength\n      };\n      return _this;\n    }\n\n    return ConeGeometry;\n  }(CylinderGeometry);\n\n  var PolyhedronGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inheritsLoose(PolyhedronGeometry, _BufferGeometry);\n\n    function PolyhedronGeometry(vertices, indices, radius, detail) {\n      var _this;\n\n      if (radius === void 0) {\n        radius = 1;\n      }\n\n      if (detail === void 0) {\n        detail = 0;\n      }\n\n      _this = _BufferGeometry.call(this) || this;\n      _this.type = 'PolyhedronGeometry';\n      _this.parameters = {\n        vertices: vertices,\n        indices: indices,\n        radius: radius,\n        detail: detail\n      }; // default buffer data\n\n      var vertexBuffer = [];\n      var uvBuffer = []; // the subdivision creates the vertex buffer data\n\n      subdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n      applyRadius(radius); // finally, create the uv data\n\n      generateUVs(); // build non-indexed geometry\n\n      _this.setAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n\n      _this.setAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n\n      _this.setAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n      if (detail === 0) {\n        _this.computeVertexNormals(); // flat normals\n\n      } else {\n        _this.normalizeNormals(); // smooth normals\n\n      } // helper functions\n\n\n      function subdivide(detail) {\n        var a = new Vector3();\n        var b = new Vector3();\n        var c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n        for (var i = 0; i < indices.length; i += 3) {\n          // get the vertices of the face\n          getVertexByIndex(indices[i + 0], a);\n          getVertexByIndex(indices[i + 1], b);\n          getVertexByIndex(indices[i + 2], c); // perform subdivision\n\n          subdivideFace(a, b, c, detail);\n        }\n      }\n\n      function subdivideFace(a, b, c, detail) {\n        var cols = detail + 1; // we use this multidimensional array as a data structure for creating the subdivision\n\n        var v = []; // construct all of the vertices for this subdivision\n\n        for (var i = 0; i <= cols; i++) {\n          v[i] = [];\n          var aj = a.clone().lerp(c, i / cols);\n          var bj = b.clone().lerp(c, i / cols);\n          var rows = cols - i;\n\n          for (var j = 0; j <= rows; j++) {\n            if (j === 0 && i === cols) {\n              v[i][j] = aj;\n            } else {\n              v[i][j] = aj.clone().lerp(bj, j / rows);\n            }\n          }\n        } // construct all of the faces\n\n\n        for (var _i = 0; _i < cols; _i++) {\n          for (var _j = 0; _j < 2 * (cols - _i) - 1; _j++) {\n            var k = Math.floor(_j / 2);\n\n            if (_j % 2 === 0) {\n              pushVertex(v[_i][k + 1]);\n              pushVertex(v[_i + 1][k]);\n              pushVertex(v[_i][k]);\n            } else {\n              pushVertex(v[_i][k + 1]);\n              pushVertex(v[_i + 1][k + 1]);\n              pushVertex(v[_i + 1][k]);\n            }\n          }\n        }\n      }\n\n      function applyRadius(radius) {\n        var vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n        for (var i = 0; i < vertexBuffer.length; i += 3) {\n          vertex.x = vertexBuffer[i + 0];\n          vertex.y = vertexBuffer[i + 1];\n          vertex.z = vertexBuffer[i + 2];\n          vertex.normalize().multiplyScalar(radius);\n          vertexBuffer[i + 0] = vertex.x;\n          vertexBuffer[i + 1] = vertex.y;\n          vertexBuffer[i + 2] = vertex.z;\n        }\n      }\n\n      function generateUVs() {\n        var vertex = new Vector3();\n\n        for (var i = 0; i < vertexBuffer.length; i += 3) {\n          vertex.x = vertexBuffer[i + 0];\n          vertex.y = vertexBuffer[i + 1];\n          vertex.z = vertexBuffer[i + 2];\n          var u = azimuth(vertex) / 2 / Math.PI + 0.5;\n          var v = inclination(vertex) / Math.PI + 0.5;\n          uvBuffer.push(u, 1 - v);\n        }\n\n        correctUVs();\n        correctSeam();\n      }\n\n      function correctSeam() {\n        // handle case when face straddles the seam, see #3269\n        for (var i = 0; i < uvBuffer.length; i += 6) {\n          // uv data of a single face\n          var x0 = uvBuffer[i + 0];\n          var x1 = uvBuffer[i + 2];\n          var x2 = uvBuffer[i + 4];\n          var max = Math.max(x0, x1, x2);\n          var min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n          if (max > 0.9 && min < 0.1) {\n            if (x0 < 0.2) uvBuffer[i + 0] += 1;\n            if (x1 < 0.2) uvBuffer[i + 2] += 1;\n            if (x2 < 0.2) uvBuffer[i + 4] += 1;\n          }\n        }\n      }\n\n      function pushVertex(vertex) {\n        vertexBuffer.push(vertex.x, vertex.y, vertex.z);\n      }\n\n      function getVertexByIndex(index, vertex) {\n        var stride = index * 3;\n        vertex.x = vertices[stride + 0];\n        vertex.y = vertices[stride + 1];\n        vertex.z = vertices[stride + 2];\n      }\n\n      function correctUVs() {\n        var a = new Vector3();\n        var b = new Vector3();\n        var c = new Vector3();\n        var centroid = new Vector3();\n        var uvA = new Vector2();\n        var uvB = new Vector2();\n        var uvC = new Vector2();\n\n        for (var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n          a.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n          b.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n          c.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n          uvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n          uvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n          uvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n          centroid.copy(a).add(b).add(c).divideScalar(3);\n          var azi = azimuth(centroid);\n          correctUV(uvA, j + 0, a, azi);\n          correctUV(uvB, j + 2, b, azi);\n          correctUV(uvC, j + 4, c, azi);\n        }\n      }\n\n      function correctUV(uv, stride, vector, azimuth) {\n        if (azimuth < 0 && uv.x === 1) {\n          uvBuffer[stride] = uv.x - 1;\n        }\n\n        if (vector.x === 0 && vector.z === 0) {\n          uvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n        }\n      } // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n      function azimuth(vector) {\n        return Math.atan2(vector.z, -vector.x);\n      } // Angle above the XZ plane.\n\n\n      function inclination(vector) {\n        return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n      }\n\n      return _this;\n    }\n\n    return PolyhedronGeometry;\n  }(BufferGeometry);\n\n  var DodecahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry) {\n    _inheritsLoose(DodecahedronGeometry, _PolyhedronGeometry);\n\n    function DodecahedronGeometry(radius, detail) {\n      var _this;\n\n      if (radius === void 0) {\n        radius = 1;\n      }\n\n      if (detail === void 0) {\n        detail = 0;\n      }\n\n      var t = (1 + Math.sqrt(5)) / 2;\n      var r = 1 / t;\n      var vertices = [// (±1, ±1, ±1)\n      -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n      0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n      -r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n      -t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n      var indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n      _this = _PolyhedronGeometry.call(this, vertices, indices, radius, detail) || this;\n      _this.type = 'DodecahedronGeometry';\n      _this.parameters = {\n        radius: radius,\n        detail: detail\n      };\n      return _this;\n    }\n\n    return DodecahedronGeometry;\n  }(PolyhedronGeometry);\n\n  var _v0$2 = new Vector3();\n\n  var _v1$5 = new Vector3();\n\n  var _normal$1 = new Vector3();\n\n  var _triangle = new Triangle();\n\n  var EdgesGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inheritsLoose(EdgesGeometry, _BufferGeometry);\n\n    function EdgesGeometry(geometry, thresholdAngle) {\n      var _this;\n\n      _this = _BufferGeometry.call(this) || this;\n      _this.type = 'EdgesGeometry';\n      _this.parameters = {\n        thresholdAngle: thresholdAngle\n      };\n      thresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1;\n\n      if (geometry.isGeometry === true) {\n        console.error('THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n        return _assertThisInitialized(_this);\n      }\n\n      var precisionPoints = 4;\n      var precision = Math.pow(10, precisionPoints);\n      var thresholdDot = Math.cos(MathUtils.DEG2RAD * thresholdAngle);\n      var indexAttr = geometry.getIndex();\n      var positionAttr = geometry.getAttribute('position');\n      var indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n      var indexArr = [0, 0, 0];\n      var vertKeys = ['a', 'b', 'c'];\n      var hashes = new Array(3);\n      var edgeData = {};\n      var vertices = [];\n\n      for (var i = 0; i < indexCount; i += 3) {\n        if (indexAttr) {\n          indexArr[0] = indexAttr.getX(i);\n          indexArr[1] = indexAttr.getX(i + 1);\n          indexArr[2] = indexAttr.getX(i + 2);\n        } else {\n          indexArr[0] = i;\n          indexArr[1] = i + 1;\n          indexArr[2] = i + 2;\n        }\n\n        var a = _triangle.a,\n            b = _triangle.b,\n            c = _triangle.c;\n        a.fromBufferAttribute(positionAttr, indexArr[0]);\n        b.fromBufferAttribute(positionAttr, indexArr[1]);\n        c.fromBufferAttribute(positionAttr, indexArr[2]);\n\n        _triangle.getNormal(_normal$1); // create hashes for the edge from the vertices\n\n\n        hashes[0] = Math.round(a.x * precision) + \",\" + Math.round(a.y * precision) + \",\" + Math.round(a.z * precision);\n        hashes[1] = Math.round(b.x * precision) + \",\" + Math.round(b.y * precision) + \",\" + Math.round(b.z * precision);\n        hashes[2] = Math.round(c.x * precision) + \",\" + Math.round(c.y * precision) + \",\" + Math.round(c.z * precision); // skip degenerate triangles\n\n        if (hashes[0] === hashes[1] || hashes[1] === hashes[2] || hashes[2] === hashes[0]) {\n          continue;\n        } // iterate over every edge\n\n\n        for (var j = 0; j < 3; j++) {\n          // get the first and next vertex making up the edge\n          var jNext = (j + 1) % 3;\n          var vecHash0 = hashes[j];\n          var vecHash1 = hashes[jNext];\n          var v0 = _triangle[vertKeys[j]];\n          var v1 = _triangle[vertKeys[jNext]];\n          var hash = vecHash0 + \"_\" + vecHash1;\n          var reverseHash = vecHash1 + \"_\" + vecHash0;\n\n          if (reverseHash in edgeData && edgeData[reverseHash]) {\n            // if we found a sibling edge add it into the vertex array if\n            // it meets the angle threshold and delete the edge from the map.\n            if (_normal$1.dot(edgeData[reverseHash].normal) <= thresholdDot) {\n              vertices.push(v0.x, v0.y, v0.z);\n              vertices.push(v1.x, v1.y, v1.z);\n            }\n\n            edgeData[reverseHash] = null;\n          } else if (!(hash in edgeData)) {\n            // if we've already got an edge here then skip adding a new one\n            edgeData[hash] = {\n              index0: indexArr[j],\n              index1: indexArr[jNext],\n              normal: _normal$1.clone()\n            };\n          }\n        }\n      } // iterate over all remaining, unmatched edges and add them to the vertex array\n\n\n      for (var key in edgeData) {\n        if (edgeData[key]) {\n          var _edgeData$key = edgeData[key],\n              index0 = _edgeData$key.index0,\n              index1 = _edgeData$key.index1;\n\n          _v0$2.fromBufferAttribute(positionAttr, index0);\n\n          _v1$5.fromBufferAttribute(positionAttr, index1);\n\n          vertices.push(_v0$2.x, _v0$2.y, _v0$2.z);\n          vertices.push(_v1$5.x, _v1$5.y, _v1$5.z);\n        }\n      }\n\n      _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      return _this;\n    }\n\n    return EdgesGeometry;\n  }(BufferGeometry);\n  /**\n   * Port from https://github.com/mapbox/earcut (v2.2.2)\n   */\n\n\n  var Earcut = {\n    triangulate: function triangulate(data, holeIndices, dim) {\n      dim = dim || 2;\n      var hasHoles = holeIndices && holeIndices.length;\n      var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n      var outerNode = linkedList(data, 0, outerLen, dim, true);\n      var triangles = [];\n      if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n      var minX, minY, maxX, maxY, x, y, invSize;\n      if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n      if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n          x = data[i];\n          y = data[i + 1];\n          if (x < minX) minX = x;\n          if (y < minY) minY = y;\n          if (x > maxX) maxX = x;\n          if (y > maxY) maxY = y;\n        } // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n      }\n\n      earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n      return triangles;\n    }\n  }; // create a circular doubly linked list from polygon points in the specified winding order\n\n  function linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === signedArea(data, start, end, dim) > 0) {\n      for (i = start; i < end; i += dim) {\n        last = insertNode(i, data[i], data[i + 1], last);\n      }\n    } else {\n      for (i = end - dim; i >= start; i -= dim) {\n        last = insertNode(i, data[i], data[i + 1], last);\n      }\n    }\n\n    if (last && equals(last, last.next)) {\n      removeNode(last);\n      last = last.next;\n    }\n\n    return last;\n  } // eliminate colinear or duplicate points\n\n\n  function filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n    var p = start,\n        again;\n\n    do {\n      again = false;\n\n      if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n        removeNode(p);\n        p = end = p.prev;\n        if (p === p.next) break;\n        again = true;\n      } else {\n        p = p.next;\n      }\n    } while (again || p !== end);\n\n    return end;\n  } // main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\n  function earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return; // interlink polygon nodes in z-order\n\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n    var stop = ear,\n        prev,\n        next; // iterate through ears, slicing them one by one\n\n    while (ear.prev !== ear.next) {\n      prev = ear.prev;\n      next = ear.next;\n\n      if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n        // cut off the triangle\n        triangles.push(prev.i / dim);\n        triangles.push(ear.i / dim);\n        triangles.push(next.i / dim);\n        removeNode(ear); // skipping the next vertex leads to less sliver triangles\n\n        ear = next.next;\n        stop = next.next;\n        continue;\n      }\n\n      ear = next; // if we looped through the whole remaining polygon and can't find any more ears\n\n      if (ear === stop) {\n        // try filtering points and slicing again\n        if (!pass) {\n          earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\n        } else if (pass === 1) {\n          ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n          earcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\n        } else if (pass === 2) {\n          splitEarcut(ear, triangles, dim, minX, minY, invSize);\n        }\n\n        break;\n      }\n    }\n  } // check whether a polygon node forms a valid ear with adjacent nodes\n\n\n  function isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n    // now make sure we don't have other points inside the potential ear\n\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n      if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n      p = p.next;\n    }\n\n    return true;\n  }\n\n  function isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n    // triangle bbox; min & max are calculated like this for speed\n\n    var minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n        minTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n        maxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n        maxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\n\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n    var p = ear.prevZ,\n        n = ear.nextZ; // look for points inside the triangle in both directions\n\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n      if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n      p = p.prevZ;\n      if (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n      n = n.nextZ;\n    } // look for remaining points in decreasing z-order\n\n\n    while (p && p.z >= minZ) {\n      if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n      p = p.prevZ;\n    } // look for remaining points in increasing z-order\n\n\n    while (n && n.z <= maxZ) {\n      if (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n      n = n.nextZ;\n    }\n\n    return true;\n  } // go through all polygon nodes and cure small local self-intersections\n\n\n  function cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n\n    do {\n      var a = p.prev,\n          b = p.next.next;\n\n      if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n        triangles.push(a.i / dim);\n        triangles.push(p.i / dim);\n        triangles.push(b.i / dim); // remove two nodes involved\n\n        removeNode(p);\n        removeNode(p.next);\n        p = start = b;\n      }\n\n      p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n  } // try splitting polygon into two and triangulate them independently\n\n\n  function splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n\n    do {\n      var b = a.next.next;\n\n      while (b !== a.prev) {\n        if (a.i !== b.i && isValidDiagonal(a, b)) {\n          // split the polygon in two by the diagonal\n          var c = splitPolygon(a, b); // filter colinear points around the cuts\n\n          a = filterPoints(a, a.next);\n          c = filterPoints(c, c.next); // run earcut on each half\n\n          earcutLinked(a, triangles, dim, minX, minY, invSize);\n          earcutLinked(c, triangles, dim, minX, minY, invSize);\n          return;\n        }\n\n        b = b.next;\n      }\n\n      a = a.next;\n    } while (a !== start);\n  } // link every hole into the outer loop, producing a single-ring polygon without holes\n\n\n  function eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [];\n    var i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n      start = holeIndices[i] * dim;\n      end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n      list = linkedList(data, start, end, dim, false);\n      if (list === list.next) list.steiner = true;\n      queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX); // process holes from left to right\n\n    for (i = 0; i < queue.length; i++) {\n      eliminateHole(queue[i], outerNode);\n      outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n  }\n\n  function compareX(a, b) {\n    return a.x - b.x;\n  } // find a bridge between vertices that connects hole with an outer ring and and link it\n\n\n  function eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n\n    if (outerNode) {\n      var b = splitPolygon(outerNode, hole); // filter collinear points around the cuts\n\n      filterPoints(outerNode, outerNode.next);\n      filterPoints(b, b.next);\n    }\n  } // David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\n  function findHoleBridge(hole, outerNode) {\n    var p = outerNode;\n    var hx = hole.x;\n    var hy = hole.y;\n    var qx = -Infinity,\n        m; // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n\n    do {\n      if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n        var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n        if (x <= hx && x > qx) {\n          qx = x;\n\n          if (x === hx) {\n            if (hy === p.y) return p;\n            if (hy === p.next.y) return p.next;\n          }\n\n          m = p.x < p.next.x ? p : p.next;\n        }\n      }\n\n      p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y;\n    var tanMin = Infinity,\n        tan;\n    p = m;\n\n    do {\n      if (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n        tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n        if (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\n          m = p;\n          tanMin = tan;\n        }\n      }\n\n      p = p.next;\n    } while (p !== stop);\n\n    return m;\n  } // whether sector in vertex m contains sector in vertex p in the same coordinates\n\n\n  function sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n  } // interlink polygon nodes in z-order\n\n\n  function indexCurve(start, minX, minY, invSize) {\n    var p = start;\n\n    do {\n      if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n      p.prevZ = p.prev;\n      p.nextZ = p.next;\n      p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n    sortLinked(p);\n  } // Simon Tatham's linked list merge sort algorithm\n  // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\n  function sortLinked(list) {\n    var i,\n        p,\n        q,\n        e,\n        tail,\n        numMerges,\n        pSize,\n        qSize,\n        inSize = 1;\n\n    do {\n      p = list;\n      list = null;\n      tail = null;\n      numMerges = 0;\n\n      while (p) {\n        numMerges++;\n        q = p;\n        pSize = 0;\n\n        for (i = 0; i < inSize; i++) {\n          pSize++;\n          q = q.nextZ;\n          if (!q) break;\n        }\n\n        qSize = inSize;\n\n        while (pSize > 0 || qSize > 0 && q) {\n          if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n            e = p;\n            p = p.nextZ;\n            pSize--;\n          } else {\n            e = q;\n            q = q.nextZ;\n            qSize--;\n          }\n\n          if (tail) tail.nextZ = e;else list = e;\n          e.prevZ = tail;\n          tail = e;\n        }\n\n        p = q;\n      }\n\n      tail.nextZ = null;\n      inSize *= 2;\n    } while (numMerges > 1);\n\n    return list;\n  } // z-order of a point given coords and inverse of the longer side of data bbox\n\n\n  function zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n    x = (x | x << 8) & 0x00FF00FF;\n    x = (x | x << 4) & 0x0F0F0F0F;\n    x = (x | x << 2) & 0x33333333;\n    x = (x | x << 1) & 0x55555555;\n    y = (y | y << 8) & 0x00FF00FF;\n    y = (y | y << 4) & 0x0F0F0F0F;\n    y = (y | y << 2) & 0x33333333;\n    y = (y | y << 1) & 0x55555555;\n    return x | y << 1;\n  } // find the leftmost node of a polygon ring\n\n\n  function getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n\n    do {\n      if (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\n      p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n  } // check if a point lies within a convex triangle\n\n\n  function pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n  } // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\n  function isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && ( // dones't intersect other edges\n    locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && ( // locally visible\n    area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n    equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n  } // signed area of a triangle\n\n\n  function area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n  } // check if two points are equal\n\n\n  function equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n  } // check if two segments intersect\n\n\n  function intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n  } // for collinear points p, q, r, check if point q lies on segment pr\n\n\n  function onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n  }\n\n  function sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n  } // check if a polygon diagonal intersects any polygon segments\n\n\n  function intersectsPolygon(a, b) {\n    var p = a;\n\n    do {\n      if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n      p = p.next;\n    } while (p !== a);\n\n    return false;\n  } // check if a polygon diagonal is locally inside the polygon\n\n\n  function locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n  } // check if the middle point of a polygon diagonal is inside the polygon\n\n\n  function middleInside(a, b) {\n    var p = a,\n        inside = false;\n    var px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n\n    do {\n      if (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n      p = p.next;\n    } while (p !== a);\n\n    return inside;\n  } // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n  // if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\n  function splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n    a.next = b;\n    b.prev = a;\n    a2.next = an;\n    an.prev = a2;\n    b2.next = a2;\n    a2.prev = b2;\n    bp.next = b2;\n    b2.prev = bp;\n    return b2;\n  } // create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\n  function insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n      p.prev = p;\n      p.next = p;\n    } else {\n      p.next = last.next;\n      p.prev = last;\n      last.next.prev = p;\n      last.next = p;\n    }\n\n    return p;\n  }\n\n  function removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n  }\n\n  function Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i; // vertex coordinates\n\n    this.x = x;\n    this.y = y; // previous and next vertex nodes in a polygon ring\n\n    this.prev = null;\n    this.next = null; // z-order curve value\n\n    this.z = null; // previous and next nodes in z-order\n\n    this.prevZ = null;\n    this.nextZ = null; // indicates whether this is a steiner point\n\n    this.steiner = false;\n  }\n\n  function signedArea(data, start, end, dim) {\n    var sum = 0;\n\n    for (var i = start, j = end - dim; i < end; i += dim) {\n      sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n      j = i;\n    }\n\n    return sum;\n  }\n\n  var ShapeUtils = {\n    // calculate area of the contour polygon\n    area: function area(contour) {\n      var n = contour.length;\n      var a = 0.0;\n\n      for (var p = n - 1, q = 0; q < n; p = q++) {\n        a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n      }\n\n      return a * 0.5;\n    },\n    isClockWise: function isClockWise(pts) {\n      return ShapeUtils.area(pts) < 0;\n    },\n    triangulateShape: function triangulateShape(contour, holes) {\n      var vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\n      var holeIndices = []; // array of hole indices\n\n      var faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n      removeDupEndPts(contour);\n      addContour(vertices, contour); //\n\n      var holeIndex = contour.length;\n      holes.forEach(removeDupEndPts);\n\n      for (var i = 0; i < holes.length; i++) {\n        holeIndices.push(holeIndex);\n        holeIndex += holes[i].length;\n        addContour(vertices, holes[i]);\n      } //\n\n\n      var triangles = Earcut.triangulate(vertices, holeIndices); //\n\n      for (var _i = 0; _i < triangles.length; _i += 3) {\n        faces.push(triangles.slice(_i, _i + 3));\n      }\n\n      return faces;\n    }\n  };\n\n  function removeDupEndPts(points) {\n    var l = points.length;\n\n    if (l > 2 && points[l - 1].equals(points[0])) {\n      points.pop();\n    }\n  }\n\n  function addContour(vertices, contour) {\n    for (var i = 0; i < contour.length; i++) {\n      vertices.push(contour[i].x);\n      vertices.push(contour[i].y);\n    }\n  }\n\n  var ExtrudeGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inheritsLoose(ExtrudeGeometry, _BufferGeometry);\n\n    function ExtrudeGeometry(shapes, options) {\n      var _this;\n\n      _this = _BufferGeometry.call(this) || this;\n      _this.type = 'ExtrudeGeometry';\n      _this.parameters = {\n        shapes: shapes,\n        options: options\n      };\n      shapes = Array.isArray(shapes) ? shapes : [shapes];\n\n      var scope = _assertThisInitialized(_this);\n\n      var verticesArray = [];\n      var uvArray = [];\n\n      for (var i = 0, l = shapes.length; i < l; i++) {\n        var shape = shapes[i];\n        addShape(shape);\n      } // build geometry\n\n\n      _this.setAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n\n      _this.setAttribute('uv', new Float32BufferAttribute(uvArray, 2));\n\n      _this.computeVertexNormals(); // functions\n\n\n      function addShape(shape) {\n        var placeholder = []; // options\n\n        var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n        var steps = options.steps !== undefined ? options.steps : 1;\n        var depth = options.depth !== undefined ? options.depth : 100;\n        var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n        var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n        var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n        var bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n        var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n        var extrudePath = options.extrudePath;\n        var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\n\n        if (options.amount !== undefined) {\n          console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\n          depth = options.amount;\n        } //\n\n\n        var extrudePts,\n            extrudeByPath = false;\n        var splineTube, binormal, normal, position2;\n\n        if (extrudePath) {\n          extrudePts = extrudePath.getSpacedPoints(steps);\n          extrudeByPath = true;\n          bevelEnabled = false; // bevels not supported for path extrusion\n          // SETUP TNB variables\n          // TODO1 - have a .isClosed in spline?\n\n          splineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n          binormal = new Vector3();\n          normal = new Vector3();\n          position2 = new Vector3();\n        } // Safeguards if bevels are not enabled\n\n\n        if (!bevelEnabled) {\n          bevelSegments = 0;\n          bevelThickness = 0;\n          bevelSize = 0;\n          bevelOffset = 0;\n        } // Variables initialization\n\n\n        var shapePoints = shape.extractPoints(curveSegments);\n        var vertices = shapePoints.shape;\n        var holes = shapePoints.holes;\n        var reverse = !ShapeUtils.isClockWise(vertices);\n\n        if (reverse) {\n          vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n          for (var h = 0, hl = holes.length; h < hl; h++) {\n            var ahole = holes[h];\n\n            if (ShapeUtils.isClockWise(ahole)) {\n              holes[h] = ahole.reverse();\n            }\n          }\n        }\n\n        var faces = ShapeUtils.triangulateShape(vertices, holes);\n        /* Vertices */\n\n        var contour = vertices; // vertices has all points but contour has only points of circumference\n\n        for (var _h = 0, _hl = holes.length; _h < _hl; _h++) {\n          var _ahole = holes[_h];\n          vertices = vertices.concat(_ahole);\n        }\n\n        function scalePt2(pt, vec, size) {\n          if (!vec) console.error('THREE.ExtrudeGeometry: vec does not exist');\n          return vec.clone().multiplyScalar(size).add(pt);\n        }\n\n        var vlen = vertices.length,\n            flen = faces.length; // Find directions for point movement\n\n        function getBevelVec(inPt, inPrev, inNext) {\n          // computes for inPt the corresponding point inPt' on a new contour\n          //\t shifted by 1 unit (length of normalized vector) to the left\n          // if we walk along contour clockwise, this new contour is outside the old one\n          //\n          // inPt' is the intersection of the two lines parallel to the two\n          //\tadjacent edges of inPt at a distance of 1 unit on the left side.\n          var v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n          // good reading for geometry algorithms (here: line-line intersection)\n          // http://geomalgorithms.com/a05-_intersect-1.html\n\n          var v_prev_x = inPt.x - inPrev.x,\n              v_prev_y = inPt.y - inPrev.y;\n          var v_next_x = inNext.x - inPt.x,\n              v_next_y = inNext.y - inPt.y;\n          var v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n          var collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n          if (Math.abs(collinear0) > Number.EPSILON) {\n            // not collinear\n            // length of vectors for normalizing\n            var v_prev_len = Math.sqrt(v_prev_lensq);\n            var v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n            var ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n            var ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n            var ptNextShift_x = inNext.x - v_next_y / v_next_len;\n            var ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n            var sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n            v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n            v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n            //\tbut prevent crazy spikes\n\n            var v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n            if (v_trans_lensq <= 2) {\n              return new Vector2(v_trans_x, v_trans_y);\n            } else {\n              shrink_by = Math.sqrt(v_trans_lensq / 2);\n            }\n          } else {\n            // handle special case of collinear edges\n            var direction_eq = false; // assumes: opposite\n\n            if (v_prev_x > Number.EPSILON) {\n              if (v_next_x > Number.EPSILON) {\n                direction_eq = true;\n              }\n            } else {\n              if (v_prev_x < -Number.EPSILON) {\n                if (v_next_x < -Number.EPSILON) {\n                  direction_eq = true;\n                }\n              } else {\n                if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n                  direction_eq = true;\n                }\n              }\n            }\n\n            if (direction_eq) {\n              // console.log(\"Warning: lines are a straight sequence\");\n              v_trans_x = -v_prev_y;\n              v_trans_y = v_prev_x;\n              shrink_by = Math.sqrt(v_prev_lensq);\n            } else {\n              // console.log(\"Warning: lines are a straight spike\");\n              v_trans_x = v_prev_x;\n              v_trans_y = v_prev_y;\n              shrink_by = Math.sqrt(v_prev_lensq / 2);\n            }\n          }\n\n          return new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n        }\n\n        var contourMovements = [];\n\n        for (var _i = 0, il = contour.length, j = il - 1, k = _i + 1; _i < il; _i++, j++, k++) {\n          if (j === il) j = 0;\n          if (k === il) k = 0; //\t(j)---(i)---(k)\n          // console.log('i,j,k', i, j , k)\n\n          contourMovements[_i] = getBevelVec(contour[_i], contour[j], contour[k]);\n        }\n\n        var holesMovements = [];\n        var oneHoleMovements,\n            verticesMovements = contourMovements.concat();\n\n        for (var _h2 = 0, _hl2 = holes.length; _h2 < _hl2; _h2++) {\n          var _ahole2 = holes[_h2];\n          oneHoleMovements = [];\n\n          for (var _i2 = 0, _il = _ahole2.length, _j = _il - 1, _k = _i2 + 1; _i2 < _il; _i2++, _j++, _k++) {\n            if (_j === _il) _j = 0;\n            if (_k === _il) _k = 0; //\t(j)---(i)---(k)\n\n            oneHoleMovements[_i2] = getBevelVec(_ahole2[_i2], _ahole2[_j], _ahole2[_k]);\n          }\n\n          holesMovements.push(oneHoleMovements);\n          verticesMovements = verticesMovements.concat(oneHoleMovements);\n        } // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n        for (var b = 0; b < bevelSegments; b++) {\n          //for ( b = bevelSegments; b > 0; b -- ) {\n          var t = b / bevelSegments;\n          var z = bevelThickness * Math.cos(t * Math.PI / 2);\n\n          var _bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\n          for (var _i3 = 0, _il2 = contour.length; _i3 < _il2; _i3++) {\n            var vert = scalePt2(contour[_i3], contourMovements[_i3], _bs);\n            v(vert.x, vert.y, -z);\n          } // expand holes\n\n\n          for (var _h3 = 0, _hl3 = holes.length; _h3 < _hl3; _h3++) {\n            var _ahole3 = holes[_h3];\n            oneHoleMovements = holesMovements[_h3];\n\n            for (var _i4 = 0, _il3 = _ahole3.length; _i4 < _il3; _i4++) {\n              var _vert = scalePt2(_ahole3[_i4], oneHoleMovements[_i4], _bs);\n\n              v(_vert.x, _vert.y, -z);\n            }\n          }\n        }\n\n        var bs = bevelSize + bevelOffset; // Back facing vertices\n\n        for (var _i5 = 0; _i5 < vlen; _i5++) {\n          var _vert2 = bevelEnabled ? scalePt2(vertices[_i5], verticesMovements[_i5], bs) : vertices[_i5];\n\n          if (!extrudeByPath) {\n            v(_vert2.x, _vert2.y, 0);\n          } else {\n            // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n            normal.copy(splineTube.normals[0]).multiplyScalar(_vert2.x);\n            binormal.copy(splineTube.binormals[0]).multiplyScalar(_vert2.y);\n            position2.copy(extrudePts[0]).add(normal).add(binormal);\n            v(position2.x, position2.y, position2.z);\n          }\n        } // Add stepped vertices...\n        // Including front facing vertices\n\n\n        for (var s = 1; s <= steps; s++) {\n          for (var _i6 = 0; _i6 < vlen; _i6++) {\n            var _vert3 = bevelEnabled ? scalePt2(vertices[_i6], verticesMovements[_i6], bs) : vertices[_i6];\n\n            if (!extrudeByPath) {\n              v(_vert3.x, _vert3.y, depth / steps * s);\n            } else {\n              // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n              normal.copy(splineTube.normals[s]).multiplyScalar(_vert3.x);\n              binormal.copy(splineTube.binormals[s]).multiplyScalar(_vert3.y);\n              position2.copy(extrudePts[s]).add(normal).add(binormal);\n              v(position2.x, position2.y, position2.z);\n            }\n          }\n        } // Add bevel segments planes\n        //for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n        for (var _b = bevelSegments - 1; _b >= 0; _b--) {\n          var _t = _b / bevelSegments;\n\n          var _z = bevelThickness * Math.cos(_t * Math.PI / 2);\n\n          var _bs2 = bevelSize * Math.sin(_t * Math.PI / 2) + bevelOffset; // contract shape\n\n\n          for (var _i7 = 0, _il4 = contour.length; _i7 < _il4; _i7++) {\n            var _vert4 = scalePt2(contour[_i7], contourMovements[_i7], _bs2);\n\n            v(_vert4.x, _vert4.y, depth + _z);\n          } // expand holes\n\n\n          for (var _h4 = 0, _hl4 = holes.length; _h4 < _hl4; _h4++) {\n            var _ahole4 = holes[_h4];\n            oneHoleMovements = holesMovements[_h4];\n\n            for (var _i8 = 0, _il5 = _ahole4.length; _i8 < _il5; _i8++) {\n              var _vert5 = scalePt2(_ahole4[_i8], oneHoleMovements[_i8], _bs2);\n\n              if (!extrudeByPath) {\n                v(_vert5.x, _vert5.y, depth + _z);\n              } else {\n                v(_vert5.x, _vert5.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + _z);\n              }\n            }\n          }\n        }\n        /* Faces */\n        // Top and bottom faces\n\n\n        buildLidFaces(); // Sides faces\n\n        buildSideFaces(); /////\tInternal functions\n\n        function buildLidFaces() {\n          var start = verticesArray.length / 3;\n\n          if (bevelEnabled) {\n            var layer = 0; // steps + 1\n\n            var offset = vlen * layer; // Bottom faces\n\n            for (var _i9 = 0; _i9 < flen; _i9++) {\n              var face = faces[_i9];\n              f3(face[2] + offset, face[1] + offset, face[0] + offset);\n            }\n\n            layer = steps + bevelSegments * 2;\n            offset = vlen * layer; // Top faces\n\n            for (var _i10 = 0; _i10 < flen; _i10++) {\n              var _face = faces[_i10];\n              f3(_face[0] + offset, _face[1] + offset, _face[2] + offset);\n            }\n          } else {\n            // Bottom faces\n            for (var _i11 = 0; _i11 < flen; _i11++) {\n              var _face2 = faces[_i11];\n              f3(_face2[2], _face2[1], _face2[0]);\n            } // Top faces\n\n\n            for (var _i12 = 0; _i12 < flen; _i12++) {\n              var _face3 = faces[_i12];\n              f3(_face3[0] + vlen * steps, _face3[1] + vlen * steps, _face3[2] + vlen * steps);\n            }\n          }\n\n          scope.addGroup(start, verticesArray.length / 3 - start, 0);\n        } // Create faces for the z-sides of the shape\n\n\n        function buildSideFaces() {\n          var start = verticesArray.length / 3;\n          var layeroffset = 0;\n          sidewalls(contour, layeroffset);\n          layeroffset += contour.length;\n\n          for (var _h5 = 0, _hl5 = holes.length; _h5 < _hl5; _h5++) {\n            var _ahole5 = holes[_h5];\n            sidewalls(_ahole5, layeroffset); //, true\n\n            layeroffset += _ahole5.length;\n          }\n\n          scope.addGroup(start, verticesArray.length / 3 - start, 1);\n        }\n\n        function sidewalls(contour, layeroffset) {\n          var i = contour.length;\n\n          while (--i >= 0) {\n            var _j2 = i;\n\n            var _k2 = i - 1;\n\n            if (_k2 < 0) _k2 = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n            for (var _s = 0, sl = steps + bevelSegments * 2; _s < sl; _s++) {\n              var slen1 = vlen * _s;\n              var slen2 = vlen * (_s + 1);\n\n              var a = layeroffset + _j2 + slen1,\n                  _b2 = layeroffset + _k2 + slen1,\n                  c = layeroffset + _k2 + slen2,\n                  d = layeroffset + _j2 + slen2;\n\n              f4(a, _b2, c, d);\n            }\n          }\n        }\n\n        function v(x, y, z) {\n          placeholder.push(x);\n          placeholder.push(y);\n          placeholder.push(z);\n        }\n\n        function f3(a, b, c) {\n          addVertex(a);\n          addVertex(b);\n          addVertex(c);\n          var nextIndex = verticesArray.length / 3;\n          var uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n          addUV(uvs[0]);\n          addUV(uvs[1]);\n          addUV(uvs[2]);\n        }\n\n        function f4(a, b, c, d) {\n          addVertex(a);\n          addVertex(b);\n          addVertex(d);\n          addVertex(b);\n          addVertex(c);\n          addVertex(d);\n          var nextIndex = verticesArray.length / 3;\n          var uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n          addUV(uvs[0]);\n          addUV(uvs[1]);\n          addUV(uvs[3]);\n          addUV(uvs[1]);\n          addUV(uvs[2]);\n          addUV(uvs[3]);\n        }\n\n        function addVertex(index) {\n          verticesArray.push(placeholder[index * 3 + 0]);\n          verticesArray.push(placeholder[index * 3 + 1]);\n          verticesArray.push(placeholder[index * 3 + 2]);\n        }\n\n        function addUV(vector2) {\n          uvArray.push(vector2.x);\n          uvArray.push(vector2.y);\n        }\n      }\n\n      return _this;\n    }\n\n    var _proto = ExtrudeGeometry.prototype;\n\n    _proto.toJSON = function toJSON() {\n      var data = BufferGeometry.prototype.toJSON.call(this);\n      var shapes = this.parameters.shapes;\n      var options = this.parameters.options;\n      return _toJSON(shapes, options, data);\n    };\n\n    return ExtrudeGeometry;\n  }(BufferGeometry);\n\n  var WorldUVGenerator = {\n    generateTopUV: function generateTopUV(geometry, vertices, indexA, indexB, indexC) {\n      var a_x = vertices[indexA * 3];\n      var a_y = vertices[indexA * 3 + 1];\n      var b_x = vertices[indexB * 3];\n      var b_y = vertices[indexB * 3 + 1];\n      var c_x = vertices[indexC * 3];\n      var c_y = vertices[indexC * 3 + 1];\n      return [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n    },\n    generateSideWallUV: function generateSideWallUV(geometry, vertices, indexA, indexB, indexC, indexD) {\n      var a_x = vertices[indexA * 3];\n      var a_y = vertices[indexA * 3 + 1];\n      var a_z = vertices[indexA * 3 + 2];\n      var b_x = vertices[indexB * 3];\n      var b_y = vertices[indexB * 3 + 1];\n      var b_z = vertices[indexB * 3 + 2];\n      var c_x = vertices[indexC * 3];\n      var c_y = vertices[indexC * 3 + 1];\n      var c_z = vertices[indexC * 3 + 2];\n      var d_x = vertices[indexD * 3];\n      var d_y = vertices[indexD * 3 + 1];\n      var d_z = vertices[indexD * 3 + 2];\n\n      if (Math.abs(a_y - b_y) < 0.01) {\n        return [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n      } else {\n        return [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n      }\n    }\n  };\n\n  function _toJSON(shapes, options, data) {\n    data.shapes = [];\n\n    if (Array.isArray(shapes)) {\n      for (var i = 0, l = shapes.length; i < l; i++) {\n        var shape = shapes[i];\n        data.shapes.push(shape.uuid);\n      }\n    } else {\n      data.shapes.push(shapes.uuid);\n    }\n\n    if (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\n    return data;\n  }\n\n  var IcosahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry) {\n    _inheritsLoose(IcosahedronGeometry, _PolyhedronGeometry);\n\n    function IcosahedronGeometry(radius, detail) {\n      var _this;\n\n      if (radius === void 0) {\n        radius = 1;\n      }\n\n      if (detail === void 0) {\n        detail = 0;\n      }\n\n      var t = (1 + Math.sqrt(5)) / 2;\n      var vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n      var indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n      _this = _PolyhedronGeometry.call(this, vertices, indices, radius, detail) || this;\n      _this.type = 'IcosahedronGeometry';\n      _this.parameters = {\n        radius: radius,\n        detail: detail\n      };\n      return _this;\n    }\n\n    return IcosahedronGeometry;\n  }(PolyhedronGeometry);\n\n  var LatheGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inheritsLoose(LatheGeometry, _BufferGeometry);\n\n    function LatheGeometry(points, segments, phiStart, phiLength) {\n      var _this;\n\n      if (segments === void 0) {\n        segments = 12;\n      }\n\n      if (phiStart === void 0) {\n        phiStart = 0;\n      }\n\n      if (phiLength === void 0) {\n        phiLength = Math.PI * 2;\n      }\n\n      _this = _BufferGeometry.call(this) || this;\n      _this.type = 'LatheGeometry';\n      _this.parameters = {\n        points: points,\n        segments: segments,\n        phiStart: phiStart,\n        phiLength: phiLength\n      };\n      segments = Math.floor(segments); // clamp phiLength so it's in range of [ 0, 2PI ]\n\n      phiLength = MathUtils.clamp(phiLength, 0, Math.PI * 2); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var uvs = []; // helper variables\n\n      var inverseSegments = 1.0 / segments;\n      var vertex = new Vector3();\n      var uv = new Vector2(); // generate vertices and uvs\n\n      for (var i = 0; i <= segments; i++) {\n        var phi = phiStart + i * inverseSegments * phiLength;\n        var sin = Math.sin(phi);\n        var cos = Math.cos(phi);\n\n        for (var j = 0; j <= points.length - 1; j++) {\n          // vertex\n          vertex.x = points[j].x * sin;\n          vertex.y = points[j].y;\n          vertex.z = points[j].x * cos;\n          vertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n          uv.x = i / segments;\n          uv.y = j / (points.length - 1);\n          uvs.push(uv.x, uv.y);\n        }\n      } // indices\n\n\n      for (var _i = 0; _i < segments; _i++) {\n        for (var _j = 0; _j < points.length - 1; _j++) {\n          var base = _j + _i * points.length;\n          var a = base;\n          var b = base + points.length;\n          var c = base + points.length + 1;\n          var d = base + 1; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      } // build geometry\n\n\n      _this.setIndex(indices);\n\n      _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\n\n\n      _this.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n      // because the corresponding vertices are identical (but still have different UVs).\n\n\n      if (phiLength === Math.PI * 2) {\n        var normals = _this.attributes.normal.array;\n        var n1 = new Vector3();\n        var n2 = new Vector3();\n        var n = new Vector3(); // this is the buffer offset for the last line of vertices\n\n        var _base = segments * points.length * 3;\n\n        for (var _i2 = 0, _j2 = 0; _i2 < points.length; _i2++, _j2 += 3) {\n          // select the normal of the vertex in the first line\n          n1.x = normals[_j2 + 0];\n          n1.y = normals[_j2 + 1];\n          n1.z = normals[_j2 + 2]; // select the normal of the vertex in the last line\n\n          n2.x = normals[_base + _j2 + 0];\n          n2.y = normals[_base + _j2 + 1];\n          n2.z = normals[_base + _j2 + 2]; // average normals\n\n          n.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n          normals[_j2 + 0] = normals[_base + _j2 + 0] = n.x;\n          normals[_j2 + 1] = normals[_base + _j2 + 1] = n.y;\n          normals[_j2 + 2] = normals[_base + _j2 + 2] = n.z;\n        }\n      }\n\n      return _this;\n    }\n\n    return LatheGeometry;\n  }(BufferGeometry);\n\n  var OctahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry) {\n    _inheritsLoose(OctahedronGeometry, _PolyhedronGeometry);\n\n    function OctahedronGeometry(radius, detail) {\n      var _this;\n\n      if (radius === void 0) {\n        radius = 1;\n      }\n\n      if (detail === void 0) {\n        detail = 0;\n      }\n\n      var vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n      var indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n      _this = _PolyhedronGeometry.call(this, vertices, indices, radius, detail) || this;\n      _this.type = 'OctahedronGeometry';\n      _this.parameters = {\n        radius: radius,\n        detail: detail\n      };\n      return _this;\n    }\n\n    return OctahedronGeometry;\n  }(PolyhedronGeometry);\n  /**\n   * Parametric Surfaces Geometry\n   * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n   */\n\n\n  function ParametricGeometry(func, slices, stacks) {\n    BufferGeometry.call(this);\n    this.type = 'ParametricGeometry';\n    this.parameters = {\n      func: func,\n      slices: slices,\n      stacks: stacks\n    }; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = [];\n    var EPS = 0.00001;\n    var normal = new Vector3();\n    var p0 = new Vector3(),\n        p1 = new Vector3();\n    var pu = new Vector3(),\n        pv = new Vector3();\n\n    if (func.length < 3) {\n      console.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');\n    } // generate vertices, normals and uvs\n\n\n    var sliceCount = slices + 1;\n\n    for (var i = 0; i <= stacks; i++) {\n      var v = i / stacks;\n\n      for (var j = 0; j <= slices; j++) {\n        var u = j / slices; // vertex\n\n        func(u, v, p0);\n        vertices.push(p0.x, p0.y, p0.z); // normal\n        // approximate tangent vectors via finite differences\n\n        if (u - EPS >= 0) {\n          func(u - EPS, v, p1);\n          pu.subVectors(p0, p1);\n        } else {\n          func(u + EPS, v, p1);\n          pu.subVectors(p1, p0);\n        }\n\n        if (v - EPS >= 0) {\n          func(u, v - EPS, p1);\n          pv.subVectors(p0, p1);\n        } else {\n          func(u, v + EPS, p1);\n          pv.subVectors(p1, p0);\n        } // cross product of tangent vectors returns surface normal\n\n\n        normal.crossVectors(pu, pv).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(u, v);\n      }\n    } // generate indices\n\n\n    for (var _i = 0; _i < stacks; _i++) {\n      for (var _j = 0; _j < slices; _j++) {\n        var a = _i * sliceCount + _j;\n        var b = _i * sliceCount + _j + 1;\n        var c = (_i + 1) * sliceCount + _j + 1;\n        var d = (_i + 1) * sliceCount + _j; // faces one and two\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  ParametricGeometry.prototype = Object.create(BufferGeometry.prototype);\n  ParametricGeometry.prototype.constructor = ParametricGeometry;\n\n  var RingGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inheritsLoose(RingGeometry, _BufferGeometry);\n\n    function RingGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n      var _this;\n\n      if (innerRadius === void 0) {\n        innerRadius = 0.5;\n      }\n\n      if (outerRadius === void 0) {\n        outerRadius = 1;\n      }\n\n      if (thetaSegments === void 0) {\n        thetaSegments = 8;\n      }\n\n      if (phiSegments === void 0) {\n        phiSegments = 1;\n      }\n\n      if (thetaStart === void 0) {\n        thetaStart = 0;\n      }\n\n      if (thetaLength === void 0) {\n        thetaLength = Math.PI * 2;\n      }\n\n      _this = _BufferGeometry.call(this) || this;\n      _this.type = 'RingGeometry';\n      _this.parameters = {\n        innerRadius: innerRadius,\n        outerRadius: outerRadius,\n        thetaSegments: thetaSegments,\n        phiSegments: phiSegments,\n        thetaStart: thetaStart,\n        thetaLength: thetaLength\n      };\n      thetaSegments = Math.max(3, thetaSegments);\n      phiSegments = Math.max(1, phiSegments); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // some helper variables\n\n      var radius = innerRadius;\n      var radiusStep = (outerRadius - innerRadius) / phiSegments;\n      var vertex = new Vector3();\n      var uv = new Vector2(); // generate vertices, normals and uvs\n\n      for (var j = 0; j <= phiSegments; j++) {\n        for (var i = 0; i <= thetaSegments; i++) {\n          // values are generate from the inside of the ring to the outside\n          var segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n          vertex.x = radius * Math.cos(segment);\n          vertex.y = radius * Math.sin(segment);\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n          normals.push(0, 0, 1); // uv\n\n          uv.x = (vertex.x / outerRadius + 1) / 2;\n          uv.y = (vertex.y / outerRadius + 1) / 2;\n          uvs.push(uv.x, uv.y);\n        } // increase the radius for next row of vertices\n\n\n        radius += radiusStep;\n      } // indices\n\n\n      for (var _j = 0; _j < phiSegments; _j++) {\n        var thetaSegmentLevel = _j * (thetaSegments + 1);\n\n        for (var _i = 0; _i < thetaSegments; _i++) {\n          var _segment = _i + thetaSegmentLevel;\n\n          var a = _segment;\n          var b = _segment + thetaSegments + 1;\n          var c = _segment + thetaSegments + 2;\n          var d = _segment + 1; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      } // build geometry\n\n\n      _this.setIndex(indices);\n\n      _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n      return _this;\n    }\n\n    return RingGeometry;\n  }(BufferGeometry);\n\n  var ShapeGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inheritsLoose(ShapeGeometry, _BufferGeometry);\n\n    function ShapeGeometry(shapes, curveSegments) {\n      var _this;\n\n      if (curveSegments === void 0) {\n        curveSegments = 12;\n      }\n\n      _this = _BufferGeometry.call(this) || this;\n      _this.type = 'ShapeGeometry';\n      _this.parameters = {\n        shapes: shapes,\n        curveSegments: curveSegments\n      }; // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // helper variables\n\n      var groupStart = 0;\n      var groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n      if (Array.isArray(shapes) === false) {\n        addShape(shapes);\n      } else {\n        for (var i = 0; i < shapes.length; i++) {\n          addShape(shapes[i]);\n\n          _this.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n\n          groupStart += groupCount;\n          groupCount = 0;\n        }\n      } // build geometry\n\n\n      _this.setIndex(indices);\n\n      _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n\n      function addShape(shape) {\n        var indexOffset = vertices.length / 3;\n        var points = shape.extractPoints(curveSegments);\n        var shapeVertices = points.shape;\n        var shapeHoles = points.holes; // check direction of vertices\n\n        if (ShapeUtils.isClockWise(shapeVertices) === false) {\n          shapeVertices = shapeVertices.reverse();\n        }\n\n        for (var _i = 0, l = shapeHoles.length; _i < l; _i++) {\n          var shapeHole = shapeHoles[_i];\n\n          if (ShapeUtils.isClockWise(shapeHole) === true) {\n            shapeHoles[_i] = shapeHole.reverse();\n          }\n        }\n\n        var faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n        for (var _i2 = 0, _l = shapeHoles.length; _i2 < _l; _i2++) {\n          var _shapeHole = shapeHoles[_i2];\n          shapeVertices = shapeVertices.concat(_shapeHole);\n        } // vertices, normals, uvs\n\n\n        for (var _i3 = 0, _l2 = shapeVertices.length; _i3 < _l2; _i3++) {\n          var vertex = shapeVertices[_i3];\n          vertices.push(vertex.x, vertex.y, 0);\n          normals.push(0, 0, 1);\n          uvs.push(vertex.x, vertex.y); // world uvs\n        } // incides\n\n\n        for (var _i4 = 0, _l3 = faces.length; _i4 < _l3; _i4++) {\n          var face = faces[_i4];\n          var a = face[0] + indexOffset;\n          var b = face[1] + indexOffset;\n          var c = face[2] + indexOffset;\n          indices.push(a, b, c);\n          groupCount += 3;\n        }\n      }\n\n      return _this;\n    }\n\n    var _proto = ShapeGeometry.prototype;\n\n    _proto.toJSON = function toJSON() {\n      var data = BufferGeometry.prototype.toJSON.call(this);\n      var shapes = this.parameters.shapes;\n      return _toJSON$1(shapes, data);\n    };\n\n    return ShapeGeometry;\n  }(BufferGeometry);\n\n  function _toJSON$1(shapes, data) {\n    data.shapes = [];\n\n    if (Array.isArray(shapes)) {\n      for (var i = 0, l = shapes.length; i < l; i++) {\n        var shape = shapes[i];\n        data.shapes.push(shape.uuid);\n      }\n    } else {\n      data.shapes.push(shapes.uuid);\n    }\n\n    return data;\n  }\n\n  var SphereGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inheritsLoose(SphereGeometry, _BufferGeometry);\n\n    function SphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n      var _this;\n\n      if (radius === void 0) {\n        radius = 1;\n      }\n\n      if (widthSegments === void 0) {\n        widthSegments = 8;\n      }\n\n      if (heightSegments === void 0) {\n        heightSegments = 6;\n      }\n\n      if (phiStart === void 0) {\n        phiStart = 0;\n      }\n\n      if (phiLength === void 0) {\n        phiLength = Math.PI * 2;\n      }\n\n      if (thetaStart === void 0) {\n        thetaStart = 0;\n      }\n\n      if (thetaLength === void 0) {\n        thetaLength = Math.PI;\n      }\n\n      _this = _BufferGeometry.call(this) || this;\n      _this.type = 'SphereGeometry';\n      _this.parameters = {\n        radius: radius,\n        widthSegments: widthSegments,\n        heightSegments: heightSegments,\n        phiStart: phiStart,\n        phiLength: phiLength,\n        thetaStart: thetaStart,\n        thetaLength: thetaLength\n      };\n      widthSegments = Math.max(3, Math.floor(widthSegments));\n      heightSegments = Math.max(2, Math.floor(heightSegments));\n      var thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n      var index = 0;\n      var grid = [];\n      var vertex = new Vector3();\n      var normal = new Vector3(); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // generate vertices, normals and uvs\n\n      for (var iy = 0; iy <= heightSegments; iy++) {\n        var verticesRow = [];\n        var v = iy / heightSegments; // special case for the poles\n\n        var uOffset = 0;\n\n        if (iy == 0 && thetaStart == 0) {\n          uOffset = 0.5 / widthSegments;\n        } else if (iy == heightSegments && thetaEnd == Math.PI) {\n          uOffset = -0.5 / widthSegments;\n        }\n\n        for (var ix = 0; ix <= widthSegments; ix++) {\n          var u = ix / widthSegments; // vertex\n\n          vertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n          vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n          vertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n          normal.copy(vertex).normalize();\n          normals.push(normal.x, normal.y, normal.z); // uv\n\n          uvs.push(u + uOffset, 1 - v);\n          verticesRow.push(index++);\n        }\n\n        grid.push(verticesRow);\n      } // indices\n\n\n      for (var _iy = 0; _iy < heightSegments; _iy++) {\n        for (var _ix = 0; _ix < widthSegments; _ix++) {\n          var a = grid[_iy][_ix + 1];\n          var b = grid[_iy][_ix];\n          var c = grid[_iy + 1][_ix];\n          var d = grid[_iy + 1][_ix + 1];\n          if (_iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n          if (_iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n        }\n      } // build geometry\n\n\n      _this.setIndex(indices);\n\n      _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n      return _this;\n    }\n\n    return SphereGeometry;\n  }(BufferGeometry);\n\n  var TetrahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry) {\n    _inheritsLoose(TetrahedronGeometry, _PolyhedronGeometry);\n\n    function TetrahedronGeometry(radius, detail) {\n      var _this;\n\n      if (radius === void 0) {\n        radius = 1;\n      }\n\n      if (detail === void 0) {\n        detail = 0;\n      }\n\n      var vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n      var indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n      _this = _PolyhedronGeometry.call(this, vertices, indices, radius, detail) || this;\n      _this.type = 'TetrahedronGeometry';\n      _this.parameters = {\n        radius: radius,\n        detail: detail\n      };\n      return _this;\n    }\n\n    return TetrahedronGeometry;\n  }(PolyhedronGeometry);\n\n  var TextGeometry = /*#__PURE__*/function (_ExtrudeGeometry) {\n    _inheritsLoose(TextGeometry, _ExtrudeGeometry);\n\n    function TextGeometry(text, parameters) {\n      var _this;\n\n      if (parameters === void 0) {\n        parameters = {};\n      }\n\n      var font = parameters.font;\n\n      if (!(font && font.isFont)) {\n        console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n        return new BufferGeometry() || _assertThisInitialized(_this);\n      }\n\n      var shapes = font.generateShapes(text, parameters.size); // translate parameters to ExtrudeGeometry API\n\n      parameters.depth = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n      if (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n      if (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n      if (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n      _this = _ExtrudeGeometry.call(this, shapes, parameters) || this;\n      _this.type = 'TextGeometry';\n      return _this;\n    }\n\n    return TextGeometry;\n  }(ExtrudeGeometry);\n\n  var TorusGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inheritsLoose(TorusGeometry, _BufferGeometry);\n\n    function TorusGeometry(radius, tube, radialSegments, tubularSegments, arc) {\n      var _this;\n\n      if (radius === void 0) {\n        radius = 1;\n      }\n\n      if (tube === void 0) {\n        tube = 0.4;\n      }\n\n      if (radialSegments === void 0) {\n        radialSegments = 8;\n      }\n\n      if (tubularSegments === void 0) {\n        tubularSegments = 6;\n      }\n\n      if (arc === void 0) {\n        arc = Math.PI * 2;\n      }\n\n      _this = _BufferGeometry.call(this) || this;\n      _this.type = 'TorusGeometry';\n      _this.parameters = {\n        radius: radius,\n        tube: tube,\n        radialSegments: radialSegments,\n        tubularSegments: tubularSegments,\n        arc: arc\n      };\n      radialSegments = Math.floor(radialSegments);\n      tubularSegments = Math.floor(tubularSegments); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // helper variables\n\n      var center = new Vector3();\n      var vertex = new Vector3();\n      var normal = new Vector3(); // generate vertices, normals and uvs\n\n      for (var j = 0; j <= radialSegments; j++) {\n        for (var i = 0; i <= tubularSegments; i++) {\n          var u = i / tubularSegments * arc;\n          var v = j / radialSegments * Math.PI * 2; // vertex\n\n          vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n          vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n          vertex.z = tube * Math.sin(v);\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n          center.x = radius * Math.cos(u);\n          center.y = radius * Math.sin(u);\n          normal.subVectors(vertex, center).normalize();\n          normals.push(normal.x, normal.y, normal.z); // uv\n\n          uvs.push(i / tubularSegments);\n          uvs.push(j / radialSegments);\n        }\n      } // generate indices\n\n\n      for (var _j = 1; _j <= radialSegments; _j++) {\n        for (var _i = 1; _i <= tubularSegments; _i++) {\n          // indices\n          var a = (tubularSegments + 1) * _j + _i - 1;\n          var b = (tubularSegments + 1) * (_j - 1) + _i - 1;\n          var c = (tubularSegments + 1) * (_j - 1) + _i;\n          var d = (tubularSegments + 1) * _j + _i; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      } // build geometry\n\n\n      _this.setIndex(indices);\n\n      _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n      return _this;\n    }\n\n    return TorusGeometry;\n  }(BufferGeometry);\n\n  var TorusKnotGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inheritsLoose(TorusKnotGeometry, _BufferGeometry);\n\n    function TorusKnotGeometry(radius, tube, tubularSegments, radialSegments, p, q) {\n      var _this;\n\n      if (radius === void 0) {\n        radius = 1;\n      }\n\n      if (tube === void 0) {\n        tube = 0.4;\n      }\n\n      if (tubularSegments === void 0) {\n        tubularSegments = 64;\n      }\n\n      if (radialSegments === void 0) {\n        radialSegments = 8;\n      }\n\n      if (p === void 0) {\n        p = 2;\n      }\n\n      if (q === void 0) {\n        q = 3;\n      }\n\n      _this = _BufferGeometry.call(this) || this;\n      _this.type = 'TorusKnotGeometry';\n      _this.parameters = {\n        radius: radius,\n        tube: tube,\n        tubularSegments: tubularSegments,\n        radialSegments: radialSegments,\n        p: p,\n        q: q\n      };\n      tubularSegments = Math.floor(tubularSegments);\n      radialSegments = Math.floor(radialSegments); // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // helper variables\n\n      var vertex = new Vector3();\n      var normal = new Vector3();\n      var P1 = new Vector3();\n      var P2 = new Vector3();\n      var B = new Vector3();\n      var T = new Vector3();\n      var N = new Vector3(); // generate vertices, normals and uvs\n\n      for (var i = 0; i <= tubularSegments; ++i) {\n        // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n        var u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n        // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n        calculatePositionOnCurve(u, p, q, radius, P1);\n        calculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n        T.subVectors(P2, P1);\n        N.addVectors(P2, P1);\n        B.crossVectors(T, N);\n        N.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n        B.normalize();\n        N.normalize();\n\n        for (var j = 0; j <= radialSegments; ++j) {\n          // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n          // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n          var v = j / radialSegments * Math.PI * 2;\n          var cx = -tube * Math.cos(v);\n          var cy = tube * Math.sin(v); // now calculate the final vertex position.\n          // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n          vertex.x = P1.x + (cx * N.x + cy * B.x);\n          vertex.y = P1.y + (cx * N.y + cy * B.y);\n          vertex.z = P1.z + (cx * N.z + cy * B.z);\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n          normal.subVectors(vertex, P1).normalize();\n          normals.push(normal.x, normal.y, normal.z); // uv\n\n          uvs.push(i / tubularSegments);\n          uvs.push(j / radialSegments);\n        }\n      } // generate indices\n\n\n      for (var _j = 1; _j <= tubularSegments; _j++) {\n        for (var _i = 1; _i <= radialSegments; _i++) {\n          // indices\n          var a = (radialSegments + 1) * (_j - 1) + (_i - 1);\n          var b = (radialSegments + 1) * _j + (_i - 1);\n          var c = (radialSegments + 1) * _j + _i;\n          var d = (radialSegments + 1) * (_j - 1) + _i; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      } // build geometry\n\n\n      _this.setIndex(indices);\n\n      _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n\n      function calculatePositionOnCurve(u, p, q, radius, position) {\n        var cu = Math.cos(u);\n        var su = Math.sin(u);\n        var quOverP = q / p * u;\n        var cs = Math.cos(quOverP);\n        position.x = radius * (2 + cs) * 0.5 * cu;\n        position.y = radius * (2 + cs) * su * 0.5;\n        position.z = radius * Math.sin(quOverP) * 0.5;\n      }\n\n      return _this;\n    }\n\n    return TorusKnotGeometry;\n  }(BufferGeometry);\n\n  var TubeGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inheritsLoose(TubeGeometry, _BufferGeometry);\n\n    function TubeGeometry(path, tubularSegments, radius, radialSegments, closed) {\n      var _this;\n\n      if (tubularSegments === void 0) {\n        tubularSegments = 64;\n      }\n\n      if (radius === void 0) {\n        radius = 1;\n      }\n\n      if (radialSegments === void 0) {\n        radialSegments = 8;\n      }\n\n      if (closed === void 0) {\n        closed = false;\n      }\n\n      _this = _BufferGeometry.call(this) || this;\n      _this.type = 'TubeGeometry';\n      _this.parameters = {\n        path: path,\n        tubularSegments: tubularSegments,\n        radius: radius,\n        radialSegments: radialSegments,\n        closed: closed\n      };\n      var frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n      _this.tangents = frames.tangents;\n      _this.normals = frames.normals;\n      _this.binormals = frames.binormals; // helper variables\n\n      var vertex = new Vector3();\n      var normal = new Vector3();\n      var uv = new Vector2();\n      var P = new Vector3(); // buffer\n\n      var vertices = [];\n      var normals = [];\n      var uvs = [];\n      var indices = []; // create buffer data\n\n      generateBufferData(); // build geometry\n\n      _this.setIndex(indices);\n\n      _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      _this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n      _this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n\n      function generateBufferData() {\n        for (var i = 0; i < tubularSegments; i++) {\n          generateSegment(i);\n        } // if the geometry is not closed, generate the last row of vertices and normals\n        // at the regular position on the given path\n        //\n        // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n        generateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n        // this makes it easy compute correct values for closed geometries\n\n        generateUVs(); // finally create faces\n\n        generateIndices();\n      }\n\n      function generateSegment(i) {\n        // we use getPointAt to sample evenly distributed points from the given path\n        P = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\n\n        var N = frames.normals[i];\n        var B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n        for (var j = 0; j <= radialSegments; j++) {\n          var v = j / radialSegments * Math.PI * 2;\n          var sin = Math.sin(v);\n          var cos = -Math.cos(v); // normal\n\n          normal.x = cos * N.x + sin * B.x;\n          normal.y = cos * N.y + sin * B.y;\n          normal.z = cos * N.z + sin * B.z;\n          normal.normalize();\n          normals.push(normal.x, normal.y, normal.z); // vertex\n\n          vertex.x = P.x + radius * normal.x;\n          vertex.y = P.y + radius * normal.y;\n          vertex.z = P.z + radius * normal.z;\n          vertices.push(vertex.x, vertex.y, vertex.z);\n        }\n      }\n\n      function generateIndices() {\n        for (var j = 1; j <= tubularSegments; j++) {\n          for (var i = 1; i <= radialSegments; i++) {\n            var a = (radialSegments + 1) * (j - 1) + (i - 1);\n            var b = (radialSegments + 1) * j + (i - 1);\n            var c = (radialSegments + 1) * j + i;\n            var d = (radialSegments + 1) * (j - 1) + i; // faces\n\n            indices.push(a, b, d);\n            indices.push(b, c, d);\n          }\n        }\n      }\n\n      function generateUVs() {\n        for (var i = 0; i <= tubularSegments; i++) {\n          for (var j = 0; j <= radialSegments; j++) {\n            uv.x = i / tubularSegments;\n            uv.y = j / radialSegments;\n            uvs.push(uv.x, uv.y);\n          }\n        }\n      }\n\n      return _this;\n    }\n\n    var _proto = TubeGeometry.prototype;\n\n    _proto.toJSON = function toJSON() {\n      var data = BufferGeometry.prototype.toJSON.call(this);\n      data.path = this.parameters.path.toJSON();\n      return data;\n    };\n\n    return TubeGeometry;\n  }(BufferGeometry);\n\n  var WireframeGeometry = /*#__PURE__*/function (_BufferGeometry) {\n    _inheritsLoose(WireframeGeometry, _BufferGeometry);\n\n    function WireframeGeometry(geometry) {\n      var _this;\n\n      _this = _BufferGeometry.call(this) || this;\n      _this.type = 'WireframeGeometry';\n\n      if (geometry.isGeometry === true) {\n        console.error('THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n        return _assertThisInitialized(_this);\n      } // buffer\n\n\n      var vertices = []; // helper variables\n\n      var edge = [0, 0],\n          edges = {};\n      var vertex = new Vector3();\n\n      if (geometry.index !== null) {\n        // indexed BufferGeometry\n        var position = geometry.attributes.position;\n        var indices = geometry.index;\n        var groups = geometry.groups;\n\n        if (groups.length === 0) {\n          groups = [{\n            start: 0,\n            count: indices.count,\n            materialIndex: 0\n          }];\n        } // create a data structure that contains all eges without duplicates\n\n\n        for (var o = 0, ol = groups.length; o < ol; ++o) {\n          var group = groups[o];\n          var start = group.start;\n          var count = group.count;\n\n          for (var i = start, l = start + count; i < l; i += 3) {\n            for (var j = 0; j < 3; j++) {\n              var edge1 = indices.getX(i + j);\n              var edge2 = indices.getX(i + (j + 1) % 3);\n              edge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n              edge[1] = Math.max(edge1, edge2);\n              var key = edge[0] + ',' + edge[1];\n\n              if (edges[key] === undefined) {\n                edges[key] = {\n                  index1: edge[0],\n                  index2: edge[1]\n                };\n              }\n            }\n          }\n        } // generate vertices\n\n\n        for (var _key in edges) {\n          var e = edges[_key];\n          vertex.fromBufferAttribute(position, e.index1);\n          vertices.push(vertex.x, vertex.y, vertex.z);\n          vertex.fromBufferAttribute(position, e.index2);\n          vertices.push(vertex.x, vertex.y, vertex.z);\n        }\n      } else {\n        // non-indexed BufferGeometry\n        var _position = geometry.attributes.position;\n\n        for (var _i = 0, _l = _position.count / 3; _i < _l; _i++) {\n          for (var _j = 0; _j < 3; _j++) {\n            // three edges per triangle, an edge is represented as (index1, index2)\n            // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n            var index1 = 3 * _i + _j;\n            vertex.fromBufferAttribute(_position, index1);\n            vertices.push(vertex.x, vertex.y, vertex.z);\n            var index2 = 3 * _i + (_j + 1) % 3;\n            vertex.fromBufferAttribute(_position, index2);\n            vertices.push(vertex.x, vertex.y, vertex.z);\n          }\n        }\n      } // build geometry\n\n\n      _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n      return _this;\n    }\n\n    return WireframeGeometry;\n  }(BufferGeometry);\n\n  var Geometries = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    BoxGeometry: BoxGeometry,\n    BoxBufferGeometry: BoxGeometry,\n    CircleGeometry: CircleGeometry,\n    CircleBufferGeometry: CircleGeometry,\n    ConeGeometry: ConeGeometry,\n    ConeBufferGeometry: ConeGeometry,\n    CylinderGeometry: CylinderGeometry,\n    CylinderBufferGeometry: CylinderGeometry,\n    DodecahedronGeometry: DodecahedronGeometry,\n    DodecahedronBufferGeometry: DodecahedronGeometry,\n    EdgesGeometry: EdgesGeometry,\n    ExtrudeGeometry: ExtrudeGeometry,\n    ExtrudeBufferGeometry: ExtrudeGeometry,\n    IcosahedronGeometry: IcosahedronGeometry,\n    IcosahedronBufferGeometry: IcosahedronGeometry,\n    LatheGeometry: LatheGeometry,\n    LatheBufferGeometry: LatheGeometry,\n    OctahedronGeometry: OctahedronGeometry,\n    OctahedronBufferGeometry: OctahedronGeometry,\n    ParametricGeometry: ParametricGeometry,\n    ParametricBufferGeometry: ParametricGeometry,\n    PlaneGeometry: PlaneGeometry,\n    PlaneBufferGeometry: PlaneGeometry,\n    PolyhedronGeometry: PolyhedronGeometry,\n    PolyhedronBufferGeometry: PolyhedronGeometry,\n    RingGeometry: RingGeometry,\n    RingBufferGeometry: RingGeometry,\n    ShapeGeometry: ShapeGeometry,\n    ShapeBufferGeometry: ShapeGeometry,\n    SphereGeometry: SphereGeometry,\n    SphereBufferGeometry: SphereGeometry,\n    TetrahedronGeometry: TetrahedronGeometry,\n    TetrahedronBufferGeometry: TetrahedronGeometry,\n    TextGeometry: TextGeometry,\n    TextBufferGeometry: TextGeometry,\n    TorusGeometry: TorusGeometry,\n    TorusBufferGeometry: TorusGeometry,\n    TorusKnotGeometry: TorusKnotGeometry,\n    TorusKnotBufferGeometry: TorusKnotGeometry,\n    TubeGeometry: TubeGeometry,\n    TubeBufferGeometry: TubeGeometry,\n    WireframeGeometry: WireframeGeometry\n  });\n  /**\n   * parameters = {\n   *\tcolor: <THREE.Color>\n   * }\n   */\n\n  function ShadowMaterial(parameters) {\n    Material.call(this);\n    this.type = 'ShadowMaterial';\n    this.color = new Color(0x000000);\n    this.transparent = true;\n    this.setValues(parameters);\n  }\n\n  ShadowMaterial.prototype = Object.create(Material.prototype);\n  ShadowMaterial.prototype.constructor = ShadowMaterial;\n  ShadowMaterial.prototype.isShadowMaterial = true;\n\n  ShadowMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    return this;\n  };\n\n  function RawShaderMaterial(parameters) {\n    ShaderMaterial.call(this, parameters);\n    this.type = 'RawShaderMaterial';\n  }\n\n  RawShaderMaterial.prototype = Object.create(ShaderMaterial.prototype);\n  RawShaderMaterial.prototype.constructor = RawShaderMaterial;\n  RawShaderMaterial.prototype.isRawShaderMaterial = true;\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\troughness: <float>,\n   *\tmetalness: <float>,\n   *\topacity: <float>,\n   *\n   *\tmap: new THREE.Texture( <Image> ),\n   *\n   *\tlightMap: new THREE.Texture( <Image> ),\n   *\tlightMapIntensity: <float>\n   *\n   *\taoMap: new THREE.Texture( <Image> ),\n   *\taoMapIntensity: <float>\n   *\n   *\temissive: <hex>,\n   *\temissiveIntensity: <float>\n   *\temissiveMap: new THREE.Texture( <Image> ),\n   *\n   *\tbumpMap: new THREE.Texture( <Image> ),\n   *\tbumpScale: <float>,\n   *\n   *\tnormalMap: new THREE.Texture( <Image> ),\n   *\tnormalMapType: THREE.TangentSpaceNormalMap,\n   *\tnormalScale: <Vector2>,\n   *\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\n   *\tdisplacementScale: <float>,\n   *\tdisplacementBias: <float>,\n   *\n   *\troughnessMap: new THREE.Texture( <Image> ),\n   *\n   *\tmetalnessMap: new THREE.Texture( <Image> ),\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *\tenvMapIntensity: <float>\n   *\n   *\trefractionRatio: <float>,\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>,\n   *\n   *\tskinning: <bool>,\n   *\tmorphTargets: <bool>,\n   *\tmorphNormals: <bool>\n   * }\n   */\n\n  function MeshStandardMaterial(parameters) {\n    Material.call(this);\n    this.defines = {\n      'STANDARD': ''\n    };\n    this.type = 'MeshStandardMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.roughness = 1.0;\n    this.metalness = 0.0;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.roughnessMap = null;\n    this.metalnessMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.envMapIntensity = 1.0;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.vertexTangents = false;\n    this.setValues(parameters);\n  }\n\n  MeshStandardMaterial.prototype = Object.create(Material.prototype);\n  MeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n  MeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n  MeshStandardMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.defines = {\n      'STANDARD': ''\n    };\n    this.color.copy(source.color);\n    this.roughness = source.roughness;\n    this.metalness = source.metalness;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.roughnessMap = source.roughnessMap;\n    this.metalnessMap = source.metalnessMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.envMapIntensity = source.envMapIntensity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    this.vertexTangents = source.vertexTangents;\n    return this;\n  };\n  /**\n   * parameters = {\n   *\tclearcoat: <float>,\n   *\tclearcoatMap: new THREE.Texture( <Image> ),\n   *\tclearcoatRoughness: <float>,\n   *\tclearcoatRoughnessMap: new THREE.Texture( <Image> ),\n   *\tclearcoatNormalScale: <Vector2>,\n   *\tclearcoatNormalMap: new THREE.Texture( <Image> ),\n   *\n   *\treflectivity: <float>,\n   *\tior: <float>,\n   *\n   *\tsheen: <Color>,\n   *\n   *\ttransmission: <float>,\n   *\ttransmissionMap: new THREE.Texture( <Image> )\n   * }\n   */\n\n\n  function MeshPhysicalMaterial(parameters) {\n    MeshStandardMaterial.call(this);\n    this.defines = {\n      'STANDARD': '',\n      'PHYSICAL': ''\n    };\n    this.type = 'MeshPhysicalMaterial';\n    this.clearcoat = 0.0;\n    this.clearcoatMap = null;\n    this.clearcoatRoughness = 0.0;\n    this.clearcoatRoughnessMap = null;\n    this.clearcoatNormalScale = new Vector2(1, 1);\n    this.clearcoatNormalMap = null;\n    this.reflectivity = 0.5; // maps to F0 = 0.04\n\n    Object.defineProperty(this, 'ior', {\n      get: function get() {\n        return (1 + 0.4 * this.reflectivity) / (1 - 0.4 * this.reflectivity);\n      },\n      set: function set(ior) {\n        this.reflectivity = MathUtils.clamp(2.5 * (ior - 1) / (ior + 1), 0, 1);\n      }\n    });\n    this.sheen = null; // null will disable sheen bsdf\n\n    this.transmission = 0.0;\n    this.transmissionMap = null;\n    this.setValues(parameters);\n  }\n\n  MeshPhysicalMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\n  MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n  MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n  MeshPhysicalMaterial.prototype.copy = function (source) {\n    MeshStandardMaterial.prototype.copy.call(this, source);\n    this.defines = {\n      'STANDARD': '',\n      'PHYSICAL': ''\n    };\n    this.clearcoat = source.clearcoat;\n    this.clearcoatMap = source.clearcoatMap;\n    this.clearcoatRoughness = source.clearcoatRoughness;\n    this.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n    this.clearcoatNormalMap = source.clearcoatNormalMap;\n    this.clearcoatNormalScale.copy(source.clearcoatNormalScale);\n    this.reflectivity = source.reflectivity;\n\n    if (source.sheen) {\n      this.sheen = (this.sheen || new Color()).copy(source.sheen);\n    } else {\n      this.sheen = null;\n    }\n\n    this.transmission = source.transmission;\n    this.transmissionMap = source.transmissionMap;\n    return this;\n  };\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\tspecular: <hex>,\n   *\tshininess: <float>,\n   *\topacity: <float>,\n   *\n   *\tmap: new THREE.Texture( <Image> ),\n   *\n   *\tlightMap: new THREE.Texture( <Image> ),\n   *\tlightMapIntensity: <float>\n   *\n   *\taoMap: new THREE.Texture( <Image> ),\n   *\taoMapIntensity: <float>\n   *\n   *\temissive: <hex>,\n   *\temissiveIntensity: <float>\n   *\temissiveMap: new THREE.Texture( <Image> ),\n   *\n   *\tbumpMap: new THREE.Texture( <Image> ),\n   *\tbumpScale: <float>,\n   *\n   *\tnormalMap: new THREE.Texture( <Image> ),\n   *\tnormalMapType: THREE.TangentSpaceNormalMap,\n   *\tnormalScale: <Vector2>,\n   *\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\n   *\tdisplacementScale: <float>,\n   *\tdisplacementBias: <float>,\n   *\n   *\tspecularMap: new THREE.Texture( <Image> ),\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *\tcombine: THREE.MultiplyOperation,\n   *\treflectivity: <float>,\n   *\trefractionRatio: <float>,\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>,\n   *\n   *\tskinning: <bool>,\n   *\tmorphTargets: <bool>,\n   *\tmorphNormals: <bool>\n   * }\n   */\n\n\n  function MeshPhongMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshPhongMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.specular = new Color(0x111111);\n    this.shininess = 30;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshPhongMaterial.prototype = Object.create(Material.prototype);\n  MeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n  MeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n  MeshPhongMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.specular.copy(source.specular);\n    this.shininess = source.shininess;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\n   *\tmap: new THREE.Texture( <Image> ),\n   *\tgradientMap: new THREE.Texture( <Image> ),\n   *\n   *\tlightMap: new THREE.Texture( <Image> ),\n   *\tlightMapIntensity: <float>\n   *\n   *\taoMap: new THREE.Texture( <Image> ),\n   *\taoMapIntensity: <float>\n   *\n   *\temissive: <hex>,\n   *\temissiveIntensity: <float>\n   *\temissiveMap: new THREE.Texture( <Image> ),\n   *\n   *\tbumpMap: new THREE.Texture( <Image> ),\n   *\tbumpScale: <float>,\n   *\n   *\tnormalMap: new THREE.Texture( <Image> ),\n   *\tnormalMapType: THREE.TangentSpaceNormalMap,\n   *\tnormalScale: <Vector2>,\n   *\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\n   *\tdisplacementScale: <float>,\n   *\tdisplacementBias: <float>,\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>,\n   *\n   *\tskinning: <bool>,\n   *\tmorphTargets: <bool>,\n   *\tmorphNormals: <bool>\n   * }\n   */\n\n\n  function MeshToonMaterial(parameters) {\n    Material.call(this);\n    this.defines = {\n      'TOON': ''\n    };\n    this.type = 'MeshToonMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.gradientMap = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.alphaMap = null;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshToonMaterial.prototype = Object.create(Material.prototype);\n  MeshToonMaterial.prototype.constructor = MeshToonMaterial;\n  MeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n  MeshToonMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.gradientMap = source.gradientMap;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.alphaMap = source.alphaMap;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * parameters = {\n   *\topacity: <float>,\n   *\n   *\tbumpMap: new THREE.Texture( <Image> ),\n   *\tbumpScale: <float>,\n   *\n   *\tnormalMap: new THREE.Texture( <Image> ),\n   *\tnormalMapType: THREE.TangentSpaceNormalMap,\n   *\tnormalScale: <Vector2>,\n   *\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\n   *\tdisplacementScale: <float>,\n   *\tdisplacementBias: <float>,\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>\n   *\n   *\tskinning: <bool>,\n   *\tmorphTargets: <bool>,\n   *\tmorphNormals: <bool>\n   * }\n   */\n\n\n  function MeshNormalMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshNormalMaterial';\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshNormalMaterial.prototype = Object.create(Material.prototype);\n  MeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n  MeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n  MeshNormalMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\topacity: <float>,\n   *\n   *\tmap: new THREE.Texture( <Image> ),\n   *\n   *\tlightMap: new THREE.Texture( <Image> ),\n   *\tlightMapIntensity: <float>\n   *\n   *\taoMap: new THREE.Texture( <Image> ),\n   *\taoMapIntensity: <float>\n   *\n   *\temissive: <hex>,\n   *\temissiveIntensity: <float>\n   *\temissiveMap: new THREE.Texture( <Image> ),\n   *\n   *\tspecularMap: new THREE.Texture( <Image> ),\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *\tcombine: THREE.Multiply,\n   *\treflectivity: <float>,\n   *\trefractionRatio: <float>,\n   *\n   *\twireframe: <boolean>,\n   *\twireframeLinewidth: <float>,\n   *\n   *\tskinning: <bool>,\n   *\tmorphTargets: <bool>,\n   *\tmorphNormals: <bool>\n   * }\n   */\n\n\n  function MeshLambertMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshLambertMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshLambertMaterial.prototype = Object.create(Material.prototype);\n  MeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n  MeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n  MeshLambertMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\topacity: <float>,\n   *\n   *\tmatcap: new THREE.Texture( <Image> ),\n   *\n   *\tmap: new THREE.Texture( <Image> ),\n   *\n   *\tbumpMap: new THREE.Texture( <Image> ),\n   *\tbumpScale: <float>,\n   *\n   *\tnormalMap: new THREE.Texture( <Image> ),\n   *\tnormalMapType: THREE.TangentSpaceNormalMap,\n   *\tnormalScale: <Vector2>,\n   *\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\n   *\tdisplacementScale: <float>,\n   *\tdisplacementBias: <float>,\n   *\n   *\talphaMap: new THREE.Texture( <Image> ),\n   *\n   *\tskinning: <bool>,\n   *\tmorphTargets: <bool>,\n   *\tmorphNormals: <bool>\n   * }\n   */\n\n\n  function MeshMatcapMaterial(parameters) {\n    Material.call(this);\n    this.defines = {\n      'MATCAP': ''\n    };\n    this.type = 'MeshMatcapMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.matcap = null;\n    this.map = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.alphaMap = null;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshMatcapMaterial.prototype = Object.create(Material.prototype);\n  MeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n  MeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n  MeshMatcapMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.defines = {\n      'MATCAP': ''\n    };\n    this.color.copy(source.color);\n    this.matcap = source.matcap;\n    this.map = source.map;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.alphaMap = source.alphaMap;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * parameters = {\n   *\tcolor: <hex>,\n   *\topacity: <float>,\n   *\n   *\tlinewidth: <float>,\n   *\n   *\tscale: <float>,\n   *\tdashSize: <float>,\n   *\tgapSize: <float>\n   * }\n   */\n\n\n  function LineDashedMaterial(parameters) {\n    LineBasicMaterial.call(this);\n    this.type = 'LineDashedMaterial';\n    this.scale = 1;\n    this.dashSize = 3;\n    this.gapSize = 1;\n    this.setValues(parameters);\n  }\n\n  LineDashedMaterial.prototype = Object.create(LineBasicMaterial.prototype);\n  LineDashedMaterial.prototype.constructor = LineDashedMaterial;\n  LineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n  LineDashedMaterial.prototype.copy = function (source) {\n    LineBasicMaterial.prototype.copy.call(this, source);\n    this.scale = source.scale;\n    this.dashSize = source.dashSize;\n    this.gapSize = source.gapSize;\n    return this;\n  };\n\n  var Materials = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ShadowMaterial: ShadowMaterial,\n    SpriteMaterial: SpriteMaterial,\n    RawShaderMaterial: RawShaderMaterial,\n    ShaderMaterial: ShaderMaterial,\n    PointsMaterial: PointsMaterial,\n    MeshPhysicalMaterial: MeshPhysicalMaterial,\n    MeshStandardMaterial: MeshStandardMaterial,\n    MeshPhongMaterial: MeshPhongMaterial,\n    MeshToonMaterial: MeshToonMaterial,\n    MeshNormalMaterial: MeshNormalMaterial,\n    MeshLambertMaterial: MeshLambertMaterial,\n    MeshDepthMaterial: MeshDepthMaterial,\n    MeshDistanceMaterial: MeshDistanceMaterial,\n    MeshBasicMaterial: MeshBasicMaterial,\n    MeshMatcapMaterial: MeshMatcapMaterial,\n    LineDashedMaterial: LineDashedMaterial,\n    LineBasicMaterial: LineBasicMaterial,\n    Material: Material\n  });\n  var AnimationUtils = {\n    // same as Array.prototype.slice, but also works on typed arrays\n    arraySlice: function arraySlice(array, from, to) {\n      if (AnimationUtils.isTypedArray(array)) {\n        // in ios9 array.subarray(from, undefined) will return empty array\n        // but array.subarray(from) or array.subarray(from, len) is correct\n        return new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n      }\n\n      return array.slice(from, to);\n    },\n    // converts an array to a specific type\n    convertArray: function convertArray(array, type, forceClone) {\n      if (!array || // let 'undefined' and 'null' pass\n      !forceClone && array.constructor === type) return array;\n\n      if (typeof type.BYTES_PER_ELEMENT === 'number') {\n        return new type(array); // create typed array\n      }\n\n      return Array.prototype.slice.call(array); // create Array\n    },\n    isTypedArray: function isTypedArray(object) {\n      return ArrayBuffer.isView(object) && !(object instanceof DataView);\n    },\n    // returns an array by which times and values can be sorted\n    getKeyframeOrder: function getKeyframeOrder(times) {\n      function compareTime(i, j) {\n        return times[i] - times[j];\n      }\n\n      var n = times.length;\n      var result = new Array(n);\n\n      for (var i = 0; i !== n; ++i) {\n        result[i] = i;\n      }\n\n      result.sort(compareTime);\n      return result;\n    },\n    // uses the array previously returned by 'getKeyframeOrder' to sort data\n    sortedArray: function sortedArray(values, stride, order) {\n      var nValues = values.length;\n      var result = new values.constructor(nValues);\n\n      for (var i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n        var srcOffset = order[i] * stride;\n\n        for (var j = 0; j !== stride; ++j) {\n          result[dstOffset++] = values[srcOffset + j];\n        }\n      }\n\n      return result;\n    },\n    // function for parsing AOS keyframe formats\n    flattenJSON: function flattenJSON(jsonKeys, times, values, valuePropertyName) {\n      var i = 1,\n          key = jsonKeys[0];\n\n      while (key !== undefined && key[valuePropertyName] === undefined) {\n        key = jsonKeys[i++];\n      }\n\n      if (key === undefined) return; // no data\n\n      var value = key[valuePropertyName];\n      if (value === undefined) return; // no data\n\n      if (Array.isArray(value)) {\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            values.push.apply(values, value); // push all elements\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      } else if (value.toArray !== undefined) {\n        // ...assume THREE.Math-ish\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            value.toArray(values, values.length);\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      } else {\n        // otherwise push as-is\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            values.push(value);\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      }\n    },\n    subclip: function subclip(sourceClip, name, startFrame, endFrame, fps) {\n      if (fps === void 0) {\n        fps = 30;\n      }\n\n      var clip = sourceClip.clone();\n      clip.name = name;\n      var tracks = [];\n\n      for (var i = 0; i < clip.tracks.length; ++i) {\n        var track = clip.tracks[i];\n        var valueSize = track.getValueSize();\n        var times = [];\n        var values = [];\n\n        for (var j = 0; j < track.times.length; ++j) {\n          var frame = track.times[j] * fps;\n          if (frame < startFrame || frame >= endFrame) continue;\n          times.push(track.times[j]);\n\n          for (var k = 0; k < valueSize; ++k) {\n            values.push(track.values[j * valueSize + k]);\n          }\n        }\n\n        if (times.length === 0) continue;\n        track.times = AnimationUtils.convertArray(times, track.times.constructor);\n        track.values = AnimationUtils.convertArray(values, track.values.constructor);\n        tracks.push(track);\n      }\n\n      clip.tracks = tracks; // find minimum .times value across all tracks in the trimmed clip\n\n      var minStartTime = Infinity;\n\n      for (var _i = 0; _i < clip.tracks.length; ++_i) {\n        if (minStartTime > clip.tracks[_i].times[0]) {\n          minStartTime = clip.tracks[_i].times[0];\n        }\n      } // shift all tracks such that clip begins at t=0\n\n\n      for (var _i2 = 0; _i2 < clip.tracks.length; ++_i2) {\n        clip.tracks[_i2].shift(-1 * minStartTime);\n      }\n\n      clip.resetDuration();\n      return clip;\n    },\n    makeClipAdditive: function makeClipAdditive(targetClip, referenceFrame, referenceClip, fps) {\n      if (referenceFrame === void 0) {\n        referenceFrame = 0;\n      }\n\n      if (referenceClip === void 0) {\n        referenceClip = targetClip;\n      }\n\n      if (fps === void 0) {\n        fps = 30;\n      }\n\n      if (fps <= 0) fps = 30;\n      var numTracks = referenceClip.tracks.length;\n      var referenceTime = referenceFrame / fps; // Make each track's values relative to the values at the reference frame\n\n      var _loop = function _loop(i) {\n        var referenceTrack = referenceClip.tracks[i];\n        var referenceTrackType = referenceTrack.ValueTypeName; // Skip this track if it's non-numeric\n\n        if (referenceTrackType === 'bool' || referenceTrackType === 'string') return \"continue\"; // Find the track in the target clip whose name and type matches the reference track\n\n        var targetTrack = targetClip.tracks.find(function (track) {\n          return track.name === referenceTrack.name && track.ValueTypeName === referenceTrackType;\n        });\n        if (targetTrack === undefined) return \"continue\";\n        var referenceOffset = 0;\n        var referenceValueSize = referenceTrack.getValueSize();\n\n        if (referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n          referenceOffset = referenceValueSize / 3;\n        }\n\n        var targetOffset = 0;\n        var targetValueSize = targetTrack.getValueSize();\n\n        if (targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n          targetOffset = targetValueSize / 3;\n        }\n\n        var lastIndex = referenceTrack.times.length - 1;\n        var referenceValue = void 0; // Find the value to subtract out of the track\n\n        if (referenceTime <= referenceTrack.times[0]) {\n          // Reference frame is earlier than the first keyframe, so just use the first keyframe\n          var startIndex = referenceOffset;\n          var endIndex = referenceValueSize - referenceOffset;\n          referenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n        } else if (referenceTime >= referenceTrack.times[lastIndex]) {\n          // Reference frame is after the last keyframe, so just use the last keyframe\n          var _startIndex = lastIndex * referenceValueSize + referenceOffset;\n\n          var _endIndex = _startIndex + referenceValueSize - referenceOffset;\n\n          referenceValue = AnimationUtils.arraySlice(referenceTrack.values, _startIndex, _endIndex);\n        } else {\n          // Interpolate to the reference value\n          var interpolant = referenceTrack.createInterpolant();\n          var _startIndex2 = referenceOffset;\n\n          var _endIndex2 = referenceValueSize - referenceOffset;\n\n          interpolant.evaluate(referenceTime);\n          referenceValue = AnimationUtils.arraySlice(interpolant.resultBuffer, _startIndex2, _endIndex2);\n        } // Conjugate the quaternion\n\n\n        if (referenceTrackType === 'quaternion') {\n          var referenceQuat = new Quaternion().fromArray(referenceValue).normalize().conjugate();\n          referenceQuat.toArray(referenceValue);\n        } // Subtract the reference value from all of the track values\n\n\n        var numTimes = targetTrack.times.length;\n\n        for (var j = 0; j < numTimes; ++j) {\n          var valueStart = j * targetValueSize + targetOffset;\n\n          if (referenceTrackType === 'quaternion') {\n            // Multiply the conjugate for quaternion track types\n            Quaternion.multiplyQuaternionsFlat(targetTrack.values, valueStart, referenceValue, 0, targetTrack.values, valueStart);\n          } else {\n            var valueEnd = targetValueSize - targetOffset * 2; // Subtract each value for all other numeric track types\n\n            for (var k = 0; k < valueEnd; ++k) {\n              targetTrack.values[valueStart + k] -= referenceValue[k];\n            }\n          }\n        }\n      };\n\n      for (var i = 0; i < numTracks; ++i) {\n        var _ret = _loop(i);\n\n        if (_ret === \"continue\") continue;\n      }\n\n      targetClip.blendMode = AdditiveAnimationBlendMode;\n      return targetClip;\n    }\n  };\n  /**\n   * Abstract base class of interpolants over parametric samples.\n   *\n   * The parameter domain is one dimensional, typically the time or a path\n   * along a curve defined by the data.\n   *\n   * The sample values can have any dimensionality and derived classes may\n   * apply special interpretations to the data.\n   *\n   * This class provides the interval seek in a Template Method, deferring\n   * the actual interpolation to derived classes.\n   *\n   * Time complexity is O(1) for linear access crossing at most two points\n   * and O(log N) for random access, where N is the number of positions.\n   *\n   * References:\n   *\n   * \t\thttp://www.oodesign.com/template-method-pattern.html\n   *\n   */\n\n  function Interpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    this.parameterPositions = parameterPositions;\n    this._cachedIndex = 0;\n    this.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n    this.sampleValues = sampleValues;\n    this.valueSize = sampleSize;\n  }\n\n  Object.assign(Interpolant.prototype, {\n    evaluate: function evaluate(t) {\n      var pp = this.parameterPositions;\n      var i1 = this._cachedIndex,\n          t1 = pp[i1],\n          t0 = pp[i1 - 1];\n\n      validate_interval: {\n        seek: {\n          var right;\n\n          linear_scan: {\n            //- See http://jsperf.com/comparison-to-undefined/3\n            //- slower code:\n            //-\n            //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n            forward_scan: if (!(t < t1)) {\n              for (var giveUpAt = i1 + 2;;) {\n                if (t1 === undefined) {\n                  if (t < t0) break forward_scan; // after end\n\n                  i1 = pp.length;\n                  this._cachedIndex = i1;\n                  return this.afterEnd_(i1 - 1, t, t0);\n                }\n\n                if (i1 === giveUpAt) break; // this loop\n\n                t0 = t1;\n                t1 = pp[++i1];\n\n                if (t < t1) {\n                  // we have arrived at the sought interval\n                  break seek;\n                }\n              } // prepare binary search on the right side of the index\n\n\n              right = pp.length;\n              break linear_scan;\n            } //- slower code:\n            //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n            if (!(t >= t0)) {\n              // looping?\n              var t1global = pp[1];\n\n              if (t < t1global) {\n                i1 = 2; // + 1, using the scan for the details\n\n                t0 = t1global;\n              } // linear reverse scan\n\n\n              for (var _giveUpAt = i1 - 2;;) {\n                if (t0 === undefined) {\n                  // before start\n                  this._cachedIndex = 0;\n                  return this.beforeStart_(0, t, t1);\n                }\n\n                if (i1 === _giveUpAt) break; // this loop\n\n                t1 = t0;\n                t0 = pp[--i1 - 1];\n\n                if (t >= t0) {\n                  // we have arrived at the sought interval\n                  break seek;\n                }\n              } // prepare binary search on the left side of the index\n\n\n              right = i1;\n              i1 = 0;\n              break linear_scan;\n            } // the interval is valid\n\n\n            break validate_interval;\n          } // linear scan\n          // binary search\n\n\n          while (i1 < right) {\n            var mid = i1 + right >>> 1;\n\n            if (t < pp[mid]) {\n              right = mid;\n            } else {\n              i1 = mid + 1;\n            }\n          }\n\n          t1 = pp[i1];\n          t0 = pp[i1 - 1]; // check boundary cases, again\n\n          if (t0 === undefined) {\n            this._cachedIndex = 0;\n            return this.beforeStart_(0, t, t1);\n          }\n\n          if (t1 === undefined) {\n            i1 = pp.length;\n            this._cachedIndex = i1;\n            return this.afterEnd_(i1 - 1, t0, t);\n          }\n        } // seek\n\n\n        this._cachedIndex = i1;\n        this.intervalChanged_(i1, t0, t1);\n      } // validate_interval\n\n\n      return this.interpolate_(i1, t0, t, t1);\n    },\n    settings: null,\n    // optional, subclass-specific settings structure\n    // Note: The indirection allows central control of many interpolants.\n    // --- Protected interface\n    DefaultSettings_: {},\n    getSettings_: function getSettings_() {\n      return this.settings || this.DefaultSettings_;\n    },\n    copySampleValue_: function copySampleValue_(index) {\n      // copies a sample value to the result buffer\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset = index * stride;\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = values[offset + i];\n      }\n\n      return result;\n    },\n    // Template methods for derived classes:\n    interpolate_: function interpolate_()\n    /* i1, t0, t, t1 */\n    {\n      throw new Error('call to abstract method'); // implementations shall return this.resultBuffer\n    },\n    intervalChanged_: function intervalChanged_()\n    /* i1, t0, t1 */\n    {// empty\n    }\n  }); // DECLARE ALIAS AFTER assign prototype\n\n  Object.assign(Interpolant.prototype, {\n    //( 0, t, t0 ), returns this.resultBuffer\n    beforeStart_: Interpolant.prototype.copySampleValue_,\n    //( N-1, tN-1, t ), returns this.resultBuffer\n    afterEnd_: Interpolant.prototype.copySampleValue_\n  });\n  /**\n   * Fast and simple cubic spline interpolant.\n   *\n   * It was derived from a Hermitian construction setting the first derivative\n   * at each sample position to the linear slope between neighboring positions\n   * over their parameter interval.\n   */\n\n  function CubicInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    this._weightPrev = -0;\n    this._offsetPrev = -0;\n    this._weightNext = -0;\n    this._offsetNext = -0;\n  }\n\n  CubicInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: CubicInterpolant,\n    DefaultSettings_: {\n      endingStart: ZeroCurvatureEnding,\n      endingEnd: ZeroCurvatureEnding\n    },\n    intervalChanged_: function intervalChanged_(i1, t0, t1) {\n      var pp = this.parameterPositions;\n      var iPrev = i1 - 2,\n          iNext = i1 + 1,\n          tPrev = pp[iPrev],\n          tNext = pp[iNext];\n\n      if (tPrev === undefined) {\n        switch (this.getSettings_().endingStart) {\n          case ZeroSlopeEnding:\n            // f'(t0) = 0\n            iPrev = i1;\n            tPrev = 2 * t0 - t1;\n            break;\n\n          case WrapAroundEnding:\n            // use the other end of the curve\n            iPrev = pp.length - 2;\n            tPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n            break;\n\n          default:\n            // ZeroCurvatureEnding\n            // f''(t0) = 0 a.k.a. Natural Spline\n            iPrev = i1;\n            tPrev = t1;\n        }\n      }\n\n      if (tNext === undefined) {\n        switch (this.getSettings_().endingEnd) {\n          case ZeroSlopeEnding:\n            // f'(tN) = 0\n            iNext = i1;\n            tNext = 2 * t1 - t0;\n            break;\n\n          case WrapAroundEnding:\n            // use the other end of the curve\n            iNext = 1;\n            tNext = t1 + pp[1] - pp[0];\n            break;\n\n          default:\n            // ZeroCurvatureEnding\n            // f''(tN) = 0, a.k.a. Natural Spline\n            iNext = i1 - 1;\n            tNext = t0;\n        }\n      }\n\n      var halfDt = (t1 - t0) * 0.5,\n          stride = this.valueSize;\n      this._weightPrev = halfDt / (t0 - tPrev);\n      this._weightNext = halfDt / (tNext - t1);\n      this._offsetPrev = iPrev * stride;\n      this._offsetNext = iNext * stride;\n    },\n    interpolate_: function interpolate_(i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          o1 = i1 * stride,\n          o0 = o1 - stride,\n          oP = this._offsetPrev,\n          oN = this._offsetNext,\n          wP = this._weightPrev,\n          wN = this._weightNext,\n          p = (t - t0) / (t1 - t0),\n          pp = p * p,\n          ppp = pp * p; // evaluate polynomials\n\n      var sP = -wP * ppp + 2 * wP * pp - wP * p;\n      var s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n      var s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n      var sN = wN * ppp - wN * pp; // combine data linearly\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n      }\n\n      return result;\n    }\n  });\n\n  function LinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  LinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: LinearInterpolant,\n    interpolate_: function interpolate_(i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset1 = i1 * stride,\n          offset0 = offset1 - stride,\n          weight1 = (t - t0) / (t1 - t0),\n          weight0 = 1 - weight1;\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n      }\n\n      return result;\n    }\n  });\n  /**\n   *\n   * Interpolant that evaluates to the sample value at the position preceeding\n   * the parameter.\n   */\n\n  function DiscreteInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  DiscreteInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: DiscreteInterpolant,\n    interpolate_: function interpolate_(i1\n    /*, t0, t, t1 */\n    ) {\n      return this.copySampleValue_(i1 - 1);\n    }\n  });\n\n  function KeyframeTrack(name, times, values, interpolation) {\n    if (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\n    if (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\n    this.name = name;\n    this.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n    this.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n    this.setInterpolation(interpolation || this.DefaultInterpolation);\n  } // Static methods\n\n\n  Object.assign(KeyframeTrack, {\n    // Serialization (in static context, because of constructor invocation\n    // and automatic invocation of .toJSON):\n    toJSON: function toJSON(track) {\n      var trackType = track.constructor;\n      var json; // derived classes can define a static toJSON method\n\n      if (trackType.toJSON !== undefined) {\n        json = trackType.toJSON(track);\n      } else {\n        // by default, we assume the data can be serialized as-is\n        json = {\n          'name': track.name,\n          'times': AnimationUtils.convertArray(track.times, Array),\n          'values': AnimationUtils.convertArray(track.values, Array)\n        };\n        var interpolation = track.getInterpolation();\n\n        if (interpolation !== track.DefaultInterpolation) {\n          json.interpolation = interpolation;\n        }\n      }\n\n      json.type = track.ValueTypeName; // mandatory\n\n      return json;\n    }\n  });\n  Object.assign(KeyframeTrack.prototype, {\n    constructor: KeyframeTrack,\n    TimeBufferType: Float32Array,\n    ValueBufferType: Float32Array,\n    DefaultInterpolation: InterpolateLinear,\n    InterpolantFactoryMethodDiscrete: function InterpolantFactoryMethodDiscrete(result) {\n      return new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodLinear: function InterpolantFactoryMethodLinear(result) {\n      return new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodSmooth: function InterpolantFactoryMethodSmooth(result) {\n      return new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    setInterpolation: function setInterpolation(interpolation) {\n      var factoryMethod;\n\n      switch (interpolation) {\n        case InterpolateDiscrete:\n          factoryMethod = this.InterpolantFactoryMethodDiscrete;\n          break;\n\n        case InterpolateLinear:\n          factoryMethod = this.InterpolantFactoryMethodLinear;\n          break;\n\n        case InterpolateSmooth:\n          factoryMethod = this.InterpolantFactoryMethodSmooth;\n          break;\n      }\n\n      if (factoryMethod === undefined) {\n        var message = 'unsupported interpolation for ' + this.ValueTypeName + ' keyframe track named ' + this.name;\n\n        if (this.createInterpolant === undefined) {\n          // fall back to default, unless the default itself is messed up\n          if (interpolation !== this.DefaultInterpolation) {\n            this.setInterpolation(this.DefaultInterpolation);\n          } else {\n            throw new Error(message); // fatal, in this case\n          }\n        }\n\n        console.warn('THREE.KeyframeTrack:', message);\n        return this;\n      }\n\n      this.createInterpolant = factoryMethod;\n      return this;\n    },\n    getInterpolation: function getInterpolation() {\n      switch (this.createInterpolant) {\n        case this.InterpolantFactoryMethodDiscrete:\n          return InterpolateDiscrete;\n\n        case this.InterpolantFactoryMethodLinear:\n          return InterpolateLinear;\n\n        case this.InterpolantFactoryMethodSmooth:\n          return InterpolateSmooth;\n      }\n    },\n    getValueSize: function getValueSize() {\n      return this.values.length / this.times.length;\n    },\n    // move all keyframes either forwards or backwards in time\n    shift: function shift(timeOffset) {\n      if (timeOffset !== 0.0) {\n        var times = this.times;\n\n        for (var i = 0, n = times.length; i !== n; ++i) {\n          times[i] += timeOffset;\n        }\n      }\n\n      return this;\n    },\n    // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n    scale: function scale(timeScale) {\n      if (timeScale !== 1.0) {\n        var times = this.times;\n\n        for (var i = 0, n = times.length; i !== n; ++i) {\n          times[i] *= timeScale;\n        }\n      }\n\n      return this;\n    },\n    // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n    // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n    trim: function trim(startTime, endTime) {\n      var times = this.times,\n          nKeys = times.length;\n      var from = 0,\n          to = nKeys - 1;\n\n      while (from !== nKeys && times[from] < startTime) {\n        ++from;\n      }\n\n      while (to !== -1 && times[to] > endTime) {\n        --to;\n      }\n\n      ++to; // inclusive -> exclusive bound\n\n      if (from !== 0 || to !== nKeys) {\n        // empty tracks are forbidden, so keep at least one keyframe\n        if (from >= to) {\n          to = Math.max(to, 1);\n          from = to - 1;\n        }\n\n        var stride = this.getValueSize();\n        this.times = AnimationUtils.arraySlice(times, from, to);\n        this.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n      }\n\n      return this;\n    },\n    // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n    validate: function validate() {\n      var valid = true;\n      var valueSize = this.getValueSize();\n\n      if (valueSize - Math.floor(valueSize) !== 0) {\n        console.error('THREE.KeyframeTrack: Invalid value size in track.', this);\n        valid = false;\n      }\n\n      var times = this.times,\n          values = this.values,\n          nKeys = times.length;\n\n      if (nKeys === 0) {\n        console.error('THREE.KeyframeTrack: Track is empty.', this);\n        valid = false;\n      }\n\n      var prevTime = null;\n\n      for (var i = 0; i !== nKeys; i++) {\n        var currTime = times[i];\n\n        if (typeof currTime === 'number' && isNaN(currTime)) {\n          console.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\n          valid = false;\n          break;\n        }\n\n        if (prevTime !== null && prevTime > currTime) {\n          console.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\n          valid = false;\n          break;\n        }\n\n        prevTime = currTime;\n      }\n\n      if (values !== undefined) {\n        if (AnimationUtils.isTypedArray(values)) {\n          for (var _i = 0, n = values.length; _i !== n; ++_i) {\n            var value = values[_i];\n\n            if (isNaN(value)) {\n              console.error('THREE.KeyframeTrack: Value is not a valid number.', this, _i, value);\n              valid = false;\n              break;\n            }\n          }\n        }\n      }\n\n      return valid;\n    },\n    // removes equivalent sequential keys as common in morph target sequences\n    // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n    optimize: function optimize() {\n      // times or values may be shared with other tracks, so overwriting is unsafe\n      var times = AnimationUtils.arraySlice(this.times),\n          values = AnimationUtils.arraySlice(this.values),\n          stride = this.getValueSize(),\n          smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n          lastIndex = times.length - 1;\n      var writeIndex = 1;\n\n      for (var i = 1; i < lastIndex; ++i) {\n        var keep = false;\n        var time = times[i];\n        var timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n        if (time !== timeNext && (i !== 1 || time !== times[0])) {\n          if (!smoothInterpolation) {\n            // remove unnecessary keyframes same as their neighbors\n            var offset = i * stride,\n                offsetP = offset - stride,\n                offsetN = offset + stride;\n\n            for (var j = 0; j !== stride; ++j) {\n              var value = values[offset + j];\n\n              if (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n                keep = true;\n                break;\n              }\n            }\n          } else {\n            keep = true;\n          }\n        } // in-place compaction\n\n\n        if (keep) {\n          if (i !== writeIndex) {\n            times[writeIndex] = times[i];\n            var readOffset = i * stride,\n                writeOffset = writeIndex * stride;\n\n            for (var _j = 0; _j !== stride; ++_j) {\n              values[writeOffset + _j] = values[readOffset + _j];\n            }\n          }\n\n          ++writeIndex;\n        }\n      } // flush last keyframe (compaction looks ahead)\n\n\n      if (lastIndex > 0) {\n        times[writeIndex] = times[lastIndex];\n\n        for (var _readOffset = lastIndex * stride, _writeOffset = writeIndex * stride, _j2 = 0; _j2 !== stride; ++_j2) {\n          values[_writeOffset + _j2] = values[_readOffset + _j2];\n        }\n\n        ++writeIndex;\n      }\n\n      if (writeIndex !== times.length) {\n        this.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n        this.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n      } else {\n        this.times = times;\n        this.values = values;\n      }\n\n      return this;\n    },\n    clone: function clone() {\n      var times = AnimationUtils.arraySlice(this.times, 0);\n      var values = AnimationUtils.arraySlice(this.values, 0);\n      var TypedKeyframeTrack = this.constructor;\n      var track = new TypedKeyframeTrack(this.name, times, values); // Interpolant argument to constructor is not saved, so copy the factory method directly.\n\n      track.createInterpolant = this.createInterpolant;\n      return track;\n    }\n  });\n  /**\n   * A Track of Boolean keyframe values.\n   */\n\n  function BooleanKeyframeTrack(name, times, values) {\n    KeyframeTrack.call(this, name, times, values);\n  }\n\n  BooleanKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: BooleanKeyframeTrack,\n    ValueTypeName: 'bool',\n    ValueBufferType: Array,\n    DefaultInterpolation: InterpolateDiscrete,\n    InterpolantFactoryMethodLinear: undefined,\n    InterpolantFactoryMethodSmooth: undefined // Note: Actually this track could have a optimized / compressed\n    // representation of a single value and a custom interpolant that\n    // computes \"firstValue ^ isOdd( index )\".\n\n  });\n  /**\n   * A Track of keyframe values that represent color.\n   */\n\n  function ColorKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  ColorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: ColorKeyframeTrack,\n    ValueTypeName: 'color' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n    // Note: Very basic implementation and nothing special yet.\n    // However, this is the place for color space parameterization.\n\n  });\n  /**\n   * A Track of numeric keyframe values.\n   */\n\n  function NumberKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  NumberKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: NumberKeyframeTrack,\n    ValueTypeName: 'number' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n\n  });\n  /**\n   * Spherical linear unit quaternion interpolant.\n   */\n\n  function QuaternionLinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  QuaternionLinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: QuaternionLinearInterpolant,\n    interpolate_: function interpolate_(i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          alpha = (t - t0) / (t1 - t0);\n      var offset = i1 * stride;\n\n      for (var end = offset + stride; offset !== end; offset += 4) {\n        Quaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n      }\n\n      return result;\n    }\n  });\n  /**\n   * A Track of quaternion keyframe values.\n   */\n\n  function QuaternionKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  QuaternionKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: QuaternionKeyframeTrack,\n    ValueTypeName: 'quaternion',\n    // ValueBufferType is inherited\n    DefaultInterpolation: InterpolateLinear,\n    InterpolantFactoryMethodLinear: function InterpolantFactoryMethodLinear(result) {\n      return new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n  });\n  /**\n   * A Track that interpolates Strings\n   */\n\n  function StringKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  StringKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: StringKeyframeTrack,\n    ValueTypeName: 'string',\n    ValueBufferType: Array,\n    DefaultInterpolation: InterpolateDiscrete,\n    InterpolantFactoryMethodLinear: undefined,\n    InterpolantFactoryMethodSmooth: undefined\n  });\n  /**\n   * A Track of vectored keyframe values.\n   */\n\n  function VectorKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  VectorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: VectorKeyframeTrack,\n    ValueTypeName: 'vector' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n\n  });\n\n  function AnimationClip(name, duration, tracks, blendMode) {\n    if (duration === void 0) {\n      duration = -1;\n    }\n\n    if (blendMode === void 0) {\n      blendMode = NormalAnimationBlendMode;\n    }\n\n    this.name = name;\n    this.tracks = tracks;\n    this.duration = duration;\n    this.blendMode = blendMode;\n    this.uuid = MathUtils.generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n    if (this.duration < 0) {\n      this.resetDuration();\n    }\n  }\n\n  function getTrackTypeForValueTypeName(typeName) {\n    switch (typeName.toLowerCase()) {\n      case 'scalar':\n      case 'double':\n      case 'float':\n      case 'number':\n      case 'integer':\n        return NumberKeyframeTrack;\n\n      case 'vector':\n      case 'vector2':\n      case 'vector3':\n      case 'vector4':\n        return VectorKeyframeTrack;\n\n      case 'color':\n        return ColorKeyframeTrack;\n\n      case 'quaternion':\n        return QuaternionKeyframeTrack;\n\n      case 'bool':\n      case 'boolean':\n        return BooleanKeyframeTrack;\n\n      case 'string':\n        return StringKeyframeTrack;\n    }\n\n    throw new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\n  }\n\n  function parseKeyframeTrack(json) {\n    if (json.type === undefined) {\n      throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');\n    }\n\n    var trackType = getTrackTypeForValueTypeName(json.type);\n\n    if (json.times === undefined) {\n      var times = [],\n          values = [];\n      AnimationUtils.flattenJSON(json.keys, times, values, 'value');\n      json.times = times;\n      json.values = values;\n    } // derived classes can define a static parse method\n\n\n    if (trackType.parse !== undefined) {\n      return trackType.parse(json);\n    } else {\n      // by default, we assume a constructor compatible with the base\n      return new trackType(json.name, json.times, json.values, json.interpolation);\n    }\n  }\n\n  Object.assign(AnimationClip, {\n    parse: function parse(json) {\n      var tracks = [],\n          jsonTracks = json.tracks,\n          frameTime = 1.0 / (json.fps || 1.0);\n\n      for (var i = 0, n = jsonTracks.length; i !== n; ++i) {\n        tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\n      }\n\n      var clip = new AnimationClip(json.name, json.duration, tracks, json.blendMode);\n      clip.uuid = json.uuid;\n      return clip;\n    },\n    toJSON: function toJSON(clip) {\n      var tracks = [],\n          clipTracks = clip.tracks;\n      var json = {\n        'name': clip.name,\n        'duration': clip.duration,\n        'tracks': tracks,\n        'uuid': clip.uuid,\n        'blendMode': clip.blendMode\n      };\n\n      for (var i = 0, n = clipTracks.length; i !== n; ++i) {\n        tracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n      }\n\n      return json;\n    },\n    CreateFromMorphTargetSequence: function CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\n      var numMorphTargets = morphTargetSequence.length;\n      var tracks = [];\n\n      for (var i = 0; i < numMorphTargets; i++) {\n        var times = [];\n        var values = [];\n        times.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n        values.push(0, 1, 0);\n        var order = AnimationUtils.getKeyframeOrder(times);\n        times = AnimationUtils.sortedArray(times, 1, order);\n        values = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n        // last frame as well for perfect loop.\n\n        if (!noLoop && times[0] === 0) {\n          times.push(numMorphTargets);\n          values.push(values[0]);\n        }\n\n        tracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n      }\n\n      return new AnimationClip(name, -1, tracks);\n    },\n    findByName: function findByName(objectOrClipArray, name) {\n      var clipArray = objectOrClipArray;\n\n      if (!Array.isArray(objectOrClipArray)) {\n        var o = objectOrClipArray;\n        clipArray = o.geometry && o.geometry.animations || o.animations;\n      }\n\n      for (var i = 0; i < clipArray.length; i++) {\n        if (clipArray[i].name === name) {\n          return clipArray[i];\n        }\n      }\n\n      return null;\n    },\n    CreateClipsFromMorphTargetSequences: function CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\n      var animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n      // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n      var pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n      // patterns like Walk_001, Walk_002, Run_001, Run_002\n\n      for (var i = 0, il = morphTargets.length; i < il; i++) {\n        var morphTarget = morphTargets[i];\n        var parts = morphTarget.name.match(pattern);\n\n        if (parts && parts.length > 1) {\n          var name = parts[1];\n          var animationMorphTargets = animationToMorphTargets[name];\n\n          if (!animationMorphTargets) {\n            animationToMorphTargets[name] = animationMorphTargets = [];\n          }\n\n          animationMorphTargets.push(morphTarget);\n        }\n      }\n\n      var clips = [];\n\n      for (var _name in animationToMorphTargets) {\n        clips.push(AnimationClip.CreateFromMorphTargetSequence(_name, animationToMorphTargets[_name], fps, noLoop));\n      }\n\n      return clips;\n    },\n    // parse the animation.hierarchy format\n    parseAnimation: function parseAnimation(animation, bones) {\n      if (!animation) {\n        console.error('THREE.AnimationClip: No animation in JSONLoader data.');\n        return null;\n      }\n\n      var addNonemptyTrack = function addNonemptyTrack(trackType, trackName, animationKeys, propertyName, destTracks) {\n        // only return track if there are actually keys.\n        if (animationKeys.length !== 0) {\n          var times = [];\n          var values = [];\n          AnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n          if (times.length !== 0) {\n            destTracks.push(new trackType(trackName, times, values));\n          }\n        }\n      };\n\n      var tracks = [];\n      var clipName = animation.name || 'default';\n      var fps = animation.fps || 30;\n      var blendMode = animation.blendMode; // automatic length determination in AnimationClip.\n\n      var duration = animation.length || -1;\n      var hierarchyTracks = animation.hierarchy || [];\n\n      for (var h = 0; h < hierarchyTracks.length; h++) {\n        var animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n        if (!animationKeys || animationKeys.length === 0) continue; // process morph targets\n\n        if (animationKeys[0].morphTargets) {\n          // figure out all morph targets used in this track\n          var morphTargetNames = {};\n          var k = void 0;\n\n          for (k = 0; k < animationKeys.length; k++) {\n            if (animationKeys[k].morphTargets) {\n              for (var m = 0; m < animationKeys[k].morphTargets.length; m++) {\n                morphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n              }\n            }\n          } // create a track for each morph target with all zero\n          // morphTargetInfluences except for the keys in which\n          // the morphTarget is named.\n\n\n          for (var morphTargetName in morphTargetNames) {\n            var times = [];\n            var values = [];\n\n            for (var _m = 0; _m !== animationKeys[k].morphTargets.length; ++_m) {\n              var animationKey = animationKeys[k];\n              times.push(animationKey.time);\n              values.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n            }\n\n            tracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n          }\n\n          duration = morphTargetNames.length * (fps || 1.0);\n        } else {\n          // ...assume skeletal animation\n          var boneName = '.bones[' + bones[h].name + ']';\n          addNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n          addNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n          addNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n        }\n      }\n\n      if (tracks.length === 0) {\n        return null;\n      }\n\n      var clip = new AnimationClip(clipName, duration, tracks, blendMode);\n      return clip;\n    }\n  });\n  Object.assign(AnimationClip.prototype, {\n    resetDuration: function resetDuration() {\n      var tracks = this.tracks;\n      var duration = 0;\n\n      for (var i = 0, n = tracks.length; i !== n; ++i) {\n        var track = this.tracks[i];\n        duration = Math.max(duration, track.times[track.times.length - 1]);\n      }\n\n      this.duration = duration;\n      return this;\n    },\n    trim: function trim() {\n      for (var i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].trim(0, this.duration);\n      }\n\n      return this;\n    },\n    validate: function validate() {\n      var valid = true;\n\n      for (var i = 0; i < this.tracks.length; i++) {\n        valid = valid && this.tracks[i].validate();\n      }\n\n      return valid;\n    },\n    optimize: function optimize() {\n      for (var i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].optimize();\n      }\n\n      return this;\n    },\n    clone: function clone() {\n      var tracks = [];\n\n      for (var i = 0; i < this.tracks.length; i++) {\n        tracks.push(this.tracks[i].clone());\n      }\n\n      return new AnimationClip(this.name, this.duration, tracks, this.blendMode);\n    },\n    toJSON: function toJSON() {\n      return AnimationClip.toJSON(this);\n    }\n  });\n  var Cache = {\n    enabled: false,\n    files: {},\n    add: function add(key, file) {\n      if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n      this.files[key] = file;\n    },\n    get: function get(key) {\n      if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n      return this.files[key];\n    },\n    remove: function remove(key) {\n      delete this.files[key];\n    },\n    clear: function clear() {\n      this.files = {};\n    }\n  };\n\n  function LoadingManager(onLoad, onProgress, onError) {\n    var scope = this;\n    var isLoading = false;\n    var itemsLoaded = 0;\n    var itemsTotal = 0;\n    var urlModifier = undefined;\n    var handlers = []; // Refer to #5689 for the reason why we don't set .onStart\n    // in the constructor\n\n    this.onStart = undefined;\n    this.onLoad = onLoad;\n    this.onProgress = onProgress;\n    this.onError = onError;\n\n    this.itemStart = function (url) {\n      itemsTotal++;\n\n      if (isLoading === false) {\n        if (scope.onStart !== undefined) {\n          scope.onStart(url, itemsLoaded, itemsTotal);\n        }\n      }\n\n      isLoading = true;\n    };\n\n    this.itemEnd = function (url) {\n      itemsLoaded++;\n\n      if (scope.onProgress !== undefined) {\n        scope.onProgress(url, itemsLoaded, itemsTotal);\n      }\n\n      if (itemsLoaded === itemsTotal) {\n        isLoading = false;\n\n        if (scope.onLoad !== undefined) {\n          scope.onLoad();\n        }\n      }\n    };\n\n    this.itemError = function (url) {\n      if (scope.onError !== undefined) {\n        scope.onError(url);\n      }\n    };\n\n    this.resolveURL = function (url) {\n      if (urlModifier) {\n        return urlModifier(url);\n      }\n\n      return url;\n    };\n\n    this.setURLModifier = function (transform) {\n      urlModifier = transform;\n      return this;\n    };\n\n    this.addHandler = function (regex, loader) {\n      handlers.push(regex, loader);\n      return this;\n    };\n\n    this.removeHandler = function (regex) {\n      var index = handlers.indexOf(regex);\n\n      if (index !== -1) {\n        handlers.splice(index, 2);\n      }\n\n      return this;\n    };\n\n    this.getHandler = function (file) {\n      for (var i = 0, l = handlers.length; i < l; i += 2) {\n        var regex = handlers[i];\n        var loader = handlers[i + 1];\n        if (regex.global) regex.lastIndex = 0; // see #17920\n\n        if (regex.test(file)) {\n          return loader;\n        }\n      }\n\n      return null;\n    };\n  }\n\n  var DefaultLoadingManager = new LoadingManager();\n\n  function Loader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.crossOrigin = 'anonymous';\n    this.withCredentials = false;\n    this.path = '';\n    this.resourcePath = '';\n    this.requestHeader = {};\n  }\n\n  Object.assign(Loader.prototype, {\n    load: function load()\n    /* url, onLoad, onProgress, onError */\n    {},\n    loadAsync: function loadAsync(url, onProgress) {\n      var scope = this;\n      return new Promise(function (resolve, reject) {\n        scope.load(url, resolve, onProgress, reject);\n      });\n    },\n    parse: function parse()\n    /* data */\n    {},\n    setCrossOrigin: function setCrossOrigin(crossOrigin) {\n      this.crossOrigin = crossOrigin;\n      return this;\n    },\n    setWithCredentials: function setWithCredentials(value) {\n      this.withCredentials = value;\n      return this;\n    },\n    setPath: function setPath(path) {\n      this.path = path;\n      return this;\n    },\n    setResourcePath: function setResourcePath(resourcePath) {\n      this.resourcePath = resourcePath;\n      return this;\n    },\n    setRequestHeader: function setRequestHeader(requestHeader) {\n      this.requestHeader = requestHeader;\n      return this;\n    }\n  });\n  var loading = {};\n\n  function FileLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  FileLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: FileLoader,\n    load: function load(url, onLoad, onProgress, onError) {\n      if (url === undefined) url = '';\n      if (this.path !== undefined) url = this.path + url;\n      url = this.manager.resolveURL(url);\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      } // Check if request is duplicate\n\n\n      if (loading[url] !== undefined) {\n        loading[url].push({\n          onLoad: onLoad,\n          onProgress: onProgress,\n          onError: onError\n        });\n        return;\n      } // Check for data: URI\n\n\n      var dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n      var dataUriRegexResult = url.match(dataUriRegex);\n      var request; // Safari can not handle Data URIs through XMLHttpRequest so process manually\n\n      if (dataUriRegexResult) {\n        var mimeType = dataUriRegexResult[1];\n        var isBase64 = !!dataUriRegexResult[2];\n        var data = dataUriRegexResult[3];\n        data = decodeURIComponent(data);\n        if (isBase64) data = atob(data);\n\n        try {\n          var response;\n          var responseType = (this.responseType || '').toLowerCase();\n\n          switch (responseType) {\n            case 'arraybuffer':\n            case 'blob':\n              var view = new Uint8Array(data.length);\n\n              for (var i = 0; i < data.length; i++) {\n                view[i] = data.charCodeAt(i);\n              }\n\n              if (responseType === 'blob') {\n                response = new Blob([view.buffer], {\n                  type: mimeType\n                });\n              } else {\n                response = view.buffer;\n              }\n\n              break;\n\n            case 'document':\n              var parser = new DOMParser();\n              response = parser.parseFromString(data, mimeType);\n              break;\n\n            case 'json':\n              response = JSON.parse(data);\n              break;\n\n            default:\n              // 'text' or other\n              response = data;\n              break;\n          } // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\n\n          setTimeout(function () {\n            if (onLoad) onLoad(response);\n            scope.manager.itemEnd(url);\n          }, 0);\n        } catch (error) {\n          // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n          setTimeout(function () {\n            if (onError) onError(error);\n            scope.manager.itemError(url);\n            scope.manager.itemEnd(url);\n          }, 0);\n        }\n      } else {\n        // Initialise array for duplicate requests\n        loading[url] = [];\n        loading[url].push({\n          onLoad: onLoad,\n          onProgress: onProgress,\n          onError: onError\n        });\n        request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.addEventListener('load', function (event) {\n          var response = this.response;\n          var callbacks = loading[url];\n          delete loading[url];\n\n          if (this.status === 200 || this.status === 0) {\n            // Some browsers return HTTP Status 0 when using non-http protocol\n            // e.g. 'file://' or 'data://'. Handle as success.\n            if (this.status === 0) console.warn('THREE.FileLoader: HTTP Status 0 received.'); // Add to cache only on HTTP success, so that we do not cache\n            // error response bodies as proper responses to requests.\n\n            Cache.add(url, response);\n\n            for (var _i = 0, il = callbacks.length; _i < il; _i++) {\n              var callback = callbacks[_i];\n              if (callback.onLoad) callback.onLoad(response);\n            }\n\n            scope.manager.itemEnd(url);\n          } else {\n            for (var _i2 = 0, _il = callbacks.length; _i2 < _il; _i2++) {\n              var _callback = callbacks[_i2];\n              if (_callback.onError) _callback.onError(event);\n            }\n\n            scope.manager.itemError(url);\n            scope.manager.itemEnd(url);\n          }\n        }, false);\n        request.addEventListener('progress', function (event) {\n          var callbacks = loading[url];\n\n          for (var _i3 = 0, il = callbacks.length; _i3 < il; _i3++) {\n            var callback = callbacks[_i3];\n            if (callback.onProgress) callback.onProgress(event);\n          }\n        }, false);\n        request.addEventListener('error', function (event) {\n          var callbacks = loading[url];\n          delete loading[url];\n\n          for (var _i4 = 0, il = callbacks.length; _i4 < il; _i4++) {\n            var callback = callbacks[_i4];\n            if (callback.onError) callback.onError(event);\n          }\n\n          scope.manager.itemError(url);\n          scope.manager.itemEnd(url);\n        }, false);\n        request.addEventListener('abort', function (event) {\n          var callbacks = loading[url];\n          delete loading[url];\n\n          for (var _i5 = 0, il = callbacks.length; _i5 < il; _i5++) {\n            var callback = callbacks[_i5];\n            if (callback.onError) callback.onError(event);\n          }\n\n          scope.manager.itemError(url);\n          scope.manager.itemEnd(url);\n        }, false);\n        if (this.responseType !== undefined) request.responseType = this.responseType;\n        if (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\n        if (request.overrideMimeType) request.overrideMimeType(this.mimeType !== undefined ? this.mimeType : 'text/plain');\n\n        for (var header in this.requestHeader) {\n          request.setRequestHeader(header, this.requestHeader[header]);\n        }\n\n        request.send(null);\n      }\n\n      scope.manager.itemStart(url);\n      return request;\n    },\n    setResponseType: function setResponseType(value) {\n      this.responseType = value;\n      return this;\n    },\n    setMimeType: function setMimeType(value) {\n      this.mimeType = value;\n      return this;\n    }\n  });\n\n  function AnimationLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  AnimationLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: AnimationLoader,\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.setRequestHeader(scope.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(JSON.parse(text)));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    },\n    parse: function parse(json) {\n      var animations = [];\n\n      for (var i = 0; i < json.length; i++) {\n        var clip = AnimationClip.parse(json[i]);\n        animations.push(clip);\n      }\n\n      return animations;\n    }\n  });\n  /**\n   * Abstract Base class to block based textures loader (dds, pvr, ...)\n   *\n   * Sub classes have to implement the parse() method which will be used in load().\n   */\n\n  function CompressedTextureLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  CompressedTextureLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: CompressedTextureLoader,\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var images = [];\n      var texture = new CompressedTexture();\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setResponseType('arraybuffer');\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      var loaded = 0;\n\n      function loadTexture(i) {\n        loader.load(url[i], function (buffer) {\n          var texDatas = scope.parse(buffer, true);\n          images[i] = {\n            width: texDatas.width,\n            height: texDatas.height,\n            format: texDatas.format,\n            mipmaps: texDatas.mipmaps\n          };\n          loaded += 1;\n\n          if (loaded === 6) {\n            if (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n            texture.image = images;\n            texture.format = texDatas.format;\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }\n        }, onProgress, onError);\n      }\n\n      if (Array.isArray(url)) {\n        for (var i = 0, il = url.length; i < il; ++i) {\n          loadTexture(i);\n        }\n      } else {\n        // compressed cubemap texture stored in a single DDS file\n        loader.load(url, function (buffer) {\n          var texDatas = scope.parse(buffer, true);\n\n          if (texDatas.isCubemap) {\n            var faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n            for (var f = 0; f < faces; f++) {\n              images[f] = {\n                mipmaps: []\n              };\n\n              for (var _i = 0; _i < texDatas.mipmapCount; _i++) {\n                images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + _i]);\n                images[f].format = texDatas.format;\n                images[f].width = texDatas.width;\n                images[f].height = texDatas.height;\n              }\n            }\n\n            texture.image = images;\n          } else {\n            texture.image.width = texDatas.width;\n            texture.image.height = texDatas.height;\n            texture.mipmaps = texDatas.mipmaps;\n          }\n\n          if (texDatas.mipmapCount === 1) {\n            texture.minFilter = LinearFilter;\n          }\n\n          texture.format = texDatas.format;\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }, onProgress, onError);\n      }\n\n      return texture;\n    }\n  });\n\n  function ImageLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  ImageLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: ImageLoader,\n    load: function load(url, onLoad, onProgress, onError) {\n      if (this.path !== undefined) url = this.path + url;\n      url = this.manager.resolveURL(url);\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      }\n\n      var image = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\n\n      function onImageLoad() {\n        image.removeEventListener('load', onImageLoad, false);\n        image.removeEventListener('error', onImageError, false);\n        Cache.add(url, this);\n        if (onLoad) onLoad(this);\n        scope.manager.itemEnd(url);\n      }\n\n      function onImageError(event) {\n        image.removeEventListener('load', onImageLoad, false);\n        image.removeEventListener('error', onImageError, false);\n        if (onError) onError(event);\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      }\n\n      image.addEventListener('load', onImageLoad, false);\n      image.addEventListener('error', onImageError, false);\n\n      if (url.substr(0, 5) !== 'data:') {\n        if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n      }\n\n      scope.manager.itemStart(url);\n      image.src = url;\n      return image;\n    }\n  });\n\n  function CubeTextureLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  CubeTextureLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: CubeTextureLoader,\n    load: function load(urls, onLoad, onProgress, onError) {\n      var texture = new CubeTexture();\n      var loader = new ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      loader.setPath(this.path);\n      var loaded = 0;\n\n      function loadTexture(i) {\n        loader.load(urls[i], function (image) {\n          texture.images[i] = image;\n          loaded++;\n\n          if (loaded === 6) {\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }\n        }, undefined, onError);\n      }\n\n      for (var i = 0; i < urls.length; ++i) {\n        loadTexture(i);\n      }\n\n      return texture;\n    }\n  });\n  /**\n   * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n   *\n   * Sub classes have to implement the parse() method which will be used in load().\n   */\n\n  function DataTextureLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  DataTextureLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: DataTextureLoader,\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var texture = new DataTexture();\n      var loader = new FileLoader(this.manager);\n      loader.setResponseType('arraybuffer');\n      loader.setRequestHeader(this.requestHeader);\n      loader.setPath(this.path);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (buffer) {\n        var texData = scope.parse(buffer);\n        if (!texData) return;\n\n        if (texData.image !== undefined) {\n          texture.image = texData.image;\n        } else if (texData.data !== undefined) {\n          texture.image.width = texData.width;\n          texture.image.height = texData.height;\n          texture.image.data = texData.data;\n        }\n\n        texture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n        texture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n        texture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n        texture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n        texture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n        if (texData.encoding !== undefined) {\n          texture.encoding = texData.encoding;\n        }\n\n        if (texData.flipY !== undefined) {\n          texture.flipY = texData.flipY;\n        }\n\n        if (texData.format !== undefined) {\n          texture.format = texData.format;\n        }\n\n        if (texData.type !== undefined) {\n          texture.type = texData.type;\n        }\n\n        if (texData.mipmaps !== undefined) {\n          texture.mipmaps = texData.mipmaps;\n          texture.minFilter = LinearMipmapLinearFilter; // presumably...\n        }\n\n        if (texData.mipmapCount === 1) {\n          texture.minFilter = LinearFilter;\n        }\n\n        texture.needsUpdate = true;\n        if (onLoad) onLoad(texture, texData);\n      }, onProgress, onError);\n      return texture;\n    }\n  });\n\n  function TextureLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  TextureLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: TextureLoader,\n    load: function load(url, onLoad, onProgress, onError) {\n      var texture = new Texture();\n      var loader = new ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      loader.setPath(this.path);\n      loader.load(url, function (image) {\n        texture.image = image; // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\n        var isJPEG = url.search(/\\.jpe?g($|\\?)/i) > 0 || url.search(/^data\\:image\\/jpeg/) === 0;\n        texture.format = isJPEG ? RGBFormat : RGBAFormat;\n        texture.needsUpdate = true;\n\n        if (onLoad !== undefined) {\n          onLoad(texture);\n        }\n      }, onProgress, onError);\n      return texture;\n    }\n  });\n  /**\n   * Extensible curve object.\n   *\n   * Some common of curve methods:\n   * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n   * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n   * .getPoints(), .getSpacedPoints()\n   * .getLength()\n   * .updateArcLengths()\n   *\n   * This following curves inherit from THREE.Curve:\n   *\n   * -- 2D curves --\n   * THREE.ArcCurve\n   * THREE.CubicBezierCurve\n   * THREE.EllipseCurve\n   * THREE.LineCurve\n   * THREE.QuadraticBezierCurve\n   * THREE.SplineCurve\n   *\n   * -- 3D curves --\n   * THREE.CatmullRomCurve3\n   * THREE.CubicBezierCurve3\n   * THREE.LineCurve3\n   * THREE.QuadraticBezierCurve3\n   *\n   * A series of curves can be represented as a THREE.CurvePath.\n   *\n   **/\n\n  function Curve() {\n    this.type = 'Curve';\n    this.arcLengthDivisions = 200;\n  }\n\n  Object.assign(Curve.prototype, {\n    // Virtual base class method to overwrite and implement in subclasses\n    //\t- t [0 .. 1]\n    getPoint: function getPoint()\n    /* t, optionalTarget */\n    {\n      console.warn('THREE.Curve: .getPoint() not implemented.');\n      return null;\n    },\n    // Get point at relative position in curve according to arc length\n    // - u [0 .. 1]\n    getPointAt: function getPointAt(u, optionalTarget) {\n      var t = this.getUtoTmapping(u);\n      return this.getPoint(t, optionalTarget);\n    },\n    // Get sequence of points using getPoint( t )\n    getPoints: function getPoints(divisions) {\n      if (divisions === void 0) {\n        divisions = 5;\n      }\n\n      var points = [];\n\n      for (var d = 0; d <= divisions; d++) {\n        points.push(this.getPoint(d / divisions));\n      }\n\n      return points;\n    },\n    // Get sequence of points using getPointAt( u )\n    getSpacedPoints: function getSpacedPoints(divisions) {\n      if (divisions === void 0) {\n        divisions = 5;\n      }\n\n      var points = [];\n\n      for (var d = 0; d <= divisions; d++) {\n        points.push(this.getPointAt(d / divisions));\n      }\n\n      return points;\n    },\n    // Get total curve arc length\n    getLength: function getLength() {\n      var lengths = this.getLengths();\n      return lengths[lengths.length - 1];\n    },\n    // Get list of cumulative segment lengths\n    getLengths: function getLengths(divisions) {\n      if (divisions === undefined) divisions = this.arcLengthDivisions;\n\n      if (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n        return this.cacheArcLengths;\n      }\n\n      this.needsUpdate = false;\n      var cache = [];\n      var current,\n          last = this.getPoint(0);\n      var sum = 0;\n      cache.push(0);\n\n      for (var p = 1; p <= divisions; p++) {\n        current = this.getPoint(p / divisions);\n        sum += current.distanceTo(last);\n        cache.push(sum);\n        last = current;\n      }\n\n      this.cacheArcLengths = cache;\n      return cache; // { sums: cache, sum: sum }; Sum is in the last element.\n    },\n    updateArcLengths: function updateArcLengths() {\n      this.needsUpdate = true;\n      this.getLengths();\n    },\n    // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n    getUtoTmapping: function getUtoTmapping(u, distance) {\n      var arcLengths = this.getLengths();\n      var i = 0;\n      var il = arcLengths.length;\n      var targetArcLength; // The targeted u distance value to get\n\n      if (distance) {\n        targetArcLength = distance;\n      } else {\n        targetArcLength = u * arcLengths[il - 1];\n      } // binary search for the index with largest value smaller than target u distance\n\n\n      var low = 0,\n          high = il - 1,\n          comparison;\n\n      while (low <= high) {\n        i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n        comparison = arcLengths[i] - targetArcLength;\n\n        if (comparison < 0) {\n          low = i + 1;\n        } else if (comparison > 0) {\n          high = i - 1;\n        } else {\n          high = i;\n          break; // DONE\n        }\n      }\n\n      i = high;\n\n      if (arcLengths[i] === targetArcLength) {\n        return i / (il - 1);\n      } // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n      var lengthBefore = arcLengths[i];\n      var lengthAfter = arcLengths[i + 1];\n      var segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n      var segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n      var t = (i + segmentFraction) / (il - 1);\n      return t;\n    },\n    // Returns a unit vector tangent at t\n    // In case any sub curve does not implement its tangent derivation,\n    // 2 points a small delta apart will be used to find its gradient\n    // which seems to give a reasonable approximation\n    getTangent: function getTangent(t, optionalTarget) {\n      var delta = 0.0001;\n      var t1 = t - delta;\n      var t2 = t + delta; // Capping in case of danger\n\n      if (t1 < 0) t1 = 0;\n      if (t2 > 1) t2 = 1;\n      var pt1 = this.getPoint(t1);\n      var pt2 = this.getPoint(t2);\n      var tangent = optionalTarget || (pt1.isVector2 ? new Vector2() : new Vector3());\n      tangent.copy(pt2).sub(pt1).normalize();\n      return tangent;\n    },\n    getTangentAt: function getTangentAt(u, optionalTarget) {\n      var t = this.getUtoTmapping(u);\n      return this.getTangent(t, optionalTarget);\n    },\n    computeFrenetFrames: function computeFrenetFrames(segments, closed) {\n      // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n      var normal = new Vector3();\n      var tangents = [];\n      var normals = [];\n      var binormals = [];\n      var vec = new Vector3();\n      var mat = new Matrix4(); // compute the tangent vectors for each segment on the curve\n\n      for (var i = 0; i <= segments; i++) {\n        var u = i / segments;\n        tangents[i] = this.getTangentAt(u, new Vector3());\n        tangents[i].normalize();\n      } // select an initial normal vector perpendicular to the first tangent vector,\n      // and in the direction of the minimum tangent xyz component\n\n\n      normals[0] = new Vector3();\n      binormals[0] = new Vector3();\n      var min = Number.MAX_VALUE;\n      var tx = Math.abs(tangents[0].x);\n      var ty = Math.abs(tangents[0].y);\n      var tz = Math.abs(tangents[0].z);\n\n      if (tx <= min) {\n        min = tx;\n        normal.set(1, 0, 0);\n      }\n\n      if (ty <= min) {\n        min = ty;\n        normal.set(0, 1, 0);\n      }\n\n      if (tz <= min) {\n        normal.set(0, 0, 1);\n      }\n\n      vec.crossVectors(tangents[0], normal).normalize();\n      normals[0].crossVectors(tangents[0], vec);\n      binormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n      for (var _i = 1; _i <= segments; _i++) {\n        normals[_i] = normals[_i - 1].clone();\n        binormals[_i] = binormals[_i - 1].clone();\n        vec.crossVectors(tangents[_i - 1], tangents[_i]);\n\n        if (vec.length() > Number.EPSILON) {\n          vec.normalize();\n          var theta = Math.acos(MathUtils.clamp(tangents[_i - 1].dot(tangents[_i]), -1, 1)); // clamp for floating pt errors\n\n          normals[_i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n        }\n\n        binormals[_i].crossVectors(tangents[_i], normals[_i]);\n      } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n      if (closed === true) {\n        var _theta = Math.acos(MathUtils.clamp(normals[0].dot(normals[segments]), -1, 1));\n\n        _theta /= segments;\n\n        if (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n          _theta = -_theta;\n        }\n\n        for (var _i2 = 1; _i2 <= segments; _i2++) {\n          // twist a little...\n          normals[_i2].applyMatrix4(mat.makeRotationAxis(tangents[_i2], _theta * _i2));\n\n          binormals[_i2].crossVectors(tangents[_i2], normals[_i2]);\n        }\n      }\n\n      return {\n        tangents: tangents,\n        normals: normals,\n        binormals: binormals\n      };\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(source) {\n      this.arcLengthDivisions = source.arcLengthDivisions;\n      return this;\n    },\n    toJSON: function toJSON() {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Curve',\n          generator: 'Curve.toJSON'\n        }\n      };\n      data.arcLengthDivisions = this.arcLengthDivisions;\n      data.type = this.type;\n      return data;\n    },\n    fromJSON: function fromJSON(json) {\n      this.arcLengthDivisions = json.arcLengthDivisions;\n      return this;\n    }\n  });\n\n  function EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    Curve.call(this);\n    this.type = 'EllipseCurve';\n    this.aX = aX || 0;\n    this.aY = aY || 0;\n    this.xRadius = xRadius || 1;\n    this.yRadius = yRadius || 1;\n    this.aStartAngle = aStartAngle || 0;\n    this.aEndAngle = aEndAngle || 2 * Math.PI;\n    this.aClockwise = aClockwise || false;\n    this.aRotation = aRotation || 0;\n  }\n\n  EllipseCurve.prototype = Object.create(Curve.prototype);\n  EllipseCurve.prototype.constructor = EllipseCurve;\n  EllipseCurve.prototype.isEllipseCurve = true;\n\n  EllipseCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n    var twoPi = Math.PI * 2;\n    var deltaAngle = this.aEndAngle - this.aStartAngle;\n    var samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n    while (deltaAngle < 0) {\n      deltaAngle += twoPi;\n    }\n\n    while (deltaAngle > twoPi) {\n      deltaAngle -= twoPi;\n    }\n\n    if (deltaAngle < Number.EPSILON) {\n      if (samePoints) {\n        deltaAngle = 0;\n      } else {\n        deltaAngle = twoPi;\n      }\n    }\n\n    if (this.aClockwise === true && !samePoints) {\n      if (deltaAngle === twoPi) {\n        deltaAngle = -twoPi;\n      } else {\n        deltaAngle = deltaAngle - twoPi;\n      }\n    }\n\n    var angle = this.aStartAngle + t * deltaAngle;\n    var x = this.aX + this.xRadius * Math.cos(angle);\n    var y = this.aY + this.yRadius * Math.sin(angle);\n\n    if (this.aRotation !== 0) {\n      var cos = Math.cos(this.aRotation);\n      var sin = Math.sin(this.aRotation);\n      var tx = x - this.aX;\n      var ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n      x = tx * cos - ty * sin + this.aX;\n      y = tx * sin + ty * cos + this.aY;\n    }\n\n    return point.set(x, y);\n  };\n\n  EllipseCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.aX = source.aX;\n    this.aY = source.aY;\n    this.xRadius = source.xRadius;\n    this.yRadius = source.yRadius;\n    this.aStartAngle = source.aStartAngle;\n    this.aEndAngle = source.aEndAngle;\n    this.aClockwise = source.aClockwise;\n    this.aRotation = source.aRotation;\n    return this;\n  };\n\n  EllipseCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.aX = this.aX;\n    data.aY = this.aY;\n    data.xRadius = this.xRadius;\n    data.yRadius = this.yRadius;\n    data.aStartAngle = this.aStartAngle;\n    data.aEndAngle = this.aEndAngle;\n    data.aClockwise = this.aClockwise;\n    data.aRotation = this.aRotation;\n    return data;\n  };\n\n  EllipseCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.aX = json.aX;\n    this.aY = json.aY;\n    this.xRadius = json.xRadius;\n    this.yRadius = json.yRadius;\n    this.aStartAngle = json.aStartAngle;\n    this.aEndAngle = json.aEndAngle;\n    this.aClockwise = json.aClockwise;\n    this.aRotation = json.aRotation;\n    return this;\n  };\n\n  function ArcCurve(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    EllipseCurve.call(this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n    this.type = 'ArcCurve';\n  }\n\n  ArcCurve.prototype = Object.create(EllipseCurve.prototype);\n  ArcCurve.prototype.constructor = ArcCurve;\n  ArcCurve.prototype.isArcCurve = true;\n  /**\n   * Centripetal CatmullRom Curve - which is useful for avoiding\n   * cusps and self-intersections in non-uniform catmull rom curves.\n   * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n   *\n   * curve.type accepts centripetal(default), chordal and catmullrom\n   * curve.tension is used for catmullrom which defaults to 0.5\n   */\n\n  /*\n  Based on an optimized c++ solution in\n   - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n   - http://ideone.com/NoEbVM\n  \tThis CubicPoly class could be used for reusing some variables and calculations,\n  but for three.js curve use, it could be possible inlined and flatten into a single function call\n  which can be placed in CurveUtils.\n  */\n\n  function CubicPoly() {\n    var c0 = 0,\n        c1 = 0,\n        c2 = 0,\n        c3 = 0;\n    /*\n     * Compute coefficients for a cubic polynomial\n     *\t p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n     * such that\n     *\t p(0) = x0, p(1) = x1\n     *\tand\n     *\t p'(0) = t0, p'(1) = t1.\n     */\n\n    function init(x0, x1, t0, t1) {\n      c0 = x0;\n      c1 = t0;\n      c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n      c3 = 2 * x0 - 2 * x1 + t0 + t1;\n    }\n\n    return {\n      initCatmullRom: function initCatmullRom(x0, x1, x2, x3, tension) {\n        init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n      },\n      initNonuniformCatmullRom: function initNonuniformCatmullRom(x0, x1, x2, x3, dt0, dt1, dt2) {\n        // compute tangents when parameterized in [t1,t2]\n        var t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n        var t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n        t1 *= dt1;\n        t2 *= dt1;\n        init(x1, x2, t1, t2);\n      },\n      calc: function calc(t) {\n        var t2 = t * t;\n        var t3 = t2 * t;\n        return c0 + c1 * t + c2 * t2 + c3 * t3;\n      }\n    };\n  } //\n\n\n  var tmp = new Vector3();\n  var px = new CubicPoly(),\n      py = new CubicPoly(),\n      pz = new CubicPoly();\n\n  function CatmullRomCurve3(points, closed, curveType, tension) {\n    if (points === void 0) {\n      points = [];\n    }\n\n    if (closed === void 0) {\n      closed = false;\n    }\n\n    if (curveType === void 0) {\n      curveType = 'centripetal';\n    }\n\n    if (tension === void 0) {\n      tension = 0.5;\n    }\n\n    Curve.call(this);\n    this.type = 'CatmullRomCurve3';\n    this.points = points;\n    this.closed = closed;\n    this.curveType = curveType;\n    this.tension = tension;\n  }\n\n  CatmullRomCurve3.prototype = Object.create(Curve.prototype);\n  CatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n  CatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n  CatmullRomCurve3.prototype.getPoint = function (t, optionalTarget) {\n    if (optionalTarget === void 0) {\n      optionalTarget = new Vector3();\n    }\n\n    var point = optionalTarget;\n    var points = this.points;\n    var l = points.length;\n    var p = (l - (this.closed ? 0 : 1)) * t;\n    var intPoint = Math.floor(p);\n    var weight = p - intPoint;\n\n    if (this.closed) {\n      intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n    } else if (weight === 0 && intPoint === l - 1) {\n      intPoint = l - 2;\n      weight = 1;\n    }\n\n    var p0, p3; // 4 points (p1 & p2 defined below)\n\n    if (this.closed || intPoint > 0) {\n      p0 = points[(intPoint - 1) % l];\n    } else {\n      // extrapolate first point\n      tmp.subVectors(points[0], points[1]).add(points[0]);\n      p0 = tmp;\n    }\n\n    var p1 = points[intPoint % l];\n    var p2 = points[(intPoint + 1) % l];\n\n    if (this.closed || intPoint + 2 < l) {\n      p3 = points[(intPoint + 2) % l];\n    } else {\n      // extrapolate last point\n      tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n      p3 = tmp;\n    }\n\n    if (this.curveType === 'centripetal' || this.curveType === 'chordal') {\n      // init Centripetal / Chordal Catmull-Rom\n      var pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n      var dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n      var dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n      var dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n      if (dt1 < 1e-4) dt1 = 1.0;\n      if (dt0 < 1e-4) dt0 = dt1;\n      if (dt2 < 1e-4) dt2 = dt1;\n      px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n      py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n      pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n    } else if (this.curveType === 'catmullrom') {\n      px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n      py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n      pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n    }\n\n    point.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n    return point;\n  };\n\n  CatmullRomCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.points = [];\n\n    for (var i = 0, l = source.points.length; i < l; i++) {\n      var point = source.points[i];\n      this.points.push(point.clone());\n    }\n\n    this.closed = source.closed;\n    this.curveType = source.curveType;\n    this.tension = source.tension;\n    return this;\n  };\n\n  CatmullRomCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.points = [];\n\n    for (var i = 0, l = this.points.length; i < l; i++) {\n      var point = this.points[i];\n      data.points.push(point.toArray());\n    }\n\n    data.closed = this.closed;\n    data.curveType = this.curveType;\n    data.tension = this.tension;\n    return data;\n  };\n\n  CatmullRomCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.points = [];\n\n    for (var i = 0, l = json.points.length; i < l; i++) {\n      var point = json.points[i];\n      this.points.push(new Vector3().fromArray(point));\n    }\n\n    this.closed = json.closed;\n    this.curveType = json.curveType;\n    this.tension = json.tension;\n    return this;\n  };\n  /**\n   * Bezier Curves formulas obtained from\n   * http://en.wikipedia.org/wiki/Bézier_curve\n   */\n\n\n  function CatmullRom(t, p0, p1, p2, p3) {\n    var v0 = (p2 - p0) * 0.5;\n    var v1 = (p3 - p1) * 0.5;\n    var t2 = t * t;\n    var t3 = t * t2;\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n  } //\n\n\n  function QuadraticBezierP0(t, p) {\n    var k = 1 - t;\n    return k * k * p;\n  }\n\n  function QuadraticBezierP1(t, p) {\n    return 2 * (1 - t) * t * p;\n  }\n\n  function QuadraticBezierP2(t, p) {\n    return t * t * p;\n  }\n\n  function QuadraticBezier(t, p0, p1, p2) {\n    return QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n  } //\n\n\n  function CubicBezierP0(t, p) {\n    var k = 1 - t;\n    return k * k * k * p;\n  }\n\n  function CubicBezierP1(t, p) {\n    var k = 1 - t;\n    return 3 * k * k * t * p;\n  }\n\n  function CubicBezierP2(t, p) {\n    return 3 * (1 - t) * t * t * p;\n  }\n\n  function CubicBezierP3(t, p) {\n    return t * t * t * p;\n  }\n\n  function CubicBezier(t, p0, p1, p2, p3) {\n    return CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n  }\n\n  function CubicBezierCurve(v0, v1, v2, v3) {\n    if (v0 === void 0) {\n      v0 = new Vector2();\n    }\n\n    if (v1 === void 0) {\n      v1 = new Vector2();\n    }\n\n    if (v2 === void 0) {\n      v2 = new Vector2();\n    }\n\n    if (v3 === void 0) {\n      v3 = new Vector2();\n    }\n\n    Curve.call(this);\n    this.type = 'CubicBezierCurve';\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n    this.v3 = v3;\n  }\n\n  CubicBezierCurve.prototype = Object.create(Curve.prototype);\n  CubicBezierCurve.prototype.constructor = CubicBezierCurve;\n  CubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n  CubicBezierCurve.prototype.getPoint = function (t, optionalTarget) {\n    if (optionalTarget === void 0) {\n      optionalTarget = new Vector2();\n    }\n\n    var point = optionalTarget;\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2,\n        v3 = this.v3;\n    point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n    return point;\n  };\n\n  CubicBezierCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    this.v3.copy(source.v3);\n    return this;\n  };\n\n  CubicBezierCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    data.v3 = this.v3.toArray();\n    return data;\n  };\n\n  CubicBezierCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    this.v3.fromArray(json.v3);\n    return this;\n  };\n\n  function CubicBezierCurve3(v0, v1, v2, v3) {\n    if (v0 === void 0) {\n      v0 = new Vector3();\n    }\n\n    if (v1 === void 0) {\n      v1 = new Vector3();\n    }\n\n    if (v2 === void 0) {\n      v2 = new Vector3();\n    }\n\n    if (v3 === void 0) {\n      v3 = new Vector3();\n    }\n\n    Curve.call(this);\n    this.type = 'CubicBezierCurve3';\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n    this.v3 = v3;\n  }\n\n  CubicBezierCurve3.prototype = Object.create(Curve.prototype);\n  CubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n  CubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n  CubicBezierCurve3.prototype.getPoint = function (t, optionalTarget) {\n    if (optionalTarget === void 0) {\n      optionalTarget = new Vector3();\n    }\n\n    var point = optionalTarget;\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2,\n        v3 = this.v3;\n    point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n    return point;\n  };\n\n  CubicBezierCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    this.v3.copy(source.v3);\n    return this;\n  };\n\n  CubicBezierCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    data.v3 = this.v3.toArray();\n    return data;\n  };\n\n  CubicBezierCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    this.v3.fromArray(json.v3);\n    return this;\n  };\n\n  function LineCurve(v1, v2) {\n    if (v1 === void 0) {\n      v1 = new Vector2();\n    }\n\n    if (v2 === void 0) {\n      v2 = new Vector2();\n    }\n\n    Curve.call(this);\n    this.type = 'LineCurve';\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n\n  LineCurve.prototype = Object.create(Curve.prototype);\n  LineCurve.prototype.constructor = LineCurve;\n  LineCurve.prototype.isLineCurve = true;\n\n  LineCurve.prototype.getPoint = function (t, optionalTarget) {\n    if (optionalTarget === void 0) {\n      optionalTarget = new Vector2();\n    }\n\n    var point = optionalTarget;\n\n    if (t === 1) {\n      point.copy(this.v2);\n    } else {\n      point.copy(this.v2).sub(this.v1);\n      point.multiplyScalar(t).add(this.v1);\n    }\n\n    return point;\n  }; // Line curve is linear, so we can overwrite default getPointAt\n\n\n  LineCurve.prototype.getPointAt = function (u, optionalTarget) {\n    return this.getPoint(u, optionalTarget);\n  };\n\n  LineCurve.prototype.getTangent = function (t, optionalTarget) {\n    var tangent = optionalTarget || new Vector2();\n    tangent.copy(this.v2).sub(this.v1).normalize();\n    return tangent;\n  };\n\n  LineCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  LineCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  LineCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function LineCurve3(v1, v2) {\n    if (v1 === void 0) {\n      v1 = new Vector3();\n    }\n\n    if (v2 === void 0) {\n      v2 = new Vector3();\n    }\n\n    Curve.call(this);\n    this.type = 'LineCurve3';\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n\n  LineCurve3.prototype = Object.create(Curve.prototype);\n  LineCurve3.prototype.constructor = LineCurve3;\n  LineCurve3.prototype.isLineCurve3 = true;\n\n  LineCurve3.prototype.getPoint = function (t, optionalTarget) {\n    if (optionalTarget === void 0) {\n      optionalTarget = new Vector3();\n    }\n\n    var point = optionalTarget;\n\n    if (t === 1) {\n      point.copy(this.v2);\n    } else {\n      point.copy(this.v2).sub(this.v1);\n      point.multiplyScalar(t).add(this.v1);\n    }\n\n    return point;\n  }; // Line curve is linear, so we can overwrite default getPointAt\n\n\n  LineCurve3.prototype.getPointAt = function (u, optionalTarget) {\n    return this.getPoint(u, optionalTarget);\n  };\n\n  LineCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  LineCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  LineCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function QuadraticBezierCurve(v0, v1, v2) {\n    if (v0 === void 0) {\n      v0 = new Vector2();\n    }\n\n    if (v1 === void 0) {\n      v1 = new Vector2();\n    }\n\n    if (v2 === void 0) {\n      v2 = new Vector2();\n    }\n\n    Curve.call(this);\n    this.type = 'QuadraticBezierCurve';\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n\n  QuadraticBezierCurve.prototype = Object.create(Curve.prototype);\n  QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n  QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n  QuadraticBezierCurve.prototype.getPoint = function (t, optionalTarget) {\n    if (optionalTarget === void 0) {\n      optionalTarget = new Vector2();\n    }\n\n    var point = optionalTarget;\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2;\n    point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n    return point;\n  };\n\n  QuadraticBezierCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  QuadraticBezierCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  QuadraticBezierCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function QuadraticBezierCurve3(v0, v1, v2) {\n    if (v0 === void 0) {\n      v0 = new Vector3();\n    }\n\n    if (v1 === void 0) {\n      v1 = new Vector3();\n    }\n\n    if (v2 === void 0) {\n      v2 = new Vector3();\n    }\n\n    Curve.call(this);\n    this.type = 'QuadraticBezierCurve3';\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n\n  QuadraticBezierCurve3.prototype = Object.create(Curve.prototype);\n  QuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n  QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n  QuadraticBezierCurve3.prototype.getPoint = function (t, optionalTarget) {\n    if (optionalTarget === void 0) {\n      optionalTarget = new Vector3();\n    }\n\n    var point = optionalTarget;\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2;\n    point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n    return point;\n  };\n\n  QuadraticBezierCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  QuadraticBezierCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  QuadraticBezierCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function SplineCurve(points) {\n    if (points === void 0) {\n      points = [];\n    }\n\n    Curve.call(this);\n    this.type = 'SplineCurve';\n    this.points = points;\n  }\n\n  SplineCurve.prototype = Object.create(Curve.prototype);\n  SplineCurve.prototype.constructor = SplineCurve;\n  SplineCurve.prototype.isSplineCurve = true;\n\n  SplineCurve.prototype.getPoint = function (t, optionalTarget) {\n    if (optionalTarget === void 0) {\n      optionalTarget = new Vector2();\n    }\n\n    var point = optionalTarget;\n    var points = this.points;\n    var p = (points.length - 1) * t;\n    var intPoint = Math.floor(p);\n    var weight = p - intPoint;\n    var p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n    var p1 = points[intPoint];\n    var p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n    var p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n    point.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n    return point;\n  };\n\n  SplineCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.points = [];\n\n    for (var i = 0, l = source.points.length; i < l; i++) {\n      var point = source.points[i];\n      this.points.push(point.clone());\n    }\n\n    return this;\n  };\n\n  SplineCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.points = [];\n\n    for (var i = 0, l = this.points.length; i < l; i++) {\n      var point = this.points[i];\n      data.points.push(point.toArray());\n    }\n\n    return data;\n  };\n\n  SplineCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.points = [];\n\n    for (var i = 0, l = json.points.length; i < l; i++) {\n      var point = json.points[i];\n      this.points.push(new Vector2().fromArray(point));\n    }\n\n    return this;\n  };\n\n  var Curves = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ArcCurve: ArcCurve,\n    CatmullRomCurve3: CatmullRomCurve3,\n    CubicBezierCurve: CubicBezierCurve,\n    CubicBezierCurve3: CubicBezierCurve3,\n    EllipseCurve: EllipseCurve,\n    LineCurve: LineCurve,\n    LineCurve3: LineCurve3,\n    QuadraticBezierCurve: QuadraticBezierCurve,\n    QuadraticBezierCurve3: QuadraticBezierCurve3,\n    SplineCurve: SplineCurve\n  });\n  /**************************************************************\n   *\tCurved Path - a curve path is simply a array of connected\n   *\tcurves, but retains the api of a curve\n   **************************************************************/\n\n  function CurvePath() {\n    Curve.call(this);\n    this.type = 'CurvePath';\n    this.curves = [];\n    this.autoClose = false; // Automatically closes the path\n  }\n\n  CurvePath.prototype = Object.assign(Object.create(Curve.prototype), {\n    constructor: CurvePath,\n    add: function add(curve) {\n      this.curves.push(curve);\n    },\n    closePath: function closePath() {\n      // Add a line curve if start and end of lines are not connected\n      var startPoint = this.curves[0].getPoint(0);\n      var endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n      if (!startPoint.equals(endPoint)) {\n        this.curves.push(new LineCurve(endPoint, startPoint));\n      }\n    },\n    // To get accurate point with reference to\n    // entire path distance at time t,\n    // following has to be done:\n    // 1. Length of each sub path have to be known\n    // 2. Locate and identify type of curve\n    // 3. Get t for the curve\n    // 4. Return curve.getPointAt(t')\n    getPoint: function getPoint(t) {\n      var d = t * this.getLength();\n      var curveLengths = this.getCurveLengths();\n      var i = 0; // To think about boundaries points.\n\n      while (i < curveLengths.length) {\n        if (curveLengths[i] >= d) {\n          var diff = curveLengths[i] - d;\n          var curve = this.curves[i];\n          var segmentLength = curve.getLength();\n          var u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n          return curve.getPointAt(u);\n        }\n\n        i++;\n      }\n\n      return null; // loop where sum != 0, sum > d , sum+1 <d\n    },\n    // We cannot use the default THREE.Curve getPoint() with getLength() because in\n    // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n    // getPoint() depends on getLength\n    getLength: function getLength() {\n      var lens = this.getCurveLengths();\n      return lens[lens.length - 1];\n    },\n    // cacheLengths must be recalculated.\n    updateArcLengths: function updateArcLengths() {\n      this.needsUpdate = true;\n      this.cacheLengths = null;\n      this.getCurveLengths();\n    },\n    // Compute lengths and cache them\n    // We cannot overwrite getLengths() because UtoT mapping uses it.\n    getCurveLengths: function getCurveLengths() {\n      // We use cache values if curves and cache array are same length\n      if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n        return this.cacheLengths;\n      } // Get length of sub-curve\n      // Push sums into cached array\n\n\n      var lengths = [];\n      var sums = 0;\n\n      for (var i = 0, l = this.curves.length; i < l; i++) {\n        sums += this.curves[i].getLength();\n        lengths.push(sums);\n      }\n\n      this.cacheLengths = lengths;\n      return lengths;\n    },\n    getSpacedPoints: function getSpacedPoints(divisions) {\n      if (divisions === void 0) {\n        divisions = 40;\n      }\n\n      var points = [];\n\n      for (var i = 0; i <= divisions; i++) {\n        points.push(this.getPoint(i / divisions));\n      }\n\n      if (this.autoClose) {\n        points.push(points[0]);\n      }\n\n      return points;\n    },\n    getPoints: function getPoints(divisions) {\n      if (divisions === void 0) {\n        divisions = 12;\n      }\n\n      var points = [];\n      var last;\n\n      for (var i = 0, curves = this.curves; i < curves.length; i++) {\n        var curve = curves[i];\n        var resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && (curve.isLineCurve || curve.isLineCurve3) ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\n        var pts = curve.getPoints(resolution);\n\n        for (var j = 0; j < pts.length; j++) {\n          var point = pts[j];\n          if (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n          points.push(point);\n          last = point;\n        }\n      }\n\n      if (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n        points.push(points[0]);\n      }\n\n      return points;\n    },\n    copy: function copy(source) {\n      Curve.prototype.copy.call(this, source);\n      this.curves = [];\n\n      for (var i = 0, l = source.curves.length; i < l; i++) {\n        var curve = source.curves[i];\n        this.curves.push(curve.clone());\n      }\n\n      this.autoClose = source.autoClose;\n      return this;\n    },\n    toJSON: function toJSON() {\n      var data = Curve.prototype.toJSON.call(this);\n      data.autoClose = this.autoClose;\n      data.curves = [];\n\n      for (var i = 0, l = this.curves.length; i < l; i++) {\n        var curve = this.curves[i];\n        data.curves.push(curve.toJSON());\n      }\n\n      return data;\n    },\n    fromJSON: function fromJSON(json) {\n      Curve.prototype.fromJSON.call(this, json);\n      this.autoClose = json.autoClose;\n      this.curves = [];\n\n      for (var i = 0, l = json.curves.length; i < l; i++) {\n        var curve = json.curves[i];\n        this.curves.push(new Curves[curve.type]().fromJSON(curve));\n      }\n\n      return this;\n    }\n  });\n\n  function Path(points) {\n    CurvePath.call(this);\n    this.type = 'Path';\n    this.currentPoint = new Vector2();\n\n    if (points) {\n      this.setFromPoints(points);\n    }\n  }\n\n  Path.prototype = Object.assign(Object.create(CurvePath.prototype), {\n    constructor: Path,\n    setFromPoints: function setFromPoints(points) {\n      this.moveTo(points[0].x, points[0].y);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        this.lineTo(points[i].x, points[i].y);\n      }\n\n      return this;\n    },\n    moveTo: function moveTo(x, y) {\n      this.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n\n      return this;\n    },\n    lineTo: function lineTo(x, y) {\n      var curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n      this.curves.push(curve);\n      this.currentPoint.set(x, y);\n      return this;\n    },\n    quadraticCurveTo: function quadraticCurveTo(aCPx, aCPy, aX, aY) {\n      var curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n      this.curves.push(curve);\n      this.currentPoint.set(aX, aY);\n      return this;\n    },\n    bezierCurveTo: function bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n      var curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n      this.curves.push(curve);\n      this.currentPoint.set(aX, aY);\n      return this;\n    },\n    splineThru: function splineThru(pts\n    /*Array of Vector*/\n    ) {\n      var npts = [this.currentPoint.clone()].concat(pts);\n      var curve = new SplineCurve(npts);\n      this.curves.push(curve);\n      this.currentPoint.copy(pts[pts.length - 1]);\n      return this;\n    },\n    arc: function arc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n      var x0 = this.currentPoint.x;\n      var y0 = this.currentPoint.y;\n      this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n      return this;\n    },\n    absarc: function absarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n      this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n      return this;\n    },\n    ellipse: function ellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n      var x0 = this.currentPoint.x;\n      var y0 = this.currentPoint.y;\n      this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n      return this;\n    },\n    absellipse: function absellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n      var curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n      if (this.curves.length > 0) {\n        // if a previous curve is present, attempt to join\n        var firstPoint = curve.getPoint(0);\n\n        if (!firstPoint.equals(this.currentPoint)) {\n          this.lineTo(firstPoint.x, firstPoint.y);\n        }\n      }\n\n      this.curves.push(curve);\n      var lastPoint = curve.getPoint(1);\n      this.currentPoint.copy(lastPoint);\n      return this;\n    },\n    copy: function copy(source) {\n      CurvePath.prototype.copy.call(this, source);\n      this.currentPoint.copy(source.currentPoint);\n      return this;\n    },\n    toJSON: function toJSON() {\n      var data = CurvePath.prototype.toJSON.call(this);\n      data.currentPoint = this.currentPoint.toArray();\n      return data;\n    },\n    fromJSON: function fromJSON(json) {\n      CurvePath.prototype.fromJSON.call(this, json);\n      this.currentPoint.fromArray(json.currentPoint);\n      return this;\n    }\n  });\n\n  function Shape(points) {\n    Path.call(this, points);\n    this.uuid = MathUtils.generateUUID();\n    this.type = 'Shape';\n    this.holes = [];\n  }\n\n  Shape.prototype = Object.assign(Object.create(Path.prototype), {\n    constructor: Shape,\n    getPointsHoles: function getPointsHoles(divisions) {\n      var holesPts = [];\n\n      for (var i = 0, l = this.holes.length; i < l; i++) {\n        holesPts[i] = this.holes[i].getPoints(divisions);\n      }\n\n      return holesPts;\n    },\n    // get points of shape and holes (keypoints based on segments parameter)\n    extractPoints: function extractPoints(divisions) {\n      return {\n        shape: this.getPoints(divisions),\n        holes: this.getPointsHoles(divisions)\n      };\n    },\n    copy: function copy(source) {\n      Path.prototype.copy.call(this, source);\n      this.holes = [];\n\n      for (var i = 0, l = source.holes.length; i < l; i++) {\n        var hole = source.holes[i];\n        this.holes.push(hole.clone());\n      }\n\n      return this;\n    },\n    toJSON: function toJSON() {\n      var data = Path.prototype.toJSON.call(this);\n      data.uuid = this.uuid;\n      data.holes = [];\n\n      for (var i = 0, l = this.holes.length; i < l; i++) {\n        var hole = this.holes[i];\n        data.holes.push(hole.toJSON());\n      }\n\n      return data;\n    },\n    fromJSON: function fromJSON(json) {\n      Path.prototype.fromJSON.call(this, json);\n      this.uuid = json.uuid;\n      this.holes = [];\n\n      for (var i = 0, l = json.holes.length; i < l; i++) {\n        var hole = json.holes[i];\n        this.holes.push(new Path().fromJSON(hole));\n      }\n\n      return this;\n    }\n  });\n\n  function Light(color, intensity) {\n    if (intensity === void 0) {\n      intensity = 1;\n    }\n\n    Object3D.call(this);\n    this.type = 'Light';\n    this.color = new Color(color);\n    this.intensity = intensity;\n  }\n\n  Light.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Light,\n    isLight: true,\n    copy: function copy(source) {\n      Object3D.prototype.copy.call(this, source);\n      this.color.copy(source.color);\n      this.intensity = source.intensity;\n      return this;\n    },\n    toJSON: function toJSON(meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.color = this.color.getHex();\n      data.object.intensity = this.intensity;\n      if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n      if (this.distance !== undefined) data.object.distance = this.distance;\n      if (this.angle !== undefined) data.object.angle = this.angle;\n      if (this.decay !== undefined) data.object.decay = this.decay;\n      if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n      if (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n      return data;\n    }\n  });\n\n  function HemisphereLight(skyColor, groundColor, intensity) {\n    Light.call(this, skyColor, intensity);\n    this.type = 'HemisphereLight';\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.groundColor = new Color(groundColor);\n  }\n\n  HemisphereLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: HemisphereLight,\n    isHemisphereLight: true,\n    copy: function copy(source) {\n      Light.prototype.copy.call(this, source);\n      this.groundColor.copy(source.groundColor);\n      return this;\n    }\n  });\n\n  function LightShadow(camera) {\n    this.camera = camera;\n    this.bias = 0;\n    this.normalBias = 0;\n    this.radius = 1;\n    this.mapSize = new Vector2(512, 512);\n    this.map = null;\n    this.mapPass = null;\n    this.matrix = new Matrix4();\n    this.autoUpdate = true;\n    this.needsUpdate = false;\n    this._frustum = new Frustum();\n    this._frameExtents = new Vector2(1, 1);\n    this._viewportCount = 1;\n    this._viewports = [new Vector4(0, 0, 1, 1)];\n  }\n\n  Object.assign(LightShadow.prototype, {\n    _projScreenMatrix: new Matrix4(),\n    _lightPositionWorld: new Vector3(),\n    _lookTarget: new Vector3(),\n    getViewportCount: function getViewportCount() {\n      return this._viewportCount;\n    },\n    getFrustum: function getFrustum() {\n      return this._frustum;\n    },\n    updateMatrices: function updateMatrices(light) {\n      var shadowCamera = this.camera,\n          shadowMatrix = this.matrix,\n          projScreenMatrix = this._projScreenMatrix,\n          lookTarget = this._lookTarget,\n          lightPositionWorld = this._lightPositionWorld;\n      lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n      shadowCamera.position.copy(lightPositionWorld);\n      lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n      shadowCamera.lookAt(lookTarget);\n      shadowCamera.updateMatrixWorld();\n      projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n      this._frustum.setFromProjectionMatrix(projScreenMatrix);\n\n      shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n      shadowMatrix.multiply(shadowCamera.projectionMatrix);\n      shadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n    },\n    getViewport: function getViewport(viewportIndex) {\n      return this._viewports[viewportIndex];\n    },\n    getFrameExtents: function getFrameExtents() {\n      return this._frameExtents;\n    },\n    copy: function copy(source) {\n      this.camera = source.camera.clone();\n      this.bias = source.bias;\n      this.radius = source.radius;\n      this.mapSize.copy(source.mapSize);\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    toJSON: function toJSON() {\n      var object = {};\n      if (this.bias !== 0) object.bias = this.bias;\n      if (this.normalBias !== 0) object.normalBias = this.normalBias;\n      if (this.radius !== 1) object.radius = this.radius;\n      if (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n      object.camera = this.camera.toJSON(false).object;\n      delete object.camera.matrix;\n      return object;\n    }\n  });\n\n  function SpotLightShadow() {\n    LightShadow.call(this, new PerspectiveCamera(50, 1, 0.5, 500));\n    this.focus = 1;\n  }\n\n  SpotLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n    constructor: SpotLightShadow,\n    isSpotLightShadow: true,\n    updateMatrices: function updateMatrices(light) {\n      var camera = this.camera;\n      var fov = MathUtils.RAD2DEG * 2 * light.angle * this.focus;\n      var aspect = this.mapSize.width / this.mapSize.height;\n      var far = light.distance || camera.far;\n\n      if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n        camera.fov = fov;\n        camera.aspect = aspect;\n        camera.far = far;\n        camera.updateProjectionMatrix();\n      }\n\n      LightShadow.prototype.updateMatrices.call(this, light);\n    }\n  });\n\n  function SpotLight(color, intensity, distance, angle, penumbra, decay) {\n    Light.call(this, color, intensity);\n    this.type = 'SpotLight';\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.target = new Object3D();\n    Object.defineProperty(this, 'power', {\n      get: function get() {\n        // intensity = power per solid angle.\n        // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        return this.intensity * Math.PI;\n      },\n      set: function set(power) {\n        // intensity = power per solid angle.\n        // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        this.intensity = power / Math.PI;\n      }\n    });\n    this.distance = distance !== undefined ? distance : 0;\n    this.angle = angle !== undefined ? angle : Math.PI / 3;\n    this.penumbra = penumbra !== undefined ? penumbra : 0;\n    this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n    this.shadow = new SpotLightShadow();\n  }\n\n  SpotLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: SpotLight,\n    isSpotLight: true,\n    copy: function copy(source) {\n      Light.prototype.copy.call(this, source);\n      this.distance = source.distance;\n      this.angle = source.angle;\n      this.penumbra = source.penumbra;\n      this.decay = source.decay;\n      this.target = source.target.clone();\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  });\n\n  function PointLightShadow() {\n    LightShadow.call(this, new PerspectiveCamera(90, 1, 0.5, 500));\n    this._frameExtents = new Vector2(4, 2);\n    this._viewportCount = 6;\n    this._viewports = [// These viewports map a cube-map onto a 2D texture with the\n    // following orientation:\n    //\n    //\txzXZ\n    //\t y Y\n    //\n    // X - Positive x direction\n    // x - Negative x direction\n    // Y - Positive y direction\n    // y - Negative y direction\n    // Z - Positive z direction\n    // z - Negative z direction\n    // positive X\n    new Vector4(2, 1, 1, 1), // negative X\n    new Vector4(0, 1, 1, 1), // positive Z\n    new Vector4(3, 1, 1, 1), // negative Z\n    new Vector4(1, 1, 1, 1), // positive Y\n    new Vector4(3, 0, 1, 1), // negative Y\n    new Vector4(1, 0, 1, 1)];\n    this._cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n    this._cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n  }\n\n  PointLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n    constructor: PointLightShadow,\n    isPointLightShadow: true,\n    updateMatrices: function updateMatrices(light, viewportIndex) {\n      if (viewportIndex === void 0) {\n        viewportIndex = 0;\n      }\n\n      var camera = this.camera,\n          shadowMatrix = this.matrix,\n          lightPositionWorld = this._lightPositionWorld,\n          lookTarget = this._lookTarget,\n          projScreenMatrix = this._projScreenMatrix;\n      lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n      camera.position.copy(lightPositionWorld);\n      lookTarget.copy(camera.position);\n      lookTarget.add(this._cubeDirections[viewportIndex]);\n      camera.up.copy(this._cubeUps[viewportIndex]);\n      camera.lookAt(lookTarget);\n      camera.updateMatrixWorld();\n      shadowMatrix.makeTranslation(-lightPositionWorld.x, -lightPositionWorld.y, -lightPositionWorld.z);\n      projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n      this._frustum.setFromProjectionMatrix(projScreenMatrix);\n    }\n  });\n\n  function PointLight(color, intensity, distance, decay) {\n    Light.call(this, color, intensity);\n    this.type = 'PointLight';\n    Object.defineProperty(this, 'power', {\n      get: function get() {\n        // intensity = power per solid angle.\n        // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        return this.intensity * 4 * Math.PI;\n      },\n      set: function set(power) {\n        // intensity = power per solid angle.\n        // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        this.intensity = power / (4 * Math.PI);\n      }\n    });\n    this.distance = distance !== undefined ? distance : 0;\n    this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n    this.shadow = new PointLightShadow();\n  }\n\n  PointLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: PointLight,\n    isPointLight: true,\n    copy: function copy(source) {\n      Light.prototype.copy.call(this, source);\n      this.distance = source.distance;\n      this.decay = source.decay;\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  });\n\n  function OrthographicCamera(left, right, top, bottom, near, far) {\n    if (left === void 0) {\n      left = -1;\n    }\n\n    if (right === void 0) {\n      right = 1;\n    }\n\n    if (top === void 0) {\n      top = 1;\n    }\n\n    if (bottom === void 0) {\n      bottom = -1;\n    }\n\n    if (near === void 0) {\n      near = 0.1;\n    }\n\n    if (far === void 0) {\n      far = 2000;\n    }\n\n    Camera.call(this);\n    this.type = 'OrthographicCamera';\n    this.zoom = 1;\n    this.view = null;\n    this.left = left;\n    this.right = right;\n    this.top = top;\n    this.bottom = bottom;\n    this.near = near;\n    this.far = far;\n    this.updateProjectionMatrix();\n  }\n\n  OrthographicCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n    constructor: OrthographicCamera,\n    isOrthographicCamera: true,\n    copy: function copy(source, recursive) {\n      Camera.prototype.copy.call(this, source, recursive);\n      this.left = source.left;\n      this.right = source.right;\n      this.top = source.top;\n      this.bottom = source.bottom;\n      this.near = source.near;\n      this.far = source.far;\n      this.zoom = source.zoom;\n      this.view = source.view === null ? null : Object.assign({}, source.view);\n      return this;\n    },\n    setViewOffset: function setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n      if (this.view === null) {\n        this.view = {\n          enabled: true,\n          fullWidth: 1,\n          fullHeight: 1,\n          offsetX: 0,\n          offsetY: 0,\n          width: 1,\n          height: 1\n        };\n      }\n\n      this.view.enabled = true;\n      this.view.fullWidth = fullWidth;\n      this.view.fullHeight = fullHeight;\n      this.view.offsetX = x;\n      this.view.offsetY = y;\n      this.view.width = width;\n      this.view.height = height;\n      this.updateProjectionMatrix();\n    },\n    clearViewOffset: function clearViewOffset() {\n      if (this.view !== null) {\n        this.view.enabled = false;\n      }\n\n      this.updateProjectionMatrix();\n    },\n    updateProjectionMatrix: function updateProjectionMatrix() {\n      var dx = (this.right - this.left) / (2 * this.zoom);\n      var dy = (this.top - this.bottom) / (2 * this.zoom);\n      var cx = (this.right + this.left) / 2;\n      var cy = (this.top + this.bottom) / 2;\n      var left = cx - dx;\n      var right = cx + dx;\n      var top = cy + dy;\n      var bottom = cy - dy;\n\n      if (this.view !== null && this.view.enabled) {\n        var scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\n        var scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n        left += scaleW * this.view.offsetX;\n        right = left + scaleW * this.view.width;\n        top -= scaleH * this.view.offsetY;\n        bottom = top - scaleH * this.view.height;\n      }\n\n      this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n      this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n    },\n    toJSON: function toJSON(meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.zoom = this.zoom;\n      data.object.left = this.left;\n      data.object.right = this.right;\n      data.object.top = this.top;\n      data.object.bottom = this.bottom;\n      data.object.near = this.near;\n      data.object.far = this.far;\n      if (this.view !== null) data.object.view = Object.assign({}, this.view);\n      return data;\n    }\n  });\n\n  function DirectionalLightShadow() {\n    LightShadow.call(this, new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n  }\n\n  DirectionalLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n    constructor: DirectionalLightShadow,\n    isDirectionalLightShadow: true,\n    updateMatrices: function updateMatrices(light) {\n      LightShadow.prototype.updateMatrices.call(this, light);\n    }\n  });\n\n  function DirectionalLight(color, intensity) {\n    Light.call(this, color, intensity);\n    this.type = 'DirectionalLight';\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.target = new Object3D();\n    this.shadow = new DirectionalLightShadow();\n  }\n\n  DirectionalLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: DirectionalLight,\n    isDirectionalLight: true,\n    copy: function copy(source) {\n      Light.prototype.copy.call(this, source);\n      this.target = source.target.clone();\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  });\n\n  function AmbientLight(color, intensity) {\n    Light.call(this, color, intensity);\n    this.type = 'AmbientLight';\n  }\n\n  AmbientLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: AmbientLight,\n    isAmbientLight: true\n  });\n\n  function RectAreaLight(color, intensity, width, height) {\n    Light.call(this, color, intensity);\n    this.type = 'RectAreaLight';\n    this.width = width !== undefined ? width : 10;\n    this.height = height !== undefined ? height : 10;\n  }\n\n  RectAreaLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: RectAreaLight,\n    isRectAreaLight: true,\n    copy: function copy(source) {\n      Light.prototype.copy.call(this, source);\n      this.width = source.width;\n      this.height = source.height;\n      return this;\n    },\n    toJSON: function toJSON(meta) {\n      var data = Light.prototype.toJSON.call(this, meta);\n      data.object.width = this.width;\n      data.object.height = this.height;\n      return data;\n    }\n  });\n  /**\n   * Primary reference:\n   *\t https://graphics.stanford.edu/papers/envmap/envmap.pdf\n   *\n   * Secondary reference:\n   *\t https://www.ppsloan.org/publications/StupidSH36.pdf\n   */\n  // 3-band SH defined by 9 coefficients\n\n  var SphericalHarmonics3 = /*#__PURE__*/function () {\n    function SphericalHarmonics3() {\n      Object.defineProperty(this, 'isSphericalHarmonics3', {\n        value: true\n      });\n      this.coefficients = [];\n\n      for (var i = 0; i < 9; i++) {\n        this.coefficients.push(new Vector3());\n      }\n    }\n\n    var _proto = SphericalHarmonics3.prototype;\n\n    _proto.set = function set(coefficients) {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].copy(coefficients[i]);\n      }\n\n      return this;\n    };\n\n    _proto.zero = function zero() {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].set(0, 0, 0);\n      }\n\n      return this;\n    } // get the radiance in the direction of the normal\n    // target is a Vector3\n    ;\n\n    _proto.getAt = function getAt(normal, target) {\n      // normal is assumed to be unit length\n      var x = normal.x,\n          y = normal.y,\n          z = normal.z;\n      var coeff = this.coefficients; // band 0\n\n      target.copy(coeff[0]).multiplyScalar(0.282095); // band 1\n\n      target.addScaledVector(coeff[1], 0.488603 * y);\n      target.addScaledVector(coeff[2], 0.488603 * z);\n      target.addScaledVector(coeff[3], 0.488603 * x); // band 2\n\n      target.addScaledVector(coeff[4], 1.092548 * (x * y));\n      target.addScaledVector(coeff[5], 1.092548 * (y * z));\n      target.addScaledVector(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\n      target.addScaledVector(coeff[7], 1.092548 * (x * z));\n      target.addScaledVector(coeff[8], 0.546274 * (x * x - y * y));\n      return target;\n    } // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n    // target is a Vector3\n    // https://graphics.stanford.edu/papers/envmap/envmap.pdf\n    ;\n\n    _proto.getIrradianceAt = function getIrradianceAt(normal, target) {\n      // normal is assumed to be unit length\n      var x = normal.x,\n          y = normal.y,\n          z = normal.z;\n      var coeff = this.coefficients; // band 0\n\n      target.copy(coeff[0]).multiplyScalar(0.886227); // π * 0.282095\n      // band 1\n\n      target.addScaledVector(coeff[1], 2.0 * 0.511664 * y); // ( 2 * π / 3 ) * 0.488603\n\n      target.addScaledVector(coeff[2], 2.0 * 0.511664 * z);\n      target.addScaledVector(coeff[3], 2.0 * 0.511664 * x); // band 2\n\n      target.addScaledVector(coeff[4], 2.0 * 0.429043 * x * y); // ( π / 4 ) * 1.092548\n\n      target.addScaledVector(coeff[5], 2.0 * 0.429043 * y * z);\n      target.addScaledVector(coeff[6], 0.743125 * z * z - 0.247708); // ( π / 4 ) * 0.315392 * 3\n\n      target.addScaledVector(coeff[7], 2.0 * 0.429043 * x * z);\n      target.addScaledVector(coeff[8], 0.429043 * (x * x - y * y)); // ( π / 4 ) * 0.546274\n\n      return target;\n    };\n\n    _proto.add = function add(sh) {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].add(sh.coefficients[i]);\n      }\n\n      return this;\n    };\n\n    _proto.addScaledSH = function addScaledSH(sh, s) {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].addScaledVector(sh.coefficients[i], s);\n      }\n\n      return this;\n    };\n\n    _proto.scale = function scale(s) {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].multiplyScalar(s);\n      }\n\n      return this;\n    };\n\n    _proto.lerp = function lerp(sh, alpha) {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].lerp(sh.coefficients[i], alpha);\n      }\n\n      return this;\n    };\n\n    _proto.equals = function equals(sh) {\n      for (var i = 0; i < 9; i++) {\n        if (!this.coefficients[i].equals(sh.coefficients[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    _proto.copy = function copy(sh) {\n      return this.set(sh.coefficients);\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor().copy(this);\n    };\n\n    _proto.fromArray = function fromArray(array, offset) {\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      var coefficients = this.coefficients;\n\n      for (var i = 0; i < 9; i++) {\n        coefficients[i].fromArray(array, offset + i * 3);\n      }\n\n      return this;\n    };\n\n    _proto.toArray = function toArray(array, offset) {\n      if (array === void 0) {\n        array = [];\n      }\n\n      if (offset === void 0) {\n        offset = 0;\n      }\n\n      var coefficients = this.coefficients;\n\n      for (var i = 0; i < 9; i++) {\n        coefficients[i].toArray(array, offset + i * 3);\n      }\n\n      return array;\n    } // evaluate the basis functions\n    // shBasis is an Array[ 9 ]\n    ;\n\n    SphericalHarmonics3.getBasisAt = function getBasisAt(normal, shBasis) {\n      // normal is assumed to be unit length\n      var x = normal.x,\n          y = normal.y,\n          z = normal.z; // band 0\n\n      shBasis[0] = 0.282095; // band 1\n\n      shBasis[1] = 0.488603 * y;\n      shBasis[2] = 0.488603 * z;\n      shBasis[3] = 0.488603 * x; // band 2\n\n      shBasis[4] = 1.092548 * x * y;\n      shBasis[5] = 1.092548 * y * z;\n      shBasis[6] = 0.315392 * (3 * z * z - 1);\n      shBasis[7] = 1.092548 * x * z;\n      shBasis[8] = 0.546274 * (x * x - y * y);\n    };\n\n    return SphericalHarmonics3;\n  }();\n\n  function LightProbe(sh, intensity) {\n    Light.call(this, undefined, intensity);\n    this.type = 'LightProbe';\n    this.sh = sh !== undefined ? sh : new SphericalHarmonics3();\n  }\n\n  LightProbe.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: LightProbe,\n    isLightProbe: true,\n    copy: function copy(source) {\n      Light.prototype.copy.call(this, source);\n      this.sh.copy(source.sh);\n      return this;\n    },\n    fromJSON: function fromJSON(json) {\n      this.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\n      this.sh.fromArray(json.sh);\n      return this;\n    },\n    toJSON: function toJSON(meta) {\n      var data = Light.prototype.toJSON.call(this, meta);\n      data.object.sh = this.sh.toArray();\n      return data;\n    }\n  });\n\n  function MaterialLoader(manager) {\n    Loader.call(this, manager);\n    this.textures = {};\n  }\n\n  MaterialLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: MaterialLoader,\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.setRequestHeader(scope.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(JSON.parse(text)));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    },\n    parse: function parse(json) {\n      var textures = this.textures;\n\n      function getTexture(name) {\n        if (textures[name] === undefined) {\n          console.warn('THREE.MaterialLoader: Undefined texture', name);\n        }\n\n        return textures[name];\n      }\n\n      var material = new Materials[json.type]();\n      if (json.uuid !== undefined) material.uuid = json.uuid;\n      if (json.name !== undefined) material.name = json.name;\n      if (json.color !== undefined && material.color !== undefined) material.color.setHex(json.color);\n      if (json.roughness !== undefined) material.roughness = json.roughness;\n      if (json.metalness !== undefined) material.metalness = json.metalness;\n      if (json.sheen !== undefined) material.sheen = new Color().setHex(json.sheen);\n      if (json.emissive !== undefined && material.emissive !== undefined) material.emissive.setHex(json.emissive);\n      if (json.specular !== undefined && material.specular !== undefined) material.specular.setHex(json.specular);\n      if (json.shininess !== undefined) material.shininess = json.shininess;\n      if (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\n      if (json.clearcoatRoughness !== undefined) material.clearcoatRoughness = json.clearcoatRoughness;\n      if (json.fog !== undefined) material.fog = json.fog;\n      if (json.flatShading !== undefined) material.flatShading = json.flatShading;\n      if (json.blending !== undefined) material.blending = json.blending;\n      if (json.combine !== undefined) material.combine = json.combine;\n      if (json.side !== undefined) material.side = json.side;\n      if (json.opacity !== undefined) material.opacity = json.opacity;\n      if (json.transparent !== undefined) material.transparent = json.transparent;\n      if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n      if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n      if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n      if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n      if (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\n      if (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\n      if (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\n      if (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\n      if (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\n      if (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\n      if (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\n      if (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\n      if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n      if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n      if (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n      if (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n      if (json.rotation !== undefined) material.rotation = json.rotation;\n      if (json.linewidth !== 1) material.linewidth = json.linewidth;\n      if (json.dashSize !== undefined) material.dashSize = json.dashSize;\n      if (json.gapSize !== undefined) material.gapSize = json.gapSize;\n      if (json.scale !== undefined) material.scale = json.scale;\n      if (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n      if (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n      if (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n      if (json.skinning !== undefined) material.skinning = json.skinning;\n      if (json.morphTargets !== undefined) material.morphTargets = json.morphTargets;\n      if (json.morphNormals !== undefined) material.morphNormals = json.morphNormals;\n      if (json.dithering !== undefined) material.dithering = json.dithering;\n      if (json.vertexTangents !== undefined) material.vertexTangents = json.vertexTangents;\n      if (json.visible !== undefined) material.visible = json.visible;\n      if (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\n      if (json.userData !== undefined) material.userData = json.userData;\n\n      if (json.vertexColors !== undefined) {\n        if (typeof json.vertexColors === 'number') {\n          material.vertexColors = json.vertexColors > 0 ? true : false;\n        } else {\n          material.vertexColors = json.vertexColors;\n        }\n      } // Shader Material\n\n\n      if (json.uniforms !== undefined) {\n        for (var name in json.uniforms) {\n          var uniform = json.uniforms[name];\n          material.uniforms[name] = {};\n\n          switch (uniform.type) {\n            case 't':\n              material.uniforms[name].value = getTexture(uniform.value);\n              break;\n\n            case 'c':\n              material.uniforms[name].value = new Color().setHex(uniform.value);\n              break;\n\n            case 'v2':\n              material.uniforms[name].value = new Vector2().fromArray(uniform.value);\n              break;\n\n            case 'v3':\n              material.uniforms[name].value = new Vector3().fromArray(uniform.value);\n              break;\n\n            case 'v4':\n              material.uniforms[name].value = new Vector4().fromArray(uniform.value);\n              break;\n\n            case 'm3':\n              material.uniforms[name].value = new Matrix3().fromArray(uniform.value);\n              break;\n\n            case 'm4':\n              material.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n              break;\n\n            default:\n              material.uniforms[name].value = uniform.value;\n          }\n        }\n      }\n\n      if (json.defines !== undefined) material.defines = json.defines;\n      if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n      if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n\n      if (json.extensions !== undefined) {\n        for (var key in json.extensions) {\n          material.extensions[key] = json.extensions[key];\n        }\n      } // Deprecated\n\n\n      if (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n      // for PointsMaterial\n\n      if (json.size !== undefined) material.size = json.size;\n      if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n      if (json.map !== undefined) material.map = getTexture(json.map);\n      if (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\n      if (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\n      if (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n      if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n      if (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n      if (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n\n      if (json.normalScale !== undefined) {\n        var normalScale = json.normalScale;\n\n        if (Array.isArray(normalScale) === false) {\n          // Blender exporter used to export a scalar. See #7459\n          normalScale = [normalScale, normalScale];\n        }\n\n        material.normalScale = new Vector2().fromArray(normalScale);\n      }\n\n      if (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n      if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n      if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n      if (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n      if (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n      if (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n      if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n      if (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n      if (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n      if (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\n      if (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n      if (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\n      if (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n      if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n      if (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n      if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n      if (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n      if (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\n      if (json.clearcoatRoughnessMap !== undefined) material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\n      if (json.clearcoatNormalMap !== undefined) material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\n      if (json.clearcoatNormalScale !== undefined) material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\n      if (json.transmission !== undefined) material.transmission = json.transmission;\n      if (json.transmissionMap !== undefined) material.transmissionMap = getTexture(json.transmissionMap);\n      return material;\n    },\n    setTextures: function setTextures(value) {\n      this.textures = value;\n      return this;\n    }\n  });\n  var LoaderUtils = {\n    decodeText: function decodeText(array) {\n      if (typeof TextDecoder !== 'undefined') {\n        return new TextDecoder().decode(array);\n      } // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n      // throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\n      var s = '';\n\n      for (var i = 0, il = array.length; i < il; i++) {\n        // Implicitly assumes little-endian.\n        s += String.fromCharCode(array[i]);\n      }\n\n      try {\n        // merges multi-byte utf-8 characters.\n        return decodeURIComponent(escape(s));\n      } catch (e) {\n        // see #16358\n        return s;\n      }\n    },\n    extractUrlBase: function extractUrlBase(url) {\n      var index = url.lastIndexOf('/');\n      if (index === -1) return './';\n      return url.substr(0, index + 1);\n    }\n  };\n\n  function InstancedBufferGeometry() {\n    BufferGeometry.call(this);\n    this.type = 'InstancedBufferGeometry';\n    this.instanceCount = Infinity;\n  }\n\n  InstancedBufferGeometry.prototype = Object.assign(Object.create(BufferGeometry.prototype), {\n    constructor: InstancedBufferGeometry,\n    isInstancedBufferGeometry: true,\n    copy: function copy(source) {\n      BufferGeometry.prototype.copy.call(this, source);\n      this.instanceCount = source.instanceCount;\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    toJSON: function toJSON() {\n      var data = BufferGeometry.prototype.toJSON.call(this);\n      data.instanceCount = this.instanceCount;\n      data.isInstancedBufferGeometry = true;\n      return data;\n    }\n  });\n\n  function InstancedBufferAttribute(array, itemSize, normalized, meshPerAttribute) {\n    if (typeof normalized === 'number') {\n      meshPerAttribute = normalized;\n      normalized = false;\n      console.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');\n    }\n\n    BufferAttribute.call(this, array, itemSize, normalized);\n    this.meshPerAttribute = meshPerAttribute || 1;\n  }\n\n  InstancedBufferAttribute.prototype = Object.assign(Object.create(BufferAttribute.prototype), {\n    constructor: InstancedBufferAttribute,\n    isInstancedBufferAttribute: true,\n    copy: function copy(source) {\n      BufferAttribute.prototype.copy.call(this, source);\n      this.meshPerAttribute = source.meshPerAttribute;\n      return this;\n    },\n    toJSON: function toJSON() {\n      var data = BufferAttribute.prototype.toJSON.call(this);\n      data.meshPerAttribute = this.meshPerAttribute;\n      data.isInstancedBufferAttribute = true;\n      return data;\n    }\n  });\n\n  function BufferGeometryLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  BufferGeometryLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: BufferGeometryLoader,\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.setRequestHeader(scope.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(JSON.parse(text)));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    },\n    parse: function parse(json) {\n      var interleavedBufferMap = {};\n      var arrayBufferMap = {};\n\n      function getInterleavedBuffer(json, uuid) {\n        if (interleavedBufferMap[uuid] !== undefined) return interleavedBufferMap[uuid];\n        var interleavedBuffers = json.interleavedBuffers;\n        var interleavedBuffer = interleavedBuffers[uuid];\n        var buffer = getArrayBuffer(json, interleavedBuffer.buffer);\n        var array = getTypedArray(interleavedBuffer.type, buffer);\n        var ib = new InterleavedBuffer(array, interleavedBuffer.stride);\n        ib.uuid = interleavedBuffer.uuid;\n        interleavedBufferMap[uuid] = ib;\n        return ib;\n      }\n\n      function getArrayBuffer(json, uuid) {\n        if (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\n        var arrayBuffers = json.arrayBuffers;\n        var arrayBuffer = arrayBuffers[uuid];\n        var ab = new Uint32Array(arrayBuffer).buffer;\n        arrayBufferMap[uuid] = ab;\n        return ab;\n      }\n\n      var geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n      var index = json.data.index;\n\n      if (index !== undefined) {\n        var typedArray = getTypedArray(index.type, index.array);\n        geometry.setIndex(new BufferAttribute(typedArray, 1));\n      }\n\n      var attributes = json.data.attributes;\n\n      for (var key in attributes) {\n        var attribute = attributes[key];\n        var bufferAttribute = void 0;\n\n        if (attribute.isInterleavedBufferAttribute) {\n          var interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n          bufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n        } else {\n          var _typedArray = getTypedArray(attribute.type, attribute.array);\n\n          var bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n          bufferAttribute = new bufferAttributeConstr(_typedArray, attribute.itemSize, attribute.normalized);\n        }\n\n        if (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n        geometry.setAttribute(key, bufferAttribute);\n      }\n\n      var morphAttributes = json.data.morphAttributes;\n\n      if (morphAttributes) {\n        for (var _key in morphAttributes) {\n          var attributeArray = morphAttributes[_key];\n          var array = [];\n\n          for (var i = 0, il = attributeArray.length; i < il; i++) {\n            var _attribute = attributeArray[i];\n\n            var _bufferAttribute = void 0;\n\n            if (_attribute.isInterleavedBufferAttribute) {\n              var _interleavedBuffer = getInterleavedBuffer(json.data, _attribute.data);\n\n              _bufferAttribute = new InterleavedBufferAttribute(_interleavedBuffer, _attribute.itemSize, _attribute.offset, _attribute.normalized);\n            } else {\n              var _typedArray2 = getTypedArray(_attribute.type, _attribute.array);\n\n              _bufferAttribute = new BufferAttribute(_typedArray2, _attribute.itemSize, _attribute.normalized);\n            }\n\n            if (_attribute.name !== undefined) _bufferAttribute.name = _attribute.name;\n            array.push(_bufferAttribute);\n          }\n\n          geometry.morphAttributes[_key] = array;\n        }\n      }\n\n      var morphTargetsRelative = json.data.morphTargetsRelative;\n\n      if (morphTargetsRelative) {\n        geometry.morphTargetsRelative = true;\n      }\n\n      var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n      if (groups !== undefined) {\n        for (var _i = 0, n = groups.length; _i !== n; ++_i) {\n          var group = groups[_i];\n          geometry.addGroup(group.start, group.count, group.materialIndex);\n        }\n      }\n\n      var boundingSphere = json.data.boundingSphere;\n\n      if (boundingSphere !== undefined) {\n        var center = new Vector3();\n\n        if (boundingSphere.center !== undefined) {\n          center.fromArray(boundingSphere.center);\n        }\n\n        geometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n      }\n\n      if (json.name) geometry.name = json.name;\n      if (json.userData) geometry.userData = json.userData;\n      return geometry;\n    }\n  });\n\n  var ObjectLoader = /*#__PURE__*/function (_Loader) {\n    _inheritsLoose(ObjectLoader, _Loader);\n\n    function ObjectLoader(manager) {\n      return _Loader.call(this, manager) || this;\n    }\n\n    var _proto = ObjectLoader.prototype;\n\n    _proto.load = function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n      this.resourcePath = this.resourcePath || path;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        var json = null;\n\n        try {\n          json = JSON.parse(text);\n        } catch (error) {\n          if (onError !== undefined) onError(error);\n          console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n          return;\n        }\n\n        var metadata = json.metadata;\n\n        if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n          console.error('THREE.ObjectLoader: Can\\'t load ' + url);\n          return;\n        }\n\n        scope.parse(json, onLoad);\n      }, onProgress, onError);\n    };\n\n    _proto.parse = function parse(json, onLoad) {\n      var animations = this.parseAnimations(json.animations);\n      var shapes = this.parseShapes(json.shapes);\n      var geometries = this.parseGeometries(json.geometries, shapes);\n      var images = this.parseImages(json.images, function () {\n        if (onLoad !== undefined) onLoad(object);\n      });\n      var textures = this.parseTextures(json.textures, images);\n      var materials = this.parseMaterials(json.materials, textures);\n      var object = this.parseObject(json.object, geometries, materials, animations);\n      var skeletons = this.parseSkeletons(json.skeletons, object);\n      this.bindSkeletons(object, skeletons); //\n\n      if (onLoad !== undefined) {\n        var hasImages = false;\n\n        for (var uuid in images) {\n          if (images[uuid] instanceof HTMLImageElement) {\n            hasImages = true;\n            break;\n          }\n        }\n\n        if (hasImages === false) onLoad(object);\n      }\n\n      return object;\n    };\n\n    _proto.parseShapes = function parseShapes(json) {\n      var shapes = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var shape = new Shape().fromJSON(json[i]);\n          shapes[shape.uuid] = shape;\n        }\n      }\n\n      return shapes;\n    };\n\n    _proto.parseSkeletons = function parseSkeletons(json, object) {\n      var skeletons = {};\n      var bones = {}; // generate bone lookup table\n\n      object.traverse(function (child) {\n        if (child.isBone) bones[child.uuid] = child;\n      }); // create skeletons\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var skeleton = new Skeleton().fromJSON(json[i], bones);\n          skeletons[skeleton.uuid] = skeleton;\n        }\n      }\n\n      return skeletons;\n    };\n\n    _proto.parseGeometries = function parseGeometries(json, shapes) {\n      var geometries = {};\n      var geometryShapes;\n\n      if (json !== undefined) {\n        var bufferGeometryLoader = new BufferGeometryLoader();\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var geometry = void 0;\n          var data = json[i];\n\n          switch (data.type) {\n            case 'PlaneGeometry':\n            case 'PlaneBufferGeometry':\n              geometry = new Geometries[data.type](data.width, data.height, data.widthSegments, data.heightSegments);\n              break;\n\n            case 'BoxGeometry':\n            case 'BoxBufferGeometry':\n              geometry = new Geometries[data.type](data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n              break;\n\n            case 'CircleGeometry':\n            case 'CircleBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.segments, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'CylinderGeometry':\n            case 'CylinderBufferGeometry':\n              geometry = new Geometries[data.type](data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'ConeGeometry':\n            case 'ConeBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'SphereGeometry':\n            case 'SphereBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'DodecahedronGeometry':\n            case 'DodecahedronBufferGeometry':\n            case 'IcosahedronGeometry':\n            case 'IcosahedronBufferGeometry':\n            case 'OctahedronGeometry':\n            case 'OctahedronBufferGeometry':\n            case 'TetrahedronGeometry':\n            case 'TetrahedronBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.detail);\n              break;\n\n            case 'RingGeometry':\n            case 'RingBufferGeometry':\n              geometry = new Geometries[data.type](data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'TorusGeometry':\n            case 'TorusBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n              break;\n\n            case 'TorusKnotGeometry':\n            case 'TorusKnotBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n              break;\n\n            case 'TubeGeometry':\n            case 'TubeBufferGeometry':\n              // This only works for built-in curves (e.g. CatmullRomCurve3).\n              // User defined curves or instances of CurvePath will not be deserialized.\n              geometry = new Geometries[data.type](new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\n              break;\n\n            case 'LatheGeometry':\n            case 'LatheBufferGeometry':\n              geometry = new Geometries[data.type](data.points, data.segments, data.phiStart, data.phiLength);\n              break;\n\n            case 'PolyhedronGeometry':\n            case 'PolyhedronBufferGeometry':\n              geometry = new Geometries[data.type](data.vertices, data.indices, data.radius, data.details);\n              break;\n\n            case 'ShapeGeometry':\n            case 'ShapeBufferGeometry':\n              geometryShapes = [];\n\n              for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n                var shape = shapes[data.shapes[j]];\n                geometryShapes.push(shape);\n              }\n\n              geometry = new Geometries[data.type](geometryShapes, data.curveSegments);\n              break;\n\n            case 'ExtrudeGeometry':\n            case 'ExtrudeBufferGeometry':\n              geometryShapes = [];\n\n              for (var _j = 0, _jl = data.shapes.length; _j < _jl; _j++) {\n                var _shape = shapes[data.shapes[_j]];\n                geometryShapes.push(_shape);\n              }\n\n              var extrudePath = data.options.extrudePath;\n\n              if (extrudePath !== undefined) {\n                data.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n              }\n\n              geometry = new Geometries[data.type](geometryShapes, data.options);\n              break;\n\n            case 'BufferGeometry':\n            case 'InstancedBufferGeometry':\n              geometry = bufferGeometryLoader.parse(data);\n              break;\n\n            case 'Geometry':\n              console.error('THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.');\n              break;\n\n            default:\n              console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n              continue;\n          }\n\n          geometry.uuid = data.uuid;\n          if (data.name !== undefined) geometry.name = data.name;\n          if (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\n          geometries[data.uuid] = geometry;\n        }\n      }\n\n      return geometries;\n    };\n\n    _proto.parseMaterials = function parseMaterials(json, textures) {\n      var cache = {}; // MultiMaterial\n\n      var materials = {};\n\n      if (json !== undefined) {\n        var loader = new MaterialLoader();\n        loader.setTextures(textures);\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.type === 'MultiMaterial') {\n            // Deprecated\n            var array = [];\n\n            for (var j = 0; j < data.materials.length; j++) {\n              var material = data.materials[j];\n\n              if (cache[material.uuid] === undefined) {\n                cache[material.uuid] = loader.parse(material);\n              }\n\n              array.push(cache[material.uuid]);\n            }\n\n            materials[data.uuid] = array;\n          } else {\n            if (cache[data.uuid] === undefined) {\n              cache[data.uuid] = loader.parse(data);\n            }\n\n            materials[data.uuid] = cache[data.uuid];\n          }\n        }\n      }\n\n      return materials;\n    };\n\n    _proto.parseAnimations = function parseAnimations(json) {\n      var animations = {};\n\n      if (json !== undefined) {\n        for (var i = 0; i < json.length; i++) {\n          var data = json[i];\n          var clip = AnimationClip.parse(data);\n          animations[clip.uuid] = clip;\n        }\n      }\n\n      return animations;\n    };\n\n    _proto.parseImages = function parseImages(json, onLoad) {\n      var scope = this;\n      var images = {};\n      var loader;\n\n      function loadImage(url) {\n        scope.manager.itemStart(url);\n        return loader.load(url, function () {\n          scope.manager.itemEnd(url);\n        }, undefined, function () {\n          scope.manager.itemError(url);\n          scope.manager.itemEnd(url);\n        });\n      }\n\n      function deserializeImage(image) {\n        if (typeof image === 'string') {\n          var url = image;\n          var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n          return loadImage(path);\n        } else {\n          if (image.data) {\n            return {\n              data: getTypedArray(image.type, image.data),\n              width: image.width,\n              height: image.height\n            };\n          } else {\n            return null;\n          }\n        }\n      }\n\n      if (json !== undefined && json.length > 0) {\n        var manager = new LoadingManager(onLoad);\n        loader = new ImageLoader(manager);\n        loader.setCrossOrigin(this.crossOrigin);\n\n        for (var i = 0, il = json.length; i < il; i++) {\n          var image = json[i];\n          var url = image.url;\n\n          if (Array.isArray(url)) {\n            // load array of images e.g CubeTexture\n            images[image.uuid] = [];\n\n            for (var j = 0, jl = url.length; j < jl; j++) {\n              var currentUrl = url[j];\n              var deserializedImage = deserializeImage(currentUrl);\n\n              if (deserializedImage !== null) {\n                if (deserializedImage instanceof HTMLImageElement) {\n                  images[image.uuid].push(deserializedImage);\n                } else {\n                  // special case: handle array of data textures for cube textures\n                  images[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n                }\n              }\n            }\n          } else {\n            // load single image\n            var _deserializedImage = deserializeImage(image.url);\n\n            if (_deserializedImage !== null) {\n              images[image.uuid] = _deserializedImage;\n            }\n          }\n        }\n      }\n\n      return images;\n    };\n\n    _proto.parseTextures = function parseTextures(json, images) {\n      function parseConstant(value, type) {\n        if (typeof value === 'number') return value;\n        console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n        return type[value];\n      }\n\n      var textures = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.image === undefined) {\n            console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n          }\n\n          if (images[data.image] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined image', data.image);\n          }\n\n          var texture = void 0;\n          var image = images[data.image];\n\n          if (Array.isArray(image)) {\n            texture = new CubeTexture(image);\n            if (image.length === 6) texture.needsUpdate = true;\n          } else {\n            if (image && image.data) {\n              texture = new DataTexture(image.data, image.width, image.height);\n            } else {\n              texture = new Texture(image);\n            }\n\n            if (image) texture.needsUpdate = true; // textures can have undefined image data\n          }\n\n          texture.uuid = data.uuid;\n          if (data.name !== undefined) texture.name = data.name;\n          if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n          if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n          if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n          if (data.center !== undefined) texture.center.fromArray(data.center);\n          if (data.rotation !== undefined) texture.rotation = data.rotation;\n\n          if (data.wrap !== undefined) {\n            texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n            texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n          }\n\n          if (data.format !== undefined) texture.format = data.format;\n          if (data.type !== undefined) texture.type = data.type;\n          if (data.encoding !== undefined) texture.encoding = data.encoding;\n          if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n          if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n          if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n          if (data.flipY !== undefined) texture.flipY = data.flipY;\n          if (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n          if (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n          textures[data.uuid] = texture;\n        }\n      }\n\n      return textures;\n    };\n\n    _proto.parseObject = function parseObject(data, geometries, materials, animations) {\n      var object;\n\n      function getGeometry(name) {\n        if (geometries[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined geometry', name);\n        }\n\n        return geometries[name];\n      }\n\n      function getMaterial(name) {\n        if (name === undefined) return undefined;\n\n        if (Array.isArray(name)) {\n          var array = [];\n\n          for (var i = 0, l = name.length; i < l; i++) {\n            var uuid = name[i];\n\n            if (materials[uuid] === undefined) {\n              console.warn('THREE.ObjectLoader: Undefined material', uuid);\n            }\n\n            array.push(materials[uuid]);\n          }\n\n          return array;\n        }\n\n        if (materials[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined material', name);\n        }\n\n        return materials[name];\n      }\n\n      var geometry, material;\n\n      switch (data.type) {\n        case 'Scene':\n          object = new Scene();\n\n          if (data.background !== undefined) {\n            if (Number.isInteger(data.background)) {\n              object.background = new Color(data.background);\n            }\n          }\n\n          if (data.fog !== undefined) {\n            if (data.fog.type === 'Fog') {\n              object.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n            } else if (data.fog.type === 'FogExp2') {\n              object.fog = new FogExp2(data.fog.color, data.fog.density);\n            }\n          }\n\n          break;\n\n        case 'PerspectiveCamera':\n          object = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n          if (data.focus !== undefined) object.focus = data.focus;\n          if (data.zoom !== undefined) object.zoom = data.zoom;\n          if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n          if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n          if (data.view !== undefined) object.view = Object.assign({}, data.view);\n          break;\n\n        case 'OrthographicCamera':\n          object = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n          if (data.zoom !== undefined) object.zoom = data.zoom;\n          if (data.view !== undefined) object.view = Object.assign({}, data.view);\n          break;\n\n        case 'AmbientLight':\n          object = new AmbientLight(data.color, data.intensity);\n          break;\n\n        case 'DirectionalLight':\n          object = new DirectionalLight(data.color, data.intensity);\n          break;\n\n        case 'PointLight':\n          object = new PointLight(data.color, data.intensity, data.distance, data.decay);\n          break;\n\n        case 'RectAreaLight':\n          object = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n          break;\n\n        case 'SpotLight':\n          object = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n          break;\n\n        case 'HemisphereLight':\n          object = new HemisphereLight(data.color, data.groundColor, data.intensity);\n          break;\n\n        case 'LightProbe':\n          object = new LightProbe().fromJSON(data);\n          break;\n\n        case 'SkinnedMesh':\n          geometry = getGeometry(data.geometry);\n          material = getMaterial(data.material);\n          object = new SkinnedMesh(geometry, material);\n          if (data.bindMode !== undefined) object.bindMode = data.bindMode;\n          if (data.bindMatrix !== undefined) object.bindMatrix.fromArray(data.bindMatrix);\n          if (data.skeleton !== undefined) object.skeleton = data.skeleton;\n          break;\n\n        case 'Mesh':\n          geometry = getGeometry(data.geometry);\n          material = getMaterial(data.material);\n          object = new Mesh(geometry, material);\n          break;\n\n        case 'InstancedMesh':\n          geometry = getGeometry(data.geometry);\n          material = getMaterial(data.material);\n          var count = data.count;\n          var instanceMatrix = data.instanceMatrix;\n          object = new InstancedMesh(geometry, material, count);\n          object.instanceMatrix = new BufferAttribute(new Float32Array(instanceMatrix.array), 16);\n          break;\n\n        case 'LOD':\n          object = new LOD();\n          break;\n\n        case 'Line':\n          object = new Line(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'LineLoop':\n          object = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'LineSegments':\n          object = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'PointCloud':\n        case 'Points':\n          object = new Points(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'Sprite':\n          object = new Sprite(getMaterial(data.material));\n          break;\n\n        case 'Group':\n          object = new Group();\n          break;\n\n        case 'Bone':\n          object = new Bone();\n          break;\n\n        default:\n          object = new Object3D();\n      }\n\n      object.uuid = data.uuid;\n      if (data.name !== undefined) object.name = data.name;\n\n      if (data.matrix !== undefined) {\n        object.matrix.fromArray(data.matrix);\n        if (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n        if (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n      } else {\n        if (data.position !== undefined) object.position.fromArray(data.position);\n        if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n        if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n        if (data.scale !== undefined) object.scale.fromArray(data.scale);\n      }\n\n      if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n      if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n      if (data.shadow) {\n        if (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n        if (data.shadow.normalBias !== undefined) object.shadow.normalBias = data.shadow.normalBias;\n        if (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n        if (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n        if (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n      }\n\n      if (data.visible !== undefined) object.visible = data.visible;\n      if (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n      if (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n      if (data.userData !== undefined) object.userData = data.userData;\n      if (data.layers !== undefined) object.layers.mask = data.layers;\n\n      if (data.children !== undefined) {\n        var children = data.children;\n\n        for (var i = 0; i < children.length; i++) {\n          object.add(this.parseObject(children[i], geometries, materials, animations));\n        }\n      }\n\n      if (data.animations !== undefined) {\n        var objectAnimations = data.animations;\n\n        for (var _i = 0; _i < objectAnimations.length; _i++) {\n          var uuid = objectAnimations[_i];\n          object.animations.push(animations[uuid]);\n        }\n      }\n\n      if (data.type === 'LOD') {\n        if (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\n        var levels = data.levels;\n\n        for (var l = 0; l < levels.length; l++) {\n          var level = levels[l];\n          var child = object.getObjectByProperty('uuid', level.object);\n\n          if (child !== undefined) {\n            object.addLevel(child, level.distance);\n          }\n        }\n      }\n\n      return object;\n    };\n\n    _proto.bindSkeletons = function bindSkeletons(object, skeletons) {\n      if (Object.keys(skeletons).length === 0) return;\n      object.traverse(function (child) {\n        if (child.isSkinnedMesh === true && child.skeleton !== undefined) {\n          var skeleton = skeletons[child.skeleton];\n\n          if (skeleton === undefined) {\n            console.warn('THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton);\n          } else {\n            child.bind(skeleton, child.bindMatrix);\n          }\n        }\n      });\n    }\n    /* DEPRECATED */\n    ;\n\n    _proto.setTexturePath = function setTexturePath(value) {\n      console.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\n      return this.setResourcePath(value);\n    };\n\n    return ObjectLoader;\n  }(Loader);\n\n  var TEXTURE_MAPPING = {\n    UVMapping: UVMapping,\n    CubeReflectionMapping: CubeReflectionMapping,\n    CubeRefractionMapping: CubeRefractionMapping,\n    EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n    EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n    CubeUVReflectionMapping: CubeUVReflectionMapping,\n    CubeUVRefractionMapping: CubeUVRefractionMapping\n  };\n  var TEXTURE_WRAPPING = {\n    RepeatWrapping: RepeatWrapping,\n    ClampToEdgeWrapping: ClampToEdgeWrapping,\n    MirroredRepeatWrapping: MirroredRepeatWrapping\n  };\n  var TEXTURE_FILTER = {\n    NearestFilter: NearestFilter,\n    NearestMipmapNearestFilter: NearestMipmapNearestFilter,\n    NearestMipmapLinearFilter: NearestMipmapLinearFilter,\n    LinearFilter: LinearFilter,\n    LinearMipmapNearestFilter: LinearMipmapNearestFilter,\n    LinearMipmapLinearFilter: LinearMipmapLinearFilter\n  };\n\n  function ImageBitmapLoader(manager) {\n    if (typeof createImageBitmap === 'undefined') {\n      console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n    }\n\n    if (typeof fetch === 'undefined') {\n      console.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n    }\n\n    Loader.call(this, manager);\n    this.options = {\n      premultiplyAlpha: 'none'\n    };\n  }\n\n  ImageBitmapLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: ImageBitmapLoader,\n    isImageBitmapLoader: true,\n    setOptions: function setOptions(options) {\n      this.options = options;\n      return this;\n    },\n    load: function load(url, onLoad, onProgress, onError) {\n      if (url === undefined) url = '';\n      if (this.path !== undefined) url = this.path + url;\n      url = this.manager.resolveURL(url);\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      }\n\n      var fetchOptions = {};\n      fetchOptions.credentials = this.crossOrigin === 'anonymous' ? 'same-origin' : 'include';\n      fetch(url, fetchOptions).then(function (res) {\n        return res.blob();\n      }).then(function (blob) {\n        return createImageBitmap(blob, scope.options);\n      }).then(function (imageBitmap) {\n        Cache.add(url, imageBitmap);\n        if (onLoad) onLoad(imageBitmap);\n        scope.manager.itemEnd(url);\n      }).catch(function (e) {\n        if (onError) onError(e);\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      });\n      scope.manager.itemStart(url);\n    }\n  });\n\n  function ShapePath() {\n    this.type = 'ShapePath';\n    this.color = new Color();\n    this.subPaths = [];\n    this.currentPath = null;\n  }\n\n  Object.assign(ShapePath.prototype, {\n    moveTo: function moveTo(x, y) {\n      this.currentPath = new Path();\n      this.subPaths.push(this.currentPath);\n      this.currentPath.moveTo(x, y);\n      return this;\n    },\n    lineTo: function lineTo(x, y) {\n      this.currentPath.lineTo(x, y);\n      return this;\n    },\n    quadraticCurveTo: function quadraticCurveTo(aCPx, aCPy, aX, aY) {\n      this.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n      return this;\n    },\n    bezierCurveTo: function bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n      this.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n      return this;\n    },\n    splineThru: function splineThru(pts) {\n      this.currentPath.splineThru(pts);\n      return this;\n    },\n    toShapes: function toShapes(isCCW, noHoles) {\n      function toShapesNoHoles(inSubpaths) {\n        var shapes = [];\n\n        for (var i = 0, l = inSubpaths.length; i < l; i++) {\n          var _tmpPath = inSubpaths[i];\n\n          var _tmpShape = new Shape();\n\n          _tmpShape.curves = _tmpPath.curves;\n          shapes.push(_tmpShape);\n        }\n\n        return shapes;\n      }\n\n      function isPointInsidePolygon(inPt, inPolygon) {\n        var polyLen = inPolygon.length; // inPt on polygon contour => immediate success\t\tor\n        // toggling of inside/outside at every single! intersection point of an edge\n        //\twith the horizontal line through inPt, left of inPt\n        //\tnot counting lowerY endpoints of edges and whole edges on that line\n\n        var inside = false;\n\n        for (var p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n          var edgeLowPt = inPolygon[p];\n          var edgeHighPt = inPolygon[q];\n          var edgeDx = edgeHighPt.x - edgeLowPt.x;\n          var edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n          if (Math.abs(edgeDy) > Number.EPSILON) {\n            // not parallel\n            if (edgeDy < 0) {\n              edgeLowPt = inPolygon[q];\n              edgeDx = -edgeDx;\n              edgeHighPt = inPolygon[p];\n              edgeDy = -edgeDy;\n            }\n\n            if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n            if (inPt.y === edgeLowPt.y) {\n              if (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n              // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n            } else {\n              var perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n              if (perpEdge === 0) return true; // inPt is on contour ?\n\n              if (perpEdge < 0) continue;\n              inside = !inside; // true intersection left of inPt\n            }\n          } else {\n            // parallel or collinear\n            if (inPt.y !== edgeLowPt.y) continue; // parallel\n            // edge lies on the same horizontal line as inPt\n\n            if (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n            // continue;\n          }\n        }\n\n        return inside;\n      }\n\n      var isClockWise = ShapeUtils.isClockWise;\n      var subPaths = this.subPaths;\n      if (subPaths.length === 0) return [];\n      if (noHoles === true) return toShapesNoHoles(subPaths);\n      var solid, tmpPath, tmpShape;\n      var shapes = [];\n\n      if (subPaths.length === 1) {\n        tmpPath = subPaths[0];\n        tmpShape = new Shape();\n        tmpShape.curves = tmpPath.curves;\n        shapes.push(tmpShape);\n        return shapes;\n      }\n\n      var holesFirst = !isClockWise(subPaths[0].getPoints());\n      holesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n      var betterShapeHoles = [];\n      var newShapes = [];\n      var newShapeHoles = [];\n      var mainIdx = 0;\n      var tmpPoints;\n      newShapes[mainIdx] = undefined;\n      newShapeHoles[mainIdx] = [];\n\n      for (var i = 0, l = subPaths.length; i < l; i++) {\n        tmpPath = subPaths[i];\n        tmpPoints = tmpPath.getPoints();\n        solid = isClockWise(tmpPoints);\n        solid = isCCW ? !solid : solid;\n\n        if (solid) {\n          if (!holesFirst && newShapes[mainIdx]) mainIdx++;\n          newShapes[mainIdx] = {\n            s: new Shape(),\n            p: tmpPoints\n          };\n          newShapes[mainIdx].s.curves = tmpPath.curves;\n          if (holesFirst) mainIdx++;\n          newShapeHoles[mainIdx] = []; //console.log('cw', i);\n        } else {\n          newShapeHoles[mainIdx].push({\n            h: tmpPath,\n            p: tmpPoints[0]\n          }); //console.log('ccw', i);\n        }\n      } // only Holes? -> probably all Shapes with wrong orientation\n\n\n      if (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n      if (newShapes.length > 1) {\n        var ambiguous = false;\n        var toChange = [];\n\n        for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n          betterShapeHoles[sIdx] = [];\n        }\n\n        for (var _sIdx = 0, _sLen = newShapes.length; _sIdx < _sLen; _sIdx++) {\n          var sho = newShapeHoles[_sIdx];\n\n          for (var hIdx = 0; hIdx < sho.length; hIdx++) {\n            var ho = sho[hIdx];\n            var hole_unassigned = true;\n\n            for (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n              if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n                if (_sIdx !== s2Idx) toChange.push({\n                  froms: _sIdx,\n                  tos: s2Idx,\n                  hole: hIdx\n                });\n\n                if (hole_unassigned) {\n                  hole_unassigned = false;\n                  betterShapeHoles[s2Idx].push(ho);\n                } else {\n                  ambiguous = true;\n                }\n              }\n            }\n\n            if (hole_unassigned) {\n              betterShapeHoles[_sIdx].push(ho);\n            }\n          }\n        } // console.log(\"ambiguous: \", ambiguous);\n\n\n        if (toChange.length > 0) {\n          // console.log(\"to change: \", toChange);\n          if (!ambiguous) newShapeHoles = betterShapeHoles;\n        }\n      }\n\n      var tmpHoles;\n\n      for (var _i = 0, il = newShapes.length; _i < il; _i++) {\n        tmpShape = newShapes[_i].s;\n        shapes.push(tmpShape);\n        tmpHoles = newShapeHoles[_i];\n\n        for (var j = 0, jl = tmpHoles.length; j < jl; j++) {\n          tmpShape.holes.push(tmpHoles[j].h);\n        }\n      } //console.log(\"shape\", shapes);\n\n\n      return shapes;\n    }\n  });\n\n  var Font = /*#__PURE__*/function () {\n    function Font(data) {\n      Object.defineProperty(this, 'isFont', {\n        value: true\n      });\n      this.type = 'Font';\n      this.data = data;\n    }\n\n    var _proto = Font.prototype;\n\n    _proto.generateShapes = function generateShapes(text, size) {\n      if (size === void 0) {\n        size = 100;\n      }\n\n      var shapes = [];\n      var paths = createPaths(text, size, this.data);\n\n      for (var p = 0, pl = paths.length; p < pl; p++) {\n        Array.prototype.push.apply(shapes, paths[p].toShapes());\n      }\n\n      return shapes;\n    };\n\n    return Font;\n  }();\n\n  function createPaths(text, size, data) {\n    var chars = Array.from ? Array.from(text) : String(text).split(''); // workaround for IE11, see #13988\n\n    var scale = size / data.resolution;\n    var line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n    var paths = [];\n    var offsetX = 0,\n        offsetY = 0;\n\n    for (var i = 0; i < chars.length; i++) {\n      var char = chars[i];\n\n      if (char === '\\n') {\n        offsetX = 0;\n        offsetY -= line_height;\n      } else {\n        var ret = createPath(char, scale, offsetX, offsetY, data);\n        offsetX += ret.offsetX;\n        paths.push(ret.path);\n      }\n    }\n\n    return paths;\n  }\n\n  function createPath(char, scale, offsetX, offsetY, data) {\n    var glyph = data.glyphs[char] || data.glyphs['?'];\n\n    if (!glyph) {\n      console.error('THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.');\n      return;\n    }\n\n    var path = new ShapePath();\n    var x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n    if (glyph.o) {\n      var outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n\n      for (var i = 0, l = outline.length; i < l;) {\n        var action = outline[i++];\n\n        switch (action) {\n          case 'm':\n            // moveTo\n            x = outline[i++] * scale + offsetX;\n            y = outline[i++] * scale + offsetY;\n            path.moveTo(x, y);\n            break;\n\n          case 'l':\n            // lineTo\n            x = outline[i++] * scale + offsetX;\n            y = outline[i++] * scale + offsetY;\n            path.lineTo(x, y);\n            break;\n\n          case 'q':\n            // quadraticCurveTo\n            cpx = outline[i++] * scale + offsetX;\n            cpy = outline[i++] * scale + offsetY;\n            cpx1 = outline[i++] * scale + offsetX;\n            cpy1 = outline[i++] * scale + offsetY;\n            path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n            break;\n\n          case 'b':\n            // bezierCurveTo\n            cpx = outline[i++] * scale + offsetX;\n            cpy = outline[i++] * scale + offsetY;\n            cpx1 = outline[i++] * scale + offsetX;\n            cpy1 = outline[i++] * scale + offsetY;\n            cpx2 = outline[i++] * scale + offsetX;\n            cpy2 = outline[i++] * scale + offsetY;\n            path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n            break;\n        }\n      }\n    }\n\n    return {\n      offsetX: glyph.ha * scale,\n      path: path\n    };\n  }\n\n  function FontLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  FontLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: FontLoader,\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (text) {\n        var json;\n\n        try {\n          json = JSON.parse(text);\n        } catch (e) {\n          console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n          json = JSON.parse(text.substring(65, text.length - 2));\n        }\n\n        var font = scope.parse(json);\n        if (onLoad) onLoad(font);\n      }, onProgress, onError);\n    },\n    parse: function parse(json) {\n      return new Font(json);\n    }\n  });\n\n  var _context;\n\n  var AudioContext = {\n    getContext: function getContext() {\n      if (_context === undefined) {\n        _context = new (window.AudioContext || window.webkitAudioContext)();\n      }\n\n      return _context;\n    },\n    setContext: function setContext(value) {\n      _context = value;\n    }\n  };\n\n  function AudioLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  AudioLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: AudioLoader,\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setResponseType('arraybuffer');\n      loader.setPath(scope.path);\n      loader.setRequestHeader(scope.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (buffer) {\n        try {\n          // Create a copy of the buffer. The `decodeAudioData` method\n          // detaches the buffer when complete, preventing reuse.\n          var bufferCopy = buffer.slice(0);\n          var context = AudioContext.getContext();\n          context.decodeAudioData(bufferCopy, function (audioBuffer) {\n            onLoad(audioBuffer);\n          });\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  });\n\n  function HemisphereLightProbe(skyColor, groundColor, intensity) {\n    LightProbe.call(this, undefined, intensity);\n    var color1 = new Color().set(skyColor);\n    var color2 = new Color().set(groundColor);\n    var sky = new Vector3(color1.r, color1.g, color1.b);\n    var ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\n    var c0 = Math.sqrt(Math.PI);\n    var c1 = c0 * Math.sqrt(0.75);\n    this.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n    this.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n  }\n\n  HemisphereLightProbe.prototype = Object.assign(Object.create(LightProbe.prototype), {\n    constructor: HemisphereLightProbe,\n    isHemisphereLightProbe: true,\n    copy: function copy(source) {\n      // modifying colors not currently supported\n      LightProbe.prototype.copy.call(this, source);\n      return this;\n    },\n    toJSON: function toJSON(meta) {\n      var data = LightProbe.prototype.toJSON.call(this, meta); // data.sh = this.sh.toArray(); // todo\n\n      return data;\n    }\n  });\n\n  function AmbientLightProbe(color, intensity) {\n    LightProbe.call(this, undefined, intensity);\n    var color1 = new Color().set(color); // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\n    this.sh.coefficients[0].set(color1.r, color1.g, color1.b).multiplyScalar(2 * Math.sqrt(Math.PI));\n  }\n\n  AmbientLightProbe.prototype = Object.assign(Object.create(LightProbe.prototype), {\n    constructor: AmbientLightProbe,\n    isAmbientLightProbe: true,\n    copy: function copy(source) {\n      // modifying color not currently supported\n      LightProbe.prototype.copy.call(this, source);\n      return this;\n    },\n    toJSON: function toJSON(meta) {\n      var data = LightProbe.prototype.toJSON.call(this, meta); // data.sh = this.sh.toArray(); // todo\n\n      return data;\n    }\n  });\n\n  var _eyeRight = new Matrix4();\n\n  var _eyeLeft = new Matrix4();\n\n  function StereoCamera() {\n    this.type = 'StereoCamera';\n    this.aspect = 1;\n    this.eyeSep = 0.064;\n    this.cameraL = new PerspectiveCamera();\n    this.cameraL.layers.enable(1);\n    this.cameraL.matrixAutoUpdate = false;\n    this.cameraR = new PerspectiveCamera();\n    this.cameraR.layers.enable(2);\n    this.cameraR.matrixAutoUpdate = false;\n    this._cache = {\n      focus: null,\n      fov: null,\n      aspect: null,\n      near: null,\n      far: null,\n      zoom: null,\n      eyeSep: null\n    };\n  }\n\n  Object.assign(StereoCamera.prototype, {\n    update: function update(camera) {\n      var cache = this._cache;\n      var needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n      if (needsUpdate) {\n        cache.focus = camera.focus;\n        cache.fov = camera.fov;\n        cache.aspect = camera.aspect * this.aspect;\n        cache.near = camera.near;\n        cache.far = camera.far;\n        cache.zoom = camera.zoom;\n        cache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\n        // http://paulbourke.net/stereographics/stereorender/\n\n        var projectionMatrix = camera.projectionMatrix.clone();\n        var eyeSepHalf = cache.eyeSep / 2;\n        var eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n        var ymax = cache.near * Math.tan(MathUtils.DEG2RAD * cache.fov * 0.5) / cache.zoom;\n        var xmin, xmax; // translate xOffset\n\n        _eyeLeft.elements[12] = -eyeSepHalf;\n        _eyeRight.elements[12] = eyeSepHalf; // for left eye\n\n        xmin = -ymax * cache.aspect + eyeSepOnProjection;\n        xmax = ymax * cache.aspect + eyeSepOnProjection;\n        projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n        xmin = -ymax * cache.aspect - eyeSepOnProjection;\n        xmax = ymax * cache.aspect - eyeSepOnProjection;\n        projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraR.projectionMatrix.copy(projectionMatrix);\n      }\n\n      this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n      this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n    }\n  });\n\n  var Clock = /*#__PURE__*/function () {\n    function Clock(autoStart) {\n      this.autoStart = autoStart !== undefined ? autoStart : true;\n      this.startTime = 0;\n      this.oldTime = 0;\n      this.elapsedTime = 0;\n      this.running = false;\n    }\n\n    var _proto = Clock.prototype;\n\n    _proto.start = function start() {\n      this.startTime = now();\n      this.oldTime = this.startTime;\n      this.elapsedTime = 0;\n      this.running = true;\n    };\n\n    _proto.stop = function stop() {\n      this.getElapsedTime();\n      this.running = false;\n      this.autoStart = false;\n    };\n\n    _proto.getElapsedTime = function getElapsedTime() {\n      this.getDelta();\n      return this.elapsedTime;\n    };\n\n    _proto.getDelta = function getDelta() {\n      var diff = 0;\n\n      if (this.autoStart && !this.running) {\n        this.start();\n        return 0;\n      }\n\n      if (this.running) {\n        var newTime = now();\n        diff = (newTime - this.oldTime) / 1000;\n        this.oldTime = newTime;\n        this.elapsedTime += diff;\n      }\n\n      return diff;\n    };\n\n    return Clock;\n  }();\n\n  function now() {\n    return (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n  }\n\n  var _position$2 = /*@__PURE__*/new Vector3();\n\n  var _quaternion$3 = /*@__PURE__*/new Quaternion();\n\n  var _scale$1 = /*@__PURE__*/new Vector3();\n\n  var _orientation = /*@__PURE__*/new Vector3();\n\n  var AudioListener = /*#__PURE__*/function (_Object3D) {\n    _inheritsLoose(AudioListener, _Object3D);\n\n    function AudioListener() {\n      var _this;\n\n      _this = _Object3D.call(this) || this;\n      _this.type = 'AudioListener';\n      _this.context = AudioContext.getContext();\n      _this.gain = _this.context.createGain();\n\n      _this.gain.connect(_this.context.destination);\n\n      _this.filter = null;\n      _this.timeDelta = 0; // private\n\n      _this._clock = new Clock();\n      return _this;\n    }\n\n    var _proto = AudioListener.prototype;\n\n    _proto.getInput = function getInput() {\n      return this.gain;\n    };\n\n    _proto.removeFilter = function removeFilter() {\n      if (this.filter !== null) {\n        this.gain.disconnect(this.filter);\n        this.filter.disconnect(this.context.destination);\n        this.gain.connect(this.context.destination);\n        this.filter = null;\n      }\n\n      return this;\n    };\n\n    _proto.getFilter = function getFilter() {\n      return this.filter;\n    };\n\n    _proto.setFilter = function setFilter(value) {\n      if (this.filter !== null) {\n        this.gain.disconnect(this.filter);\n        this.filter.disconnect(this.context.destination);\n      } else {\n        this.gain.disconnect(this.context.destination);\n      }\n\n      this.filter = value;\n      this.gain.connect(this.filter);\n      this.filter.connect(this.context.destination);\n      return this;\n    };\n\n    _proto.getMasterVolume = function getMasterVolume() {\n      return this.gain.gain.value;\n    };\n\n    _proto.setMasterVolume = function setMasterVolume(value) {\n      this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n      return this;\n    };\n\n    _proto.updateMatrixWorld = function updateMatrixWorld(force) {\n      _Object3D.prototype.updateMatrixWorld.call(this, force);\n\n      var listener = this.context.listener;\n      var up = this.up;\n      this.timeDelta = this._clock.getDelta();\n      this.matrixWorld.decompose(_position$2, _quaternion$3, _scale$1);\n\n      _orientation.set(0, 0, -1).applyQuaternion(_quaternion$3);\n\n      if (listener.positionX) {\n        // code path for Chrome (see #14393)\n        var endTime = this.context.currentTime + this.timeDelta;\n        listener.positionX.linearRampToValueAtTime(_position$2.x, endTime);\n        listener.positionY.linearRampToValueAtTime(_position$2.y, endTime);\n        listener.positionZ.linearRampToValueAtTime(_position$2.z, endTime);\n        listener.forwardX.linearRampToValueAtTime(_orientation.x, endTime);\n        listener.forwardY.linearRampToValueAtTime(_orientation.y, endTime);\n        listener.forwardZ.linearRampToValueAtTime(_orientation.z, endTime);\n        listener.upX.linearRampToValueAtTime(up.x, endTime);\n        listener.upY.linearRampToValueAtTime(up.y, endTime);\n        listener.upZ.linearRampToValueAtTime(up.z, endTime);\n      } else {\n        listener.setPosition(_position$2.x, _position$2.y, _position$2.z);\n        listener.setOrientation(_orientation.x, _orientation.y, _orientation.z, up.x, up.y, up.z);\n      }\n    };\n\n    return AudioListener;\n  }(Object3D);\n\n  var Audio = /*#__PURE__*/function (_Object3D) {\n    _inheritsLoose(Audio, _Object3D);\n\n    function Audio(listener) {\n      var _this;\n\n      _this = _Object3D.call(this) || this;\n      _this.type = 'Audio';\n      _this.listener = listener;\n      _this.context = listener.context;\n      _this.gain = _this.context.createGain();\n\n      _this.gain.connect(listener.getInput());\n\n      _this.autoplay = false;\n      _this.buffer = null;\n      _this.detune = 0;\n      _this.loop = false;\n      _this.loopStart = 0;\n      _this.loopEnd = 0;\n      _this.offset = 0;\n      _this.duration = undefined;\n      _this.playbackRate = 1;\n      _this.isPlaying = false;\n      _this.hasPlaybackControl = true;\n      _this.source = null;\n      _this.sourceType = 'empty';\n      _this._startedAt = 0;\n      _this._progress = 0;\n      _this._connected = false;\n      _this.filters = [];\n      return _this;\n    }\n\n    var _proto = Audio.prototype;\n\n    _proto.getOutput = function getOutput() {\n      return this.gain;\n    };\n\n    _proto.setNodeSource = function setNodeSource(audioNode) {\n      this.hasPlaybackControl = false;\n      this.sourceType = 'audioNode';\n      this.source = audioNode;\n      this.connect();\n      return this;\n    };\n\n    _proto.setMediaElementSource = function setMediaElementSource(mediaElement) {\n      this.hasPlaybackControl = false;\n      this.sourceType = 'mediaNode';\n      this.source = this.context.createMediaElementSource(mediaElement);\n      this.connect();\n      return this;\n    };\n\n    _proto.setMediaStreamSource = function setMediaStreamSource(mediaStream) {\n      this.hasPlaybackControl = false;\n      this.sourceType = 'mediaStreamNode';\n      this.source = this.context.createMediaStreamSource(mediaStream);\n      this.connect();\n      return this;\n    };\n\n    _proto.setBuffer = function setBuffer(audioBuffer) {\n      this.buffer = audioBuffer;\n      this.sourceType = 'buffer';\n      if (this.autoplay) this.play();\n      return this;\n    };\n\n    _proto.play = function play(delay) {\n      if (delay === void 0) {\n        delay = 0;\n      }\n\n      if (this.isPlaying === true) {\n        console.warn('THREE.Audio: Audio is already playing.');\n        return;\n      }\n\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this._startedAt = this.context.currentTime + delay;\n      var source = this.context.createBufferSource();\n      source.buffer = this.buffer;\n      source.loop = this.loop;\n      source.loopStart = this.loopStart;\n      source.loopEnd = this.loopEnd;\n      source.onended = this.onEnded.bind(this);\n      source.start(this._startedAt, this._progress + this.offset, this.duration);\n      this.isPlaying = true;\n      this.source = source;\n      this.setDetune(this.detune);\n      this.setPlaybackRate(this.playbackRate);\n      return this.connect();\n    };\n\n    _proto.pause = function pause() {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      if (this.isPlaying === true) {\n        // update current progress\n        this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate;\n\n        if (this.loop === true) {\n          // ensure _progress does not exceed duration with looped audios\n          this._progress = this._progress % (this.duration || this.buffer.duration);\n        }\n\n        this.source.stop();\n        this.source.onended = null;\n        this.isPlaying = false;\n      }\n\n      return this;\n    };\n\n    _proto.stop = function stop() {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this._progress = 0;\n      this.source.stop();\n      this.source.onended = null;\n      this.isPlaying = false;\n      return this;\n    };\n\n    _proto.connect = function connect() {\n      if (this.filters.length > 0) {\n        this.source.connect(this.filters[0]);\n\n        for (var i = 1, l = this.filters.length; i < l; i++) {\n          this.filters[i - 1].connect(this.filters[i]);\n        }\n\n        this.filters[this.filters.length - 1].connect(this.getOutput());\n      } else {\n        this.source.connect(this.getOutput());\n      }\n\n      this._connected = true;\n      return this;\n    };\n\n    _proto.disconnect = function disconnect() {\n      if (this.filters.length > 0) {\n        this.source.disconnect(this.filters[0]);\n\n        for (var i = 1, l = this.filters.length; i < l; i++) {\n          this.filters[i - 1].disconnect(this.filters[i]);\n        }\n\n        this.filters[this.filters.length - 1].disconnect(this.getOutput());\n      } else {\n        this.source.disconnect(this.getOutput());\n      }\n\n      this._connected = false;\n      return this;\n    };\n\n    _proto.getFilters = function getFilters() {\n      return this.filters;\n    };\n\n    _proto.setFilters = function setFilters(value) {\n      if (!value) value = [];\n\n      if (this._connected === true) {\n        this.disconnect();\n        this.filters = value.slice();\n        this.connect();\n      } else {\n        this.filters = value.slice();\n      }\n\n      return this;\n    };\n\n    _proto.setDetune = function setDetune(value) {\n      this.detune = value;\n      if (this.source.detune === undefined) return; // only set detune when available\n\n      if (this.isPlaying === true) {\n        this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\n      }\n\n      return this;\n    };\n\n    _proto.getDetune = function getDetune() {\n      return this.detune;\n    };\n\n    _proto.getFilter = function getFilter() {\n      return this.getFilters()[0];\n    };\n\n    _proto.setFilter = function setFilter(filter) {\n      return this.setFilters(filter ? [filter] : []);\n    };\n\n    _proto.setPlaybackRate = function setPlaybackRate(value) {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.playbackRate = value;\n\n      if (this.isPlaying === true) {\n        this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\n      }\n\n      return this;\n    };\n\n    _proto.getPlaybackRate = function getPlaybackRate() {\n      return this.playbackRate;\n    };\n\n    _proto.onEnded = function onEnded() {\n      this.isPlaying = false;\n    };\n\n    _proto.getLoop = function getLoop() {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return false;\n      }\n\n      return this.loop;\n    };\n\n    _proto.setLoop = function setLoop(value) {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.loop = value;\n\n      if (this.isPlaying === true) {\n        this.source.loop = this.loop;\n      }\n\n      return this;\n    };\n\n    _proto.setLoopStart = function setLoopStart(value) {\n      this.loopStart = value;\n      return this;\n    };\n\n    _proto.setLoopEnd = function setLoopEnd(value) {\n      this.loopEnd = value;\n      return this;\n    };\n\n    _proto.getVolume = function getVolume() {\n      return this.gain.gain.value;\n    };\n\n    _proto.setVolume = function setVolume(value) {\n      this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n      return this;\n    };\n\n    return Audio;\n  }(Object3D);\n\n  var _position$3 = /*@__PURE__*/new Vector3();\n\n  var _quaternion$4 = /*@__PURE__*/new Quaternion();\n\n  var _scale$2 = /*@__PURE__*/new Vector3();\n\n  var _orientation$1 = /*@__PURE__*/new Vector3();\n\n  var PositionalAudio = /*#__PURE__*/function (_Audio) {\n    _inheritsLoose(PositionalAudio, _Audio);\n\n    function PositionalAudio(listener) {\n      var _this;\n\n      _this = _Audio.call(this, listener) || this;\n      _this.panner = _this.context.createPanner();\n      _this.panner.panningModel = 'HRTF';\n\n      _this.panner.connect(_this.gain);\n\n      return _this;\n    }\n\n    var _proto = PositionalAudio.prototype;\n\n    _proto.getOutput = function getOutput() {\n      return this.panner;\n    };\n\n    _proto.getRefDistance = function getRefDistance() {\n      return this.panner.refDistance;\n    };\n\n    _proto.setRefDistance = function setRefDistance(value) {\n      this.panner.refDistance = value;\n      return this;\n    };\n\n    _proto.getRolloffFactor = function getRolloffFactor() {\n      return this.panner.rolloffFactor;\n    };\n\n    _proto.setRolloffFactor = function setRolloffFactor(value) {\n      this.panner.rolloffFactor = value;\n      return this;\n    };\n\n    _proto.getDistanceModel = function getDistanceModel() {\n      return this.panner.distanceModel;\n    };\n\n    _proto.setDistanceModel = function setDistanceModel(value) {\n      this.panner.distanceModel = value;\n      return this;\n    };\n\n    _proto.getMaxDistance = function getMaxDistance() {\n      return this.panner.maxDistance;\n    };\n\n    _proto.setMaxDistance = function setMaxDistance(value) {\n      this.panner.maxDistance = value;\n      return this;\n    };\n\n    _proto.setDirectionalCone = function setDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\n      this.panner.coneInnerAngle = coneInnerAngle;\n      this.panner.coneOuterAngle = coneOuterAngle;\n      this.panner.coneOuterGain = coneOuterGain;\n      return this;\n    };\n\n    _proto.updateMatrixWorld = function updateMatrixWorld(force) {\n      _Audio.prototype.updateMatrixWorld.call(this, force);\n\n      if (this.hasPlaybackControl === true && this.isPlaying === false) return;\n      this.matrixWorld.decompose(_position$3, _quaternion$4, _scale$2);\n\n      _orientation$1.set(0, 0, 1).applyQuaternion(_quaternion$4);\n\n      var panner = this.panner;\n\n      if (panner.positionX) {\n        // code path for Chrome and Firefox (see #14393)\n        var endTime = this.context.currentTime + this.listener.timeDelta;\n        panner.positionX.linearRampToValueAtTime(_position$3.x, endTime);\n        panner.positionY.linearRampToValueAtTime(_position$3.y, endTime);\n        panner.positionZ.linearRampToValueAtTime(_position$3.z, endTime);\n        panner.orientationX.linearRampToValueAtTime(_orientation$1.x, endTime);\n        panner.orientationY.linearRampToValueAtTime(_orientation$1.y, endTime);\n        panner.orientationZ.linearRampToValueAtTime(_orientation$1.z, endTime);\n      } else {\n        panner.setPosition(_position$3.x, _position$3.y, _position$3.z);\n        panner.setOrientation(_orientation$1.x, _orientation$1.y, _orientation$1.z);\n      }\n    };\n\n    return PositionalAudio;\n  }(Audio);\n\n  var AudioAnalyser = /*#__PURE__*/function () {\n    function AudioAnalyser(audio, fftSize) {\n      if (fftSize === void 0) {\n        fftSize = 2048;\n      }\n\n      this.analyser = audio.context.createAnalyser();\n      this.analyser.fftSize = fftSize;\n      this.data = new Uint8Array(this.analyser.frequencyBinCount);\n      audio.getOutput().connect(this.analyser);\n    }\n\n    var _proto = AudioAnalyser.prototype;\n\n    _proto.getFrequencyData = function getFrequencyData() {\n      this.analyser.getByteFrequencyData(this.data);\n      return this.data;\n    };\n\n    _proto.getAverageFrequency = function getAverageFrequency() {\n      var value = 0;\n      var data = this.getFrequencyData();\n\n      for (var i = 0; i < data.length; i++) {\n        value += data[i];\n      }\n\n      return value / data.length;\n    };\n\n    return AudioAnalyser;\n  }();\n\n  function PropertyMixer(binding, typeName, valueSize) {\n    this.binding = binding;\n    this.valueSize = valueSize;\n    var mixFunction, mixFunctionAdditive, setIdentity; // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n    //\n    // interpolators can use .buffer as their .result\n    // the data then goes to 'incoming'\n    //\n    // 'accu0' and 'accu1' are used frame-interleaved for\n    // the cumulative result and are compared to detect\n    // changes\n    //\n    // 'orig' stores the original state of the property\n    //\n    // 'add' is used for additive cumulative results\n    //\n    // 'work' is optional and is only present for quaternion types. It is used\n    // to store intermediate quaternion multiplication results\n\n    switch (typeName) {\n      case 'quaternion':\n        mixFunction = this._slerp;\n        mixFunctionAdditive = this._slerpAdditive;\n        setIdentity = this._setAdditiveIdentityQuaternion;\n        this.buffer = new Float64Array(valueSize * 6);\n        this._workIndex = 5;\n        break;\n\n      case 'string':\n      case 'bool':\n        mixFunction = this._select; // Use the regular mix function and for additive on these types,\n        // additive is not relevant for non-numeric types\n\n        mixFunctionAdditive = this._select;\n        setIdentity = this._setAdditiveIdentityOther;\n        this.buffer = new Array(valueSize * 5);\n        break;\n\n      default:\n        mixFunction = this._lerp;\n        mixFunctionAdditive = this._lerpAdditive;\n        setIdentity = this._setAdditiveIdentityNumeric;\n        this.buffer = new Float64Array(valueSize * 5);\n    }\n\n    this._mixBufferRegion = mixFunction;\n    this._mixBufferRegionAdditive = mixFunctionAdditive;\n    this._setIdentity = setIdentity;\n    this._origIndex = 3;\n    this._addIndex = 4;\n    this.cumulativeWeight = 0;\n    this.cumulativeWeightAdditive = 0;\n    this.useCount = 0;\n    this.referenceCount = 0;\n  }\n\n  Object.assign(PropertyMixer.prototype, {\n    // accumulate data in the 'incoming' region into 'accu<i>'\n    accumulate: function accumulate(accuIndex, weight) {\n      // note: happily accumulating nothing when weight = 0, the caller knows\n      // the weight and shouldn't have made the call in the first place\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          offset = accuIndex * stride + stride;\n      var currentWeight = this.cumulativeWeight;\n\n      if (currentWeight === 0) {\n        // accuN := incoming * weight\n        for (var i = 0; i !== stride; ++i) {\n          buffer[offset + i] = buffer[i];\n        }\n\n        currentWeight = weight;\n      } else {\n        // accuN := accuN + incoming * weight\n        currentWeight += weight;\n        var mix = weight / currentWeight;\n\n        this._mixBufferRegion(buffer, offset, 0, mix, stride);\n      }\n\n      this.cumulativeWeight = currentWeight;\n    },\n    // accumulate data in the 'incoming' region into 'add'\n    accumulateAdditive: function accumulateAdditive(weight) {\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          offset = stride * this._addIndex;\n\n      if (this.cumulativeWeightAdditive === 0) {\n        // add = identity\n        this._setIdentity();\n      } // add := add + incoming * weight\n\n\n      this._mixBufferRegionAdditive(buffer, offset, 0, weight, stride);\n\n      this.cumulativeWeightAdditive += weight;\n    },\n    // apply the state of 'accu<i>' to the binding when accus differ\n    apply: function apply(accuIndex) {\n      var stride = this.valueSize,\n          buffer = this.buffer,\n          offset = accuIndex * stride + stride,\n          weight = this.cumulativeWeight,\n          weightAdditive = this.cumulativeWeightAdditive,\n          binding = this.binding;\n      this.cumulativeWeight = 0;\n      this.cumulativeWeightAdditive = 0;\n\n      if (weight < 1) {\n        // accuN := accuN + original * ( 1 - cumulativeWeight )\n        var originalValueOffset = stride * this._origIndex;\n\n        this._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n      }\n\n      if (weightAdditive > 0) {\n        // accuN := accuN + additive accuN\n        this._mixBufferRegionAdditive(buffer, offset, this._addIndex * stride, 1, stride);\n      }\n\n      for (var i = stride, e = stride + stride; i !== e; ++i) {\n        if (buffer[i] !== buffer[i + stride]) {\n          // value has changed -> update scene graph\n          binding.setValue(buffer, offset);\n          break;\n        }\n      }\n    },\n    // remember the state of the bound property and copy it to both accus\n    saveOriginalState: function saveOriginalState() {\n      var binding = this.binding;\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          originalValueOffset = stride * this._origIndex;\n      binding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n      for (var i = stride, e = originalValueOffset; i !== e; ++i) {\n        buffer[i] = buffer[originalValueOffset + i % stride];\n      } // Add to identity for additive\n\n\n      this._setIdentity();\n\n      this.cumulativeWeight = 0;\n      this.cumulativeWeightAdditive = 0;\n    },\n    // apply the state previously taken via 'saveOriginalState' to the binding\n    restoreOriginalState: function restoreOriginalState() {\n      var originalValueOffset = this.valueSize * 3;\n      this.binding.setValue(this.buffer, originalValueOffset);\n    },\n    _setAdditiveIdentityNumeric: function _setAdditiveIdentityNumeric() {\n      var startIndex = this._addIndex * this.valueSize;\n      var endIndex = startIndex + this.valueSize;\n\n      for (var i = startIndex; i < endIndex; i++) {\n        this.buffer[i] = 0;\n      }\n    },\n    _setAdditiveIdentityQuaternion: function _setAdditiveIdentityQuaternion() {\n      this._setAdditiveIdentityNumeric();\n\n      this.buffer[this._addIndex * this.valueSize + 3] = 1;\n    },\n    _setAdditiveIdentityOther: function _setAdditiveIdentityOther() {\n      var startIndex = this._origIndex * this.valueSize;\n      var targetIndex = this._addIndex * this.valueSize;\n\n      for (var i = 0; i < this.valueSize; i++) {\n        this.buffer[targetIndex + i] = this.buffer[startIndex + i];\n      }\n    },\n    // mix functions\n    _select: function _select(buffer, dstOffset, srcOffset, t, stride) {\n      if (t >= 0.5) {\n        for (var i = 0; i !== stride; ++i) {\n          buffer[dstOffset + i] = buffer[srcOffset + i];\n        }\n      }\n    },\n    _slerp: function _slerp(buffer, dstOffset, srcOffset, t) {\n      Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n    },\n    _slerpAdditive: function _slerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n      var workOffset = this._workIndex * stride; // Store result in intermediate buffer offset\n\n      Quaternion.multiplyQuaternionsFlat(buffer, workOffset, buffer, dstOffset, buffer, srcOffset); // Slerp to the intermediate result\n\n      Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t);\n    },\n    _lerp: function _lerp(buffer, dstOffset, srcOffset, t, stride) {\n      var s = 1 - t;\n\n      for (var i = 0; i !== stride; ++i) {\n        var j = dstOffset + i;\n        buffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n      }\n    },\n    _lerpAdditive: function _lerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n      for (var i = 0; i !== stride; ++i) {\n        var j = dstOffset + i;\n        buffer[j] = buffer[j] + buffer[srcOffset + i] * t;\n      }\n    }\n  }); // Characters [].:/ are reserved for track binding syntax.\n\n  var _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\n  var _reservedRe = new RegExp('[' + _RESERVED_CHARS_RE + ']', 'g'); // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n  // only latin characters, and the unicode \\p{L} is not yet supported. So\n  // instead, we exclude reserved characters and match everything else.\n\n\n  var _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\n  var _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\n  // be matched to parse the rest of the track name.\n\n\n  var _directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', _wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n\n  var _nodeRe = /(WCOD+)?/.source.replace('WCOD', _wordCharOrDot); // Object on target node, and accessor. May not contain reserved\n  // characters. Accessor may contain any character except closing bracket.\n\n\n  var _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', _wordChar); // Property and accessor. May not contain reserved characters. Accessor may\n  // contain any non-bracket characters.\n\n\n  var _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', _wordChar);\n\n  var _trackRe = new RegExp('' + '^' + _directoryRe + _nodeRe + _objectRe + _propertyRe + '$');\n\n  var _supportedObjectNames = ['material', 'materials', 'bones'];\n\n  function Composite(targetGroup, path, optionalParsedPath) {\n    var parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n    this._targetGroup = targetGroup;\n    this._bindings = targetGroup.subscribe_(path, parsedPath);\n  }\n\n  Object.assign(Composite.prototype, {\n    getValue: function getValue(array, offset) {\n      this.bind(); // bind all binding\n\n      var firstValidIndex = this._targetGroup.nCachedObjects_,\n          binding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n      if (binding !== undefined) binding.getValue(array, offset);\n    },\n    setValue: function setValue(array, offset) {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].setValue(array, offset);\n      }\n    },\n    bind: function bind() {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].bind();\n      }\n    },\n    unbind: function unbind() {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].unbind();\n      }\n    }\n  });\n\n  function PropertyBinding(rootNode, path, parsedPath) {\n    this.path = path;\n    this.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n    this.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n    this.rootNode = rootNode;\n  }\n\n  Object.assign(PropertyBinding, {\n    Composite: Composite,\n    create: function create(root, path, parsedPath) {\n      if (!(root && root.isAnimationObjectGroup)) {\n        return new PropertyBinding(root, path, parsedPath);\n      } else {\n        return new PropertyBinding.Composite(root, path, parsedPath);\n      }\n    },\n\n    /**\n     * Replaces spaces with underscores and removes unsupported characters from\n     * node names, to ensure compatibility with parseTrackName().\n     *\n     * @param {string} name Node name to be sanitized.\n     * @return {string}\n     */\n    sanitizeNodeName: function sanitizeNodeName(name) {\n      return name.replace(/\\s/g, '_').replace(_reservedRe, '');\n    },\n    parseTrackName: function parseTrackName(trackName) {\n      var matches = _trackRe.exec(trackName);\n\n      if (!matches) {\n        throw new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n      }\n\n      var results = {\n        // directoryName: matches[ 1 ], // (tschw) currently unused\n        nodeName: matches[2],\n        objectName: matches[3],\n        objectIndex: matches[4],\n        propertyName: matches[5],\n        // required\n        propertyIndex: matches[6]\n      };\n      var lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n      if (lastDot !== undefined && lastDot !== -1) {\n        var objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against an allowlist. Otherwise, there\n        // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n        // 'bar' could be the objectName, or part of a nodeName (which can\n        // include '.' characters).\n\n        if (_supportedObjectNames.indexOf(objectName) !== -1) {\n          results.nodeName = results.nodeName.substring(0, lastDot);\n          results.objectName = objectName;\n        }\n      }\n\n      if (results.propertyName === null || results.propertyName.length === 0) {\n        throw new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n      }\n\n      return results;\n    },\n    findNode: function findNode(root, nodeName) {\n      if (!nodeName || nodeName === '' || nodeName === '.' || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n        return root;\n      } // search into skeleton bones.\n\n\n      if (root.skeleton) {\n        var bone = root.skeleton.getBoneByName(nodeName);\n\n        if (bone !== undefined) {\n          return bone;\n        }\n      } // search into node subtree.\n\n\n      if (root.children) {\n        var searchNodeSubtree = function searchNodeSubtree(children) {\n          for (var i = 0; i < children.length; i++) {\n            var childNode = children[i];\n\n            if (childNode.name === nodeName || childNode.uuid === nodeName) {\n              return childNode;\n            }\n\n            var result = searchNodeSubtree(childNode.children);\n            if (result) return result;\n          }\n\n          return null;\n        };\n\n        var subTreeNode = searchNodeSubtree(root.children);\n\n        if (subTreeNode) {\n          return subTreeNode;\n        }\n      }\n\n      return null;\n    }\n  });\n  Object.assign(PropertyBinding.prototype, {\n    // prototype, continued\n    // these are used to \"bind\" a nonexistent property\n    _getValue_unavailable: function _getValue_unavailable() {},\n    _setValue_unavailable: function _setValue_unavailable() {},\n    BindingType: {\n      Direct: 0,\n      EntireArray: 1,\n      ArrayElement: 2,\n      HasFromToArray: 3\n    },\n    Versioning: {\n      None: 0,\n      NeedsUpdate: 1,\n      MatrixWorldNeedsUpdate: 2\n    },\n    GetterByBindingType: [function getValue_direct(buffer, offset) {\n      buffer[offset] = this.node[this.propertyName];\n    }, function getValue_array(buffer, offset) {\n      var source = this.resolvedProperty;\n\n      for (var i = 0, n = source.length; i !== n; ++i) {\n        buffer[offset++] = source[i];\n      }\n    }, function getValue_arrayElement(buffer, offset) {\n      buffer[offset] = this.resolvedProperty[this.propertyIndex];\n    }, function getValue_toArray(buffer, offset) {\n      this.resolvedProperty.toArray(buffer, offset);\n    }],\n    SetterByBindingTypeAndVersioning: [[// Direct\n    function setValue_direct(buffer, offset) {\n      this.targetObject[this.propertyName] = buffer[offset];\n    }, function setValue_direct_setNeedsUpdate(buffer, offset) {\n      this.targetObject[this.propertyName] = buffer[offset];\n      this.targetObject.needsUpdate = true;\n    }, function setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.targetObject[this.propertyName] = buffer[offset];\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// EntireArray\n    function setValue_array(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n    }, function setValue_array_setNeedsUpdate(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n\n      this.targetObject.needsUpdate = true;\n    }, function setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// ArrayElement\n    function setValue_arrayElement(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    }, function setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n      this.targetObject.needsUpdate = true;\n    }, function setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// HasToFromArray\n    function setValue_fromArray(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n    }, function setValue_fromArray_setNeedsUpdate(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n      this.targetObject.needsUpdate = true;\n    }, function setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }]],\n    getValue: function getValue_unbound(targetArray, offset) {\n      this.bind();\n      this.getValue(targetArray, offset); // Note: This class uses a State pattern on a per-method basis:\n      // 'bind' sets 'this.getValue' / 'setValue' and shadows the\n      // prototype version of these methods with one that represents\n      // the bound state. When the property is not found, the methods\n      // become no-ops.\n    },\n    setValue: function getValue_unbound(sourceArray, offset) {\n      this.bind();\n      this.setValue(sourceArray, offset);\n    },\n    // create getter / setter pair for a property in the scene graph\n    bind: function bind() {\n      var targetObject = this.node;\n      var parsedPath = this.parsedPath;\n      var objectName = parsedPath.objectName;\n      var propertyName = parsedPath.propertyName;\n      var propertyIndex = parsedPath.propertyIndex;\n\n      if (!targetObject) {\n        targetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n        this.node = targetObject;\n      } // set fail state so we can just 'return' on error\n\n\n      this.getValue = this._getValue_unavailable;\n      this.setValue = this._setValue_unavailable; // ensure there is a value node\n\n      if (!targetObject) {\n        console.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n        return;\n      }\n\n      if (objectName) {\n        var objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n        switch (objectName) {\n          case 'materials':\n            if (!targetObject.material) {\n              console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n              return;\n            }\n\n            if (!targetObject.material.materials) {\n              console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n              return;\n            }\n\n            targetObject = targetObject.material.materials;\n            break;\n\n          case 'bones':\n            if (!targetObject.skeleton) {\n              console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n              return;\n            } // potential future optimization: skip this if propertyIndex is already an integer\n            // and convert the integer string to a true integer.\n\n\n            targetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n            for (var i = 0; i < targetObject.length; i++) {\n              if (targetObject[i].name === objectIndex) {\n                objectIndex = i;\n                break;\n              }\n            }\n\n            break;\n\n          default:\n            if (targetObject[objectName] === undefined) {\n              console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n              return;\n            }\n\n            targetObject = targetObject[objectName];\n        }\n\n        if (objectIndex !== undefined) {\n          if (targetObject[objectIndex] === undefined) {\n            console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n            return;\n          }\n\n          targetObject = targetObject[objectIndex];\n        }\n      } // resolve property\n\n\n      var nodeProperty = targetObject[propertyName];\n\n      if (nodeProperty === undefined) {\n        var nodeName = parsedPath.nodeName;\n        console.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n        return;\n      } // determine versioning scheme\n\n\n      var versioning = this.Versioning.None;\n      this.targetObject = targetObject;\n\n      if (targetObject.needsUpdate !== undefined) {\n        // material\n        versioning = this.Versioning.NeedsUpdate;\n      } else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n        // node transform\n        versioning = this.Versioning.MatrixWorldNeedsUpdate;\n      } // determine how the property gets bound\n\n\n      var bindingType = this.BindingType.Direct;\n\n      if (propertyIndex !== undefined) {\n        // access a sub element of the property array (only primitives are supported right now)\n        if (propertyName === 'morphTargetInfluences') {\n          // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n          // support resolving morphTarget names into indices.\n          if (!targetObject.geometry) {\n            console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n            return;\n          }\n\n          if (targetObject.geometry.isBufferGeometry) {\n            if (!targetObject.geometry.morphAttributes) {\n              console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n              return;\n            }\n\n            if (targetObject.morphTargetDictionary[propertyIndex] !== undefined) {\n              propertyIndex = targetObject.morphTargetDictionary[propertyIndex];\n            }\n          } else {\n            console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this);\n            return;\n          }\n        }\n\n        bindingType = this.BindingType.ArrayElement;\n        this.resolvedProperty = nodeProperty;\n        this.propertyIndex = propertyIndex;\n      } else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n        // must use copy for Object3D.Euler/Quaternion\n        bindingType = this.BindingType.HasFromToArray;\n        this.resolvedProperty = nodeProperty;\n      } else if (Array.isArray(nodeProperty)) {\n        bindingType = this.BindingType.EntireArray;\n        this.resolvedProperty = nodeProperty;\n      } else {\n        this.propertyName = propertyName;\n      } // select getter / setter\n\n\n      this.getValue = this.GetterByBindingType[bindingType];\n      this.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n    },\n    unbind: function unbind() {\n      this.node = null; // back to the prototype version of getValue / setValue\n      // note: avoiding to mutate the shape of 'this' via 'delete'\n\n      this.getValue = this._getValue_unbound;\n      this.setValue = this._setValue_unbound;\n    }\n  }); // DECLARE ALIAS AFTER assign prototype\n\n  Object.assign(PropertyBinding.prototype, {\n    // initial state of these methods that calls 'bind'\n    _getValue_unbound: PropertyBinding.prototype.getValue,\n    _setValue_unbound: PropertyBinding.prototype.setValue\n  });\n  /**\n   *\n   * A group of objects that receives a shared animation state.\n   *\n   * Usage:\n   *\n   *\t- Add objects you would otherwise pass as 'root' to the\n   *\t\tconstructor or the .clipAction method of AnimationMixer.\n   *\n   *\t- Instead pass this object as 'root'.\n   *\n   *\t- You can also add and remove objects later when the mixer\n   *\t\tis running.\n   *\n   * Note:\n   *\n   *\t\tObjects of this class appear as one object to the mixer,\n   *\t\tso cache control of the individual objects must be done\n   *\t\ton the group.\n   *\n   * Limitation:\n   *\n   *\t- The animated properties must be compatible among the\n   *\t\tall objects in the group.\n   *\n   *\t- A single property can either be controlled through a\n   *\t\ttarget group or directly, but not both.\n   */\n\n  function AnimationObjectGroup() {\n    this.uuid = MathUtils.generateUUID(); // cached objects followed by the active ones\n\n    this._objects = Array.prototype.slice.call(arguments);\n    this.nCachedObjects_ = 0; // threshold\n    // note: read by PropertyBinding.Composite\n\n    var indices = {};\n    this._indicesByUUID = indices; // for bookkeeping\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      indices[arguments[i].uuid] = i;\n    }\n\n    this._paths = []; // inside: string\n\n    this._parsedPaths = []; // inside: { we don't care, here }\n\n    this._bindings = []; // inside: Array< PropertyBinding >\n\n    this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n    var scope = this;\n    this.stats = {\n      objects: {\n        get total() {\n          return scope._objects.length;\n        },\n\n        get inUse() {\n          return this.total - scope.nCachedObjects_;\n        }\n\n      },\n\n      get bindingsPerObject() {\n        return scope._bindings.length;\n      }\n\n    };\n  }\n\n  Object.assign(AnimationObjectGroup.prototype, {\n    isAnimationObjectGroup: true,\n    add: function add() {\n      var objects = this._objects,\n          indicesByUUID = this._indicesByUUID,\n          paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n      var knownObject = undefined,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid;\n        var index = indicesByUUID[uuid];\n\n        if (index === undefined) {\n          // unknown object -> add it to the ACTIVE region\n          index = nObjects++;\n          indicesByUUID[uuid] = index;\n          objects.push(object); // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            bindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n          }\n        } else if (index < nCachedObjects) {\n          knownObject = objects[index]; // move existing object to the ACTIVE region\n\n          var firstActiveIndex = --nCachedObjects,\n              lastCachedObject = objects[firstActiveIndex];\n          indicesByUUID[lastCachedObject.uuid] = index;\n          objects[index] = lastCachedObject;\n          indicesByUUID[uuid] = firstActiveIndex;\n          objects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n          for (var _j = 0, _m = nBindings; _j !== _m; ++_j) {\n            var bindingsForPath = bindings[_j],\n                lastCached = bindingsForPath[firstActiveIndex];\n            var binding = bindingsForPath[index];\n            bindingsForPath[index] = lastCached;\n\n            if (binding === undefined) {\n              // since we do not bother to create new bindings\n              // for objects that are cached, the binding may\n              // or may not exist\n              binding = new PropertyBinding(object, paths[_j], parsedPaths[_j]);\n            }\n\n            bindingsForPath[firstActiveIndex] = binding;\n          }\n        } else if (objects[index] !== knownObject) {\n          console.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n        } // else the object is already where we want it to be\n\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    remove: function remove() {\n      var objects = this._objects,\n          indicesByUUID = this._indicesByUUID,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n      var nCachedObjects = this.nCachedObjects_;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index !== undefined && index >= nCachedObjects) {\n          // move existing object into the CACHED region\n          var lastCachedIndex = nCachedObjects++,\n              firstActiveObject = objects[lastCachedIndex];\n          indicesByUUID[firstActiveObject.uuid] = index;\n          objects[index] = firstActiveObject;\n          indicesByUUID[uuid] = lastCachedIndex;\n          objects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                firstActive = bindingsForPath[lastCachedIndex],\n                binding = bindingsForPath[index];\n            bindingsForPath[index] = firstActive;\n            bindingsForPath[lastCachedIndex] = binding;\n          }\n        }\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    // remove & forget\n    uncache: function uncache() {\n      var objects = this._objects,\n          indicesByUUID = this._indicesByUUID,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n      var nCachedObjects = this.nCachedObjects_,\n          nObjects = objects.length;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index !== undefined) {\n          delete indicesByUUID[uuid];\n\n          if (index < nCachedObjects) {\n            // object is cached, shrink the CACHED region\n            var firstActiveIndex = --nCachedObjects,\n                lastCachedObject = objects[firstActiveIndex],\n                lastIndex = --nObjects,\n                lastObject = objects[lastIndex]; // last cached object takes this object's place\n\n            indicesByUUID[lastCachedObject.uuid] = index;\n            objects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n            indicesByUUID[lastObject.uuid] = firstActiveIndex;\n            objects[firstActiveIndex] = lastObject;\n            objects.pop(); // accounting is done, now do the same for all bindings\n\n            for (var j = 0, m = nBindings; j !== m; ++j) {\n              var bindingsForPath = bindings[j],\n                  lastCached = bindingsForPath[firstActiveIndex],\n                  last = bindingsForPath[lastIndex];\n              bindingsForPath[index] = lastCached;\n              bindingsForPath[firstActiveIndex] = last;\n              bindingsForPath.pop();\n            }\n          } else {\n            // object is active, just swap with the last and pop\n            var _lastIndex = --nObjects,\n                _lastObject = objects[_lastIndex];\n\n            if (_lastIndex > 0) {\n              indicesByUUID[_lastObject.uuid] = index;\n            }\n\n            objects[index] = _lastObject;\n            objects.pop(); // accounting is done, now do the same for all bindings\n\n            for (var _j2 = 0, _m2 = nBindings; _j2 !== _m2; ++_j2) {\n              var _bindingsForPath = bindings[_j2];\n              _bindingsForPath[index] = _bindingsForPath[_lastIndex];\n\n              _bindingsForPath.pop();\n            }\n          } // cached or active\n\n        } // if object is known\n\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    // Internal interface used by befriended PropertyBinding.Composite:\n    subscribe_: function subscribe_(path, parsedPath) {\n      // returns an array of bindings for the given path that is changed\n      // according to the contained objects in the group\n      var indicesByPath = this._bindingsIndicesByPath;\n      var index = indicesByPath[path];\n      var bindings = this._bindings;\n      if (index !== undefined) return bindings[index];\n      var paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          bindingsForPath = new Array(nObjects);\n      index = bindings.length;\n      indicesByPath[path] = index;\n      paths.push(path);\n      parsedPaths.push(parsedPath);\n      bindings.push(bindingsForPath);\n\n      for (var i = nCachedObjects, n = objects.length; i !== n; ++i) {\n        var object = objects[i];\n        bindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n      }\n\n      return bindingsForPath;\n    },\n    unsubscribe_: function unsubscribe_(path) {\n      // tells the group to forget about a property path and no longer\n      // update the array previously obtained with 'subscribe_'\n      var indicesByPath = this._bindingsIndicesByPath,\n          index = indicesByPath[path];\n\n      if (index !== undefined) {\n        var paths = this._paths,\n            parsedPaths = this._parsedPaths,\n            bindings = this._bindings,\n            lastBindingsIndex = bindings.length - 1,\n            lastBindings = bindings[lastBindingsIndex],\n            lastBindingsPath = path[lastBindingsIndex];\n        indicesByPath[lastBindingsPath] = index;\n        bindings[index] = lastBindings;\n        bindings.pop();\n        parsedPaths[index] = parsedPaths[lastBindingsIndex];\n        parsedPaths.pop();\n        paths[index] = paths[lastBindingsIndex];\n        paths.pop();\n      }\n    }\n  });\n\n  var AnimationAction = /*#__PURE__*/function () {\n    function AnimationAction(mixer, clip, localRoot, blendMode) {\n      if (localRoot === void 0) {\n        localRoot = null;\n      }\n\n      if (blendMode === void 0) {\n        blendMode = clip.blendMode;\n      }\n\n      this._mixer = mixer;\n      this._clip = clip;\n      this._localRoot = localRoot;\n      this.blendMode = blendMode;\n      var tracks = clip.tracks,\n          nTracks = tracks.length,\n          interpolants = new Array(nTracks);\n      var interpolantSettings = {\n        endingStart: ZeroCurvatureEnding,\n        endingEnd: ZeroCurvatureEnding\n      };\n\n      for (var i = 0; i !== nTracks; ++i) {\n        var interpolant = tracks[i].createInterpolant(null);\n        interpolants[i] = interpolant;\n        interpolant.settings = interpolantSettings;\n      }\n\n      this._interpolantSettings = interpolantSettings;\n      this._interpolants = interpolants; // bound by the mixer\n      // inside: PropertyMixer (managed by the mixer)\n\n      this._propertyBindings = new Array(nTracks);\n      this._cacheIndex = null; // for the memory manager\n\n      this._byClipCacheIndex = null; // for the memory manager\n\n      this._timeScaleInterpolant = null;\n      this._weightInterpolant = null;\n      this.loop = LoopRepeat;\n      this._loopCount = -1; // global mixer time when the action is to be started\n      // it's set back to 'null' upon start of the action\n\n      this._startTime = null; // scaled local time of the action\n      // gets clamped or wrapped to 0..clip.duration according to loop\n\n      this.time = 0;\n      this.timeScale = 1;\n      this._effectiveTimeScale = 1;\n      this.weight = 1;\n      this._effectiveWeight = 1;\n      this.repetitions = Infinity; // no. of repetitions when looping\n\n      this.paused = false; // true -> zero effective time scale\n\n      this.enabled = true; // false -> zero effective weight\n\n      this.clampWhenFinished = false; // keep feeding the last frame?\n\n      this.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n      this.zeroSlopeAtEnd = true; // clips for start, loop and end\n    } // State & Scheduling\n\n\n    var _proto = AnimationAction.prototype;\n\n    _proto.play = function play() {\n      this._mixer._activateAction(this);\n\n      return this;\n    };\n\n    _proto.stop = function stop() {\n      this._mixer._deactivateAction(this);\n\n      return this.reset();\n    };\n\n    _proto.reset = function reset() {\n      this.paused = false;\n      this.enabled = true;\n      this.time = 0; // restart clip\n\n      this._loopCount = -1; // forget previous loops\n\n      this._startTime = null; // forget scheduling\n\n      return this.stopFading().stopWarping();\n    };\n\n    _proto.isRunning = function isRunning() {\n      return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n    } // return true when play has been called\n    ;\n\n    _proto.isScheduled = function isScheduled() {\n      return this._mixer._isActiveAction(this);\n    };\n\n    _proto.startAt = function startAt(time) {\n      this._startTime = time;\n      return this;\n    };\n\n    _proto.setLoop = function setLoop(mode, repetitions) {\n      this.loop = mode;\n      this.repetitions = repetitions;\n      return this;\n    } // Weight\n    // set the weight stopping any scheduled fading\n    // although .enabled = false yields an effective weight of zero, this\n    // method does *not* change .enabled, because it would be confusing\n    ;\n\n    _proto.setEffectiveWeight = function setEffectiveWeight(weight) {\n      this.weight = weight; // note: same logic as when updated at runtime\n\n      this._effectiveWeight = this.enabled ? weight : 0;\n      return this.stopFading();\n    } // return the weight considering fading and .enabled\n    ;\n\n    _proto.getEffectiveWeight = function getEffectiveWeight() {\n      return this._effectiveWeight;\n    };\n\n    _proto.fadeIn = function fadeIn(duration) {\n      return this._scheduleFading(duration, 0, 1);\n    };\n\n    _proto.fadeOut = function fadeOut(duration) {\n      return this._scheduleFading(duration, 1, 0);\n    };\n\n    _proto.crossFadeFrom = function crossFadeFrom(fadeOutAction, duration, warp) {\n      fadeOutAction.fadeOut(duration);\n      this.fadeIn(duration);\n\n      if (warp) {\n        var fadeInDuration = this._clip.duration,\n            fadeOutDuration = fadeOutAction._clip.duration,\n            startEndRatio = fadeOutDuration / fadeInDuration,\n            endStartRatio = fadeInDuration / fadeOutDuration;\n        fadeOutAction.warp(1.0, startEndRatio, duration);\n        this.warp(endStartRatio, 1.0, duration);\n      }\n\n      return this;\n    };\n\n    _proto.crossFadeTo = function crossFadeTo(fadeInAction, duration, warp) {\n      return fadeInAction.crossFadeFrom(this, duration, warp);\n    };\n\n    _proto.stopFading = function stopFading() {\n      var weightInterpolant = this._weightInterpolant;\n\n      if (weightInterpolant !== null) {\n        this._weightInterpolant = null;\n\n        this._mixer._takeBackControlInterpolant(weightInterpolant);\n      }\n\n      return this;\n    } // Time Scale Control\n    // set the time scale stopping any scheduled warping\n    // although .paused = true yields an effective time scale of zero, this\n    // method does *not* change .paused, because it would be confusing\n    ;\n\n    _proto.setEffectiveTimeScale = function setEffectiveTimeScale(timeScale) {\n      this.timeScale = timeScale;\n      this._effectiveTimeScale = this.paused ? 0 : timeScale;\n      return this.stopWarping();\n    } // return the time scale considering warping and .paused\n    ;\n\n    _proto.getEffectiveTimeScale = function getEffectiveTimeScale() {\n      return this._effectiveTimeScale;\n    };\n\n    _proto.setDuration = function setDuration(duration) {\n      this.timeScale = this._clip.duration / duration;\n      return this.stopWarping();\n    };\n\n    _proto.syncWith = function syncWith(action) {\n      this.time = action.time;\n      this.timeScale = action.timeScale;\n      return this.stopWarping();\n    };\n\n    _proto.halt = function halt(duration) {\n      return this.warp(this._effectiveTimeScale, 0, duration);\n    };\n\n    _proto.warp = function warp(startTimeScale, endTimeScale, duration) {\n      var mixer = this._mixer,\n          now = mixer.time,\n          timeScale = this.timeScale;\n      var interpolant = this._timeScaleInterpolant;\n\n      if (interpolant === null) {\n        interpolant = mixer._lendControlInterpolant();\n        this._timeScaleInterpolant = interpolant;\n      }\n\n      var times = interpolant.parameterPositions,\n          values = interpolant.sampleValues;\n      times[0] = now;\n      times[1] = now + duration;\n      values[0] = startTimeScale / timeScale;\n      values[1] = endTimeScale / timeScale;\n      return this;\n    };\n\n    _proto.stopWarping = function stopWarping() {\n      var timeScaleInterpolant = this._timeScaleInterpolant;\n\n      if (timeScaleInterpolant !== null) {\n        this._timeScaleInterpolant = null;\n\n        this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n      }\n\n      return this;\n    } // Object Accessors\n    ;\n\n    _proto.getMixer = function getMixer() {\n      return this._mixer;\n    };\n\n    _proto.getClip = function getClip() {\n      return this._clip;\n    };\n\n    _proto.getRoot = function getRoot() {\n      return this._localRoot || this._mixer._root;\n    } // Interna\n    ;\n\n    _proto._update = function _update(time, deltaTime, timeDirection, accuIndex) {\n      // called by the mixer\n      if (!this.enabled) {\n        // call ._updateWeight() to update ._effectiveWeight\n        this._updateWeight(time);\n\n        return;\n      }\n\n      var startTime = this._startTime;\n\n      if (startTime !== null) {\n        // check for scheduled start of action\n        var timeRunning = (time - startTime) * timeDirection;\n\n        if (timeRunning < 0 || timeDirection === 0) {\n          return; // yet to come / don't decide when delta = 0\n        } // start\n\n\n        this._startTime = null; // unschedule\n\n        deltaTime = timeDirection * timeRunning;\n      } // apply time scale and advance time\n\n\n      deltaTime *= this._updateTimeScale(time);\n\n      var clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n      // an effective weight of 0\n\n\n      var weight = this._updateWeight(time);\n\n      if (weight > 0) {\n        var _interpolants = this._interpolants;\n        var propertyMixers = this._propertyBindings;\n\n        switch (this.blendMode) {\n          case AdditiveAnimationBlendMode:\n            for (var j = 0, m = _interpolants.length; j !== m; ++j) {\n              _interpolants[j].evaluate(clipTime);\n\n              propertyMixers[j].accumulateAdditive(weight);\n            }\n\n            break;\n\n          case NormalAnimationBlendMode:\n          default:\n            for (var _j = 0, _m = _interpolants.length; _j !== _m; ++_j) {\n              _interpolants[_j].evaluate(clipTime);\n\n              propertyMixers[_j].accumulate(accuIndex, weight);\n            }\n\n        }\n      }\n    };\n\n    _proto._updateWeight = function _updateWeight(time) {\n      var weight = 0;\n\n      if (this.enabled) {\n        weight = this.weight;\n        var interpolant = this._weightInterpolant;\n\n        if (interpolant !== null) {\n          var interpolantValue = interpolant.evaluate(time)[0];\n          weight *= interpolantValue;\n\n          if (time > interpolant.parameterPositions[1]) {\n            this.stopFading();\n\n            if (interpolantValue === 0) {\n              // faded out, disable\n              this.enabled = false;\n            }\n          }\n        }\n      }\n\n      this._effectiveWeight = weight;\n      return weight;\n    };\n\n    _proto._updateTimeScale = function _updateTimeScale(time) {\n      var timeScale = 0;\n\n      if (!this.paused) {\n        timeScale = this.timeScale;\n        var interpolant = this._timeScaleInterpolant;\n\n        if (interpolant !== null) {\n          var interpolantValue = interpolant.evaluate(time)[0];\n          timeScale *= interpolantValue;\n\n          if (time > interpolant.parameterPositions[1]) {\n            this.stopWarping();\n\n            if (timeScale === 0) {\n              // motion has halted, pause\n              this.paused = true;\n            } else {\n              // warp done - apply final time scale\n              this.timeScale = timeScale;\n            }\n          }\n        }\n      }\n\n      this._effectiveTimeScale = timeScale;\n      return timeScale;\n    };\n\n    _proto._updateTime = function _updateTime(deltaTime) {\n      var duration = this._clip.duration;\n      var loop = this.loop;\n      var time = this.time + deltaTime;\n      var loopCount = this._loopCount;\n      var pingPong = loop === LoopPingPong;\n\n      if (deltaTime === 0) {\n        if (loopCount === -1) return time;\n        return pingPong && (loopCount & 1) === 1 ? duration - time : time;\n      }\n\n      if (loop === LoopOnce) {\n        if (loopCount === -1) {\n          // just started\n          this._loopCount = 0;\n\n          this._setEndings(true, true, false);\n        }\n\n        handle_stop: {\n          if (time >= duration) {\n            time = duration;\n          } else if (time < 0) {\n            time = 0;\n          } else {\n            this.time = time;\n            break handle_stop;\n          }\n\n          if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n          this.time = time;\n\n          this._mixer.dispatchEvent({\n            type: 'finished',\n            action: this,\n            direction: deltaTime < 0 ? -1 : 1\n          });\n        }\n      } else {\n        // repetitive Repeat or PingPong\n        if (loopCount === -1) {\n          // just started\n          if (deltaTime >= 0) {\n            loopCount = 0;\n\n            this._setEndings(true, this.repetitions === 0, pingPong);\n          } else {\n            // when looping in reverse direction, the initial\n            // transition through zero counts as a repetition,\n            // so leave loopCount at -1\n            this._setEndings(this.repetitions === 0, true, pingPong);\n          }\n        }\n\n        if (time >= duration || time < 0) {\n          // wrap around\n          var loopDelta = Math.floor(time / duration); // signed\n\n          time -= duration * loopDelta;\n          loopCount += Math.abs(loopDelta);\n          var pending = this.repetitions - loopCount;\n\n          if (pending <= 0) {\n            // have to stop (switch state, clamp time, fire event)\n            if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n            time = deltaTime > 0 ? duration : 0;\n            this.time = time;\n\n            this._mixer.dispatchEvent({\n              type: 'finished',\n              action: this,\n              direction: deltaTime > 0 ? 1 : -1\n            });\n          } else {\n            // keep running\n            if (pending === 1) {\n              // entering the last round\n              var atStart = deltaTime < 0;\n\n              this._setEndings(atStart, !atStart, pingPong);\n            } else {\n              this._setEndings(false, false, pingPong);\n            }\n\n            this._loopCount = loopCount;\n            this.time = time;\n\n            this._mixer.dispatchEvent({\n              type: 'loop',\n              action: this,\n              loopDelta: loopDelta\n            });\n          }\n        } else {\n          this.time = time;\n        }\n\n        if (pingPong && (loopCount & 1) === 1) {\n          // invert time for the \"pong round\"\n          return duration - time;\n        }\n      }\n\n      return time;\n    };\n\n    _proto._setEndings = function _setEndings(atStart, atEnd, pingPong) {\n      var settings = this._interpolantSettings;\n\n      if (pingPong) {\n        settings.endingStart = ZeroSlopeEnding;\n        settings.endingEnd = ZeroSlopeEnding;\n      } else {\n        // assuming for LoopOnce atStart == atEnd == true\n        if (atStart) {\n          settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n        } else {\n          settings.endingStart = WrapAroundEnding;\n        }\n\n        if (atEnd) {\n          settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n        } else {\n          settings.endingEnd = WrapAroundEnding;\n        }\n      }\n    };\n\n    _proto._scheduleFading = function _scheduleFading(duration, weightNow, weightThen) {\n      var mixer = this._mixer,\n          now = mixer.time;\n      var interpolant = this._weightInterpolant;\n\n      if (interpolant === null) {\n        interpolant = mixer._lendControlInterpolant();\n        this._weightInterpolant = interpolant;\n      }\n\n      var times = interpolant.parameterPositions,\n          values = interpolant.sampleValues;\n      times[0] = now;\n      values[0] = weightNow;\n      times[1] = now + duration;\n      values[1] = weightThen;\n      return this;\n    };\n\n    return AnimationAction;\n  }();\n\n  function AnimationMixer(root) {\n    this._root = root;\n\n    this._initMemoryManager();\n\n    this._accuIndex = 0;\n    this.time = 0;\n    this.timeScale = 1.0;\n  }\n\n  AnimationMixer.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: AnimationMixer,\n    _bindAction: function _bindAction(action, prototypeAction) {\n      var root = action._localRoot || this._root,\n          tracks = action._clip.tracks,\n          nTracks = tracks.length,\n          bindings = action._propertyBindings,\n          interpolants = action._interpolants,\n          rootUuid = root.uuid,\n          bindingsByRoot = this._bindingsByRootAndName;\n      var bindingsByName = bindingsByRoot[rootUuid];\n\n      if (bindingsByName === undefined) {\n        bindingsByName = {};\n        bindingsByRoot[rootUuid] = bindingsByName;\n      }\n\n      for (var i = 0; i !== nTracks; ++i) {\n        var track = tracks[i],\n            trackName = track.name;\n        var binding = bindingsByName[trackName];\n\n        if (binding !== undefined) {\n          bindings[i] = binding;\n        } else {\n          binding = bindings[i];\n\n          if (binding !== undefined) {\n            // existing binding, make sure the cache knows\n            if (binding._cacheIndex === null) {\n              ++binding.referenceCount;\n\n              this._addInactiveBinding(binding, rootUuid, trackName);\n            }\n\n            continue;\n          }\n\n          var path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n          binding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n          ++binding.referenceCount;\n\n          this._addInactiveBinding(binding, rootUuid, trackName);\n\n          bindings[i] = binding;\n        }\n\n        interpolants[i].resultBuffer = binding.buffer;\n      }\n    },\n    _activateAction: function _activateAction(action) {\n      if (!this._isActiveAction(action)) {\n        if (action._cacheIndex === null) {\n          // this action has been forgotten by the cache, but the user\n          // appears to be still using it -> rebind\n          var rootUuid = (action._localRoot || this._root).uuid,\n              clipUuid = action._clip.uuid,\n              actionsForClip = this._actionsByClip[clipUuid];\n\n          this._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n          this._addInactiveAction(action, clipUuid, rootUuid);\n        }\n\n        var bindings = action._propertyBindings; // increment reference counts / sort out state\n\n        for (var i = 0, n = bindings.length; i !== n; ++i) {\n          var binding = bindings[i];\n\n          if (binding.useCount++ === 0) {\n            this._lendBinding(binding);\n\n            binding.saveOriginalState();\n          }\n        }\n\n        this._lendAction(action);\n      }\n    },\n    _deactivateAction: function _deactivateAction(action) {\n      if (this._isActiveAction(action)) {\n        var bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n        for (var i = 0, n = bindings.length; i !== n; ++i) {\n          var binding = bindings[i];\n\n          if (--binding.useCount === 0) {\n            binding.restoreOriginalState();\n\n            this._takeBackBinding(binding);\n          }\n        }\n\n        this._takeBackAction(action);\n      }\n    },\n    // Memory manager\n    _initMemoryManager: function _initMemoryManager() {\n      this._actions = []; // 'nActiveActions' followed by inactive ones\n\n      this._nActiveActions = 0;\n      this._actionsByClip = {}; // inside:\n      // {\n      // \tknownActions: Array< AnimationAction > - used as prototypes\n      // \tactionByRoot: AnimationAction - lookup\n      // }\n\n      this._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n      this._nActiveBindings = 0;\n      this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n      this._controlInterpolants = []; // same game as above\n\n      this._nActiveControlInterpolants = 0;\n      var scope = this;\n      this.stats = {\n        actions: {\n          get total() {\n            return scope._actions.length;\n          },\n\n          get inUse() {\n            return scope._nActiveActions;\n          }\n\n        },\n        bindings: {\n          get total() {\n            return scope._bindings.length;\n          },\n\n          get inUse() {\n            return scope._nActiveBindings;\n          }\n\n        },\n        controlInterpolants: {\n          get total() {\n            return scope._controlInterpolants.length;\n          },\n\n          get inUse() {\n            return scope._nActiveControlInterpolants;\n          }\n\n        }\n      };\n    },\n    // Memory management for AnimationAction objects\n    _isActiveAction: function _isActiveAction(action) {\n      var index = action._cacheIndex;\n      return index !== null && index < this._nActiveActions;\n    },\n    _addInactiveAction: function _addInactiveAction(action, clipUuid, rootUuid) {\n      var actions = this._actions,\n          actionsByClip = this._actionsByClip;\n      var actionsForClip = actionsByClip[clipUuid];\n\n      if (actionsForClip === undefined) {\n        actionsForClip = {\n          knownActions: [action],\n          actionByRoot: {}\n        };\n        action._byClipCacheIndex = 0;\n        actionsByClip[clipUuid] = actionsForClip;\n      } else {\n        var knownActions = actionsForClip.knownActions;\n        action._byClipCacheIndex = knownActions.length;\n        knownActions.push(action);\n      }\n\n      action._cacheIndex = actions.length;\n      actions.push(action);\n      actionsForClip.actionByRoot[rootUuid] = action;\n    },\n    _removeInactiveAction: function _removeInactiveAction(action) {\n      var actions = this._actions,\n          lastInactiveAction = actions[actions.length - 1],\n          cacheIndex = action._cacheIndex;\n      lastInactiveAction._cacheIndex = cacheIndex;\n      actions[cacheIndex] = lastInactiveAction;\n      actions.pop();\n      action._cacheIndex = null;\n      var clipUuid = action._clip.uuid,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid],\n          knownActionsForClip = actionsForClip.knownActions,\n          lastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n          byClipCacheIndex = action._byClipCacheIndex;\n      lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n      knownActionsForClip[byClipCacheIndex] = lastKnownAction;\n      knownActionsForClip.pop();\n      action._byClipCacheIndex = null;\n      var actionByRoot = actionsForClip.actionByRoot,\n          rootUuid = (action._localRoot || this._root).uuid;\n      delete actionByRoot[rootUuid];\n\n      if (knownActionsForClip.length === 0) {\n        delete actionsByClip[clipUuid];\n      }\n\n      this._removeInactiveBindingsForAction(action);\n    },\n    _removeInactiveBindingsForAction: function _removeInactiveBindingsForAction(action) {\n      var bindings = action._propertyBindings;\n\n      for (var i = 0, n = bindings.length; i !== n; ++i) {\n        var binding = bindings[i];\n\n        if (--binding.referenceCount === 0) {\n          this._removeInactiveBinding(binding);\n        }\n      }\n    },\n    _lendAction: function _lendAction(action) {\n      // [ active actions |\tinactive actions\t]\n      // [\tactive actions >| inactive actions ]\n      //\t\t\t\t\t\t\t\t s\t\t\t\ta\n      //\t\t\t\t\t\t\t\t\t<-swap->\n      //\t\t\t\t\t\t\t\t a\t\t\t\ts\n      var actions = this._actions,\n          prevIndex = action._cacheIndex,\n          lastActiveIndex = this._nActiveActions++,\n          firstInactiveAction = actions[lastActiveIndex];\n      action._cacheIndex = lastActiveIndex;\n      actions[lastActiveIndex] = action;\n      firstInactiveAction._cacheIndex = prevIndex;\n      actions[prevIndex] = firstInactiveAction;\n    },\n    _takeBackAction: function _takeBackAction(action) {\n      // [\tactive actions\t| inactive actions ]\n      // [ active actions |< inactive actions\t]\n      //\t\t\t\ta\t\t\t\ts\n      //\t\t\t\t <-swap->\n      //\t\t\t\ts\t\t\t\ta\n      var actions = this._actions,\n          prevIndex = action._cacheIndex,\n          firstInactiveIndex = --this._nActiveActions,\n          lastActiveAction = actions[firstInactiveIndex];\n      action._cacheIndex = firstInactiveIndex;\n      actions[firstInactiveIndex] = action;\n      lastActiveAction._cacheIndex = prevIndex;\n      actions[prevIndex] = lastActiveAction;\n    },\n    // Memory management for PropertyMixer objects\n    _addInactiveBinding: function _addInactiveBinding(binding, rootUuid, trackName) {\n      var bindingsByRoot = this._bindingsByRootAndName,\n          bindings = this._bindings;\n      var bindingByName = bindingsByRoot[rootUuid];\n\n      if (bindingByName === undefined) {\n        bindingByName = {};\n        bindingsByRoot[rootUuid] = bindingByName;\n      }\n\n      bindingByName[trackName] = binding;\n      binding._cacheIndex = bindings.length;\n      bindings.push(binding);\n    },\n    _removeInactiveBinding: function _removeInactiveBinding(binding) {\n      var bindings = this._bindings,\n          propBinding = binding.binding,\n          rootUuid = propBinding.rootNode.uuid,\n          trackName = propBinding.path,\n          bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid],\n          lastInactiveBinding = bindings[bindings.length - 1],\n          cacheIndex = binding._cacheIndex;\n      lastInactiveBinding._cacheIndex = cacheIndex;\n      bindings[cacheIndex] = lastInactiveBinding;\n      bindings.pop();\n      delete bindingByName[trackName];\n\n      if (Object.keys(bindingByName).length === 0) {\n        delete bindingsByRoot[rootUuid];\n      }\n    },\n    _lendBinding: function _lendBinding(binding) {\n      var bindings = this._bindings,\n          prevIndex = binding._cacheIndex,\n          lastActiveIndex = this._nActiveBindings++,\n          firstInactiveBinding = bindings[lastActiveIndex];\n      binding._cacheIndex = lastActiveIndex;\n      bindings[lastActiveIndex] = binding;\n      firstInactiveBinding._cacheIndex = prevIndex;\n      bindings[prevIndex] = firstInactiveBinding;\n    },\n    _takeBackBinding: function _takeBackBinding(binding) {\n      var bindings = this._bindings,\n          prevIndex = binding._cacheIndex,\n          firstInactiveIndex = --this._nActiveBindings,\n          lastActiveBinding = bindings[firstInactiveIndex];\n      binding._cacheIndex = firstInactiveIndex;\n      bindings[firstInactiveIndex] = binding;\n      lastActiveBinding._cacheIndex = prevIndex;\n      bindings[prevIndex] = lastActiveBinding;\n    },\n    // Memory management of Interpolants for weight and time scale\n    _lendControlInterpolant: function _lendControlInterpolant() {\n      var interpolants = this._controlInterpolants,\n          lastActiveIndex = this._nActiveControlInterpolants++;\n      var interpolant = interpolants[lastActiveIndex];\n\n      if (interpolant === undefined) {\n        interpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n        interpolant.__cacheIndex = lastActiveIndex;\n        interpolants[lastActiveIndex] = interpolant;\n      }\n\n      return interpolant;\n    },\n    _takeBackControlInterpolant: function _takeBackControlInterpolant(interpolant) {\n      var interpolants = this._controlInterpolants,\n          prevIndex = interpolant.__cacheIndex,\n          firstInactiveIndex = --this._nActiveControlInterpolants,\n          lastActiveInterpolant = interpolants[firstInactiveIndex];\n      interpolant.__cacheIndex = firstInactiveIndex;\n      interpolants[firstInactiveIndex] = interpolant;\n      lastActiveInterpolant.__cacheIndex = prevIndex;\n      interpolants[prevIndex] = lastActiveInterpolant;\n    },\n    _controlInterpolantsResultBuffer: new Float32Array(1),\n    // return an action for a clip optionally using a custom root target\n    // object (this method allocates a lot of dynamic memory in case a\n    // previously unknown clip/root combination is specified)\n    clipAction: function clipAction(clip, optionalRoot, blendMode) {\n      var root = optionalRoot || this._root,\n          rootUuid = root.uuid;\n      var clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip;\n      var clipUuid = clipObject !== null ? clipObject.uuid : clip;\n      var actionsForClip = this._actionsByClip[clipUuid];\n      var prototypeAction = null;\n\n      if (blendMode === undefined) {\n        if (clipObject !== null) {\n          blendMode = clipObject.blendMode;\n        } else {\n          blendMode = NormalAnimationBlendMode;\n        }\n      }\n\n      if (actionsForClip !== undefined) {\n        var existingAction = actionsForClip.actionByRoot[rootUuid];\n\n        if (existingAction !== undefined && existingAction.blendMode === blendMode) {\n          return existingAction;\n        } // we know the clip, so we don't have to parse all\n        // the bindings again but can just copy\n\n\n        prototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n        if (clipObject === null) clipObject = prototypeAction._clip;\n      } // clip must be known when specified via string\n\n\n      if (clipObject === null) return null; // allocate all resources required to run it\n\n      var newAction = new AnimationAction(this, clipObject, optionalRoot, blendMode);\n\n      this._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n      this._addInactiveAction(newAction, clipUuid, rootUuid);\n\n      return newAction;\n    },\n    // get an existing action\n    existingAction: function existingAction(clip, optionalRoot) {\n      var root = optionalRoot || this._root,\n          rootUuid = root.uuid,\n          clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n          clipUuid = clipObject ? clipObject.uuid : clip,\n          actionsForClip = this._actionsByClip[clipUuid];\n\n      if (actionsForClip !== undefined) {\n        return actionsForClip.actionByRoot[rootUuid] || null;\n      }\n\n      return null;\n    },\n    // deactivates all previously scheduled actions\n    stopAllAction: function stopAllAction() {\n      var actions = this._actions,\n          nActions = this._nActiveActions;\n\n      for (var i = nActions - 1; i >= 0; --i) {\n        actions[i].stop();\n      }\n\n      return this;\n    },\n    // advance the time and update apply the animation\n    update: function update(deltaTime) {\n      deltaTime *= this.timeScale;\n      var actions = this._actions,\n          nActions = this._nActiveActions,\n          time = this.time += deltaTime,\n          timeDirection = Math.sign(deltaTime),\n          accuIndex = this._accuIndex ^= 1; // run active actions\n\n      for (var i = 0; i !== nActions; ++i) {\n        var action = actions[i];\n\n        action._update(time, deltaTime, timeDirection, accuIndex);\n      } // update scene graph\n\n\n      var bindings = this._bindings,\n          nBindings = this._nActiveBindings;\n\n      for (var _i = 0; _i !== nBindings; ++_i) {\n        bindings[_i].apply(accuIndex);\n      }\n\n      return this;\n    },\n    // Allows you to seek to a specific time in an animation.\n    setTime: function setTime(timeInSeconds) {\n      this.time = 0; // Zero out time attribute for AnimationMixer object;\n\n      for (var i = 0; i < this._actions.length; i++) {\n        this._actions[i].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n      }\n\n      return this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n    },\n    // return this mixer's root target object\n    getRoot: function getRoot() {\n      return this._root;\n    },\n    // free all resources specific to a particular clip\n    uncacheClip: function uncacheClip(clip) {\n      var actions = this._actions,\n          clipUuid = clip.uuid,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid];\n\n      if (actionsForClip !== undefined) {\n        // note: just calling _removeInactiveAction would mess up the\n        // iteration state and also require updating the state we can\n        // just throw away\n        var actionsToRemove = actionsForClip.knownActions;\n\n        for (var i = 0, n = actionsToRemove.length; i !== n; ++i) {\n          var action = actionsToRemove[i];\n\n          this._deactivateAction(action);\n\n          var cacheIndex = action._cacheIndex,\n              lastInactiveAction = actions[actions.length - 1];\n          action._cacheIndex = null;\n          action._byClipCacheIndex = null;\n          lastInactiveAction._cacheIndex = cacheIndex;\n          actions[cacheIndex] = lastInactiveAction;\n          actions.pop();\n\n          this._removeInactiveBindingsForAction(action);\n        }\n\n        delete actionsByClip[clipUuid];\n      }\n    },\n    // free all resources specific to a particular root target object\n    uncacheRoot: function uncacheRoot(root) {\n      var rootUuid = root.uuid,\n          actionsByClip = this._actionsByClip;\n\n      for (var clipUuid in actionsByClip) {\n        var actionByRoot = actionsByClip[clipUuid].actionByRoot,\n            action = actionByRoot[rootUuid];\n\n        if (action !== undefined) {\n          this._deactivateAction(action);\n\n          this._removeInactiveAction(action);\n        }\n      }\n\n      var bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid];\n\n      if (bindingByName !== undefined) {\n        for (var trackName in bindingByName) {\n          var binding = bindingByName[trackName];\n          binding.restoreOriginalState();\n\n          this._removeInactiveBinding(binding);\n        }\n      }\n    },\n    // remove a targeted clip from the cache\n    uncacheAction: function uncacheAction(clip, optionalRoot) {\n      var action = this.existingAction(clip, optionalRoot);\n\n      if (action !== null) {\n        this._deactivateAction(action);\n\n        this._removeInactiveAction(action);\n      }\n    }\n  });\n\n  var Uniform = /*#__PURE__*/function () {\n    function Uniform(value) {\n      if (typeof value === 'string') {\n        console.warn('THREE.Uniform: Type parameter is no longer needed.');\n        value = arguments[1];\n      }\n\n      this.value = value;\n    }\n\n    var _proto = Uniform.prototype;\n\n    _proto.clone = function clone() {\n      return new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n    };\n\n    return Uniform;\n  }();\n\n  function InstancedInterleavedBuffer(array, stride, meshPerAttribute) {\n    InterleavedBuffer.call(this, array, stride);\n    this.meshPerAttribute = meshPerAttribute || 1;\n  }\n\n  InstancedInterleavedBuffer.prototype = Object.assign(Object.create(InterleavedBuffer.prototype), {\n    constructor: InstancedInterleavedBuffer,\n    isInstancedInterleavedBuffer: true,\n    copy: function copy(source) {\n      InterleavedBuffer.prototype.copy.call(this, source);\n      this.meshPerAttribute = source.meshPerAttribute;\n      return this;\n    },\n    clone: function clone(data) {\n      var ib = InterleavedBuffer.prototype.clone.call(this, data);\n      ib.meshPerAttribute = this.meshPerAttribute;\n      return ib;\n    },\n    toJSON: function toJSON(data) {\n      var json = InterleavedBuffer.prototype.toJSON.call(this, data);\n      json.isInstancedInterleavedBuffer = true;\n      json.meshPerAttribute = this.meshPerAttribute;\n      return json;\n    }\n  });\n\n  function GLBufferAttribute(buffer, type, itemSize, elementSize, count) {\n    this.buffer = buffer;\n    this.type = type;\n    this.itemSize = itemSize;\n    this.elementSize = elementSize;\n    this.count = count;\n    this.version = 0;\n  }\n\n  Object.defineProperty(GLBufferAttribute.prototype, 'needsUpdate', {\n    set: function set(value) {\n      if (value === true) this.version++;\n    }\n  });\n  Object.assign(GLBufferAttribute.prototype, {\n    isGLBufferAttribute: true,\n    setBuffer: function setBuffer(buffer) {\n      this.buffer = buffer;\n      return this;\n    },\n    setType: function setType(type, elementSize) {\n      this.type = type;\n      this.elementSize = elementSize;\n      return this;\n    },\n    setItemSize: function setItemSize(itemSize) {\n      this.itemSize = itemSize;\n      return this;\n    },\n    setCount: function setCount(count) {\n      this.count = count;\n      return this;\n    }\n  });\n\n  function Raycaster(origin, direction, near, far) {\n    this.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n    this.near = near || 0;\n    this.far = far || Infinity;\n    this.camera = null;\n    this.layers = new Layers();\n    this.params = {\n      Mesh: {},\n      Line: {\n        threshold: 1\n      },\n      LOD: {},\n      Points: {\n        threshold: 1\n      },\n      Sprite: {}\n    };\n    Object.defineProperties(this.params, {\n      PointCloud: {\n        get: function get() {\n          console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');\n          return this.Points;\n        }\n      }\n    });\n  }\n\n  function ascSort(a, b) {\n    return a.distance - b.distance;\n  }\n\n  function _intersectObject(object, raycaster, intersects, recursive) {\n    if (object.layers.test(raycaster.layers)) {\n      object.raycast(raycaster, intersects);\n    }\n\n    if (recursive === true) {\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        _intersectObject(children[i], raycaster, intersects, true);\n      }\n    }\n  }\n\n  Object.assign(Raycaster.prototype, {\n    set: function set(origin, direction) {\n      // direction is assumed to be normalized (for accurate distance calculations)\n      this.ray.set(origin, direction);\n    },\n    setFromCamera: function setFromCamera(coords, camera) {\n      if (camera && camera.isPerspectiveCamera) {\n        this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n        this.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n        this.camera = camera;\n      } else if (camera && camera.isOrthographicCamera) {\n        this.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n        this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n        this.camera = camera;\n      } else {\n        console.error('THREE.Raycaster: Unsupported camera type: ' + camera.type);\n      }\n    },\n    intersectObject: function intersectObject(object, recursive, optionalTarget) {\n      var intersects = optionalTarget || [];\n\n      _intersectObject(object, this, intersects, recursive);\n\n      intersects.sort(ascSort);\n      return intersects;\n    },\n    intersectObjects: function intersectObjects(objects, recursive, optionalTarget) {\n      var intersects = optionalTarget || [];\n\n      if (Array.isArray(objects) === false) {\n        console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');\n        return intersects;\n      }\n\n      for (var i = 0, l = objects.length; i < l; i++) {\n        _intersectObject(objects[i], this, intersects, recursive);\n      }\n\n      intersects.sort(ascSort);\n      return intersects;\n    }\n  });\n  /**\n   * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n   *\n   * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n   * The azimuthal angle (theta) is measured from the positive z-axis.\n   */\n\n  var Spherical = /*#__PURE__*/function () {\n    function Spherical(radius, phi, theta) {\n      if (radius === void 0) {\n        radius = 1;\n      }\n\n      if (phi === void 0) {\n        phi = 0;\n      }\n\n      if (theta === void 0) {\n        theta = 0;\n      }\n\n      this.radius = radius;\n      this.phi = phi; // polar angle\n\n      this.theta = theta; // azimuthal angle\n\n      return this;\n    }\n\n    var _proto = Spherical.prototype;\n\n    _proto.set = function set(radius, phi, theta) {\n      this.radius = radius;\n      this.phi = phi;\n      this.theta = theta;\n      return this;\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor().copy(this);\n    };\n\n    _proto.copy = function copy(other) {\n      this.radius = other.radius;\n      this.phi = other.phi;\n      this.theta = other.theta;\n      return this;\n    } // restrict phi to be betwee EPS and PI-EPS\n    ;\n\n    _proto.makeSafe = function makeSafe() {\n      var EPS = 0.000001;\n      this.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n      return this;\n    };\n\n    _proto.setFromVector3 = function setFromVector3(v) {\n      return this.setFromCartesianCoords(v.x, v.y, v.z);\n    };\n\n    _proto.setFromCartesianCoords = function setFromCartesianCoords(x, y, z) {\n      this.radius = Math.sqrt(x * x + y * y + z * z);\n\n      if (this.radius === 0) {\n        this.theta = 0;\n        this.phi = 0;\n      } else {\n        this.theta = Math.atan2(x, z);\n        this.phi = Math.acos(MathUtils.clamp(y / this.radius, -1, 1));\n      }\n\n      return this;\n    };\n\n    return Spherical;\n  }();\n  /**\n   * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n   */\n\n\n  var Cylindrical = /*#__PURE__*/function () {\n    function Cylindrical(radius, theta, y) {\n      this.radius = radius !== undefined ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\n      this.theta = theta !== undefined ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n      this.y = y !== undefined ? y : 0; // height above the x-z plane\n\n      return this;\n    }\n\n    var _proto = Cylindrical.prototype;\n\n    _proto.set = function set(radius, theta, y) {\n      this.radius = radius;\n      this.theta = theta;\n      this.y = y;\n      return this;\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor().copy(this);\n    };\n\n    _proto.copy = function copy(other) {\n      this.radius = other.radius;\n      this.theta = other.theta;\n      this.y = other.y;\n      return this;\n    };\n\n    _proto.setFromVector3 = function setFromVector3(v) {\n      return this.setFromCartesianCoords(v.x, v.y, v.z);\n    };\n\n    _proto.setFromCartesianCoords = function setFromCartesianCoords(x, y, z) {\n      this.radius = Math.sqrt(x * x + z * z);\n      this.theta = Math.atan2(x, z);\n      this.y = y;\n      return this;\n    };\n\n    return Cylindrical;\n  }();\n\n  var _vector$8 = /*@__PURE__*/new Vector2();\n\n  var Box2 = /*#__PURE__*/function () {\n    function Box2(min, max) {\n      Object.defineProperty(this, 'isBox2', {\n        value: true\n      });\n      this.min = min !== undefined ? min : new Vector2(+Infinity, +Infinity);\n      this.max = max !== undefined ? max : new Vector2(-Infinity, -Infinity);\n    }\n\n    var _proto = Box2.prototype;\n\n    _proto.set = function set(min, max) {\n      this.min.copy(min);\n      this.max.copy(max);\n      return this;\n    };\n\n    _proto.setFromPoints = function setFromPoints(points) {\n      this.makeEmpty();\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        this.expandByPoint(points[i]);\n      }\n\n      return this;\n    };\n\n    _proto.setFromCenterAndSize = function setFromCenterAndSize(center, size) {\n      var halfSize = _vector$8.copy(size).multiplyScalar(0.5);\n\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor().copy(this);\n    };\n\n    _proto.copy = function copy(box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    };\n\n    _proto.makeEmpty = function makeEmpty() {\n      this.min.x = this.min.y = +Infinity;\n      this.max.x = this.max.y = -Infinity;\n      return this;\n    };\n\n    _proto.isEmpty = function isEmpty() {\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n      return this.max.x < this.min.x || this.max.y < this.min.y;\n    };\n\n    _proto.getCenter = function getCenter(target) {\n      if (target === undefined) {\n        console.warn('THREE.Box2: .getCenter() target is now required');\n        target = new Vector2();\n      }\n\n      return this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n    };\n\n    _proto.getSize = function getSize(target) {\n      if (target === undefined) {\n        console.warn('THREE.Box2: .getSize() target is now required');\n        target = new Vector2();\n      }\n\n      return this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n    };\n\n    _proto.expandByPoint = function expandByPoint(point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    };\n\n    _proto.expandByVector = function expandByVector(vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    };\n\n    _proto.expandByScalar = function expandByScalar(scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    };\n\n    _proto.containsPoint = function containsPoint(point) {\n      return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n    };\n\n    _proto.containsBox = function containsBox(box) {\n      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n    };\n\n    _proto.getParameter = function getParameter(point, target) {\n      // This can potentially have a divide by zero if the box\n      // has a size dimension of 0.\n      if (target === undefined) {\n        console.warn('THREE.Box2: .getParameter() target is now required');\n        target = new Vector2();\n      }\n\n      return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n    };\n\n    _proto.intersectsBox = function intersectsBox(box) {\n      // using 4 splitting planes to rule out intersections\n      return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n    };\n\n    _proto.clampPoint = function clampPoint(point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Box2: .clampPoint() target is now required');\n        target = new Vector2();\n      }\n\n      return target.copy(point).clamp(this.min, this.max);\n    };\n\n    _proto.distanceToPoint = function distanceToPoint(point) {\n      var clampedPoint = _vector$8.copy(point).clamp(this.min, this.max);\n\n      return clampedPoint.sub(point).length();\n    };\n\n    _proto.intersect = function intersect(box) {\n      this.min.max(box.min);\n      this.max.min(box.max);\n      return this;\n    };\n\n    _proto.union = function union(box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    };\n\n    _proto.translate = function translate(offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    };\n\n    _proto.equals = function equals(box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    };\n\n    return Box2;\n  }();\n\n  var _startP = /*@__PURE__*/new Vector3();\n\n  var _startEnd = /*@__PURE__*/new Vector3();\n\n  var Line3 = /*#__PURE__*/function () {\n    function Line3(start, end) {\n      this.start = start !== undefined ? start : new Vector3();\n      this.end = end !== undefined ? end : new Vector3();\n    }\n\n    var _proto = Line3.prototype;\n\n    _proto.set = function set(start, end) {\n      this.start.copy(start);\n      this.end.copy(end);\n      return this;\n    };\n\n    _proto.clone = function clone() {\n      return new this.constructor().copy(this);\n    };\n\n    _proto.copy = function copy(line) {\n      this.start.copy(line.start);\n      this.end.copy(line.end);\n      return this;\n    };\n\n    _proto.getCenter = function getCenter(target) {\n      if (target === undefined) {\n        console.warn('THREE.Line3: .getCenter() target is now required');\n        target = new Vector3();\n      }\n\n      return target.addVectors(this.start, this.end).multiplyScalar(0.5);\n    };\n\n    _proto.delta = function delta(target) {\n      if (target === undefined) {\n        console.warn('THREE.Line3: .delta() target is now required');\n        target = new Vector3();\n      }\n\n      return target.subVectors(this.end, this.start);\n    };\n\n    _proto.distanceSq = function distanceSq() {\n      return this.start.distanceToSquared(this.end);\n    };\n\n    _proto.distance = function distance() {\n      return this.start.distanceTo(this.end);\n    };\n\n    _proto.at = function at(t, target) {\n      if (target === undefined) {\n        console.warn('THREE.Line3: .at() target is now required');\n        target = new Vector3();\n      }\n\n      return this.delta(target).multiplyScalar(t).add(this.start);\n    };\n\n    _proto.closestPointToPointParameter = function closestPointToPointParameter(point, clampToLine) {\n      _startP.subVectors(point, this.start);\n\n      _startEnd.subVectors(this.end, this.start);\n\n      var startEnd2 = _startEnd.dot(_startEnd);\n\n      var startEnd_startP = _startEnd.dot(_startP);\n\n      var t = startEnd_startP / startEnd2;\n\n      if (clampToLine) {\n        t = MathUtils.clamp(t, 0, 1);\n      }\n\n      return t;\n    };\n\n    _proto.closestPointToPoint = function closestPointToPoint(point, clampToLine, target) {\n      var t = this.closestPointToPointParameter(point, clampToLine);\n\n      if (target === undefined) {\n        console.warn('THREE.Line3: .closestPointToPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return this.delta(target).multiplyScalar(t).add(this.start);\n    };\n\n    _proto.applyMatrix4 = function applyMatrix4(matrix) {\n      this.start.applyMatrix4(matrix);\n      this.end.applyMatrix4(matrix);\n      return this;\n    };\n\n    _proto.equals = function equals(line) {\n      return line.start.equals(this.start) && line.end.equals(this.end);\n    };\n\n    return Line3;\n  }();\n\n  function ImmediateRenderObject(material) {\n    Object3D.call(this);\n    this.material = material;\n\n    this.render = function ()\n    /* renderCallback */\n    {};\n\n    this.hasPositions = false;\n    this.hasNormals = false;\n    this.hasColors = false;\n    this.hasUvs = false;\n    this.positionArray = null;\n    this.normalArray = null;\n    this.colorArray = null;\n    this.uvArray = null;\n    this.count = 0;\n  }\n\n  ImmediateRenderObject.prototype = Object.create(Object3D.prototype);\n  ImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n  ImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n  var _vector$9 = /*@__PURE__*/new Vector3();\n\n  var SpotLightHelper = /*#__PURE__*/function (_Object3D) {\n    _inheritsLoose(SpotLightHelper, _Object3D);\n\n    function SpotLightHelper(light, color) {\n      var _this;\n\n      _this = _Object3D.call(this) || this;\n      _this.light = light;\n\n      _this.light.updateMatrixWorld();\n\n      _this.matrix = light.matrixWorld;\n      _this.matrixAutoUpdate = false;\n      _this.color = color;\n      var geometry = new BufferGeometry();\n      var positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n      for (var i = 0, j = 1, l = 32; i < l; i++, j++) {\n        var p1 = i / l * Math.PI * 2;\n        var p2 = j / l * Math.PI * 2;\n        positions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n      }\n\n      geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n      var material = new LineBasicMaterial({\n        fog: false,\n        toneMapped: false\n      });\n      _this.cone = new LineSegments(geometry, material);\n\n      _this.add(_this.cone);\n\n      _this.update();\n\n      return _this;\n    }\n\n    var _proto = SpotLightHelper.prototype;\n\n    _proto.dispose = function dispose() {\n      this.cone.geometry.dispose();\n      this.cone.material.dispose();\n    };\n\n    _proto.update = function update() {\n      this.light.updateMatrixWorld();\n      var coneLength = this.light.distance ? this.light.distance : 1000;\n      var coneWidth = coneLength * Math.tan(this.light.angle);\n      this.cone.scale.set(coneWidth, coneWidth, coneLength);\n\n      _vector$9.setFromMatrixPosition(this.light.target.matrixWorld);\n\n      this.cone.lookAt(_vector$9);\n\n      if (this.color !== undefined) {\n        this.cone.material.color.set(this.color);\n      } else {\n        this.cone.material.color.copy(this.light.color);\n      }\n    };\n\n    return SpotLightHelper;\n  }(Object3D);\n\n  var _vector$a = /*@__PURE__*/new Vector3();\n\n  var _boneMatrix = /*@__PURE__*/new Matrix4();\n\n  var _matrixWorldInv = /*@__PURE__*/new Matrix4();\n\n  var SkeletonHelper = /*#__PURE__*/function (_LineSegments) {\n    _inheritsLoose(SkeletonHelper, _LineSegments);\n\n    function SkeletonHelper(object) {\n      var _this;\n\n      var bones = getBoneList(object);\n      var geometry = new BufferGeometry();\n      var vertices = [];\n      var colors = [];\n      var color1 = new Color(0, 0, 1);\n      var color2 = new Color(0, 1, 0);\n\n      for (var i = 0; i < bones.length; i++) {\n        var bone = bones[i];\n\n        if (bone.parent && bone.parent.isBone) {\n          vertices.push(0, 0, 0);\n          vertices.push(0, 0, 0);\n          colors.push(color1.r, color1.g, color1.b);\n          colors.push(color2.r, color2.g, color2.b);\n        }\n      }\n\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n      var material = new LineBasicMaterial({\n        vertexColors: true,\n        depthTest: false,\n        depthWrite: false,\n        toneMapped: false,\n        transparent: true\n      });\n      _this = _LineSegments.call(this, geometry, material) || this;\n      _this.type = 'SkeletonHelper';\n      _this.isSkeletonHelper = true;\n      _this.root = object;\n      _this.bones = bones;\n      _this.matrix = object.matrixWorld;\n      _this.matrixAutoUpdate = false;\n      return _this;\n    }\n\n    var _proto = SkeletonHelper.prototype;\n\n    _proto.updateMatrixWorld = function updateMatrixWorld(force) {\n      var bones = this.bones;\n      var geometry = this.geometry;\n      var position = geometry.getAttribute('position');\n\n      _matrixWorldInv.copy(this.root.matrixWorld).invert();\n\n      for (var i = 0, j = 0; i < bones.length; i++) {\n        var bone = bones[i];\n\n        if (bone.parent && bone.parent.isBone) {\n          _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n\n          _vector$a.setFromMatrixPosition(_boneMatrix);\n\n          position.setXYZ(j, _vector$a.x, _vector$a.y, _vector$a.z);\n\n          _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n\n          _vector$a.setFromMatrixPosition(_boneMatrix);\n\n          position.setXYZ(j + 1, _vector$a.x, _vector$a.y, _vector$a.z);\n          j += 2;\n        }\n      }\n\n      geometry.getAttribute('position').needsUpdate = true;\n\n      _LineSegments.prototype.updateMatrixWorld.call(this, force);\n    };\n\n    return SkeletonHelper;\n  }(LineSegments);\n\n  function getBoneList(object) {\n    var boneList = [];\n\n    if (object && object.isBone) {\n      boneList.push(object);\n    }\n\n    for (var i = 0; i < object.children.length; i++) {\n      boneList.push.apply(boneList, getBoneList(object.children[i]));\n    }\n\n    return boneList;\n  }\n\n  var PointLightHelper = /*#__PURE__*/function (_Mesh) {\n    _inheritsLoose(PointLightHelper, _Mesh);\n\n    function PointLightHelper(light, sphereSize, color) {\n      var _this;\n\n      var geometry = new SphereGeometry(sphereSize, 4, 2);\n      var material = new MeshBasicMaterial({\n        wireframe: true,\n        fog: false,\n        toneMapped: false\n      });\n      _this = _Mesh.call(this, geometry, material) || this;\n      _this.light = light;\n\n      _this.light.updateMatrixWorld();\n\n      _this.color = color;\n      _this.type = 'PointLightHelper';\n      _this.matrix = _this.light.matrixWorld;\n      _this.matrixAutoUpdate = false;\n\n      _this.update();\n      /*\n      // TODO: delete this comment?\n      const distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n      const distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n      this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n      this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n      const d = light.distance;\n      if ( d === 0.0 ) {\n      \tthis.lightDistance.visible = false;\n      } else {\n      \tthis.lightDistance.scale.set( d, d, d );\n      }\n      this.add( this.lightDistance );\n      */\n\n\n      return _this;\n    }\n\n    var _proto = PointLightHelper.prototype;\n\n    _proto.dispose = function dispose() {\n      this.geometry.dispose();\n      this.material.dispose();\n    };\n\n    _proto.update = function update() {\n      if (this.color !== undefined) {\n        this.material.color.set(this.color);\n      } else {\n        this.material.color.copy(this.light.color);\n      }\n      /*\n      const d = this.light.distance;\n      \tif ( d === 0.0 ) {\n      \t\tthis.lightDistance.visible = false;\n      \t} else {\n      \t\tthis.lightDistance.visible = true;\n      \tthis.lightDistance.scale.set( d, d, d );\n      \t}\n      */\n\n    };\n\n    return PointLightHelper;\n  }(Mesh);\n\n  var _vector$b = /*@__PURE__*/new Vector3();\n\n  var _color1 = /*@__PURE__*/new Color();\n\n  var _color2 = /*@__PURE__*/new Color();\n\n  var HemisphereLightHelper = /*#__PURE__*/function (_Object3D) {\n    _inheritsLoose(HemisphereLightHelper, _Object3D);\n\n    function HemisphereLightHelper(light, size, color) {\n      var _this;\n\n      _this = _Object3D.call(this) || this;\n      _this.light = light;\n\n      _this.light.updateMatrixWorld();\n\n      _this.matrix = light.matrixWorld;\n      _this.matrixAutoUpdate = false;\n      _this.color = color;\n      var geometry = new OctahedronGeometry(size);\n      geometry.rotateY(Math.PI * 0.5);\n      _this.material = new MeshBasicMaterial({\n        wireframe: true,\n        fog: false,\n        toneMapped: false\n      });\n      if (_this.color === undefined) _this.material.vertexColors = true;\n      var position = geometry.getAttribute('position');\n      var colors = new Float32Array(position.count * 3);\n      geometry.setAttribute('color', new BufferAttribute(colors, 3));\n\n      _this.add(new Mesh(geometry, _this.material));\n\n      _this.update();\n\n      return _this;\n    }\n\n    var _proto = HemisphereLightHelper.prototype;\n\n    _proto.dispose = function dispose() {\n      this.children[0].geometry.dispose();\n      this.children[0].material.dispose();\n    };\n\n    _proto.update = function update() {\n      var mesh = this.children[0];\n\n      if (this.color !== undefined) {\n        this.material.color.set(this.color);\n      } else {\n        var colors = mesh.geometry.getAttribute('color');\n\n        _color1.copy(this.light.color);\n\n        _color2.copy(this.light.groundColor);\n\n        for (var i = 0, l = colors.count; i < l; i++) {\n          var color = i < l / 2 ? _color1 : _color2;\n          colors.setXYZ(i, color.r, color.g, color.b);\n        }\n\n        colors.needsUpdate = true;\n      }\n\n      mesh.lookAt(_vector$b.setFromMatrixPosition(this.light.matrixWorld).negate());\n    };\n\n    return HemisphereLightHelper;\n  }(Object3D);\n\n  var GridHelper = /*#__PURE__*/function (_LineSegments) {\n    _inheritsLoose(GridHelper, _LineSegments);\n\n    function GridHelper(size, divisions, color1, color2) {\n      var _this;\n\n      if (size === void 0) {\n        size = 10;\n      }\n\n      if (divisions === void 0) {\n        divisions = 10;\n      }\n\n      if (color1 === void 0) {\n        color1 = 0x444444;\n      }\n\n      if (color2 === void 0) {\n        color2 = 0x888888;\n      }\n\n      color1 = new Color(color1);\n      color2 = new Color(color2);\n      var center = divisions / 2;\n      var step = size / divisions;\n      var halfSize = size / 2;\n      var vertices = [],\n          colors = [];\n\n      for (var i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n        vertices.push(-halfSize, 0, k, halfSize, 0, k);\n        vertices.push(k, 0, -halfSize, k, 0, halfSize);\n        var color = i === center ? color1 : color2;\n        color.toArray(colors, j);\n        j += 3;\n        color.toArray(colors, j);\n        j += 3;\n        color.toArray(colors, j);\n        j += 3;\n        color.toArray(colors, j);\n        j += 3;\n      }\n\n      var geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n      var material = new LineBasicMaterial({\n        vertexColors: true,\n        toneMapped: false\n      });\n      _this = _LineSegments.call(this, geometry, material) || this;\n      _this.type = 'GridHelper';\n      return _this;\n    }\n\n    return GridHelper;\n  }(LineSegments);\n\n  var PolarGridHelper = /*#__PURE__*/function (_LineSegments) {\n    _inheritsLoose(PolarGridHelper, _LineSegments);\n\n    function PolarGridHelper(radius, radials, circles, divisions, color1, color2) {\n      var _this;\n\n      if (radius === void 0) {\n        radius = 10;\n      }\n\n      if (radials === void 0) {\n        radials = 16;\n      }\n\n      if (circles === void 0) {\n        circles = 8;\n      }\n\n      if (divisions === void 0) {\n        divisions = 64;\n      }\n\n      if (color1 === void 0) {\n        color1 = 0x444444;\n      }\n\n      if (color2 === void 0) {\n        color2 = 0x888888;\n      }\n\n      color1 = new Color(color1);\n      color2 = new Color(color2);\n      var vertices = [];\n      var colors = []; // create the radials\n\n      for (var i = 0; i <= radials; i++) {\n        var v = i / radials * (Math.PI * 2);\n        var x = Math.sin(v) * radius;\n        var z = Math.cos(v) * radius;\n        vertices.push(0, 0, 0);\n        vertices.push(x, 0, z);\n        var color = i & 1 ? color1 : color2;\n        colors.push(color.r, color.g, color.b);\n        colors.push(color.r, color.g, color.b);\n      } // create the circles\n\n\n      for (var _i = 0; _i <= circles; _i++) {\n        var _color = _i & 1 ? color1 : color2;\n\n        var r = radius - radius / circles * _i;\n\n        for (var j = 0; j < divisions; j++) {\n          // first vertex\n          var _v = j / divisions * (Math.PI * 2);\n\n          var _x = Math.sin(_v) * r;\n\n          var _z = Math.cos(_v) * r;\n\n          vertices.push(_x, 0, _z);\n          colors.push(_color.r, _color.g, _color.b); // second vertex\n\n          _v = (j + 1) / divisions * (Math.PI * 2);\n          _x = Math.sin(_v) * r;\n          _z = Math.cos(_v) * r;\n          vertices.push(_x, 0, _z);\n          colors.push(_color.r, _color.g, _color.b);\n        }\n      }\n\n      var geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n      var material = new LineBasicMaterial({\n        vertexColors: true,\n        toneMapped: false\n      });\n      _this = _LineSegments.call(this, geometry, material) || this;\n      _this.type = 'PolarGridHelper';\n      return _this;\n    }\n\n    return PolarGridHelper;\n  }(LineSegments);\n\n  var _v1$6 = /*@__PURE__*/new Vector3();\n\n  var _v2$3 = /*@__PURE__*/new Vector3();\n\n  var _v3$1 = /*@__PURE__*/new Vector3();\n\n  var DirectionalLightHelper = /*#__PURE__*/function (_Object3D) {\n    _inheritsLoose(DirectionalLightHelper, _Object3D);\n\n    function DirectionalLightHelper(light, size, color) {\n      var _this;\n\n      _this = _Object3D.call(this) || this;\n      _this.light = light;\n\n      _this.light.updateMatrixWorld();\n\n      _this.matrix = light.matrixWorld;\n      _this.matrixAutoUpdate = false;\n      _this.color = color;\n      if (size === undefined) size = 1;\n      var geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n      var material = new LineBasicMaterial({\n        fog: false,\n        toneMapped: false\n      });\n      _this.lightPlane = new Line(geometry, material);\n\n      _this.add(_this.lightPlane);\n\n      geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n      _this.targetLine = new Line(geometry, material);\n\n      _this.add(_this.targetLine);\n\n      _this.update();\n\n      return _this;\n    }\n\n    var _proto = DirectionalLightHelper.prototype;\n\n    _proto.dispose = function dispose() {\n      this.lightPlane.geometry.dispose();\n      this.lightPlane.material.dispose();\n      this.targetLine.geometry.dispose();\n      this.targetLine.material.dispose();\n    };\n\n    _proto.update = function update() {\n      _v1$6.setFromMatrixPosition(this.light.matrixWorld);\n\n      _v2$3.setFromMatrixPosition(this.light.target.matrixWorld);\n\n      _v3$1.subVectors(_v2$3, _v1$6);\n\n      this.lightPlane.lookAt(_v2$3);\n\n      if (this.color !== undefined) {\n        this.lightPlane.material.color.set(this.color);\n        this.targetLine.material.color.set(this.color);\n      } else {\n        this.lightPlane.material.color.copy(this.light.color);\n        this.targetLine.material.color.copy(this.light.color);\n      }\n\n      this.targetLine.lookAt(_v2$3);\n      this.targetLine.scale.z = _v3$1.length();\n    };\n\n    return DirectionalLightHelper;\n  }(Object3D);\n\n  var _vector$c = /*@__PURE__*/new Vector3();\n\n  var _camera = /*@__PURE__*/new Camera();\n  /**\n   *\t- shows frustum, line of sight and up of the camera\n   *\t- suitable for fast updates\n   * \t- based on frustum visualization in lightgl.js shadowmap example\n   *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n   */\n\n\n  var CameraHelper = /*#__PURE__*/function (_LineSegments) {\n    _inheritsLoose(CameraHelper, _LineSegments);\n\n    function CameraHelper(camera) {\n      var _this;\n\n      var geometry = new BufferGeometry();\n      var material = new LineBasicMaterial({\n        color: 0xffffff,\n        vertexColors: true,\n        toneMapped: false\n      });\n      var vertices = [];\n      var colors = [];\n      var pointMap = {}; // colors\n\n      var colorFrustum = new Color(0xffaa00);\n      var colorCone = new Color(0xff0000);\n      var colorUp = new Color(0x00aaff);\n      var colorTarget = new Color(0xffffff);\n      var colorCross = new Color(0x333333); // near\n\n      addLine('n1', 'n2', colorFrustum);\n      addLine('n2', 'n4', colorFrustum);\n      addLine('n4', 'n3', colorFrustum);\n      addLine('n3', 'n1', colorFrustum); // far\n\n      addLine('f1', 'f2', colorFrustum);\n      addLine('f2', 'f4', colorFrustum);\n      addLine('f4', 'f3', colorFrustum);\n      addLine('f3', 'f1', colorFrustum); // sides\n\n      addLine('n1', 'f1', colorFrustum);\n      addLine('n2', 'f2', colorFrustum);\n      addLine('n3', 'f3', colorFrustum);\n      addLine('n4', 'f4', colorFrustum); // cone\n\n      addLine('p', 'n1', colorCone);\n      addLine('p', 'n2', colorCone);\n      addLine('p', 'n3', colorCone);\n      addLine('p', 'n4', colorCone); // up\n\n      addLine('u1', 'u2', colorUp);\n      addLine('u2', 'u3', colorUp);\n      addLine('u3', 'u1', colorUp); // target\n\n      addLine('c', 't', colorTarget);\n      addLine('p', 'c', colorCross); // cross\n\n      addLine('cn1', 'cn2', colorCross);\n      addLine('cn3', 'cn4', colorCross);\n      addLine('cf1', 'cf2', colorCross);\n      addLine('cf3', 'cf4', colorCross);\n\n      function addLine(a, b, color) {\n        addPoint(a, color);\n        addPoint(b, color);\n      }\n\n      function addPoint(id, color) {\n        vertices.push(0, 0, 0);\n        colors.push(color.r, color.g, color.b);\n\n        if (pointMap[id] === undefined) {\n          pointMap[id] = [];\n        }\n\n        pointMap[id].push(vertices.length / 3 - 1);\n      }\n\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n      _this = _LineSegments.call(this, geometry, material) || this;\n      _this.type = 'CameraHelper';\n      _this.camera = camera;\n      if (_this.camera.updateProjectionMatrix) _this.camera.updateProjectionMatrix();\n      _this.matrix = camera.matrixWorld;\n      _this.matrixAutoUpdate = false;\n      _this.pointMap = pointMap;\n\n      _this.update();\n\n      return _this;\n    }\n\n    var _proto = CameraHelper.prototype;\n\n    _proto.update = function update() {\n      var geometry = this.geometry;\n      var pointMap = this.pointMap;\n      var w = 1,\n          h = 1; // we need just camera projection matrix inverse\n      // world matrix must be identity\n\n      _camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\n\n\n      setPoint('c', pointMap, geometry, _camera, 0, 0, -1);\n      setPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\n\n      setPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\n      setPoint('n2', pointMap, geometry, _camera, w, -h, -1);\n      setPoint('n3', pointMap, geometry, _camera, -w, h, -1);\n      setPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\n\n      setPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\n      setPoint('f2', pointMap, geometry, _camera, w, -h, 1);\n      setPoint('f3', pointMap, geometry, _camera, -w, h, 1);\n      setPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\n\n      setPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n      setPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n      setPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\n\n      setPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\n      setPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\n      setPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\n      setPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\n      setPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\n      setPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\n      setPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\n      setPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\n      geometry.getAttribute('position').needsUpdate = true;\n    };\n\n    return CameraHelper;\n  }(LineSegments);\n\n  function setPoint(point, pointMap, geometry, camera, x, y, z) {\n    _vector$c.set(x, y, z).unproject(camera);\n\n    var points = pointMap[point];\n\n    if (points !== undefined) {\n      var position = geometry.getAttribute('position');\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        position.setXYZ(points[i], _vector$c.x, _vector$c.y, _vector$c.z);\n      }\n    }\n  }\n\n  var _box$3 = /*@__PURE__*/new Box3();\n\n  var BoxHelper = /*#__PURE__*/function (_LineSegments) {\n    _inheritsLoose(BoxHelper, _LineSegments);\n\n    function BoxHelper(object, color) {\n      var _this;\n\n      if (color === void 0) {\n        color = 0xffff00;\n      }\n\n      var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n      var positions = new Float32Array(8 * 3);\n      var geometry = new BufferGeometry();\n      geometry.setIndex(new BufferAttribute(indices, 1));\n      geometry.setAttribute('position', new BufferAttribute(positions, 3));\n      _this = _LineSegments.call(this, geometry, new LineBasicMaterial({\n        color: color,\n        toneMapped: false\n      })) || this;\n      _this.object = object;\n      _this.type = 'BoxHelper';\n      _this.matrixAutoUpdate = false;\n\n      _this.update();\n\n      return _this;\n    }\n\n    var _proto = BoxHelper.prototype;\n\n    _proto.update = function update(object) {\n      if (object !== undefined) {\n        console.warn('THREE.BoxHelper: .update() has no longer arguments.');\n      }\n\n      if (this.object !== undefined) {\n        _box$3.setFromObject(this.object);\n      }\n\n      if (_box$3.isEmpty()) return;\n      var min = _box$3.min;\n      var max = _box$3.max;\n      /*\n      \t5____4\n      1/___0/|\n      | 6__|_7\n      2/___3/\n      \t0: max.x, max.y, max.z\n      1: min.x, max.y, max.z\n      2: min.x, min.y, max.z\n      3: max.x, min.y, max.z\n      4: max.x, max.y, min.z\n      5: min.x, max.y, min.z\n      6: min.x, min.y, min.z\n      7: max.x, min.y, min.z\n      */\n\n      var position = this.geometry.attributes.position;\n      var array = position.array;\n      array[0] = max.x;\n      array[1] = max.y;\n      array[2] = max.z;\n      array[3] = min.x;\n      array[4] = max.y;\n      array[5] = max.z;\n      array[6] = min.x;\n      array[7] = min.y;\n      array[8] = max.z;\n      array[9] = max.x;\n      array[10] = min.y;\n      array[11] = max.z;\n      array[12] = max.x;\n      array[13] = max.y;\n      array[14] = min.z;\n      array[15] = min.x;\n      array[16] = max.y;\n      array[17] = min.z;\n      array[18] = min.x;\n      array[19] = min.y;\n      array[20] = min.z;\n      array[21] = max.x;\n      array[22] = min.y;\n      array[23] = min.z;\n      position.needsUpdate = true;\n      this.geometry.computeBoundingSphere();\n    };\n\n    _proto.setFromObject = function setFromObject(object) {\n      this.object = object;\n      this.update();\n      return this;\n    };\n\n    _proto.copy = function copy(source) {\n      LineSegments.prototype.copy.call(this, source);\n      this.object = source.object;\n      return this;\n    };\n\n    return BoxHelper;\n  }(LineSegments);\n\n  var Box3Helper = /*#__PURE__*/function (_LineSegments) {\n    _inheritsLoose(Box3Helper, _LineSegments);\n\n    function Box3Helper(box, color) {\n      var _this;\n\n      if (color === void 0) {\n        color = 0xffff00;\n      }\n\n      var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n      var positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n      var geometry = new BufferGeometry();\n      geometry.setIndex(new BufferAttribute(indices, 1));\n      geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n      _this = _LineSegments.call(this, geometry, new LineBasicMaterial({\n        color: color,\n        toneMapped: false\n      })) || this;\n      _this.box = box;\n      _this.type = 'Box3Helper';\n\n      _this.geometry.computeBoundingSphere();\n\n      return _this;\n    }\n\n    var _proto = Box3Helper.prototype;\n\n    _proto.updateMatrixWorld = function updateMatrixWorld(force) {\n      var box = this.box;\n      if (box.isEmpty()) return;\n      box.getCenter(this.position);\n      box.getSize(this.scale);\n      this.scale.multiplyScalar(0.5);\n\n      _LineSegments.prototype.updateMatrixWorld.call(this, force);\n    };\n\n    return Box3Helper;\n  }(LineSegments);\n\n  var PlaneHelper = /*#__PURE__*/function (_Line) {\n    _inheritsLoose(PlaneHelper, _Line);\n\n    function PlaneHelper(plane, size, hex) {\n      var _this;\n\n      if (size === void 0) {\n        size = 1;\n      }\n\n      if (hex === void 0) {\n        hex = 0xffff00;\n      }\n\n      var color = hex;\n      var positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n      var geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n      geometry.computeBoundingSphere();\n      _this = _Line.call(this, geometry, new LineBasicMaterial({\n        color: color,\n        toneMapped: false\n      })) || this;\n      _this.type = 'PlaneHelper';\n      _this.plane = plane;\n      _this.size = size;\n      var positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n      var geometry2 = new BufferGeometry();\n      geometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n      geometry2.computeBoundingSphere();\n\n      _this.add(new Mesh(geometry2, new MeshBasicMaterial({\n        color: color,\n        opacity: 0.2,\n        transparent: true,\n        depthWrite: false,\n        toneMapped: false\n      })));\n\n      return _this;\n    }\n\n    var _proto = PlaneHelper.prototype;\n\n    _proto.updateMatrixWorld = function updateMatrixWorld(force) {\n      var scale = -this.plane.constant;\n      if (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n      this.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n      this.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n      this.lookAt(this.plane.normal);\n\n      _Line.prototype.updateMatrixWorld.call(this, force);\n    };\n\n    return PlaneHelper;\n  }(Line);\n\n  var _axis = /*@__PURE__*/new Vector3();\n\n  var _lineGeometry, _coneGeometry;\n\n  var ArrowHelper = /*#__PURE__*/function (_Object3D) {\n    _inheritsLoose(ArrowHelper, _Object3D);\n\n    function ArrowHelper(dir, origin, length, color, headLength, headWidth) {\n      var _this;\n\n      _this = _Object3D.call(this) || this; // dir is assumed to be normalized\n\n      _this.type = 'ArrowHelper';\n      if (dir === undefined) dir = new Vector3(0, 0, 1);\n      if (origin === undefined) origin = new Vector3(0, 0, 0);\n      if (length === undefined) length = 1;\n      if (color === undefined) color = 0xffff00;\n      if (headLength === undefined) headLength = 0.2 * length;\n      if (headWidth === undefined) headWidth = 0.2 * headLength;\n\n      if (_lineGeometry === undefined) {\n        _lineGeometry = new BufferGeometry();\n\n        _lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n        _coneGeometry = new CylinderGeometry(0, 0.5, 1, 5, 1);\n\n        _coneGeometry.translate(0, -0.5, 0);\n      }\n\n      _this.position.copy(origin);\n\n      _this.line = new Line(_lineGeometry, new LineBasicMaterial({\n        color: color,\n        toneMapped: false\n      }));\n      _this.line.matrixAutoUpdate = false;\n\n      _this.add(_this.line);\n\n      _this.cone = new Mesh(_coneGeometry, new MeshBasicMaterial({\n        color: color,\n        toneMapped: false\n      }));\n      _this.cone.matrixAutoUpdate = false;\n\n      _this.add(_this.cone);\n\n      _this.setDirection(dir);\n\n      _this.setLength(length, headLength, headWidth);\n\n      return _this;\n    }\n\n    var _proto = ArrowHelper.prototype;\n\n    _proto.setDirection = function setDirection(dir) {\n      // dir is assumed to be normalized\n      if (dir.y > 0.99999) {\n        this.quaternion.set(0, 0, 0, 1);\n      } else if (dir.y < -0.99999) {\n        this.quaternion.set(1, 0, 0, 0);\n      } else {\n        _axis.set(dir.z, 0, -dir.x).normalize();\n\n        var radians = Math.acos(dir.y);\n        this.quaternion.setFromAxisAngle(_axis, radians);\n      }\n    };\n\n    _proto.setLength = function setLength(length, headLength, headWidth) {\n      if (headLength === undefined) headLength = 0.2 * length;\n      if (headWidth === undefined) headWidth = 0.2 * headLength;\n      this.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\n\n      this.line.updateMatrix();\n      this.cone.scale.set(headWidth, headLength, headWidth);\n      this.cone.position.y = length;\n      this.cone.updateMatrix();\n    };\n\n    _proto.setColor = function setColor(color) {\n      this.line.material.color.set(color);\n      this.cone.material.color.set(color);\n    };\n\n    _proto.copy = function copy(source) {\n      _Object3D.prototype.copy.call(this, source, false);\n\n      this.line.copy(source.line);\n      this.cone.copy(source.cone);\n      return this;\n    };\n\n    return ArrowHelper;\n  }(Object3D);\n\n  var AxesHelper = /*#__PURE__*/function (_LineSegments) {\n    _inheritsLoose(AxesHelper, _LineSegments);\n\n    function AxesHelper(size) {\n      var _this;\n\n      if (size === void 0) {\n        size = 1;\n      }\n\n      var vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n      var colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n      var geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n      var material = new LineBasicMaterial({\n        vertexColors: true,\n        toneMapped: false\n      });\n      _this = _LineSegments.call(this, geometry, material) || this;\n      _this.type = 'AxesHelper';\n      return _this;\n    }\n\n    return AxesHelper;\n  }(LineSegments);\n\n  var _floatView = new Float32Array(1);\n\n  var _int32View = new Int32Array(_floatView.buffer);\n\n  var DataUtils = {\n    // Converts float32 to float16 (stored as uint16 value).\n    toHalfFloat: function toHalfFloat(val) {\n      // Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n      /* This method is faster than the OpenEXR implementation (very often\n      * used, eg. in Ogre), with the additional benefit of rounding, inspired\n      * by James Tursa?s half-precision code. */\n      _floatView[0] = val;\n      var x = _int32View[0];\n      var bits = x >> 16 & 0x8000;\n      /* Get the sign */\n\n      var m = x >> 12 & 0x07ff;\n      /* Keep one extra bit for rounding */\n\n      var e = x >> 23 & 0xff;\n      /* Using int is faster here */\n\n      /* If zero, or denormal, or exponent underflows too much for a denormal\n      \t* half, return signed zero. */\n\n      if (e < 103) return bits;\n      /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\n      if (e > 142) {\n        bits |= 0x7c00;\n        /* If exponent was 0xff and one mantissa bit was set, it means NaN,\n        \t\t\t* not Inf, so make sure we set one mantissa bit too. */\n\n        bits |= (e == 255 ? 0 : 1) && x & 0x007fffff;\n        return bits;\n      }\n      /* If exponent underflows but not too much, return a denormal */\n\n\n      if (e < 113) {\n        m |= 0x0800;\n        /* Extra rounding may overflow and set mantissa to 0 and exponent\n        \t* to 1, which is OK. */\n\n        bits |= (m >> 114 - e) + (m >> 113 - e & 1);\n        return bits;\n      }\n\n      bits |= e - 112 << 10 | m >> 1;\n      /* Extra rounding. An overflow will set mantissa to 0 and increment\n      \t* the exponent, which is OK. */\n\n      bits += m & 1;\n      return bits;\n    }\n  };\n\n  var _ENCODINGS;\n\n  var LOD_MIN = 4;\n  var LOD_MAX = 8;\n  var SIZE_MAX = Math.pow(2, LOD_MAX); // The standard deviations (radians) associated with the extra mips. These are\n  // chosen to approximate a Trowbridge-Reitz distribution function times the\n  // geometric shadowing function. These sigma values squared must match the\n  // variance #defines in cube_uv_reflection_fragment.glsl.js.\n\n  var EXTRA_LOD_SIGMA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582];\n  var TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length; // The maximum length of the blur for loop. Smaller sigmas will use fewer\n  // samples and exit early, but not recompile the shader.\n\n  var MAX_SAMPLES = 20;\n  var ENCODINGS = (_ENCODINGS = {}, _ENCODINGS[LinearEncoding] = 0, _ENCODINGS[sRGBEncoding] = 1, _ENCODINGS[RGBEEncoding] = 2, _ENCODINGS[RGBM7Encoding] = 3, _ENCODINGS[RGBM16Encoding] = 4, _ENCODINGS[RGBDEncoding] = 5, _ENCODINGS[GammaEncoding] = 6, _ENCODINGS);\n  var backgroundMaterial = new MeshBasicMaterial({\n    side: BackSide,\n    depthWrite: false,\n    depthTest: false\n  });\n  var backgroundBox = new Mesh(new BoxGeometry(), backgroundMaterial);\n\n  var _flatCamera = /*@__PURE__*/new OrthographicCamera();\n\n  var _createPlanes2 = /*@__PURE__*/_createPlanes(),\n      _lodPlanes = _createPlanes2._lodPlanes,\n      _sizeLods = _createPlanes2._sizeLods,\n      _sigmas = _createPlanes2._sigmas;\n\n  var _clearColor = /*@__PURE__*/new Color();\n\n  var _oldTarget = null; // Golden Ratio\n\n  var PHI = (1 + Math.sqrt(5)) / 2;\n  var INV_PHI = 1 / PHI; // Vertices of a dodecahedron (except the opposites, which represent the\n  // same axis), used as axis directions evenly spread on a sphere.\n\n  var _axisDirections = [/*@__PURE__*/new Vector3(1, 1, 1), /*@__PURE__*/new Vector3(-1, 1, 1), /*@__PURE__*/new Vector3(1, 1, -1), /*@__PURE__*/new Vector3(-1, 1, -1), /*@__PURE__*/new Vector3(0, PHI, INV_PHI), /*@__PURE__*/new Vector3(0, PHI, -INV_PHI), /*@__PURE__*/new Vector3(INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(-INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(PHI, INV_PHI, 0), /*@__PURE__*/new Vector3(-PHI, INV_PHI, 0)];\n  /**\n   * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n   * (PMREM) from a cubeMap environment texture. This allows different levels of\n   * blur to be quickly accessed based on material roughness. It is packed into a\n   * special CubeUV format that allows us to perform custom interpolation so that\n   * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n   * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n   * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n   * higher roughness levels. In this way we maintain resolution to smoothly\n   * interpolate diffuse lighting while limiting sampling computation.\n   */\n\n  function convertLinearToRGBE(color) {\n    var maxComponent = Math.max(color.r, color.g, color.b);\n    var fExp = Math.min(Math.max(Math.ceil(Math.log2(maxComponent)), -128.0), 127.0);\n    color.multiplyScalar(Math.pow(2.0, -fExp));\n    var alpha = (fExp + 128.0) / 255.0;\n    return alpha;\n  }\n\n  var PMREMGenerator = /*#__PURE__*/function () {\n    function PMREMGenerator(renderer) {\n      this._renderer = renderer;\n      this._pingPongRenderTarget = null;\n      this._blurMaterial = _getBlurShader(MAX_SAMPLES);\n      this._equirectShader = null;\n      this._cubemapShader = null;\n\n      this._compileMaterial(this._blurMaterial);\n    }\n    /**\n     * Generates a PMREM from a supplied Scene, which can be faster than using an\n     * image if networking bandwidth is low. Optional sigma specifies a blur radius\n     * in radians to be applied to the scene before PMREM generation. Optional near\n     * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n     * is placed at the origin).\n     */\n\n\n    var _proto = PMREMGenerator.prototype;\n\n    _proto.fromScene = function fromScene(scene, sigma, near, far) {\n      if (sigma === void 0) {\n        sigma = 0;\n      }\n\n      if (near === void 0) {\n        near = 0.1;\n      }\n\n      if (far === void 0) {\n        far = 100;\n      }\n\n      _oldTarget = this._renderer.getRenderTarget();\n\n      var cubeUVRenderTarget = this._allocateTargets();\n\n      this._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);\n\n      if (sigma > 0) {\n        this._blur(cubeUVRenderTarget, 0, 0, sigma);\n      }\n\n      this._applyPMREM(cubeUVRenderTarget);\n\n      this._cleanup(cubeUVRenderTarget);\n\n      return cubeUVRenderTarget;\n    }\n    /**\n     * Generates a PMREM from an equirectangular texture, which can be either LDR\n     * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n     * as this matches best with the 256 x 256 cubemap output.\n     */\n    ;\n\n    _proto.fromEquirectangular = function fromEquirectangular(equirectangular) {\n      return this._fromTexture(equirectangular);\n    }\n    /**\n     * Generates a PMREM from an cubemap texture, which can be either LDR\n     * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n     * as this matches best with the 256 x 256 cubemap output.\n     */\n    ;\n\n    _proto.fromCubemap = function fromCubemap(cubemap) {\n      return this._fromTexture(cubemap);\n    }\n    /**\n     * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n     * your texture's network fetch for increased concurrency.\n     */\n    ;\n\n    _proto.compileCubemapShader = function compileCubemapShader() {\n      if (this._cubemapShader === null) {\n        this._cubemapShader = _getCubemapShader();\n\n        this._compileMaterial(this._cubemapShader);\n      }\n    }\n    /**\n     * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n     * your texture's network fetch for increased concurrency.\n     */\n    ;\n\n    _proto.compileEquirectangularShader = function compileEquirectangularShader() {\n      if (this._equirectShader === null) {\n        this._equirectShader = _getEquirectShader();\n\n        this._compileMaterial(this._equirectShader);\n      }\n    }\n    /**\n     * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n     * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n     * one of them will cause any others to also become unusable.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this._blurMaterial.dispose();\n\n      if (this._cubemapShader !== null) this._cubemapShader.dispose();\n      if (this._equirectShader !== null) this._equirectShader.dispose();\n\n      for (var i = 0; i < _lodPlanes.length; i++) {\n        _lodPlanes[i].dispose();\n      }\n    } // private interface\n    ;\n\n    _proto._cleanup = function _cleanup(outputTarget) {\n      this._pingPongRenderTarget.dispose();\n\n      this._renderer.setRenderTarget(_oldTarget);\n\n      outputTarget.scissorTest = false;\n\n      _setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);\n    };\n\n    _proto._fromTexture = function _fromTexture(texture) {\n      _oldTarget = this._renderer.getRenderTarget();\n\n      var cubeUVRenderTarget = this._allocateTargets(texture);\n\n      this._textureToCubeUV(texture, cubeUVRenderTarget);\n\n      this._applyPMREM(cubeUVRenderTarget);\n\n      this._cleanup(cubeUVRenderTarget);\n\n      return cubeUVRenderTarget;\n    };\n\n    _proto._allocateTargets = function _allocateTargets(texture) {\n      // warning: null texture is valid\n      var params = {\n        magFilter: NearestFilter,\n        minFilter: NearestFilter,\n        generateMipmaps: false,\n        type: UnsignedByteType,\n        format: RGBEFormat,\n        encoding: _isLDR(texture) ? texture.encoding : RGBEEncoding,\n        depthBuffer: false\n      };\n\n      var cubeUVRenderTarget = _createRenderTarget(params);\n\n      cubeUVRenderTarget.depthBuffer = texture ? false : true;\n      this._pingPongRenderTarget = _createRenderTarget(params);\n      return cubeUVRenderTarget;\n    };\n\n    _proto._compileMaterial = function _compileMaterial(material) {\n      var tmpMesh = new Mesh(_lodPlanes[0], material);\n\n      this._renderer.compile(tmpMesh, _flatCamera);\n    };\n\n    _proto._sceneToCubeUV = function _sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {\n      var fov = 90;\n      var aspect = 1;\n      var cubeCamera = new PerspectiveCamera(fov, aspect, near, far);\n      var upSign = [1, -1, 1, 1, 1, 1];\n      var forwardSign = [1, 1, 1, -1, -1, -1];\n      var renderer = this._renderer;\n      var originalAutoClear = renderer.autoClear;\n      var outputEncoding = renderer.outputEncoding;\n      var toneMapping = renderer.toneMapping;\n      renderer.getClearColor(_clearColor);\n      renderer.toneMapping = NoToneMapping;\n      renderer.outputEncoding = LinearEncoding;\n      renderer.autoClear = false;\n      var useSolidColor = false;\n      var background = scene.background;\n\n      if (background) {\n        if (background.isColor) {\n          backgroundMaterial.color.copy(background).convertSRGBToLinear();\n          scene.background = null;\n          var alpha = convertLinearToRGBE(backgroundMaterial.color);\n          backgroundMaterial.opacity = alpha;\n          useSolidColor = true;\n        }\n      } else {\n        backgroundMaterial.color.copy(_clearColor).convertSRGBToLinear();\n\n        var _alpha = convertLinearToRGBE(backgroundMaterial.color);\n\n        backgroundMaterial.opacity = _alpha;\n        useSolidColor = true;\n      }\n\n      for (var i = 0; i < 6; i++) {\n        var col = i % 3;\n\n        if (col == 0) {\n          cubeCamera.up.set(0, upSign[i], 0);\n          cubeCamera.lookAt(forwardSign[i], 0, 0);\n        } else if (col == 1) {\n          cubeCamera.up.set(0, 0, upSign[i]);\n          cubeCamera.lookAt(0, forwardSign[i], 0);\n        } else {\n          cubeCamera.up.set(0, upSign[i], 0);\n          cubeCamera.lookAt(0, 0, forwardSign[i]);\n        }\n\n        _setViewport(cubeUVRenderTarget, col * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX);\n\n        renderer.setRenderTarget(cubeUVRenderTarget);\n\n        if (useSolidColor) {\n          renderer.render(backgroundBox, cubeCamera);\n        }\n\n        renderer.render(scene, cubeCamera);\n      }\n\n      renderer.toneMapping = toneMapping;\n      renderer.outputEncoding = outputEncoding;\n      renderer.autoClear = originalAutoClear;\n    };\n\n    _proto._textureToCubeUV = function _textureToCubeUV(texture, cubeUVRenderTarget) {\n      var renderer = this._renderer;\n\n      if (texture.isCubeTexture) {\n        if (this._cubemapShader == null) {\n          this._cubemapShader = _getCubemapShader();\n        }\n      } else {\n        if (this._equirectShader == null) {\n          this._equirectShader = _getEquirectShader();\n        }\n      }\n\n      var material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\n      var mesh = new Mesh(_lodPlanes[0], material);\n      var uniforms = material.uniforms;\n      uniforms['envMap'].value = texture;\n\n      if (!texture.isCubeTexture) {\n        uniforms['texelSize'].value.set(1.0 / texture.image.width, 1.0 / texture.image.height);\n      }\n\n      uniforms['inputEncoding'].value = ENCODINGS[texture.encoding];\n      uniforms['outputEncoding'].value = ENCODINGS[cubeUVRenderTarget.texture.encoding];\n\n      _setViewport(cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX);\n\n      renderer.setRenderTarget(cubeUVRenderTarget);\n      renderer.render(mesh, _flatCamera);\n    };\n\n    _proto._applyPMREM = function _applyPMREM(cubeUVRenderTarget) {\n      var renderer = this._renderer;\n      var autoClear = renderer.autoClear;\n      renderer.autoClear = false;\n\n      for (var i = 1; i < TOTAL_LODS; i++) {\n        var sigma = Math.sqrt(_sigmas[i] * _sigmas[i] - _sigmas[i - 1] * _sigmas[i - 1]);\n        var poleAxis = _axisDirections[(i - 1) % _axisDirections.length];\n\n        this._blur(cubeUVRenderTarget, i - 1, i, sigma, poleAxis);\n      }\n\n      renderer.autoClear = autoClear;\n    }\n    /**\n     * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n     * vertically and horizontally, but this breaks down on a cube. Here we apply\n     * the blur latitudinally (around the poles), and then longitudinally (towards\n     * the poles) to approximate the orthogonally-separable blur. It is least\n     * accurate at the poles, but still does a decent job.\n     */\n    ;\n\n    _proto._blur = function _blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {\n      var pingPongRenderTarget = this._pingPongRenderTarget;\n\n      this._halfBlur(cubeUVRenderTarget, pingPongRenderTarget, lodIn, lodOut, sigma, 'latitudinal', poleAxis);\n\n      this._halfBlur(pingPongRenderTarget, cubeUVRenderTarget, lodOut, lodOut, sigma, 'longitudinal', poleAxis);\n    };\n\n    _proto._halfBlur = function _halfBlur(targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis) {\n      var renderer = this._renderer;\n      var blurMaterial = this._blurMaterial;\n\n      if (direction !== 'latitudinal' && direction !== 'longitudinal') {\n        console.error('blur direction must be either latitudinal or longitudinal!');\n      } // Number of standard deviations at which to cut off the discrete approximation.\n\n\n      var STANDARD_DEVIATIONS = 3;\n      var blurMesh = new Mesh(_lodPlanes[lodOut], blurMaterial);\n      var blurUniforms = blurMaterial.uniforms;\n      var pixels = _sizeLods[lodIn] - 1;\n      var radiansPerPixel = isFinite(sigmaRadians) ? Math.PI / (2 * pixels) : 2 * Math.PI / (2 * MAX_SAMPLES - 1);\n      var sigmaPixels = sigmaRadians / radiansPerPixel;\n      var samples = isFinite(sigmaRadians) ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels) : MAX_SAMPLES;\n\n      if (samples > MAX_SAMPLES) {\n        console.warn(\"sigmaRadians, \" + sigmaRadians + \", is too large and will clip, as it requested \" + samples + \" samples when the maximum is set to \" + MAX_SAMPLES);\n      }\n\n      var weights = [];\n      var sum = 0;\n\n      for (var i = 0; i < MAX_SAMPLES; ++i) {\n        var _x = i / sigmaPixels;\n\n        var weight = Math.exp(-_x * _x / 2);\n        weights.push(weight);\n\n        if (i == 0) {\n          sum += weight;\n        } else if (i < samples) {\n          sum += 2 * weight;\n        }\n      }\n\n      for (var _i = 0; _i < weights.length; _i++) {\n        weights[_i] = weights[_i] / sum;\n      }\n\n      blurUniforms['envMap'].value = targetIn.texture;\n      blurUniforms['samples'].value = samples;\n      blurUniforms['weights'].value = weights;\n      blurUniforms['latitudinal'].value = direction === 'latitudinal';\n\n      if (poleAxis) {\n        blurUniforms['poleAxis'].value = poleAxis;\n      }\n\n      blurUniforms['dTheta'].value = radiansPerPixel;\n      blurUniforms['mipInt'].value = LOD_MAX - lodIn;\n      blurUniforms['inputEncoding'].value = ENCODINGS[targetIn.texture.encoding];\n      blurUniforms['outputEncoding'].value = ENCODINGS[targetIn.texture.encoding];\n      var outputSize = _sizeLods[lodOut];\n      var x = 3 * Math.max(0, SIZE_MAX - 2 * outputSize);\n      var y = (lodOut === 0 ? 0 : 2 * SIZE_MAX) + 2 * outputSize * (lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0);\n\n      _setViewport(targetOut, x, y, 3 * outputSize, 2 * outputSize);\n\n      renderer.setRenderTarget(targetOut);\n      renderer.render(blurMesh, _flatCamera);\n    };\n\n    return PMREMGenerator;\n  }();\n\n  function _isLDR(texture) {\n    if (texture === undefined || texture.type !== UnsignedByteType) return false;\n    return texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n  }\n\n  function _createPlanes() {\n    var _lodPlanes = [];\n    var _sizeLods = [];\n    var _sigmas = [];\n    var lod = LOD_MAX;\n\n    for (var i = 0; i < TOTAL_LODS; i++) {\n      var sizeLod = Math.pow(2, lod);\n\n      _sizeLods.push(sizeLod);\n\n      var sigma = 1.0 / sizeLod;\n\n      if (i > LOD_MAX - LOD_MIN) {\n        sigma = EXTRA_LOD_SIGMA[i - LOD_MAX + LOD_MIN - 1];\n      } else if (i == 0) {\n        sigma = 0;\n      }\n\n      _sigmas.push(sigma);\n\n      var texelSize = 1.0 / (sizeLod - 1);\n      var min = -texelSize / 2;\n      var max = 1 + texelSize / 2;\n      var uv1 = [min, min, max, min, max, max, min, min, max, max, min, max];\n      var cubeFaces = 6;\n      var vertices = 6;\n      var positionSize = 3;\n      var uvSize = 2;\n      var faceIndexSize = 1;\n      var position = new Float32Array(positionSize * vertices * cubeFaces);\n      var uv = new Float32Array(uvSize * vertices * cubeFaces);\n      var faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);\n\n      for (var face = 0; face < cubeFaces; face++) {\n        var x = face % 3 * 2 / 3 - 1;\n        var y = face > 2 ? 0 : -1;\n        var coordinates = [x, y, 0, x + 2 / 3, y, 0, x + 2 / 3, y + 1, 0, x, y, 0, x + 2 / 3, y + 1, 0, x, y + 1, 0];\n        position.set(coordinates, positionSize * vertices * face);\n        uv.set(uv1, uvSize * vertices * face);\n        var fill = [face, face, face, face, face, face];\n        faceIndex.set(fill, faceIndexSize * vertices * face);\n      }\n\n      var planes = new BufferGeometry();\n      planes.setAttribute('position', new BufferAttribute(position, positionSize));\n      planes.setAttribute('uv', new BufferAttribute(uv, uvSize));\n      planes.setAttribute('faceIndex', new BufferAttribute(faceIndex, faceIndexSize));\n\n      _lodPlanes.push(planes);\n\n      if (lod > LOD_MIN) {\n        lod--;\n      }\n    }\n\n    return {\n      _lodPlanes: _lodPlanes,\n      _sizeLods: _sizeLods,\n      _sigmas: _sigmas\n    };\n  }\n\n  function _createRenderTarget(params) {\n    var cubeUVRenderTarget = new WebGLRenderTarget(3 * SIZE_MAX, 3 * SIZE_MAX, params);\n    cubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n    cubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n    cubeUVRenderTarget.scissorTest = true;\n    return cubeUVRenderTarget;\n  }\n\n  function _setViewport(target, x, y, width, height) {\n    target.viewport.set(x, y, width, height);\n    target.scissor.set(x, y, width, height);\n  }\n\n  function _getBlurShader(maxSamples) {\n    var weights = new Float32Array(maxSamples);\n    var poleAxis = new Vector3(0, 1, 0);\n    var shaderMaterial = new RawShaderMaterial({\n      name: 'SphericalGaussianBlur',\n      defines: {\n        'n': maxSamples\n      },\n      uniforms: {\n        'envMap': {\n          value: null\n        },\n        'samples': {\n          value: 1\n        },\n        'weights': {\n          value: weights\n        },\n        'latitudinal': {\n          value: false\n        },\n        'dTheta': {\n          value: 0\n        },\n        'mipInt': {\n          value: 0\n        },\n        'poleAxis': {\n          value: poleAxis\n        },\n        'inputEncoding': {\n          value: ENCODINGS[LinearEncoding]\n        },\n        'outputEncoding': {\n          value: ENCODINGS[LinearEncoding]\n        }\n      },\n      vertexShader: _getCommonVertexShader(),\n      fragmentShader:\n      /* glsl */\n      \"\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\t\\t\\tuniform int samples;\\n\\t\\t\\tuniform float weights[ n ];\\n\\t\\t\\tuniform bool latitudinal;\\n\\t\\t\\tuniform float dTheta;\\n\\t\\t\\tuniform float mipInt;\\n\\t\\t\\tuniform vec3 poleAxis;\\n\\n\\t\\t\\t\" + _getEncodings() + \"\\n\\n\\t\\t\\t#define ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t#include <cube_uv_reflection_fragment>\\n\\n\\t\\t\\tvec3 getSample( float theta, vec3 axis ) {\\n\\n\\t\\t\\t\\tfloat cosTheta = cos( theta );\\n\\t\\t\\t\\t// Rodrigues' axis-angle rotation\\n\\t\\t\\t\\tvec3 sampleDirection = vOutputDirection * cosTheta\\n\\t\\t\\t\\t\\t+ cross( axis, vOutputDirection ) * sin( theta )\\n\\t\\t\\t\\t\\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\\n\\n\\t\\t\\t\\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\\n\\n\\t\\t\\t\\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\\n\\n\\t\\t\\t\\t\\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\taxis = normalize( axis );\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\\n\\n\\t\\t\\t\\tfor ( int i = 1; i < n; i++ ) {\\n\\n\\t\\t\\t\\t\\tif ( i >= samples ) {\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfloat theta = dTheta * float( i );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t\",\n      blending: NoBlending,\n      depthTest: false,\n      depthWrite: false\n    });\n    return shaderMaterial;\n  }\n\n  function _getEquirectShader() {\n    var texelSize = new Vector2(1, 1);\n    var shaderMaterial = new RawShaderMaterial({\n      name: 'EquirectangularToCubeUV',\n      uniforms: {\n        'envMap': {\n          value: null\n        },\n        'texelSize': {\n          value: texelSize\n        },\n        'inputEncoding': {\n          value: ENCODINGS[LinearEncoding]\n        },\n        'outputEncoding': {\n          value: ENCODINGS[LinearEncoding]\n        }\n      },\n      vertexShader: _getCommonVertexShader(),\n      fragmentShader:\n      /* glsl */\n      \"\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\t\\t\\tuniform vec2 texelSize;\\n\\n\\t\\t\\t\" + _getEncodings() + \"\\n\\n\\t\\t\\t#include <common>\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\n\\t\\t\\t\\tvec3 outputDirection = normalize( vOutputDirection );\\n\\t\\t\\t\\tvec2 uv = equirectUv( outputDirection );\\n\\n\\t\\t\\t\\tvec2 f = fract( uv / texelSize - 0.5 );\\n\\t\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\t\\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.x += texelSize.x;\\n\\t\\t\\t\\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.y += texelSize.y;\\n\\t\\t\\t\\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.x -= texelSize.x;\\n\\t\\t\\t\\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\n\\t\\t\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\t\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\t\\t\\tgl_FragColor.rgb = mix( tm, bm, f.y );\\n\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t\",\n      blending: NoBlending,\n      depthTest: false,\n      depthWrite: false\n    });\n    return shaderMaterial;\n  }\n\n  function _getCubemapShader() {\n    var shaderMaterial = new RawShaderMaterial({\n      name: 'CubemapToCubeUV',\n      uniforms: {\n        'envMap': {\n          value: null\n        },\n        'inputEncoding': {\n          value: ENCODINGS[LinearEncoding]\n        },\n        'outputEncoding': {\n          value: ENCODINGS[LinearEncoding]\n        }\n      },\n      vertexShader: _getCommonVertexShader(),\n      fragmentShader:\n      /* glsl */\n      \"\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform samplerCube envMap;\\n\\n\\t\\t\\t\" + _getEncodings() + \"\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t\",\n      blending: NoBlending,\n      depthTest: false,\n      depthWrite: false\n    });\n    return shaderMaterial;\n  }\n\n  function _getCommonVertexShader() {\n    return (\n      /* glsl */\n      \"\\n\\n\\t\\tprecision mediump float;\\n\\t\\tprecision mediump int;\\n\\n\\t\\tattribute vec3 position;\\n\\t\\tattribute vec2 uv;\\n\\t\\tattribute float faceIndex;\\n\\n\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t// RH coordinate system; PMREM face-indexing convention\\n\\t\\tvec3 getDirection( vec2 uv, float face ) {\\n\\n\\t\\t\\tuv = 2.0 * uv - 1.0;\\n\\n\\t\\t\\tvec3 direction = vec3( uv, 1.0 );\\n\\n\\t\\t\\tif ( face == 0.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.zyx; // ( 1, v, u ) pos x\\n\\n\\t\\t\\t} else if ( face == 1.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.xzy;\\n\\t\\t\\t\\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\\n\\n\\t\\t\\t} else if ( face == 2.0 ) {\\n\\n\\t\\t\\t\\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\\n\\n\\t\\t\\t} else if ( face == 3.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.zyx;\\n\\t\\t\\t\\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\\n\\n\\t\\t\\t} else if ( face == 4.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.xzy;\\n\\t\\t\\t\\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\\n\\n\\t\\t\\t} else if ( face == 5.0 ) {\\n\\n\\t\\t\\t\\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn direction;\\n\\n\\t\\t}\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvOutputDirection = getDirection( uv, faceIndex );\\n\\t\\t\\tgl_Position = vec4( position, 1.0 );\\n\\n\\t\\t}\\n\\t\"\n    );\n  }\n\n  function _getEncodings() {\n    return (\n      /* glsl */\n      \"\\n\\n\\t\\tuniform int inputEncoding;\\n\\t\\tuniform int outputEncoding;\\n\\n\\t\\t#include <encodings_pars_fragment>\\n\\n\\t\\tvec4 inputTexelToLinear( vec4 value ) {\\n\\n\\t\\t\\tif ( inputEncoding == 0 ) {\\n\\n\\t\\t\\t\\treturn value;\\n\\n\\t\\t\\t} else if ( inputEncoding == 1 ) {\\n\\n\\t\\t\\t\\treturn sRGBToLinear( value );\\n\\n\\t\\t\\t} else if ( inputEncoding == 2 ) {\\n\\n\\t\\t\\t\\treturn RGBEToLinear( value );\\n\\n\\t\\t\\t} else if ( inputEncoding == 3 ) {\\n\\n\\t\\t\\t\\treturn RGBMToLinear( value, 7.0 );\\n\\n\\t\\t\\t} else if ( inputEncoding == 4 ) {\\n\\n\\t\\t\\t\\treturn RGBMToLinear( value, 16.0 );\\n\\n\\t\\t\\t} else if ( inputEncoding == 5 ) {\\n\\n\\t\\t\\t\\treturn RGBDToLinear( value, 256.0 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn GammaToLinear( value, 2.2 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tvec4 linearToOutputTexel( vec4 value ) {\\n\\n\\t\\t\\tif ( outputEncoding == 0 ) {\\n\\n\\t\\t\\t\\treturn value;\\n\\n\\t\\t\\t} else if ( outputEncoding == 1 ) {\\n\\n\\t\\t\\t\\treturn LinearTosRGB( value );\\n\\n\\t\\t\\t} else if ( outputEncoding == 2 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBE( value );\\n\\n\\t\\t\\t} else if ( outputEncoding == 3 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBM( value, 7.0 );\\n\\n\\t\\t\\t} else if ( outputEncoding == 4 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBM( value, 16.0 );\\n\\n\\t\\t\\t} else if ( outputEncoding == 5 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBD( value, 256.0 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn LinearToGamma( value, 2.2 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tvec4 envMapTexelToLinear( vec4 color ) {\\n\\n\\t\\t\\treturn inputTexelToLinear( color );\\n\\n\\t\\t}\\n\\t\"\n    );\n  }\n\n  function Face4(a, b, c, d, normal, color, materialIndex) {\n    console.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');\n    return new Face3(a, b, c, normal, color, materialIndex);\n  }\n\n  var LineStrip = 0;\n  var LinePieces = 1;\n  var NoColors = 0;\n  var FaceColors = 1;\n  var VertexColors = 2;\n\n  function MeshFaceMaterial(materials) {\n    console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\n    return materials;\n  }\n\n  function MultiMaterial(materials) {\n    if (materials === void 0) {\n      materials = [];\n    }\n\n    console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\n    materials.isMultiMaterial = true;\n    materials.materials = materials;\n\n    materials.clone = function () {\n      return materials.slice();\n    };\n\n    return materials;\n  }\n\n  function PointCloud(geometry, material) {\n    console.warn('THREE.PointCloud has been renamed to THREE.Points.');\n    return new Points(geometry, material);\n  }\n\n  function Particle(material) {\n    console.warn('THREE.Particle has been renamed to THREE.Sprite.');\n    return new Sprite(material);\n  }\n\n  function ParticleSystem(geometry, material) {\n    console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n    return new Points(geometry, material);\n  }\n\n  function PointCloudMaterial(parameters) {\n    console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function ParticleBasicMaterial(parameters) {\n    console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function ParticleSystemMaterial(parameters) {\n    console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function Vertex(x, y, z) {\n    console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n    return new Vector3(x, y, z);\n  } //\n\n\n  function DynamicBufferAttribute(array, itemSize) {\n    console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');\n    return new BufferAttribute(array, itemSize).setUsage(DynamicDrawUsage);\n  }\n\n  function Int8Attribute(array, itemSize) {\n    console.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\n    return new Int8BufferAttribute(array, itemSize);\n  }\n\n  function Uint8Attribute(array, itemSize) {\n    console.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\n    return new Uint8BufferAttribute(array, itemSize);\n  }\n\n  function Uint8ClampedAttribute(array, itemSize) {\n    console.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\n    return new Uint8ClampedBufferAttribute(array, itemSize);\n  }\n\n  function Int16Attribute(array, itemSize) {\n    console.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\n    return new Int16BufferAttribute(array, itemSize);\n  }\n\n  function Uint16Attribute(array, itemSize) {\n    console.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\n    return new Uint16BufferAttribute(array, itemSize);\n  }\n\n  function Int32Attribute(array, itemSize) {\n    console.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\n    return new Int32BufferAttribute(array, itemSize);\n  }\n\n  function Uint32Attribute(array, itemSize) {\n    console.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\n    return new Uint32BufferAttribute(array, itemSize);\n  }\n\n  function Float32Attribute(array, itemSize) {\n    console.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\n    return new Float32BufferAttribute(array, itemSize);\n  }\n\n  function Float64Attribute(array, itemSize) {\n    console.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\n    return new Float64BufferAttribute(array, itemSize);\n  } //\n\n\n  Curve.create = function (construct, getPoint) {\n    console.log('THREE.Curve.create() has been deprecated');\n    construct.prototype = Object.create(Curve.prototype);\n    construct.prototype.constructor = construct;\n    construct.prototype.getPoint = getPoint;\n    return construct;\n  }; //\n\n\n  Object.assign(Path.prototype, {\n    fromPoints: function fromPoints(points) {\n      console.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\n      return this.setFromPoints(points);\n    }\n  }); //\n\n  function ClosedSplineCurve3(points) {\n    console.warn('THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n    CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n    this.closed = true;\n  }\n\n  ClosedSplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\n  function SplineCurve3(points) {\n    console.warn('THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n    CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n  }\n\n  SplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\n  function Spline(points) {\n    console.warn('THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.');\n    CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n  }\n\n  Spline.prototype = Object.create(CatmullRomCurve3.prototype);\n  Object.assign(Spline.prototype, {\n    initFromArray: function initFromArray()\n    /* a */\n    {\n      console.error('THREE.Spline: .initFromArray() has been removed.');\n    },\n    getControlPointsArray: function getControlPointsArray()\n    /* optionalTarget */\n    {\n      console.error('THREE.Spline: .getControlPointsArray() has been removed.');\n    },\n    reparametrizeByArcLength: function reparametrizeByArcLength()\n    /* samplingCoef */\n    {\n      console.error('THREE.Spline: .reparametrizeByArcLength() has been removed.');\n    }\n  }); //\n\n  function AxisHelper(size) {\n    console.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\n    return new AxesHelper(size);\n  }\n\n  function BoundingBoxHelper(object, color) {\n    console.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\n    return new BoxHelper(object, color);\n  }\n\n  function EdgesHelper(object, hex) {\n    console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\n    return new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\n      color: hex !== undefined ? hex : 0xffffff\n    }));\n  }\n\n  GridHelper.prototype.setColors = function () {\n    console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n  };\n\n  SkeletonHelper.prototype.update = function () {\n    console.error('THREE.SkeletonHelper: update() no longer needs to be called.');\n  };\n\n  function WireframeHelper(object, hex) {\n    console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\n    return new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\n      color: hex !== undefined ? hex : 0xffffff\n    }));\n  } //\n\n\n  Object.assign(Loader.prototype, {\n    extractUrlBase: function extractUrlBase(url) {\n      console.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');\n      return LoaderUtils.extractUrlBase(url);\n    }\n  });\n  Loader.Handlers = {\n    add: function add()\n    /* regex, loader */\n    {\n      console.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');\n    },\n    get: function get()\n    /* file */\n    {\n      console.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');\n    }\n  };\n\n  function XHRLoader(manager) {\n    console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\n    return new FileLoader(manager);\n  }\n\n  function BinaryTextureLoader(manager) {\n    console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\n    return new DataTextureLoader(manager);\n  } //\n\n\n  Object.assign(Box2.prototype, {\n    center: function center(optionalTarget) {\n      console.warn('THREE.Box2: .center() has been renamed to .getCenter().');\n      return this.getCenter(optionalTarget);\n    },\n    empty: function empty() {\n      console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n      return this.isEmpty();\n    },\n    isIntersectionBox: function isIntersectionBox(box) {\n      console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    size: function size(optionalTarget) {\n      console.warn('THREE.Box2: .size() has been renamed to .getSize().');\n      return this.getSize(optionalTarget);\n    }\n  });\n  Object.assign(Box3.prototype, {\n    center: function center(optionalTarget) {\n      console.warn('THREE.Box3: .center() has been renamed to .getCenter().');\n      return this.getCenter(optionalTarget);\n    },\n    empty: function empty() {\n      console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n      return this.isEmpty();\n    },\n    isIntersectionBox: function isIntersectionBox(box) {\n      console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    isIntersectionSphere: function isIntersectionSphere(sphere) {\n      console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n      return this.intersectsSphere(sphere);\n    },\n    size: function size(optionalTarget) {\n      console.warn('THREE.Box3: .size() has been renamed to .getSize().');\n      return this.getSize(optionalTarget);\n    }\n  });\n  Object.assign(Sphere.prototype, {\n    empty: function empty() {\n      console.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');\n      return this.isEmpty();\n    }\n  });\n\n  Frustum.prototype.setFromMatrix = function (m) {\n    console.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');\n    return this.setFromProjectionMatrix(m);\n  };\n\n  Line3.prototype.center = function (optionalTarget) {\n    console.warn('THREE.Line3: .center() has been renamed to .getCenter().');\n    return this.getCenter(optionalTarget);\n  };\n\n  Object.assign(MathUtils, {\n    random16: function random16() {\n      console.warn('THREE.Math: .random16() has been deprecated. Use Math.random() instead.');\n      return Math.random();\n    },\n    nearestPowerOfTwo: function nearestPowerOfTwo(value) {\n      console.warn('THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().');\n      return MathUtils.floorPowerOfTwo(value);\n    },\n    nextPowerOfTwo: function nextPowerOfTwo(value) {\n      console.warn('THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().');\n      return MathUtils.ceilPowerOfTwo(value);\n    }\n  });\n  Object.assign(Matrix3.prototype, {\n    flattenToArrayOffset: function flattenToArrayOffset(array, offset) {\n      console.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n      return this.toArray(array, offset);\n    },\n    multiplyVector3: function multiplyVector3(vector) {\n      console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n      return vector.applyMatrix3(this);\n    },\n    multiplyVector3Array: function multiplyVector3Array()\n    /* a */\n    {\n      console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\n    },\n    applyToBufferAttribute: function applyToBufferAttribute(attribute) {\n      console.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');\n      return attribute.applyMatrix3(this);\n    },\n    applyToVector3Array: function applyToVector3Array()\n    /* array, offset, length */\n    {\n      console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\n    },\n    getInverse: function getInverse(matrix) {\n      console.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n      return this.copy(matrix).invert();\n    }\n  });\n  Object.assign(Matrix4.prototype, {\n    extractPosition: function extractPosition(m) {\n      console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n      return this.copyPosition(m);\n    },\n    flattenToArrayOffset: function flattenToArrayOffset(array, offset) {\n      console.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n      return this.toArray(array, offset);\n    },\n    getPosition: function getPosition() {\n      console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n      return new Vector3().setFromMatrixColumn(this, 3);\n    },\n    setRotationFromQuaternion: function setRotationFromQuaternion(q) {\n      console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n      return this.makeRotationFromQuaternion(q);\n    },\n    multiplyToArray: function multiplyToArray() {\n      console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\n    },\n    multiplyVector3: function multiplyVector3(vector) {\n      console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    multiplyVector4: function multiplyVector4(vector) {\n      console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    multiplyVector3Array: function multiplyVector3Array()\n    /* a */\n    {\n      console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\n    },\n    rotateAxis: function rotateAxis(v) {\n      console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n      v.transformDirection(this);\n    },\n    crossVector: function crossVector(vector) {\n      console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    translate: function translate() {\n      console.error('THREE.Matrix4: .translate() has been removed.');\n    },\n    rotateX: function rotateX() {\n      console.error('THREE.Matrix4: .rotateX() has been removed.');\n    },\n    rotateY: function rotateY() {\n      console.error('THREE.Matrix4: .rotateY() has been removed.');\n    },\n    rotateZ: function rotateZ() {\n      console.error('THREE.Matrix4: .rotateZ() has been removed.');\n    },\n    rotateByAxis: function rotateByAxis() {\n      console.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n    },\n    applyToBufferAttribute: function applyToBufferAttribute(attribute) {\n      console.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');\n      return attribute.applyMatrix4(this);\n    },\n    applyToVector3Array: function applyToVector3Array()\n    /* array, offset, length */\n    {\n      console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\n    },\n    makeFrustum: function makeFrustum(left, right, bottom, top, near, far) {\n      console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\n      return this.makePerspective(left, right, top, bottom, near, far);\n    },\n    getInverse: function getInverse(matrix) {\n      console.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n      return this.copy(matrix).invert();\n    }\n  });\n\n  Plane.prototype.isIntersectionLine = function (line) {\n    console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n    return this.intersectsLine(line);\n  };\n\n  Object.assign(Quaternion.prototype, {\n    multiplyVector3: function multiplyVector3(vector) {\n      console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n      return vector.applyQuaternion(this);\n    },\n    inverse: function inverse() {\n      console.warn('THREE.Quaternion: .inverse() has been renamed to invert().');\n      return this.invert();\n    }\n  });\n  Object.assign(Ray.prototype, {\n    isIntersectionBox: function isIntersectionBox(box) {\n      console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    isIntersectionPlane: function isIntersectionPlane(plane) {\n      console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n      return this.intersectsPlane(plane);\n    },\n    isIntersectionSphere: function isIntersectionSphere(sphere) {\n      console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n      return this.intersectsSphere(sphere);\n    }\n  });\n  Object.assign(Triangle.prototype, {\n    area: function area() {\n      console.warn('THREE.Triangle: .area() has been renamed to .getArea().');\n      return this.getArea();\n    },\n    barycoordFromPoint: function barycoordFromPoint(point, target) {\n      console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n      return this.getBarycoord(point, target);\n    },\n    midpoint: function midpoint(target) {\n      console.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\n      return this.getMidpoint(target);\n    },\n    normal: function normal(target) {\n      console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n      return this.getNormal(target);\n    },\n    plane: function plane(target) {\n      console.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\n      return this.getPlane(target);\n    }\n  });\n  Object.assign(Triangle, {\n    barycoordFromPoint: function barycoordFromPoint(point, a, b, c, target) {\n      console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n      return Triangle.getBarycoord(point, a, b, c, target);\n    },\n    normal: function normal(a, b, c, target) {\n      console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n      return Triangle.getNormal(a, b, c, target);\n    }\n  });\n  Object.assign(Shape.prototype, {\n    extractAllPoints: function extractAllPoints(divisions) {\n      console.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');\n      return this.extractPoints(divisions);\n    },\n    extrude: function extrude(options) {\n      console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\n      return new ExtrudeGeometry(this, options);\n    },\n    makeGeometry: function makeGeometry(options) {\n      console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\n      return new ShapeGeometry(this, options);\n    }\n  });\n  Object.assign(Vector2.prototype, {\n    fromAttribute: function fromAttribute(attribute, index, offset) {\n      console.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\n      return this.fromBufferAttribute(attribute, index, offset);\n    },\n    distanceToManhattan: function distanceToManhattan(v) {\n      console.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n      return this.manhattanDistanceTo(v);\n    },\n    lengthManhattan: function lengthManhattan() {\n      console.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\n      return this.manhattanLength();\n    }\n  });\n  Object.assign(Vector3.prototype, {\n    setEulerFromRotationMatrix: function setEulerFromRotationMatrix() {\n      console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n    },\n    setEulerFromQuaternion: function setEulerFromQuaternion() {\n      console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n    },\n    getPositionFromMatrix: function getPositionFromMatrix(m) {\n      console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n      return this.setFromMatrixPosition(m);\n    },\n    getScaleFromMatrix: function getScaleFromMatrix(m) {\n      console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n      return this.setFromMatrixScale(m);\n    },\n    getColumnFromMatrix: function getColumnFromMatrix(index, matrix) {\n      console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n      return this.setFromMatrixColumn(matrix, index);\n    },\n    applyProjection: function applyProjection(m) {\n      console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\n      return this.applyMatrix4(m);\n    },\n    fromAttribute: function fromAttribute(attribute, index, offset) {\n      console.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\n      return this.fromBufferAttribute(attribute, index, offset);\n    },\n    distanceToManhattan: function distanceToManhattan(v) {\n      console.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n      return this.manhattanDistanceTo(v);\n    },\n    lengthManhattan: function lengthManhattan() {\n      console.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\n      return this.manhattanLength();\n    }\n  });\n  Object.assign(Vector4.prototype, {\n    fromAttribute: function fromAttribute(attribute, index, offset) {\n      console.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\n      return this.fromBufferAttribute(attribute, index, offset);\n    },\n    lengthManhattan: function lengthManhattan() {\n      console.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\n      return this.manhattanLength();\n    }\n  }); //\n\n  Object.assign(Object3D.prototype, {\n    getChildByName: function getChildByName(name) {\n      console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n      return this.getObjectByName(name);\n    },\n    renderDepth: function renderDepth() {\n      console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n    },\n    translate: function translate(distance, axis) {\n      console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n      return this.translateOnAxis(axis, distance);\n    },\n    getWorldRotation: function getWorldRotation() {\n      console.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');\n    },\n    applyMatrix: function applyMatrix(matrix) {\n      console.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');\n      return this.applyMatrix4(matrix);\n    }\n  });\n  Object.defineProperties(Object3D.prototype, {\n    eulerOrder: {\n      get: function get() {\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n        return this.rotation.order;\n      },\n      set: function set(value) {\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n        this.rotation.order = value;\n      }\n    },\n    useQuaternion: {\n      get: function get() {\n        console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n      },\n      set: function set() {\n        console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n      }\n    }\n  });\n  Object.assign(Mesh.prototype, {\n    setDrawMode: function setDrawMode() {\n      console.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n    }\n  });\n  Object.defineProperties(Mesh.prototype, {\n    drawMode: {\n      get: function get() {\n        console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');\n        return TrianglesDrawMode;\n      },\n      set: function set() {\n        console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n      }\n    }\n  });\n  Object.defineProperties(LOD.prototype, {\n    objects: {\n      get: function get() {\n        console.warn('THREE.LOD: .objects has been renamed to .levels.');\n        return this.levels;\n      }\n    }\n  });\n  Object.defineProperty(Skeleton.prototype, 'useVertexTexture', {\n    get: function get() {\n      console.warn('THREE.Skeleton: useVertexTexture has been removed.');\n    },\n    set: function set() {\n      console.warn('THREE.Skeleton: useVertexTexture has been removed.');\n    }\n  });\n\n  SkinnedMesh.prototype.initBones = function () {\n    console.error('THREE.SkinnedMesh: initBones() has been removed.');\n  };\n\n  Object.defineProperty(Curve.prototype, '__arcLengthDivisions', {\n    get: function get() {\n      console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n      return this.arcLengthDivisions;\n    },\n    set: function set(value) {\n      console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n      this.arcLengthDivisions = value;\n    }\n  }); //\n\n  PerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n    console.warn('THREE.PerspectiveCamera.setLens is deprecated. ' + 'Use .setFocalLength and .filmGauge for a photographic setup.');\n    if (filmGauge !== undefined) this.filmGauge = filmGauge;\n    this.setFocalLength(focalLength);\n  }; //\n\n\n  Object.defineProperties(Light.prototype, {\n    onlyShadow: {\n      set: function set() {\n        console.warn('THREE.Light: .onlyShadow has been removed.');\n      }\n    },\n    shadowCameraFov: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n        this.shadow.camera.fov = value;\n      }\n    },\n    shadowCameraLeft: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n        this.shadow.camera.left = value;\n      }\n    },\n    shadowCameraRight: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n        this.shadow.camera.right = value;\n      }\n    },\n    shadowCameraTop: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n        this.shadow.camera.top = value;\n      }\n    },\n    shadowCameraBottom: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n        this.shadow.camera.bottom = value;\n      }\n    },\n    shadowCameraNear: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n        this.shadow.camera.near = value;\n      }\n    },\n    shadowCameraFar: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n        this.shadow.camera.far = value;\n      }\n    },\n    shadowCameraVisible: {\n      set: function set() {\n        console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n      }\n    },\n    shadowBias: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n        this.shadow.bias = value;\n      }\n    },\n    shadowDarkness: {\n      set: function set() {\n        console.warn('THREE.Light: .shadowDarkness has been removed.');\n      }\n    },\n    shadowMapWidth: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n        this.shadow.mapSize.width = value;\n      }\n    },\n    shadowMapHeight: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n        this.shadow.mapSize.height = value;\n      }\n    }\n  }); //\n\n  Object.defineProperties(BufferAttribute.prototype, {\n    length: {\n      get: function get() {\n        console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\n        return this.array.length;\n      }\n    },\n    dynamic: {\n      get: function get() {\n        console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n        return this.usage === DynamicDrawUsage;\n      },\n      set: function set()\n      /* value */\n      {\n        console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n        this.setUsage(DynamicDrawUsage);\n      }\n    }\n  });\n  Object.assign(BufferAttribute.prototype, {\n    setDynamic: function setDynamic(value) {\n      console.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');\n      this.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n      return this;\n    },\n    copyIndicesArray: function copyIndicesArray()\n    /* indices */\n    {\n      console.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\n    },\n    setArray: function setArray()\n    /* array */\n    {\n      console.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n    }\n  });\n  Object.assign(BufferGeometry.prototype, {\n    addIndex: function addIndex(index) {\n      console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n      this.setIndex(index);\n    },\n    addAttribute: function addAttribute(name, attribute) {\n      console.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');\n\n      if (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\n        console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n        return this.setAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n      }\n\n      if (name === 'index') {\n        console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n        this.setIndex(attribute);\n        return this;\n      }\n\n      return this.setAttribute(name, attribute);\n    },\n    addDrawCall: function addDrawCall(start, count, indexOffset) {\n      if (indexOffset !== undefined) {\n        console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n      }\n\n      console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n      this.addGroup(start, count);\n    },\n    clearDrawCalls: function clearDrawCalls() {\n      console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n      this.clearGroups();\n    },\n    computeOffsets: function computeOffsets() {\n      console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n    },\n    removeAttribute: function removeAttribute(name) {\n      console.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');\n      return this.deleteAttribute(name);\n    },\n    applyMatrix: function applyMatrix(matrix) {\n      console.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');\n      return this.applyMatrix4(matrix);\n    }\n  });\n  Object.defineProperties(BufferGeometry.prototype, {\n    drawcalls: {\n      get: function get() {\n        console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n        return this.groups;\n      }\n    },\n    offsets: {\n      get: function get() {\n        console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n        return this.groups;\n      }\n    }\n  });\n  Object.defineProperties(InstancedBufferGeometry.prototype, {\n    maxInstancedCount: {\n      get: function get() {\n        console.warn('THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.');\n        return this.instanceCount;\n      },\n      set: function set(value) {\n        console.warn('THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.');\n        this.instanceCount = value;\n      }\n    }\n  });\n  Object.defineProperties(Raycaster.prototype, {\n    linePrecision: {\n      get: function get() {\n        console.warn('THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.');\n        return this.params.Line.threshold;\n      },\n      set: function set(value) {\n        console.warn('THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.');\n        this.params.Line.threshold = value;\n      }\n    }\n  });\n  Object.defineProperties(InterleavedBuffer.prototype, {\n    dynamic: {\n      get: function get() {\n        console.warn('THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.');\n        return this.usage === DynamicDrawUsage;\n      },\n      set: function set(value) {\n        console.warn('THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.');\n        this.setUsage(value);\n      }\n    }\n  });\n  Object.assign(InterleavedBuffer.prototype, {\n    setDynamic: function setDynamic(value) {\n      console.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');\n      this.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n      return this;\n    },\n    setArray: function setArray()\n    /* array */\n    {\n      console.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n    }\n  }); //\n\n  Object.assign(ExtrudeGeometry.prototype, {\n    getArrays: function getArrays() {\n      console.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');\n    },\n    addShapeList: function addShapeList() {\n      console.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');\n    },\n    addShape: function addShape() {\n      console.error('THREE.ExtrudeGeometry: .addShape() has been removed.');\n    }\n  }); //\n\n  Object.assign(Scene.prototype, {\n    dispose: function dispose() {\n      console.error('THREE.Scene: .dispose() has been removed.');\n    }\n  }); //\n\n  Object.defineProperties(Uniform.prototype, {\n    dynamic: {\n      set: function set() {\n        console.warn('THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.');\n      }\n    },\n    onUpdate: {\n      value: function value() {\n        console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n        return this;\n      }\n    }\n  }); //\n\n  Object.defineProperties(Material.prototype, {\n    wrapAround: {\n      get: function get() {\n        console.warn('THREE.Material: .wrapAround has been removed.');\n      },\n      set: function set() {\n        console.warn('THREE.Material: .wrapAround has been removed.');\n      }\n    },\n    overdraw: {\n      get: function get() {\n        console.warn('THREE.Material: .overdraw has been removed.');\n      },\n      set: function set() {\n        console.warn('THREE.Material: .overdraw has been removed.');\n      }\n    },\n    wrapRGB: {\n      get: function get() {\n        console.warn('THREE.Material: .wrapRGB has been removed.');\n        return new Color();\n      }\n    },\n    shading: {\n      get: function get() {\n        console.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n      },\n      set: function set(value) {\n        console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n        this.flatShading = value === FlatShading;\n      }\n    },\n    stencilMask: {\n      get: function get() {\n        console.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n        return this.stencilFuncMask;\n      },\n      set: function set(value) {\n        console.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n        this.stencilFuncMask = value;\n      }\n    }\n  });\n  Object.defineProperties(MeshPhongMaterial.prototype, {\n    metal: {\n      get: function get() {\n        console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.');\n        return false;\n      },\n      set: function set() {\n        console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead');\n      }\n    }\n  });\n  Object.defineProperties(MeshPhysicalMaterial.prototype, {\n    transparency: {\n      get: function get() {\n        console.warn('THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.');\n        return this.transmission;\n      },\n      set: function set(value) {\n        console.warn('THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.');\n        this.transmission = value;\n      }\n    }\n  });\n  Object.defineProperties(ShaderMaterial.prototype, {\n    derivatives: {\n      get: function get() {\n        console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n        return this.extensions.derivatives;\n      },\n      set: function set(value) {\n        console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n        this.extensions.derivatives = value;\n      }\n    }\n  }); //\n\n  Object.assign(WebGLRenderer.prototype, {\n    clearTarget: function clearTarget(renderTarget, color, depth, stencil) {\n      console.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');\n      this.setRenderTarget(renderTarget);\n      this.clear(color, depth, stencil);\n    },\n    animate: function animate(callback) {\n      console.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\n      this.setAnimationLoop(callback);\n    },\n    getCurrentRenderTarget: function getCurrentRenderTarget() {\n      console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\n      return this.getRenderTarget();\n    },\n    getMaxAnisotropy: function getMaxAnisotropy() {\n      console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\n      return this.capabilities.getMaxAnisotropy();\n    },\n    getPrecision: function getPrecision() {\n      console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\n      return this.capabilities.precision;\n    },\n    resetGLState: function resetGLState() {\n      console.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\n      return this.state.reset();\n    },\n    supportsFloatTextures: function supportsFloatTextures() {\n      console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n      return this.extensions.get('OES_texture_float');\n    },\n    supportsHalfFloatTextures: function supportsHalfFloatTextures() {\n      console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n      return this.extensions.get('OES_texture_half_float');\n    },\n    supportsStandardDerivatives: function supportsStandardDerivatives() {\n      console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n      return this.extensions.get('OES_standard_derivatives');\n    },\n    supportsCompressedTextureS3TC: function supportsCompressedTextureS3TC() {\n      console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n      return this.extensions.get('WEBGL_compressed_texture_s3tc');\n    },\n    supportsCompressedTexturePVRTC: function supportsCompressedTexturePVRTC() {\n      console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n      return this.extensions.get('WEBGL_compressed_texture_pvrtc');\n    },\n    supportsBlendMinMax: function supportsBlendMinMax() {\n      console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n      return this.extensions.get('EXT_blend_minmax');\n    },\n    supportsVertexTextures: function supportsVertexTextures() {\n      console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\n      return this.capabilities.vertexTextures;\n    },\n    supportsInstancedArrays: function supportsInstancedArrays() {\n      console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n      return this.extensions.get('ANGLE_instanced_arrays');\n    },\n    enableScissorTest: function enableScissorTest(boolean) {\n      console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n      this.setScissorTest(boolean);\n    },\n    initMaterial: function initMaterial() {\n      console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n    },\n    addPrePlugin: function addPrePlugin() {\n      console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n    },\n    addPostPlugin: function addPostPlugin() {\n      console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n    },\n    updateShadowMap: function updateShadowMap() {\n      console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n    },\n    setFaceCulling: function setFaceCulling() {\n      console.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\n    },\n    allocTextureUnit: function allocTextureUnit() {\n      console.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');\n    },\n    setTexture: function setTexture() {\n      console.warn('THREE.WebGLRenderer: .setTexture() has been removed.');\n    },\n    setTexture2D: function setTexture2D() {\n      console.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');\n    },\n    setTextureCube: function setTextureCube() {\n      console.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');\n    },\n    getActiveMipMapLevel: function getActiveMipMapLevel() {\n      console.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');\n      return this.getActiveMipmapLevel();\n    }\n  });\n  Object.defineProperties(WebGLRenderer.prototype, {\n    shadowMapEnabled: {\n      get: function get() {\n        return this.shadowMap.enabled;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n        this.shadowMap.enabled = value;\n      }\n    },\n    shadowMapType: {\n      get: function get() {\n        return this.shadowMap.type;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n        this.shadowMap.type = value;\n      }\n    },\n    shadowMapCullFace: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function set()\n      /* value */\n      {\n        console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n      }\n    },\n    context: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');\n        return this.getContext();\n      }\n    },\n    vr: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');\n        return this.xr;\n      }\n    },\n    gammaInput: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n        return false;\n      },\n      set: function set() {\n        console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n      }\n    },\n    gammaOutput: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n        return false;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n        this.outputEncoding = value === true ? sRGBEncoding : LinearEncoding;\n      }\n    },\n    toneMappingWhitePoint: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n        return 1.0;\n      },\n      set: function set() {\n        console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n      }\n    }\n  });\n  Object.defineProperties(WebGLShadowMap.prototype, {\n    cullFace: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function set()\n      /* cullFace */\n      {\n        console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n      }\n    },\n    renderReverseSided: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function set() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n      }\n    },\n    renderSingleSided: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function set() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n      }\n    }\n  });\n\n  function WebGLRenderTargetCube(width, height, options) {\n    console.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');\n    return new WebGLCubeRenderTarget(width, options);\n  } //\n\n\n  Object.defineProperties(WebGLRenderTarget.prototype, {\n    wrapS: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n        return this.texture.wrapS;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n        this.texture.wrapS = value;\n      }\n    },\n    wrapT: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n        return this.texture.wrapT;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n        this.texture.wrapT = value;\n      }\n    },\n    magFilter: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n        return this.texture.magFilter;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n        this.texture.magFilter = value;\n      }\n    },\n    minFilter: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n        return this.texture.minFilter;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n        this.texture.minFilter = value;\n      }\n    },\n    anisotropy: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n        return this.texture.anisotropy;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n        this.texture.anisotropy = value;\n      }\n    },\n    offset: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n        return this.texture.offset;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n        this.texture.offset = value;\n      }\n    },\n    repeat: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n        return this.texture.repeat;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n        this.texture.repeat = value;\n      }\n    },\n    format: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n        return this.texture.format;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n        this.texture.format = value;\n      }\n    },\n    type: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n        return this.texture.type;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n        this.texture.type = value;\n      }\n    },\n    generateMipmaps: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n        return this.texture.generateMipmaps;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n        this.texture.generateMipmaps = value;\n      }\n    }\n  }); //\n\n  Object.defineProperties(Audio.prototype, {\n    load: {\n      value: function value(file) {\n        console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\n        var scope = this;\n        var audioLoader = new AudioLoader();\n        audioLoader.load(file, function (buffer) {\n          scope.setBuffer(buffer);\n        });\n        return this;\n      }\n    },\n    startTime: {\n      set: function set() {\n        console.warn('THREE.Audio: .startTime is now .play( delay ).');\n      }\n    }\n  });\n\n  AudioAnalyser.prototype.getData = function () {\n    console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n    return this.getFrequencyData();\n  }; //\n\n\n  CubeCamera.prototype.updateCubeMap = function (renderer, scene) {\n    console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\n    return this.update(renderer, scene);\n  };\n\n  CubeCamera.prototype.clear = function (renderer, color, depth, stencil) {\n    console.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');\n    return this.renderTarget.clear(renderer, color, depth, stencil);\n  }; //\n\n\n  var GeometryUtils = {\n    merge: function merge(geometry1, geometry2, materialIndexOffset) {\n      console.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');\n      var matrix;\n\n      if (geometry2.isMesh) {\n        geometry2.matrixAutoUpdate && geometry2.updateMatrix();\n        matrix = geometry2.matrix;\n        geometry2 = geometry2.geometry;\n      }\n\n      geometry1.merge(geometry2, matrix, materialIndexOffset);\n    },\n    center: function center(geometry) {\n      console.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');\n      return geometry.center();\n    }\n  };\n  ImageUtils.crossOrigin = undefined;\n\n  ImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n    var loader = new TextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(url, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  };\n\n  ImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n    var loader = new CubeTextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(urls, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  };\n\n  ImageUtils.loadCompressedTexture = function () {\n    console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n  };\n\n  ImageUtils.loadCompressedTextureCube = function () {\n    console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n  }; //\n\n\n  function CanvasRenderer() {\n    console.error('THREE.CanvasRenderer has been removed');\n  } //\n\n\n  function JSONLoader() {\n    console.error('THREE.JSONLoader has been removed.');\n  } //\n\n\n  var SceneUtils = {\n    createMultiMaterialObject: function createMultiMaterialObject()\n    /* geometry, materials */\n    {\n      console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n    },\n    detach: function detach()\n    /* child, parent, scene */\n    {\n      console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n    },\n    attach: function attach()\n    /* child, scene, parent */\n    {\n      console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n    }\n  }; //\n\n  function LensFlare() {\n    console.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');\n  }\n\n  if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n    /* eslint-disable no-undef */\n    __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register', {\n      detail: {\n        revision: REVISION\n      }\n    }));\n    /* eslint-enable no-undef */\n\n  }\n\n  if (typeof window !== 'undefined') {\n    if (window.__THREE__) {\n      console.warn('WARNING: Multiple instances of Three.js being imported.');\n    } else {\n      window.__THREE__ = REVISION;\n    }\n  }\n\n  exports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n  exports.AddEquation = AddEquation;\n  exports.AddOperation = AddOperation;\n  exports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\n  exports.AdditiveBlending = AdditiveBlending;\n  exports.AlphaFormat = AlphaFormat;\n  exports.AlwaysDepth = AlwaysDepth;\n  exports.AlwaysStencilFunc = AlwaysStencilFunc;\n  exports.AmbientLight = AmbientLight;\n  exports.AmbientLightProbe = AmbientLightProbe;\n  exports.AnimationClip = AnimationClip;\n  exports.AnimationLoader = AnimationLoader;\n  exports.AnimationMixer = AnimationMixer;\n  exports.AnimationObjectGroup = AnimationObjectGroup;\n  exports.AnimationUtils = AnimationUtils;\n  exports.ArcCurve = ArcCurve;\n  exports.ArrayCamera = ArrayCamera;\n  exports.ArrowHelper = ArrowHelper;\n  exports.Audio = Audio;\n  exports.AudioAnalyser = AudioAnalyser;\n  exports.AudioContext = AudioContext;\n  exports.AudioListener = AudioListener;\n  exports.AudioLoader = AudioLoader;\n  exports.AxesHelper = AxesHelper;\n  exports.AxisHelper = AxisHelper;\n  exports.BackSide = BackSide;\n  exports.BasicDepthPacking = BasicDepthPacking;\n  exports.BasicShadowMap = BasicShadowMap;\n  exports.BinaryTextureLoader = BinaryTextureLoader;\n  exports.Bone = Bone;\n  exports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n  exports.BoundingBoxHelper = BoundingBoxHelper;\n  exports.Box2 = Box2;\n  exports.Box3 = Box3;\n  exports.Box3Helper = Box3Helper;\n  exports.BoxBufferGeometry = BoxGeometry;\n  exports.BoxGeometry = BoxGeometry;\n  exports.BoxHelper = BoxHelper;\n  exports.BufferAttribute = BufferAttribute;\n  exports.BufferGeometry = BufferGeometry;\n  exports.BufferGeometryLoader = BufferGeometryLoader;\n  exports.ByteType = ByteType;\n  exports.Cache = Cache;\n  exports.Camera = Camera;\n  exports.CameraHelper = CameraHelper;\n  exports.CanvasRenderer = CanvasRenderer;\n  exports.CanvasTexture = CanvasTexture;\n  exports.CatmullRomCurve3 = CatmullRomCurve3;\n  exports.CineonToneMapping = CineonToneMapping;\n  exports.CircleBufferGeometry = CircleGeometry;\n  exports.CircleGeometry = CircleGeometry;\n  exports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n  exports.Clock = Clock;\n  exports.ClosedSplineCurve3 = ClosedSplineCurve3;\n  exports.Color = Color;\n  exports.ColorKeyframeTrack = ColorKeyframeTrack;\n  exports.CompressedTexture = CompressedTexture;\n  exports.CompressedTextureLoader = CompressedTextureLoader;\n  exports.ConeBufferGeometry = ConeGeometry;\n  exports.ConeGeometry = ConeGeometry;\n  exports.CubeCamera = CubeCamera;\n  exports.CubeReflectionMapping = CubeReflectionMapping;\n  exports.CubeRefractionMapping = CubeRefractionMapping;\n  exports.CubeTexture = CubeTexture;\n  exports.CubeTextureLoader = CubeTextureLoader;\n  exports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n  exports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n  exports.CubicBezierCurve = CubicBezierCurve;\n  exports.CubicBezierCurve3 = CubicBezierCurve3;\n  exports.CubicInterpolant = CubicInterpolant;\n  exports.CullFaceBack = CullFaceBack;\n  exports.CullFaceFront = CullFaceFront;\n  exports.CullFaceFrontBack = CullFaceFrontBack;\n  exports.CullFaceNone = CullFaceNone;\n  exports.Curve = Curve;\n  exports.CurvePath = CurvePath;\n  exports.CustomBlending = CustomBlending;\n  exports.CustomToneMapping = CustomToneMapping;\n  exports.CylinderBufferGeometry = CylinderGeometry;\n  exports.CylinderGeometry = CylinderGeometry;\n  exports.Cylindrical = Cylindrical;\n  exports.DataTexture = DataTexture;\n  exports.DataTexture2DArray = DataTexture2DArray;\n  exports.DataTexture3D = DataTexture3D;\n  exports.DataTextureLoader = DataTextureLoader;\n  exports.DataUtils = DataUtils;\n  exports.DecrementStencilOp = DecrementStencilOp;\n  exports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n  exports.DefaultLoadingManager = DefaultLoadingManager;\n  exports.DepthFormat = DepthFormat;\n  exports.DepthStencilFormat = DepthStencilFormat;\n  exports.DepthTexture = DepthTexture;\n  exports.DirectionalLight = DirectionalLight;\n  exports.DirectionalLightHelper = DirectionalLightHelper;\n  exports.DiscreteInterpolant = DiscreteInterpolant;\n  exports.DodecahedronBufferGeometry = DodecahedronGeometry;\n  exports.DodecahedronGeometry = DodecahedronGeometry;\n  exports.DoubleSide = DoubleSide;\n  exports.DstAlphaFactor = DstAlphaFactor;\n  exports.DstColorFactor = DstColorFactor;\n  exports.DynamicBufferAttribute = DynamicBufferAttribute;\n  exports.DynamicCopyUsage = DynamicCopyUsage;\n  exports.DynamicDrawUsage = DynamicDrawUsage;\n  exports.DynamicReadUsage = DynamicReadUsage;\n  exports.EdgesGeometry = EdgesGeometry;\n  exports.EdgesHelper = EdgesHelper;\n  exports.EllipseCurve = EllipseCurve;\n  exports.EqualDepth = EqualDepth;\n  exports.EqualStencilFunc = EqualStencilFunc;\n  exports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n  exports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n  exports.Euler = Euler;\n  exports.EventDispatcher = EventDispatcher;\n  exports.ExtrudeBufferGeometry = ExtrudeGeometry;\n  exports.ExtrudeGeometry = ExtrudeGeometry;\n  exports.Face3 = Face3;\n  exports.Face4 = Face4;\n  exports.FaceColors = FaceColors;\n  exports.FileLoader = FileLoader;\n  exports.FlatShading = FlatShading;\n  exports.Float16BufferAttribute = Float16BufferAttribute;\n  exports.Float32Attribute = Float32Attribute;\n  exports.Float32BufferAttribute = Float32BufferAttribute;\n  exports.Float64Attribute = Float64Attribute;\n  exports.Float64BufferAttribute = Float64BufferAttribute;\n  exports.FloatType = FloatType;\n  exports.Fog = Fog;\n  exports.FogExp2 = FogExp2;\n  exports.Font = Font;\n  exports.FontLoader = FontLoader;\n  exports.FrontSide = FrontSide;\n  exports.Frustum = Frustum;\n  exports.GLBufferAttribute = GLBufferAttribute;\n  exports.GLSL1 = GLSL1;\n  exports.GLSL3 = GLSL3;\n  exports.GammaEncoding = GammaEncoding;\n  exports.GeometryUtils = GeometryUtils;\n  exports.GreaterDepth = GreaterDepth;\n  exports.GreaterEqualDepth = GreaterEqualDepth;\n  exports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n  exports.GreaterStencilFunc = GreaterStencilFunc;\n  exports.GridHelper = GridHelper;\n  exports.Group = Group;\n  exports.HalfFloatType = HalfFloatType;\n  exports.HemisphereLight = HemisphereLight;\n  exports.HemisphereLightHelper = HemisphereLightHelper;\n  exports.HemisphereLightProbe = HemisphereLightProbe;\n  exports.IcosahedronBufferGeometry = IcosahedronGeometry;\n  exports.IcosahedronGeometry = IcosahedronGeometry;\n  exports.ImageBitmapLoader = ImageBitmapLoader;\n  exports.ImageLoader = ImageLoader;\n  exports.ImageUtils = ImageUtils;\n  exports.ImmediateRenderObject = ImmediateRenderObject;\n  exports.IncrementStencilOp = IncrementStencilOp;\n  exports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n  exports.InstancedBufferAttribute = InstancedBufferAttribute;\n  exports.InstancedBufferGeometry = InstancedBufferGeometry;\n  exports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n  exports.InstancedMesh = InstancedMesh;\n  exports.Int16Attribute = Int16Attribute;\n  exports.Int16BufferAttribute = Int16BufferAttribute;\n  exports.Int32Attribute = Int32Attribute;\n  exports.Int32BufferAttribute = Int32BufferAttribute;\n  exports.Int8Attribute = Int8Attribute;\n  exports.Int8BufferAttribute = Int8BufferAttribute;\n  exports.IntType = IntType;\n  exports.InterleavedBuffer = InterleavedBuffer;\n  exports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n  exports.Interpolant = Interpolant;\n  exports.InterpolateDiscrete = InterpolateDiscrete;\n  exports.InterpolateLinear = InterpolateLinear;\n  exports.InterpolateSmooth = InterpolateSmooth;\n  exports.InvertStencilOp = InvertStencilOp;\n  exports.JSONLoader = JSONLoader;\n  exports.KeepStencilOp = KeepStencilOp;\n  exports.KeyframeTrack = KeyframeTrack;\n  exports.LOD = LOD;\n  exports.LatheBufferGeometry = LatheGeometry;\n  exports.LatheGeometry = LatheGeometry;\n  exports.Layers = Layers;\n  exports.LensFlare = LensFlare;\n  exports.LessDepth = LessDepth;\n  exports.LessEqualDepth = LessEqualDepth;\n  exports.LessEqualStencilFunc = LessEqualStencilFunc;\n  exports.LessStencilFunc = LessStencilFunc;\n  exports.Light = Light;\n  exports.LightProbe = LightProbe;\n  exports.Line = Line;\n  exports.Line3 = Line3;\n  exports.LineBasicMaterial = LineBasicMaterial;\n  exports.LineCurve = LineCurve;\n  exports.LineCurve3 = LineCurve3;\n  exports.LineDashedMaterial = LineDashedMaterial;\n  exports.LineLoop = LineLoop;\n  exports.LinePieces = LinePieces;\n  exports.LineSegments = LineSegments;\n  exports.LineStrip = LineStrip;\n  exports.LinearEncoding = LinearEncoding;\n  exports.LinearFilter = LinearFilter;\n  exports.LinearInterpolant = LinearInterpolant;\n  exports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n  exports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n  exports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n  exports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n  exports.LinearToneMapping = LinearToneMapping;\n  exports.Loader = Loader;\n  exports.LoaderUtils = LoaderUtils;\n  exports.LoadingManager = LoadingManager;\n  exports.LogLuvEncoding = LogLuvEncoding;\n  exports.LoopOnce = LoopOnce;\n  exports.LoopPingPong = LoopPingPong;\n  exports.LoopRepeat = LoopRepeat;\n  exports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n  exports.LuminanceFormat = LuminanceFormat;\n  exports.MOUSE = MOUSE;\n  exports.Material = Material;\n  exports.MaterialLoader = MaterialLoader;\n  exports.Math = MathUtils;\n  exports.MathUtils = MathUtils;\n  exports.Matrix3 = Matrix3;\n  exports.Matrix4 = Matrix4;\n  exports.MaxEquation = MaxEquation;\n  exports.Mesh = Mesh;\n  exports.MeshBasicMaterial = MeshBasicMaterial;\n  exports.MeshDepthMaterial = MeshDepthMaterial;\n  exports.MeshDistanceMaterial = MeshDistanceMaterial;\n  exports.MeshFaceMaterial = MeshFaceMaterial;\n  exports.MeshLambertMaterial = MeshLambertMaterial;\n  exports.MeshMatcapMaterial = MeshMatcapMaterial;\n  exports.MeshNormalMaterial = MeshNormalMaterial;\n  exports.MeshPhongMaterial = MeshPhongMaterial;\n  exports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n  exports.MeshStandardMaterial = MeshStandardMaterial;\n  exports.MeshToonMaterial = MeshToonMaterial;\n  exports.MinEquation = MinEquation;\n  exports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n  exports.MixOperation = MixOperation;\n  exports.MultiMaterial = MultiMaterial;\n  exports.MultiplyBlending = MultiplyBlending;\n  exports.MultiplyOperation = MultiplyOperation;\n  exports.NearestFilter = NearestFilter;\n  exports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n  exports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n  exports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n  exports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n  exports.NeverDepth = NeverDepth;\n  exports.NeverStencilFunc = NeverStencilFunc;\n  exports.NoBlending = NoBlending;\n  exports.NoColors = NoColors;\n  exports.NoToneMapping = NoToneMapping;\n  exports.NormalAnimationBlendMode = NormalAnimationBlendMode;\n  exports.NormalBlending = NormalBlending;\n  exports.NotEqualDepth = NotEqualDepth;\n  exports.NotEqualStencilFunc = NotEqualStencilFunc;\n  exports.NumberKeyframeTrack = NumberKeyframeTrack;\n  exports.Object3D = Object3D;\n  exports.ObjectLoader = ObjectLoader;\n  exports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n  exports.OctahedronBufferGeometry = OctahedronGeometry;\n  exports.OctahedronGeometry = OctahedronGeometry;\n  exports.OneFactor = OneFactor;\n  exports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n  exports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n  exports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n  exports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n  exports.OrthographicCamera = OrthographicCamera;\n  exports.PCFShadowMap = PCFShadowMap;\n  exports.PCFSoftShadowMap = PCFSoftShadowMap;\n  exports.PMREMGenerator = PMREMGenerator;\n  exports.ParametricBufferGeometry = ParametricGeometry;\n  exports.ParametricGeometry = ParametricGeometry;\n  exports.Particle = Particle;\n  exports.ParticleBasicMaterial = ParticleBasicMaterial;\n  exports.ParticleSystem = ParticleSystem;\n  exports.ParticleSystemMaterial = ParticleSystemMaterial;\n  exports.Path = Path;\n  exports.PerspectiveCamera = PerspectiveCamera;\n  exports.Plane = Plane;\n  exports.PlaneBufferGeometry = PlaneGeometry;\n  exports.PlaneGeometry = PlaneGeometry;\n  exports.PlaneHelper = PlaneHelper;\n  exports.PointCloud = PointCloud;\n  exports.PointCloudMaterial = PointCloudMaterial;\n  exports.PointLight = PointLight;\n  exports.PointLightHelper = PointLightHelper;\n  exports.Points = Points;\n  exports.PointsMaterial = PointsMaterial;\n  exports.PolarGridHelper = PolarGridHelper;\n  exports.PolyhedronBufferGeometry = PolyhedronGeometry;\n  exports.PolyhedronGeometry = PolyhedronGeometry;\n  exports.PositionalAudio = PositionalAudio;\n  exports.PropertyBinding = PropertyBinding;\n  exports.PropertyMixer = PropertyMixer;\n  exports.QuadraticBezierCurve = QuadraticBezierCurve;\n  exports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n  exports.Quaternion = Quaternion;\n  exports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n  exports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n  exports.REVISION = REVISION;\n  exports.RGBADepthPacking = RGBADepthPacking;\n  exports.RGBAFormat = RGBAFormat;\n  exports.RGBAIntegerFormat = RGBAIntegerFormat;\n  exports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n  exports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n  exports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n  exports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n  exports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n  exports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n  exports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n  exports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n  exports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n  exports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n  exports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n  exports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n  exports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n  exports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n  exports.RGBA_BPTC_Format = RGBA_BPTC_Format;\n  exports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\n  exports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n  exports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n  exports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n  exports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n  exports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n  exports.RGBDEncoding = RGBDEncoding;\n  exports.RGBEEncoding = RGBEEncoding;\n  exports.RGBEFormat = RGBEFormat;\n  exports.RGBFormat = RGBFormat;\n  exports.RGBIntegerFormat = RGBIntegerFormat;\n  exports.RGBM16Encoding = RGBM16Encoding;\n  exports.RGBM7Encoding = RGBM7Encoding;\n  exports.RGB_ETC1_Format = RGB_ETC1_Format;\n  exports.RGB_ETC2_Format = RGB_ETC2_Format;\n  exports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n  exports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n  exports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n  exports.RGFormat = RGFormat;\n  exports.RGIntegerFormat = RGIntegerFormat;\n  exports.RawShaderMaterial = RawShaderMaterial;\n  exports.Ray = Ray;\n  exports.Raycaster = Raycaster;\n  exports.RectAreaLight = RectAreaLight;\n  exports.RedFormat = RedFormat;\n  exports.RedIntegerFormat = RedIntegerFormat;\n  exports.ReinhardToneMapping = ReinhardToneMapping;\n  exports.RepeatWrapping = RepeatWrapping;\n  exports.ReplaceStencilOp = ReplaceStencilOp;\n  exports.ReverseSubtractEquation = ReverseSubtractEquation;\n  exports.RingBufferGeometry = RingGeometry;\n  exports.RingGeometry = RingGeometry;\n  exports.SRGB8_ALPHA8_ASTC_10x10_Format = SRGB8_ALPHA8_ASTC_10x10_Format;\n  exports.SRGB8_ALPHA8_ASTC_10x5_Format = SRGB8_ALPHA8_ASTC_10x5_Format;\n  exports.SRGB8_ALPHA8_ASTC_10x6_Format = SRGB8_ALPHA8_ASTC_10x6_Format;\n  exports.SRGB8_ALPHA8_ASTC_10x8_Format = SRGB8_ALPHA8_ASTC_10x8_Format;\n  exports.SRGB8_ALPHA8_ASTC_12x10_Format = SRGB8_ALPHA8_ASTC_12x10_Format;\n  exports.SRGB8_ALPHA8_ASTC_12x12_Format = SRGB8_ALPHA8_ASTC_12x12_Format;\n  exports.SRGB8_ALPHA8_ASTC_4x4_Format = SRGB8_ALPHA8_ASTC_4x4_Format;\n  exports.SRGB8_ALPHA8_ASTC_5x4_Format = SRGB8_ALPHA8_ASTC_5x4_Format;\n  exports.SRGB8_ALPHA8_ASTC_5x5_Format = SRGB8_ALPHA8_ASTC_5x5_Format;\n  exports.SRGB8_ALPHA8_ASTC_6x5_Format = SRGB8_ALPHA8_ASTC_6x5_Format;\n  exports.SRGB8_ALPHA8_ASTC_6x6_Format = SRGB8_ALPHA8_ASTC_6x6_Format;\n  exports.SRGB8_ALPHA8_ASTC_8x5_Format = SRGB8_ALPHA8_ASTC_8x5_Format;\n  exports.SRGB8_ALPHA8_ASTC_8x6_Format = SRGB8_ALPHA8_ASTC_8x6_Format;\n  exports.SRGB8_ALPHA8_ASTC_8x8_Format = SRGB8_ALPHA8_ASTC_8x8_Format;\n  exports.Scene = Scene;\n  exports.SceneUtils = SceneUtils;\n  exports.ShaderChunk = ShaderChunk;\n  exports.ShaderLib = ShaderLib;\n  exports.ShaderMaterial = ShaderMaterial;\n  exports.ShadowMaterial = ShadowMaterial;\n  exports.Shape = Shape;\n  exports.ShapeBufferGeometry = ShapeGeometry;\n  exports.ShapeGeometry = ShapeGeometry;\n  exports.ShapePath = ShapePath;\n  exports.ShapeUtils = ShapeUtils;\n  exports.ShortType = ShortType;\n  exports.Skeleton = Skeleton;\n  exports.SkeletonHelper = SkeletonHelper;\n  exports.SkinnedMesh = SkinnedMesh;\n  exports.SmoothShading = SmoothShading;\n  exports.Sphere = Sphere;\n  exports.SphereBufferGeometry = SphereGeometry;\n  exports.SphereGeometry = SphereGeometry;\n  exports.Spherical = Spherical;\n  exports.SphericalHarmonics3 = SphericalHarmonics3;\n  exports.Spline = Spline;\n  exports.SplineCurve = SplineCurve;\n  exports.SplineCurve3 = SplineCurve3;\n  exports.SpotLight = SpotLight;\n  exports.SpotLightHelper = SpotLightHelper;\n  exports.Sprite = Sprite;\n  exports.SpriteMaterial = SpriteMaterial;\n  exports.SrcAlphaFactor = SrcAlphaFactor;\n  exports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n  exports.SrcColorFactor = SrcColorFactor;\n  exports.StaticCopyUsage = StaticCopyUsage;\n  exports.StaticDrawUsage = StaticDrawUsage;\n  exports.StaticReadUsage = StaticReadUsage;\n  exports.StereoCamera = StereoCamera;\n  exports.StreamCopyUsage = StreamCopyUsage;\n  exports.StreamDrawUsage = StreamDrawUsage;\n  exports.StreamReadUsage = StreamReadUsage;\n  exports.StringKeyframeTrack = StringKeyframeTrack;\n  exports.SubtractEquation = SubtractEquation;\n  exports.SubtractiveBlending = SubtractiveBlending;\n  exports.TOUCH = TOUCH;\n  exports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n  exports.TetrahedronBufferGeometry = TetrahedronGeometry;\n  exports.TetrahedronGeometry = TetrahedronGeometry;\n  exports.TextBufferGeometry = TextGeometry;\n  exports.TextGeometry = TextGeometry;\n  exports.Texture = Texture;\n  exports.TextureLoader = TextureLoader;\n  exports.TorusBufferGeometry = TorusGeometry;\n  exports.TorusGeometry = TorusGeometry;\n  exports.TorusKnotBufferGeometry = TorusKnotGeometry;\n  exports.TorusKnotGeometry = TorusKnotGeometry;\n  exports.Triangle = Triangle;\n  exports.TriangleFanDrawMode = TriangleFanDrawMode;\n  exports.TriangleStripDrawMode = TriangleStripDrawMode;\n  exports.TrianglesDrawMode = TrianglesDrawMode;\n  exports.TubeBufferGeometry = TubeGeometry;\n  exports.TubeGeometry = TubeGeometry;\n  exports.UVMapping = UVMapping;\n  exports.Uint16Attribute = Uint16Attribute;\n  exports.Uint16BufferAttribute = Uint16BufferAttribute;\n  exports.Uint32Attribute = Uint32Attribute;\n  exports.Uint32BufferAttribute = Uint32BufferAttribute;\n  exports.Uint8Attribute = Uint8Attribute;\n  exports.Uint8BufferAttribute = Uint8BufferAttribute;\n  exports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n  exports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n  exports.Uniform = Uniform;\n  exports.UniformsLib = UniformsLib;\n  exports.UniformsUtils = UniformsUtils;\n  exports.UnsignedByteType = UnsignedByteType;\n  exports.UnsignedInt248Type = UnsignedInt248Type;\n  exports.UnsignedIntType = UnsignedIntType;\n  exports.UnsignedShort4444Type = UnsignedShort4444Type;\n  exports.UnsignedShort5551Type = UnsignedShort5551Type;\n  exports.UnsignedShort565Type = UnsignedShort565Type;\n  exports.UnsignedShortType = UnsignedShortType;\n  exports.VSMShadowMap = VSMShadowMap;\n  exports.Vector2 = Vector2;\n  exports.Vector3 = Vector3;\n  exports.Vector4 = Vector4;\n  exports.VectorKeyframeTrack = VectorKeyframeTrack;\n  exports.Vertex = Vertex;\n  exports.VertexColors = VertexColors;\n  exports.VideoTexture = VideoTexture;\n  exports.WebGL1Renderer = WebGL1Renderer;\n  exports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\n  exports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n  exports.WebGLRenderTarget = WebGLRenderTarget;\n  exports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n  exports.WebGLRenderer = WebGLRenderer;\n  exports.WebGLUtils = WebGLUtils;\n  exports.WireframeGeometry = WireframeGeometry;\n  exports.WireframeHelper = WireframeHelper;\n  exports.WrapAroundEnding = WrapAroundEnding;\n  exports.XHRLoader = XHRLoader;\n  exports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n  exports.ZeroFactor = ZeroFactor;\n  exports.ZeroSlopeEnding = ZeroSlopeEnding;\n  exports.ZeroStencilOp = ZeroStencilOp;\n  exports.sRGBEncoding = sRGBEncoding;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["C:/Users/Rod/Desktop/TetrisBall/src/three.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","THREE","Number","EPSILON","undefined","Math","pow","isInteger","value","isFinite","floor","sign","x","Function","prototype","Object","defineProperty","get","toString","match","assign","target","TypeError","output","index","arguments","length","source","nextKey","hasOwnProperty","call","runtime","Op","hasOwn","undefined$1","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","obj","key","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","type","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","constructor","displayName","defineIteratorMethods","forEach","method","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","then","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","iter","next","done","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","keys","object","reverse","pop","iterable","iteratorMethod","isNaN","i","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","apply","_defineProperties","props","descriptor","_createClass","Constructor","protoProps","staticProps","_inheritsLoose","subClass","superClass","_assertThisInitialized","ReferenceError","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","isArray","bind","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","l","_lut","_seed","MathUtils","DEG2RAD","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toUpperCase","clamp","min","max","euclideanModulo","m","mapLinear","a1","a2","b1","b2","lerp","y","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","seededRandom","s","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","Vector2","_proto","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","w","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","rotate","theta","translate","matrix","_canvas","ImageUtils","getDataURL","image","src","HTMLCanvasElement","canvas","document","createElementNS","width","height","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","DEFAULT_IMAGE","DEFAULT_MAPPING","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","images","url","isDataTexture","serializeImage","dispose","transformUv","uv","HTMLImageElement","ImageBitmap","data","Vector4","z","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","WebGLRenderTarget","_EventDispatcher","options","_this","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","setSize","WebGLMultisampleRenderTarget","_WebGLRenderTarget","samples","Quaternion","_x","_y","_z","_w","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","tDir","multiplyQuaternionsFlat","_onChangeCallback","quaternion","setFromEuler","euler","update","isEuler","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","_s","_s2","_s3","setFromUnitVectors","vFrom","vTo","EPS","angleTo","rotateTowards","step","conjugate","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","_onChange","callback","Vector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","Box3","Infinity","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","count","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","_vector$1","setFromObject","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0","_v1","_v2","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","clampedPoint","getBoundingSphere","intersect","_points","v0","extents","j","_testAxis","p0","p1","p2","_box$1","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","_vector$2","_segCenter","_segDir","_diff","_edge1","_edge2","_normal","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$1","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","_ce","_cf","_de","_df","_ae","_af","_be","_bf","ac","ad","bc","bd","_ac","_ad","_bc","_bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","isVector3","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","position","x2","y2","z2","wx","wy","wz","decompose","_m1","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","Euler","DefaultOrder","asin","setFromQuaternion","_matrix","setFromVector3","reorder","newOrder","_quaternion$1","toVector3","optionalResult","RotationOrders","Layers","mask","channel","enable","enableAll","toggle","disable","disableAll","layers","_object3DId","_v1$2","_q1","_m1$1","_target","_position","_scale","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","isObject3D","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","remove","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","JSON","stringify","isInstancedMesh","instanceMatrix","serialize","library","element","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","_i","_l","_i2","_i3","animation","extractFromCache","_shapes","cache","recursive","parse","_vector1","_vector2","_normalMatrix","Plane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","delta","start","intersectsLine","startSign","endSign","end","coplanarPoint","optionalNormalMatrix","referencePoint","_v0$1","_v1$3","_v2$1","_v3","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","getUV","p3","uv1","uv2","uv3","isFrontFacing","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","d4","vc","d5","d6","vb","va","_colorKeywords","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","isColor","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","color","components","parseInt","setColorName","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","normalized","NAMES","Face3","materialIndex","vertexNormals","vertexColors","_il","materialId","Material","fog","blending","side","flatShading","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","toneMapped","isMaterial","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","isRoot","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","reflectivity","refractionRatio","combine","envMapIntensity","gradientMap","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","morphNormals","skinning","_data","srcPlanes","dstPlanes","MeshBasicMaterial","lightMapIntensity","isMeshBasicMaterial","_vector$3","_vector2$1","BufferAttribute","itemSize","usage","updateRange","isBufferAttribute","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZ","setXYZW","onUpload","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","arrayMax","TYPED_ARRAYS","getTypedArray","buffer","_id","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$4","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","isBufferGeometry","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","clearGroups","setDrawRange","needsUpdate","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","_il2","_morphAttribute","jl","computeFaceNormals","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","group","tmp2","n2","handleVertex","_i4","_il3","_group","_start","_count","_j","_jl","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","_i5","_il4","_i6","_il5","normalizeNormals","merge","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","_name","morphArray","_attribute","_newAttribute","_i7","_key","attributeData","hasMorphAttributes","_key2","attributeArray","_attribute2","_attributeData","_name2","_i8","_inverseMatrix","_ray","_sphere","_vA","_vB","_vC","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA","_uvB","_uvC","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","raycaster","intersects","intersection","morphPosition","groupMaterial","checkBufferGeometryIntersection","faceIndex","face","_end","_a","_b","_c","_groupMaterial","_start2","_end2","_a2","_b2","_c2","_start3","_end3","_a3","_b3","_c3","isGeometry","checkIntersection","morphInfluences","influence","boneTransform","BoxGeometry","_BufferGeometry","depth","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","_iy","_ix","cloneUniforms","property","isMatrix3","isMatrix4","isVector2","isVector4","mergeUniforms","uniforms","merged","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","isShaderMaterial","uniform","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","skew","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","_needsFlipEnvMap","isCubeTexture","WebGLCubeRenderTarget","dummy","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","DataTexture","_sphere$1","_vector$5","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","isInterleavedBufferAttribute","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmissionmap_fragment","transmissionmap_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderChunk","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","background","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","transmission","transmissionMap","WebGLBackground","cubemaps","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","isScene","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","_extension","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","stride","vertexAttribIPointer","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","isInstancedBufferAttribute","_buffer","_type","instanceColor","_buffer2","_type2","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","has","cubemap","currentRenderList","getRenderList","setRenderList","onTextureDispose","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","_array","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","sort","MAX_SAFE_INTEGER","morphInfluencesSum","_influence","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DataTexture2DArray","wrapR","isDataTexture2DArray","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","unit","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","getSingularSetter","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","updateCache","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","addLineNumbers","split","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","getShaderInfoLog","trim","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","WebGLProgram","cacheKey","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexUvs","uvsVertexOnly","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getMaxBones","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","isWebGLRenderTarget","getParameters","shadows","environment","isMeshStandardMaterial","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","cameras","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","_uniforms","penumbra","_shadow","_shadowUniforms","isRectAreaLight","_uniforms2","isPointLight","_uniforms3","_shadow2","_shadowUniforms2","isHemisphereLight","_uniforms4","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","_uniforms5","_uniforms6","_uniforms7","_uniforms8","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderCallDepth","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vsm_frag","vsm_vert","WebGLShadowMap","_renderer","_objects","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","mapPass","_pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","renderObject","VSMPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","getDistanceMaterialVariant","getDepthMaterial","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","_depthMaterial","WebGLState","_equationToGL","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","enabledCapabilities","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","texImage3D","WebGLTextures","_gl","utils","_wrappingToGL","_filterToGL","_videoTextures","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","textureProperties","__maxMipLevel","LOG2E","getInternalFormat","internalFormatName","glFormat","glType","filterFallback","deallocateTexture","isVideoTexture","onRenderTargetDispose","deallocateRenderTarget","__webglInit","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","textureUnits","resetTextureUnits","textureUnit","setTexture2D","slot","updateVideoTexture","__version","uploadTexture","setTextureCube","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","pixelStorei","convert","glInternalFormat","mipmap","isDepthTexture","isCompressedTexture","isCompressed","cubeImage","_mipmap","mipmapImage","_j2","_mipmap2","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","_samples","_glInternalFormat","_samples2","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isWebGLMultisampleRenderTarget","createFramebuffer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","warnedTexture2D","warnedTextureCube","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","isArrayCamera","Group","isGroup","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","getGripSpace","disconnect","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","_iterator","_step","inputjoint","jointPose","getJointPose","jointName","_joint","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","getPose","targetRaySpace","gripSpace","WebXRManager","framebufferScaleFactor","referenceSpaceType","pose","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","onSessionEnd","setFramebuffer","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","_ref","_callee","layerInit","baseLayer","_callee$","_context","onInputSourcesChange","getContextAttributes","xrCompatible","makeXRCompatible","antialias","XRWebGLLayer","updateRenderState","requestReferenceSpace","inputSources","removed","added","_inputSource","_controller","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","getCamera","depthNear","depthFar","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","refreshUniformsCommon","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","createCanvasElement","display","WebGLRenderer","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderState","renderStateStack","domElement","sortObjects","toneMappingExposure","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","programInfo","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","compiled","material2","initMaterial","window","projectObject","opaqueObjects","transparentObjects","renderObjects","isLOD","isImmediateRenderObject","_geometry","_material","camera2","lightsStateVersion","programCacheKey","programChange","needsLights","materialNeedsLights","progUniforms","uniformsList","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","readRenderTargetPixels","activeCubeFaceIndex","restore","textureFormat","halfFloatSupportedByExt","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","FogExp2","Fog","Scene","_Object3D","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA$1","_vB$1","_vC$1","_uvA$1","_uvB$1","_uvC$1","Sprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$4","_v2$2","LOD","_currentLevel","levels","addLevel","getCurrentLevel","getObjectForDistance","_basePosition","_skinIndex","_skinWeight","_vector$7","_matrix$1","SkinnedMesh","bindMatrixInverse","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","boneInverses","Bone","isBone","_offsetMatrix","_identityMatrix","Skeleton","inverse","bone","_bone","getBoneByName","fromJSON","json","boneInverse","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","setMatrixAt","linecap","linejoin","_inverseMatrix$1","_ray$1","_sphere$2","Line","computeLineDistances","lineDistances","params","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_distSq","_distance","_start$1","_end$1","LineSegments","LineLoop","_inverseMatrix$2","_ray$2","_sphere$3","_position$1","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","isCanvasTexture","DepthTexture","CircleGeometry","segments","thetaStart","thetaLength","vertex","segment","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","_x2","_x3","ConeGeometry","_CylinderGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","DodecahedronGeometry","_PolyhedronGeometry","_v0$2","_v1$5","_normal$1","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","invSize","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","px","py","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","sum","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","hl","ahole","_h","_hl","_ahole","concat","scalePt2","pt","vec","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","_h2","_hl2","_ahole2","_k","_bs","vert","_h3","_hl3","_ahole3","_vert","bs","_vert2","binormals","_vert3","_t","_bs2","_vert4","_h4","_hl4","_ahole4","_vert5","buildLidFaces","buildSideFaces","layer","_i9","f3","_i10","_face","_i11","_face2","_i12","_face3","layeroffset","sidewalls","_h5","_hl5","_ahole5","_k2","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","_toJSON","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","LatheGeometry","phiStart","phiLength","inverseSegments","base","n1","_base","OctahedronGeometry","ParametricGeometry","func","slices","stacks","pu","pv","sliceCount","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","_segment","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","_shapeHole","_l2","_l3","_toJSON$1","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TextGeometry","_ExtrudeGeometry","text","font","isFont","generateShapes","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","closed","frames","P","generateBufferData","generateSegment","generateIndices","getPointAt","WireframeGeometry","edge","edges","ol","edge1","edge2","Geometries","freeze","BoxBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","ExtrudeBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","ParametricBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","ShapeBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","TextBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TubeBufferGeometry","RawShaderMaterial","ior","Materials","AnimationUtils","arraySlice","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","_startIndex","_endIndex","interpolant","_startIndex2","_endIndex2","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","_giveUpAt","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","getInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","_readOffset","_writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","getTrackTypeForValueTypeName","typeName","toLowerCase","parseKeyframeTrack","jsonTracks","frameTime","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","morphTarget","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","_m","animationKey","boneName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","FileLoader","setTimeout","dataUriRegex","dataUriRegexResult","request","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","XMLHttpRequest","open","callbacks","_callback","overrideMimeType","header","send","setResponseType","setMimeType","AnimationLoader","CompressedTextureLoader","loaded","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","onImageError","substr","CubeTextureLoader","urls","DataTextureLoader","texData","TextureLoader","isJPEG","search","Curve","arcLengthDivisions","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","_theta","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","getPointsHoles","holesPts","Light","HemisphereLight","LightShadow","_frameExtents","_viewportCount","_viewports","_lightPositionWorld","_lookTarget","shadowMatrix","projScreenMatrix","lookTarget","lightPositionWorld","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","scaleW","scaleH","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","MaterialLoader","getTexture","shading","setTextures","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","arrayBuffer","typedArray","bufferAttribute","_typedArray","bufferAttributeConstr","_bufferAttribute","_interleavedBuffer","_typedArray2","drawcalls","offsets","ObjectLoader","_Loader","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","geometryShapes","bufferGeometryLoader","details","_shape","loadImage","deserializeImage","currentUrl","deserializedImage","_deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","objectAnimations","setTexturePath","ImageBitmapLoader","createImageBitmap","fetch","isImageBitmapLoader","setOptions","fetchOptions","credentials","res","blob","imageBitmap","catch","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","_tmpPath","_tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","tmpPath","tmpShape","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","_sIdx","_sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","Font","paths","createPaths","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","glyph","glyphs","familyName","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","ha","FontLoader","substring","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","sky","ground","isHemisphereLightProbe","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$2","_quaternion$3","_scale$1","_orientation","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position$3","_quaternion$4","_scale$2","_orientation$1","PositionalAudio","_Audio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","getValue_direct","getValue_array","resolvedProperty","getValue_arrayElement","getValue_toArray","SetterByBindingTypeAndVersioning","setValue_direct","targetObject","setValue_direct_setNeedsUpdate","setValue_direct_setMatrixWorldNeedsUpdate","setValue_array","dest","setValue_array_setNeedsUpdate","setValue_array_setMatrixWorldNeedsUpdate","setValue_arrayElement","setValue_arrayElement_setNeedsUpdate","setValue_arrayElement_setMatrixWorldNeedsUpdate","setValue_fromArray","setValue_fromArray_setNeedsUpdate","setValue_fromArray_setMatrixWorldNeedsUpdate","getValue_unbound","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","indicesByUUID","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","_lastIndex","_lastObject","_m2","_bindingsForPath","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","PointCloud","ascSort","_intersectObject","setFromCamera","coords","intersectObject","intersectObjects","Spherical","other","makeSafe","setFromCartesianCoords","Cylindrical","_vector$8","Box2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","ImmediateRenderObject","_vector$9","SpotLightHelper","cone","coneLength","coneWidth","_vector$a","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","getBoneList","isSkeletonHelper","boneList","PointLightHelper","_Mesh","sphereSize","_vector$b","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","_color","_v","_v1$6","_v2$3","_v3$1","DirectionalLightHelper","lightPlane","targetLine","_vector$c","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box$3","BoxHelper","Box3Helper","PlaneHelper","_Line","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","_floatView","_int32View","DataUtils","toHalfFloat","val","_ENCODINGS","LOD_MIN","LOD_MAX","SIZE_MAX","EXTRA_LOD_SIGMA","TOTAL_LODS","MAX_SAMPLES","ENCODINGS","backgroundMaterial","backgroundBox","_flatCamera","_createPlanes2","_createPlanes","_lodPlanes","_sizeLods","_sigmas","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","convertLinearToRGBE","maxComponent","fExp","log2","PMREMGenerator","_pingPongRenderTarget","_blurMaterial","_getBlurShader","_equirectShader","_cubemapShader","_compileMaterial","fromScene","sigma","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapShader","compileEquirectangularShader","_getEquirectShader","outputTarget","_setViewport","_textureToCubeUV","_isLDR","_createRenderTarget","tmpMesh","cubeCamera","upSign","forwardSign","originalAutoClear","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","outputSize","lod","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","_getEncodings","Face4","LineStrip","LinePieces","NoColors","FaceColors","VertexColors","MeshFaceMaterial","MultiMaterial","isMultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","fromPoints","ClosedSplineCurve3","SplineCurve3","Spline","initFromArray","getControlPointsArray","reparametrizeByArcLength","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","Handlers","XHRLoader","BinaryTextureLoader","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","removeAttribute","maxInstancedCount","linePrecision","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","transparency","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","WebGLRenderTargetCube","audioLoader","getData","updateCubeMap","GeometryUtils","geometry1","materialIndexOffset","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CanvasRenderer","JSONLoader","SceneUtils","createMultiMaterialObject","detach","LensFlare","revision","__THREE__"],"mappings":"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","sourcesContent":["// threejs.org/license\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.THREE = {}));\n}(this, (function (exports) { 'use strict';\n\n\t// Polyfills\n\tif (Number.EPSILON === undefined) {\n\t\tNumber.EPSILON = Math.pow(2, -52);\n\t}\n\n\tif (Number.isInteger === undefined) {\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\t\tNumber.isInteger = function (value) {\n\t\t\treturn typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n\t\t};\n\t} //\n\n\n\tif (Math.sign === undefined) {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\t\tMath.sign = function (x) {\n\t\t\treturn x < 0 ? -1 : x > 0 ? 1 : +x;\n\t\t};\n\t}\n\n\tif ('name' in Function.prototype === false) {\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\t\tObject.defineProperty(Function.prototype, 'name', {\n\t\t\tget: function get() {\n\t\t\t\treturn this.toString().match(/^\\s*function\\s*([^\\(\\s]*)/)[1];\n\t\t\t}\n\t\t});\n\t}\n\n\tif (Object.assign === undefined) {\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\t\tObject.assign = function (target) {\n\n\t\t\tif (target === undefined || target === null) {\n\t\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t\t}\n\n\t\t\tvar output = Object(target);\n\n\t\t\tfor (var index = 1; index < arguments.length; index++) {\n\t\t\t\tvar source = arguments[index];\n\n\t\t\t\tif (source !== undefined && source !== null) {\n\t\t\t\t\tfor (var nextKey in source) {\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n\t\t\t\t\t\t\toutput[nextKey] = source[nextKey];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn output;\n\t\t};\n\t}\n\n\t/**\n\t * Copyright (c) 2014-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\tvar runtime = function (exports) {\n\n\t\tvar Op = Object.prototype;\n\t\tvar hasOwn = Op.hasOwnProperty;\n\t\tvar undefined$1; // More compressible than void 0.\n\n\t\tvar $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n\t\tvar iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n\t\tvar asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n\t\tvar toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n\t\tfunction define(obj, key, value) {\n\t\t\tObject.defineProperty(obj, key, {\n\t\t\t\tvalue: value,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true\n\t\t\t});\n\t\t\treturn obj[key];\n\t\t}\n\n\t\ttry {\n\t\t\t// IE 8 has a broken Object.defineProperty that only works on DOM objects.\n\t\t\tdefine({}, \"\");\n\t\t} catch (err) {\n\t\t\tdefine = function define(obj, key, value) {\n\t\t\t\treturn obj[key] = value;\n\t\t\t};\n\t\t}\n\n\t\tfunction wrap(innerFn, outerFn, self, tryLocsList) {\n\t\t\t// If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n\t\t\tvar protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n\t\t\tvar generator = Object.create(protoGenerator.prototype);\n\t\t\tvar context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n\t\t\t// .throw, and .return methods.\n\n\t\t\tgenerator._invoke = makeInvokeMethod(innerFn, self, context);\n\t\t\treturn generator;\n\t\t}\n\n\t\texports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n\t\t// record like context.tryEntries[i].completion. This interface could\n\t\t// have been (and was previously) designed to take a closure to be\n\t\t// invoked without arguments, but in all the cases we care about we\n\t\t// already have an existing method we want to call, so there's no need\n\t\t// to create a new function object. We can even get away with assuming\n\t\t// the method takes exactly one argument, since that happens to be true\n\t\t// in every case, so we don't have to touch the arguments object. The\n\t\t// only additional allocation required is the completion record, which\n\t\t// has a stable shape and so hopefully should be cheap to allocate.\n\n\t\tfunction tryCatch(fn, obj, arg) {\n\t\t\ttry {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"normal\",\n\t\t\t\t\targ: fn.call(obj, arg)\n\t\t\t\t};\n\t\t\t} catch (err) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"throw\",\n\t\t\t\t\targ: err\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tvar GenStateSuspendedStart = \"suspendedStart\";\n\t\tvar GenStateSuspendedYield = \"suspendedYield\";\n\t\tvar GenStateExecuting = \"executing\";\n\t\tvar GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n\t\t// breaking out of the dispatch switch statement.\n\n\t\tvar ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n\t\t// .constructor.prototype properties for functions that return Generator\n\t\t// objects. For full spec compliance, you may wish to configure your\n\t\t// minifier not to mangle the names of these two functions.\n\n\t\tfunction Generator() {}\n\n\t\tfunction GeneratorFunction() {}\n\n\t\tfunction GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n\t\t// don't natively support it.\n\n\n\t\tvar IteratorPrototype = {};\n\n\t\tIteratorPrototype[iteratorSymbol] = function () {\n\t\t\treturn this;\n\t\t};\n\n\t\tvar getProto = Object.getPrototypeOf;\n\t\tvar NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n\t\tif (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n\t\t\t// This environment has a native %IteratorPrototype%; use it instead\n\t\t\t// of the polyfill.\n\t\t\tIteratorPrototype = NativeIteratorPrototype;\n\t\t}\n\n\t\tvar Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\t\tGeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n\t\tGeneratorFunctionPrototype.constructor = GeneratorFunction;\n\t\tGeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n\t\t// Iterator interface in terms of a single ._invoke method.\n\n\t\tfunction defineIteratorMethods(prototype) {\n\t\t\t[\"next\", \"throw\", \"return\"].forEach(function (method) {\n\t\t\t\tdefine(prototype, method, function (arg) {\n\t\t\t\t\treturn this._invoke(method, arg);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\texports.isGeneratorFunction = function (genFun) {\n\t\t\tvar ctor = typeof genFun === \"function\" && genFun.constructor;\n\t\t\treturn ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n\t\t\t// do is to check its .name property.\n\t\t\t(ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n\t\t};\n\n\t\texports.mark = function (genFun) {\n\t\t\tif (Object.setPrototypeOf) {\n\t\t\t\tObject.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n\t\t\t} else {\n\t\t\t\tgenFun.__proto__ = GeneratorFunctionPrototype;\n\t\t\t\tdefine(genFun, toStringTagSymbol, \"GeneratorFunction\");\n\t\t\t}\n\n\t\t\tgenFun.prototype = Object.create(Gp);\n\t\t\treturn genFun;\n\t\t}; // Within the body of any async function, `await x` is transformed to\n\t\t// `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n\t\t// `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n\t\t// meant to be awaited.\n\n\n\t\texports.awrap = function (arg) {\n\t\t\treturn {\n\t\t\t\t__await: arg\n\t\t\t};\n\t\t};\n\n\t\tfunction AsyncIterator(generator, PromiseImpl) {\n\t\t\tfunction invoke(method, arg, resolve, reject) {\n\t\t\t\tvar record = tryCatch(generator[method], generator, arg);\n\n\t\t\t\tif (record.type === \"throw\") {\n\t\t\t\t\treject(record.arg);\n\t\t\t\t} else {\n\t\t\t\t\tvar result = record.arg;\n\t\t\t\t\tvar value = result.value;\n\n\t\t\t\t\tif (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n\t\t\t\t\t\treturn PromiseImpl.resolve(value.__await).then(function (value) {\n\t\t\t\t\t\t\tinvoke(\"next\", value, resolve, reject);\n\t\t\t\t\t\t}, function (err) {\n\t\t\t\t\t\t\tinvoke(\"throw\", err, resolve, reject);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn PromiseImpl.resolve(value).then(function (unwrapped) {\n\t\t\t\t\t\t// When a yielded Promise is resolved, its final value becomes\n\t\t\t\t\t\t// the .value of the Promise<{value,done}> result for the\n\t\t\t\t\t\t// current iteration.\n\t\t\t\t\t\tresult.value = unwrapped;\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\t// If a rejected Promise was yielded, throw the rejection back\n\t\t\t\t\t\t// into the async generator function so it can be handled there.\n\t\t\t\t\t\treturn invoke(\"throw\", error, resolve, reject);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar previousPromise;\n\n\t\t\tfunction enqueue(method, arg) {\n\t\t\t\tfunction callInvokeWithMethodAndArg() {\n\t\t\t\t\treturn new PromiseImpl(function (resolve, reject) {\n\t\t\t\t\t\tinvoke(method, arg, resolve, reject);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn previousPromise = // If enqueue has been called before, then we want to wait until\n\t\t\t\t// all previous Promises have been resolved before calling invoke,\n\t\t\t\t// so that results are always delivered in the correct order. If\n\t\t\t\t// enqueue has not been called before, then it is important to\n\t\t\t\t// call invoke immediately, without waiting on a callback to fire,\n\t\t\t\t// so that the async generator function has the opportunity to do\n\t\t\t\t// any necessary setup in a predictable way. This predictability\n\t\t\t\t// is why the Promise constructor synchronously invokes its\n\t\t\t\t// executor callback, and why async functions synchronously\n\t\t\t\t// execute code before the first await. Since we implement simple\n\t\t\t\t// async functions in terms of async generators, it is especially\n\t\t\t\t// important to get this right, even though it requires care.\n\t\t\t\tpreviousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n\t\t\t\t// invocations of the iterator.\n\t\t\t\tcallInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n\t\t\t} // Define the unified helper method that is used to implement .next,\n\t\t\t// .throw, and .return (see defineIteratorMethods).\n\n\n\t\t\tthis._invoke = enqueue;\n\t\t}\n\n\t\tdefineIteratorMethods(AsyncIterator.prototype);\n\n\t\tAsyncIterator.prototype[asyncIteratorSymbol] = function () {\n\t\t\treturn this;\n\t\t};\n\n\t\texports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n\t\t// AsyncIterator objects; they just return a Promise for the value of\n\t\t// the final result produced by the iterator.\n\n\t\texports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n\t\t\tif (PromiseImpl === void 0) PromiseImpl = Promise;\n\t\t\tvar iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n\t\t\treturn exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n\t\t\t: iter.next().then(function (result) {\n\t\t\t\treturn result.done ? result.value : iter.next();\n\t\t\t});\n\t\t};\n\n\t\tfunction makeInvokeMethod(innerFn, self, context) {\n\t\t\tvar state = GenStateSuspendedStart;\n\t\t\treturn function invoke(method, arg) {\n\t\t\t\tif (state === GenStateExecuting) {\n\t\t\t\t\tthrow new Error(\"Generator is already running\");\n\t\t\t\t}\n\n\t\t\t\tif (state === GenStateCompleted) {\n\t\t\t\t\tif (method === \"throw\") {\n\t\t\t\t\t\tthrow arg;\n\t\t\t\t\t} // Be forgiving, per 25.3.3.3.3 of the spec:\n\t\t\t\t\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n\t\t\t\t\treturn doneResult();\n\t\t\t\t}\n\n\t\t\t\tcontext.method = method;\n\t\t\t\tcontext.arg = arg;\n\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar delegate = context.delegate;\n\n\t\t\t\t\tif (delegate) {\n\t\t\t\t\t\tvar delegateResult = maybeInvokeDelegate(delegate, context);\n\n\t\t\t\t\t\tif (delegateResult) {\n\t\t\t\t\t\t\tif (delegateResult === ContinueSentinel) continue;\n\t\t\t\t\t\t\treturn delegateResult;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (context.method === \"next\") {\n\t\t\t\t\t\t// Setting context._sent for legacy support of Babel's\n\t\t\t\t\t\t// function.sent implementation.\n\t\t\t\t\t\tcontext.sent = context._sent = context.arg;\n\t\t\t\t\t} else if (context.method === \"throw\") {\n\t\t\t\t\t\tif (state === GenStateSuspendedStart) {\n\t\t\t\t\t\t\tstate = GenStateCompleted;\n\t\t\t\t\t\t\tthrow context.arg;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontext.dispatchException(context.arg);\n\t\t\t\t\t} else if (context.method === \"return\") {\n\t\t\t\t\t\tcontext.abrupt(\"return\", context.arg);\n\t\t\t\t\t}\n\n\t\t\t\t\tstate = GenStateExecuting;\n\t\t\t\t\tvar record = tryCatch(innerFn, self, context);\n\n\t\t\t\t\tif (record.type === \"normal\") {\n\t\t\t\t\t\t// If an exception is thrown from innerFn, we leave state ===\n\t\t\t\t\t\t// GenStateExecuting and loop back for another invocation.\n\t\t\t\t\t\tstate = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n\t\t\t\t\t\tif (record.arg === ContinueSentinel) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tvalue: record.arg,\n\t\t\t\t\t\t\tdone: context.done\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (record.type === \"throw\") {\n\t\t\t\t\t\tstate = GenStateCompleted; // Dispatch the exception by looping back around to the\n\t\t\t\t\t\t// context.dispatchException(context.arg) call above.\n\n\t\t\t\t\t\tcontext.method = \"throw\";\n\t\t\t\t\t\tcontext.arg = record.arg;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t} // Call delegate.iterator[context.method](context.arg) and handle the\n\t\t// result, either by returning a { value, done } result from the\n\t\t// delegate iterator, or by modifying context.method and context.arg,\n\t\t// setting context.delegate to null, and returning the ContinueSentinel.\n\n\n\t\tfunction maybeInvokeDelegate(delegate, context) {\n\t\t\tvar method = delegate.iterator[context.method];\n\n\t\t\tif (method === undefined$1) {\n\t\t\t\t// A .throw or .return when the delegate iterator has no .throw\n\t\t\t\t// method always terminates the yield* loop.\n\t\t\t\tcontext.delegate = null;\n\n\t\t\t\tif (context.method === \"throw\") {\n\t\t\t\t\t// Note: [\"return\"] must be used for ES3 parsing compatibility.\n\t\t\t\t\tif (delegate.iterator[\"return\"]) {\n\t\t\t\t\t\t// If the delegate iterator has a return method, give it a\n\t\t\t\t\t\t// chance to clean up.\n\t\t\t\t\t\tcontext.method = \"return\";\n\t\t\t\t\t\tcontext.arg = undefined$1;\n\t\t\t\t\t\tmaybeInvokeDelegate(delegate, context);\n\n\t\t\t\t\t\tif (context.method === \"throw\") {\n\t\t\t\t\t\t\t// If maybeInvokeDelegate(context) changed context.method from\n\t\t\t\t\t\t\t// \"return\" to \"throw\", let that override the TypeError below.\n\t\t\t\t\t\t\treturn ContinueSentinel;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.method = \"throw\";\n\t\t\t\t\tcontext.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n\t\t\t\t}\n\n\t\t\t\treturn ContinueSentinel;\n\t\t\t}\n\n\t\t\tvar record = tryCatch(method, delegate.iterator, context.arg);\n\n\t\t\tif (record.type === \"throw\") {\n\t\t\t\tcontext.method = \"throw\";\n\t\t\t\tcontext.arg = record.arg;\n\t\t\t\tcontext.delegate = null;\n\t\t\t\treturn ContinueSentinel;\n\t\t\t}\n\n\t\t\tvar info = record.arg;\n\n\t\t\tif (!info) {\n\t\t\t\tcontext.method = \"throw\";\n\t\t\t\tcontext.arg = new TypeError(\"iterator result is not an object\");\n\t\t\t\tcontext.delegate = null;\n\t\t\t\treturn ContinueSentinel;\n\t\t\t}\n\n\t\t\tif (info.done) {\n\t\t\t\t// Assign the result of the finished delegate to the temporary\n\t\t\t\t// variable specified by delegate.resultName (see delegateYield).\n\t\t\t\tcontext[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n\t\t\t\tcontext.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n\t\t\t\t// exception, let the outer generator proceed normally. If\n\t\t\t\t// context.method was \"next\", forget context.arg since it has been\n\t\t\t\t// \"consumed\" by the delegate iterator. If context.method was\n\t\t\t\t// \"return\", allow the original .return call to continue in the\n\t\t\t\t// outer generator.\n\n\t\t\t\tif (context.method !== \"return\") {\n\t\t\t\t\tcontext.method = \"next\";\n\t\t\t\t\tcontext.arg = undefined$1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Re-yield the result returned by the delegate method.\n\t\t\t\treturn info;\n\t\t\t} // The delegate iterator is finished, so forget it and continue with\n\t\t\t// the outer generator.\n\n\n\t\t\tcontext.delegate = null;\n\t\t\treturn ContinueSentinel;\n\t\t} // Define Generator.prototype.{next,throw,return} in terms of the\n\t\t// unified ._invoke helper method.\n\n\n\t\tdefineIteratorMethods(Gp);\n\t\tdefine(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n\t\t// @@iterator function is called on it. Some browsers' implementations of the\n\t\t// iterator prototype chain incorrectly implement this, causing the Generator\n\t\t// object to not be returned from this call. This ensures that doesn't happen.\n\t\t// See https://github.com/facebook/regenerator/issues/274 for more details.\n\n\t\tGp[iteratorSymbol] = function () {\n\t\t\treturn this;\n\t\t};\n\n\t\tGp.toString = function () {\n\t\t\treturn \"[object Generator]\";\n\t\t};\n\n\t\tfunction pushTryEntry(locs) {\n\t\t\tvar entry = {\n\t\t\t\ttryLoc: locs[0]\n\t\t\t};\n\n\t\t\tif (1 in locs) {\n\t\t\t\tentry.catchLoc = locs[1];\n\t\t\t}\n\n\t\t\tif (2 in locs) {\n\t\t\t\tentry.finallyLoc = locs[2];\n\t\t\t\tentry.afterLoc = locs[3];\n\t\t\t}\n\n\t\t\tthis.tryEntries.push(entry);\n\t\t}\n\n\t\tfunction resetTryEntry(entry) {\n\t\t\tvar record = entry.completion || {};\n\t\t\trecord.type = \"normal\";\n\t\t\tdelete record.arg;\n\t\t\tentry.completion = record;\n\t\t}\n\n\t\tfunction Context(tryLocsList) {\n\t\t\t// The root entry object (effectively a try statement without a catch\n\t\t\t// or a finally block) gives us a place to store values thrown from\n\t\t\t// locations where there is no enclosing try statement.\n\t\t\tthis.tryEntries = [{\n\t\t\t\ttryLoc: \"root\"\n\t\t\t}];\n\t\t\ttryLocsList.forEach(pushTryEntry, this);\n\t\t\tthis.reset(true);\n\t\t}\n\n\t\texports.keys = function (object) {\n\t\t\tvar keys = [];\n\n\t\t\tfor (var key in object) {\n\t\t\t\tkeys.push(key);\n\t\t\t}\n\n\t\t\tkeys.reverse(); // Rather than returning an object with a next method, we keep\n\t\t\t// things simple and return the next function itself.\n\n\t\t\treturn function next() {\n\t\t\t\twhile (keys.length) {\n\t\t\t\t\tvar key = keys.pop();\n\n\t\t\t\t\tif (key in object) {\n\t\t\t\t\t\tnext.value = key;\n\t\t\t\t\t\tnext.done = false;\n\t\t\t\t\t\treturn next;\n\t\t\t\t\t}\n\t\t\t\t} // To avoid creating an additional object, we just hang the .value\n\t\t\t\t// and .done properties off the next function object itself. This\n\t\t\t\t// also ensures that the minifier will not anonymize the function.\n\n\n\t\t\t\tnext.done = true;\n\t\t\t\treturn next;\n\t\t\t};\n\t\t};\n\n\t\tfunction values(iterable) {\n\t\t\tif (iterable) {\n\t\t\t\tvar iteratorMethod = iterable[iteratorSymbol];\n\n\t\t\t\tif (iteratorMethod) {\n\t\t\t\t\treturn iteratorMethod.call(iterable);\n\t\t\t\t}\n\n\t\t\t\tif (typeof iterable.next === \"function\") {\n\t\t\t\t\treturn iterable;\n\t\t\t\t}\n\n\t\t\t\tif (!isNaN(iterable.length)) {\n\t\t\t\t\tvar i = -1,\n\t\t\t\t\t\t\tnext = function next() {\n\t\t\t\t\t\twhile (++i < iterable.length) {\n\t\t\t\t\t\t\tif (hasOwn.call(iterable, i)) {\n\t\t\t\t\t\t\t\tnext.value = iterable[i];\n\t\t\t\t\t\t\t\tnext.done = false;\n\t\t\t\t\t\t\t\treturn next;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnext.value = undefined$1;\n\t\t\t\t\t\tnext.done = true;\n\t\t\t\t\t\treturn next;\n\t\t\t\t\t};\n\n\t\t\t\t\treturn next.next = next;\n\t\t\t\t}\n\t\t\t} // Return an iterator with no values.\n\n\n\t\t\treturn {\n\t\t\t\tnext: doneResult\n\t\t\t};\n\t\t}\n\n\t\texports.values = values;\n\n\t\tfunction doneResult() {\n\t\t\treturn {\n\t\t\t\tvalue: undefined$1,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tContext.prototype = {\n\t\t\tconstructor: Context,\n\t\t\treset: function reset(skipTempReset) {\n\t\t\t\tthis.prev = 0;\n\t\t\t\tthis.next = 0; // Resetting context._sent for legacy support of Babel's\n\t\t\t\t// function.sent implementation.\n\n\t\t\t\tthis.sent = this._sent = undefined$1;\n\t\t\t\tthis.done = false;\n\t\t\t\tthis.delegate = null;\n\t\t\t\tthis.method = \"next\";\n\t\t\t\tthis.arg = undefined$1;\n\t\t\t\tthis.tryEntries.forEach(resetTryEntry);\n\n\t\t\t\tif (!skipTempReset) {\n\t\t\t\t\tfor (var name in this) {\n\t\t\t\t\t\t// Not sure about the optimal order of these conditions:\n\t\t\t\t\t\tif (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n\t\t\t\t\t\t\tthis[name] = undefined$1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tstop: function stop() {\n\t\t\t\tthis.done = true;\n\t\t\t\tvar rootEntry = this.tryEntries[0];\n\t\t\t\tvar rootRecord = rootEntry.completion;\n\n\t\t\t\tif (rootRecord.type === \"throw\") {\n\t\t\t\t\tthrow rootRecord.arg;\n\t\t\t\t}\n\n\t\t\t\treturn this.rval;\n\t\t\t},\n\t\t\tdispatchException: function dispatchException(exception) {\n\t\t\t\tif (this.done) {\n\t\t\t\t\tthrow exception;\n\t\t\t\t}\n\n\t\t\t\tvar context = this;\n\n\t\t\t\tfunction handle(loc, caught) {\n\t\t\t\t\trecord.type = \"throw\";\n\t\t\t\t\trecord.arg = exception;\n\t\t\t\t\tcontext.next = loc;\n\n\t\t\t\t\tif (caught) {\n\t\t\t\t\t\t// If the dispatched exception was caught by a catch block,\n\t\t\t\t\t\t// then let that catch block handle the exception normally.\n\t\t\t\t\t\tcontext.method = \"next\";\n\t\t\t\t\t\tcontext.arg = undefined$1;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn !!caught;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t\t\t\t\tvar entry = this.tryEntries[i];\n\t\t\t\t\tvar record = entry.completion;\n\n\t\t\t\t\tif (entry.tryLoc === \"root\") {\n\t\t\t\t\t\t// Exception thrown outside of any try block that could handle\n\t\t\t\t\t\t// it, so set the completion value of the entire function to\n\t\t\t\t\t\t// throw the exception.\n\t\t\t\t\t\treturn handle(\"end\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (entry.tryLoc <= this.prev) {\n\t\t\t\t\t\tvar hasCatch = hasOwn.call(entry, \"catchLoc\");\n\t\t\t\t\t\tvar hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n\t\t\t\t\t\tif (hasCatch && hasFinally) {\n\t\t\t\t\t\t\tif (this.prev < entry.catchLoc) {\n\t\t\t\t\t\t\t\treturn handle(entry.catchLoc, true);\n\t\t\t\t\t\t\t} else if (this.prev < entry.finallyLoc) {\n\t\t\t\t\t\t\t\treturn handle(entry.finallyLoc);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (hasCatch) {\n\t\t\t\t\t\t\tif (this.prev < entry.catchLoc) {\n\t\t\t\t\t\t\t\treturn handle(entry.catchLoc, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (hasFinally) {\n\t\t\t\t\t\t\tif (this.prev < entry.finallyLoc) {\n\t\t\t\t\t\t\t\treturn handle(entry.finallyLoc);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\"try statement without catch or finally\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tabrupt: function abrupt(type, arg) {\n\t\t\t\tfor (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t\t\t\t\tvar entry = this.tryEntries[i];\n\n\t\t\t\t\tif (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n\t\t\t\t\t\tvar finallyEntry = entry;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n\t\t\t\t\t// Ignore the finally entry if control is not jumping to a\n\t\t\t\t\t// location outside the try/catch block.\n\t\t\t\t\tfinallyEntry = null;\n\t\t\t\t}\n\n\t\t\t\tvar record = finallyEntry ? finallyEntry.completion : {};\n\t\t\t\trecord.type = type;\n\t\t\t\trecord.arg = arg;\n\n\t\t\t\tif (finallyEntry) {\n\t\t\t\t\tthis.method = \"next\";\n\t\t\t\t\tthis.next = finallyEntry.finallyLoc;\n\t\t\t\t\treturn ContinueSentinel;\n\t\t\t\t}\n\n\t\t\t\treturn this.complete(record);\n\t\t\t},\n\t\t\tcomplete: function complete(record, afterLoc) {\n\t\t\t\tif (record.type === \"throw\") {\n\t\t\t\t\tthrow record.arg;\n\t\t\t\t}\n\n\t\t\t\tif (record.type === \"break\" || record.type === \"continue\") {\n\t\t\t\t\tthis.next = record.arg;\n\t\t\t\t} else if (record.type === \"return\") {\n\t\t\t\t\tthis.rval = this.arg = record.arg;\n\t\t\t\t\tthis.method = \"return\";\n\t\t\t\t\tthis.next = \"end\";\n\t\t\t\t} else if (record.type === \"normal\" && afterLoc) {\n\t\t\t\t\tthis.next = afterLoc;\n\t\t\t\t}\n\n\t\t\t\treturn ContinueSentinel;\n\t\t\t},\n\t\t\tfinish: function finish(finallyLoc) {\n\t\t\t\tfor (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t\t\t\t\tvar entry = this.tryEntries[i];\n\n\t\t\t\t\tif (entry.finallyLoc === finallyLoc) {\n\t\t\t\t\t\tthis.complete(entry.completion, entry.afterLoc);\n\t\t\t\t\t\tresetTryEntry(entry);\n\t\t\t\t\t\treturn ContinueSentinel;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"catch\": function _catch(tryLoc) {\n\t\t\t\tfor (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t\t\t\t\tvar entry = this.tryEntries[i];\n\n\t\t\t\t\tif (entry.tryLoc === tryLoc) {\n\t\t\t\t\t\tvar record = entry.completion;\n\n\t\t\t\t\t\tif (record.type === \"throw\") {\n\t\t\t\t\t\t\tvar thrown = record.arg;\n\t\t\t\t\t\t\tresetTryEntry(entry);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn thrown;\n\t\t\t\t\t}\n\t\t\t\t} // The context.catch method must only be called with a location\n\t\t\t\t// argument that corresponds to a known catch block.\n\n\n\t\t\t\tthrow new Error(\"illegal catch attempt\");\n\t\t\t},\n\t\t\tdelegateYield: function delegateYield(iterable, resultName, nextLoc) {\n\t\t\t\tthis.delegate = {\n\t\t\t\t\titerator: values(iterable),\n\t\t\t\t\tresultName: resultName,\n\t\t\t\t\tnextLoc: nextLoc\n\t\t\t\t};\n\n\t\t\t\tif (this.method === \"next\") {\n\t\t\t\t\t// Deliberately forget the last sent value so that we don't\n\t\t\t\t\t// accidentally pass it on to the delegate.\n\t\t\t\t\tthis.arg = undefined$1;\n\t\t\t\t}\n\n\t\t\t\treturn ContinueSentinel;\n\t\t\t}\n\t\t}; // Regardless of whether this script is executing as a CommonJS module\n\t\t// or not, return the runtime object so that we can declare the variable\n\t\t// regeneratorRuntime in the outer scope, which allows this module to be\n\t\t// injected easily by `bin/regenerator --include-runtime script.js`.\n\n\t\treturn exports;\n\t}( // If this script is executing as a CommonJS module, use module.exports\n\t// as the regeneratorRuntime namespace. Otherwise create a new empty\n\t// object. Either way, the resulting object will be used to initialize\n\t// the regeneratorRuntime variable at the top of this file.\n\ttypeof module === \"object\" ? module.exports : {});\n\n\ttry {\n\t\tregeneratorRuntime = runtime;\n\t} catch (accidentalStrictMode) {\n\t\t// This module should not be running in strict mode, so the above\n\t\t// assignment should always work unless something is misconfigured. Just\n\t\t// in case runtime.js accidentally runs in strict mode, we can escape\n\t\t// strict mode using a global Function call. This could conceivably fail\n\t\t// if a Content Security Policy forbids using Function, but in that case\n\t\t// the proper solution is to fix the accidental strict mode problem. If\n\t\t// you've misconfigured your bundler to force strict mode and applied a\n\t\t// CSP to forbid Function, and you're not willing to fix either of those\n\t\t// problems, please detail your unique predicament in a GitHub issue.\n\t\tFunction(\"r\", \"regeneratorRuntime = r\")(runtime);\n\t}\n\n\tvar REVISION = '125';\n\tvar MOUSE = {\n\t\tLEFT: 0,\n\t\tMIDDLE: 1,\n\t\tRIGHT: 2,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2\n\t};\n\tvar TOUCH = {\n\t\tROTATE: 0,\n\t\tPAN: 1,\n\t\tDOLLY_PAN: 2,\n\t\tDOLLY_ROTATE: 3\n\t};\n\tvar CullFaceNone = 0;\n\tvar CullFaceBack = 1;\n\tvar CullFaceFront = 2;\n\tvar CullFaceFrontBack = 3;\n\tvar BasicShadowMap = 0;\n\tvar PCFShadowMap = 1;\n\tvar PCFSoftShadowMap = 2;\n\tvar VSMShadowMap = 3;\n\tvar FrontSide = 0;\n\tvar BackSide = 1;\n\tvar DoubleSide = 2;\n\tvar FlatShading = 1;\n\tvar SmoothShading = 2;\n\tvar NoBlending = 0;\n\tvar NormalBlending = 1;\n\tvar AdditiveBlending = 2;\n\tvar SubtractiveBlending = 3;\n\tvar MultiplyBlending = 4;\n\tvar CustomBlending = 5;\n\tvar AddEquation = 100;\n\tvar SubtractEquation = 101;\n\tvar ReverseSubtractEquation = 102;\n\tvar MinEquation = 103;\n\tvar MaxEquation = 104;\n\tvar ZeroFactor = 200;\n\tvar OneFactor = 201;\n\tvar SrcColorFactor = 202;\n\tvar OneMinusSrcColorFactor = 203;\n\tvar SrcAlphaFactor = 204;\n\tvar OneMinusSrcAlphaFactor = 205;\n\tvar DstAlphaFactor = 206;\n\tvar OneMinusDstAlphaFactor = 207;\n\tvar DstColorFactor = 208;\n\tvar OneMinusDstColorFactor = 209;\n\tvar SrcAlphaSaturateFactor = 210;\n\tvar NeverDepth = 0;\n\tvar AlwaysDepth = 1;\n\tvar LessDepth = 2;\n\tvar LessEqualDepth = 3;\n\tvar EqualDepth = 4;\n\tvar GreaterEqualDepth = 5;\n\tvar GreaterDepth = 6;\n\tvar NotEqualDepth = 7;\n\tvar MultiplyOperation = 0;\n\tvar MixOperation = 1;\n\tvar AddOperation = 2;\n\tvar NoToneMapping = 0;\n\tvar LinearToneMapping = 1;\n\tvar ReinhardToneMapping = 2;\n\tvar CineonToneMapping = 3;\n\tvar ACESFilmicToneMapping = 4;\n\tvar CustomToneMapping = 5;\n\tvar UVMapping = 300;\n\tvar CubeReflectionMapping = 301;\n\tvar CubeRefractionMapping = 302;\n\tvar EquirectangularReflectionMapping = 303;\n\tvar EquirectangularRefractionMapping = 304;\n\tvar CubeUVReflectionMapping = 306;\n\tvar CubeUVRefractionMapping = 307;\n\tvar RepeatWrapping = 1000;\n\tvar ClampToEdgeWrapping = 1001;\n\tvar MirroredRepeatWrapping = 1002;\n\tvar NearestFilter = 1003;\n\tvar NearestMipmapNearestFilter = 1004;\n\tvar NearestMipMapNearestFilter = 1004;\n\tvar NearestMipmapLinearFilter = 1005;\n\tvar NearestMipMapLinearFilter = 1005;\n\tvar LinearFilter = 1006;\n\tvar LinearMipmapNearestFilter = 1007;\n\tvar LinearMipMapNearestFilter = 1007;\n\tvar LinearMipmapLinearFilter = 1008;\n\tvar LinearMipMapLinearFilter = 1008;\n\tvar UnsignedByteType = 1009;\n\tvar ByteType = 1010;\n\tvar ShortType = 1011;\n\tvar UnsignedShortType = 1012;\n\tvar IntType = 1013;\n\tvar UnsignedIntType = 1014;\n\tvar FloatType = 1015;\n\tvar HalfFloatType = 1016;\n\tvar UnsignedShort4444Type = 1017;\n\tvar UnsignedShort5551Type = 1018;\n\tvar UnsignedShort565Type = 1019;\n\tvar UnsignedInt248Type = 1020;\n\tvar AlphaFormat = 1021;\n\tvar RGBFormat = 1022;\n\tvar RGBAFormat = 1023;\n\tvar LuminanceFormat = 1024;\n\tvar LuminanceAlphaFormat = 1025;\n\tvar RGBEFormat = RGBAFormat;\n\tvar DepthFormat = 1026;\n\tvar DepthStencilFormat = 1027;\n\tvar RedFormat = 1028;\n\tvar RedIntegerFormat = 1029;\n\tvar RGFormat = 1030;\n\tvar RGIntegerFormat = 1031;\n\tvar RGBIntegerFormat = 1032;\n\tvar RGBAIntegerFormat = 1033;\n\tvar RGB_S3TC_DXT1_Format = 33776;\n\tvar RGBA_S3TC_DXT1_Format = 33777;\n\tvar RGBA_S3TC_DXT3_Format = 33778;\n\tvar RGBA_S3TC_DXT5_Format = 33779;\n\tvar RGB_PVRTC_4BPPV1_Format = 35840;\n\tvar RGB_PVRTC_2BPPV1_Format = 35841;\n\tvar RGBA_PVRTC_4BPPV1_Format = 35842;\n\tvar RGBA_PVRTC_2BPPV1_Format = 35843;\n\tvar RGB_ETC1_Format = 36196;\n\tvar RGB_ETC2_Format = 37492;\n\tvar RGBA_ETC2_EAC_Format = 37496;\n\tvar RGBA_ASTC_4x4_Format = 37808;\n\tvar RGBA_ASTC_5x4_Format = 37809;\n\tvar RGBA_ASTC_5x5_Format = 37810;\n\tvar RGBA_ASTC_6x5_Format = 37811;\n\tvar RGBA_ASTC_6x6_Format = 37812;\n\tvar RGBA_ASTC_8x5_Format = 37813;\n\tvar RGBA_ASTC_8x6_Format = 37814;\n\tvar RGBA_ASTC_8x8_Format = 37815;\n\tvar RGBA_ASTC_10x5_Format = 37816;\n\tvar RGBA_ASTC_10x6_Format = 37817;\n\tvar RGBA_ASTC_10x8_Format = 37818;\n\tvar RGBA_ASTC_10x10_Format = 37819;\n\tvar RGBA_ASTC_12x10_Format = 37820;\n\tvar RGBA_ASTC_12x12_Format = 37821;\n\tvar RGBA_BPTC_Format = 36492;\n\tvar SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\n\tvar SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\n\tvar SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\n\tvar SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\n\tvar SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\n\tvar SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\n\tvar SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\n\tvar SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\n\tvar SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\n\tvar SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\n\tvar SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\n\tvar SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\n\tvar SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\n\tvar SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\n\tvar LoopOnce = 2200;\n\tvar LoopRepeat = 2201;\n\tvar LoopPingPong = 2202;\n\tvar InterpolateDiscrete = 2300;\n\tvar InterpolateLinear = 2301;\n\tvar InterpolateSmooth = 2302;\n\tvar ZeroCurvatureEnding = 2400;\n\tvar ZeroSlopeEnding = 2401;\n\tvar WrapAroundEnding = 2402;\n\tvar NormalAnimationBlendMode = 2500;\n\tvar AdditiveAnimationBlendMode = 2501;\n\tvar TrianglesDrawMode = 0;\n\tvar TriangleStripDrawMode = 1;\n\tvar TriangleFanDrawMode = 2;\n\tvar LinearEncoding = 3000;\n\tvar sRGBEncoding = 3001;\n\tvar GammaEncoding = 3007;\n\tvar RGBEEncoding = 3002;\n\tvar LogLuvEncoding = 3003;\n\tvar RGBM7Encoding = 3004;\n\tvar RGBM16Encoding = 3005;\n\tvar RGBDEncoding = 3006;\n\tvar BasicDepthPacking = 3200;\n\tvar RGBADepthPacking = 3201;\n\tvar TangentSpaceNormalMap = 0;\n\tvar ObjectSpaceNormalMap = 1;\n\tvar ZeroStencilOp = 0;\n\tvar KeepStencilOp = 7680;\n\tvar ReplaceStencilOp = 7681;\n\tvar IncrementStencilOp = 7682;\n\tvar DecrementStencilOp = 7683;\n\tvar IncrementWrapStencilOp = 34055;\n\tvar DecrementWrapStencilOp = 34056;\n\tvar InvertStencilOp = 5386;\n\tvar NeverStencilFunc = 512;\n\tvar LessStencilFunc = 513;\n\tvar EqualStencilFunc = 514;\n\tvar LessEqualStencilFunc = 515;\n\tvar GreaterStencilFunc = 516;\n\tvar NotEqualStencilFunc = 517;\n\tvar GreaterEqualStencilFunc = 518;\n\tvar AlwaysStencilFunc = 519;\n\tvar StaticDrawUsage = 35044;\n\tvar DynamicDrawUsage = 35048;\n\tvar StreamDrawUsage = 35040;\n\tvar StaticReadUsage = 35045;\n\tvar DynamicReadUsage = 35049;\n\tvar StreamReadUsage = 35041;\n\tvar StaticCopyUsage = 35046;\n\tvar DynamicCopyUsage = 35050;\n\tvar StreamCopyUsage = 35042;\n\tvar GLSL1 = '100';\n\tvar GLSL3 = '300 es';\n\n\tfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n\t\ttry {\n\t\t\tvar info = gen[key](arg);\n\t\t\tvar value = info.value;\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t\treturn;\n\t\t}\n\n\t\tif (info.done) {\n\t\t\tresolve(value);\n\t\t} else {\n\t\t\tPromise.resolve(value).then(_next, _throw);\n\t\t}\n\t}\n\n\tfunction _asyncToGenerator(fn) {\n\t\treturn function () {\n\t\t\tvar self = this,\n\t\t\t\t\targs = arguments;\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tvar gen = fn.apply(self, args);\n\n\t\t\t\tfunction _next(value) {\n\t\t\t\t\tasyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n\t\t\t\t}\n\n\t\t\t\tfunction _throw(err) {\n\t\t\t\t\tasyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n\t\t\t\t}\n\n\t\t\t\t_next(undefined);\n\t\t\t});\n\t\t};\n\t}\n\n\tfunction _defineProperties(target, props) {\n\t\tfor (var i = 0; i < props.length; i++) {\n\t\t\tvar descriptor = props[i];\n\t\t\tdescriptor.enumerable = descriptor.enumerable || false;\n\t\t\tdescriptor.configurable = true;\n\t\t\tif (\"value\" in descriptor) descriptor.writable = true;\n\t\t\tObject.defineProperty(target, descriptor.key, descriptor);\n\t\t}\n\t}\n\n\tfunction _createClass(Constructor, protoProps, staticProps) {\n\t\tif (protoProps) _defineProperties(Constructor.prototype, protoProps);\n\t\tif (staticProps) _defineProperties(Constructor, staticProps);\n\t\treturn Constructor;\n\t}\n\n\tfunction _inheritsLoose(subClass, superClass) {\n\t\tsubClass.prototype = Object.create(superClass.prototype);\n\t\tsubClass.prototype.constructor = subClass;\n\t\tsubClass.__proto__ = superClass;\n\t}\n\n\tfunction _assertThisInitialized(self) {\n\t\tif (self === void 0) {\n\t\t\tthrow new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t\t}\n\n\t\treturn self;\n\t}\n\n\tfunction _unsupportedIterableToArray(o, minLen) {\n\t\tif (!o) return;\n\t\tif (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n\t\tvar n = Object.prototype.toString.call(o).slice(8, -1);\n\t\tif (n === \"Object\" && o.constructor) n = o.constructor.name;\n\t\tif (n === \"Map\" || n === \"Set\") return Array.from(o);\n\t\tif (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n\t}\n\n\tfunction _arrayLikeToArray(arr, len) {\n\t\tif (len == null || len > arr.length) len = arr.length;\n\n\t\tfor (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n\t\treturn arr2;\n\t}\n\n\tfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n\t\tvar it;\n\n\t\tif (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n\t\t\tif (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n\t\t\t\tif (it) o = it;\n\t\t\t\tvar i = 0;\n\t\t\t\treturn function () {\n\t\t\t\t\tif (i >= o.length) return {\n\t\t\t\t\t\tdone: true\n\t\t\t\t\t};\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: o[i++]\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthrow new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n\t\t}\n\n\t\tit = o[Symbol.iterator]();\n\t\treturn it.next.bind(it);\n\t}\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\tfunction EventDispatcher() {}\n\n\tObject.assign(EventDispatcher.prototype, {\n\t\taddEventListener: function addEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) this._listeners = {};\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif (listeners[type] === undefined) {\n\t\t\t\tlisteners[type] = [];\n\t\t\t}\n\n\t\t\tif (listeners[type].indexOf(listener) === -1) {\n\t\t\t\tlisteners[type].push(listener);\n\t\t\t}\n\t\t},\n\t\thasEventListener: function hasEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) return false;\n\t\t\tvar listeners = this._listeners;\n\t\t\treturn listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n\t\t},\n\t\tremoveEventListener: function removeEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) return;\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[type];\n\n\t\t\tif (listenerArray !== undefined) {\n\t\t\t\tvar index = listenerArray.indexOf(listener);\n\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tlistenerArray.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdispatchEvent: function dispatchEvent(event) {\n\t\t\tif (this._listeners === undefined) return;\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[event.type];\n\n\t\t\tif (listenerArray !== undefined) {\n\t\t\t\tevent.target = this; // Make a copy, in case listeners are removed while iterating.\n\n\t\t\t\tvar array = listenerArray.slice(0);\n\n\t\t\t\tfor (var i = 0, l = array.length; i < l; i++) {\n\t\t\t\t\tarray[i].call(this, event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tvar _lut = [];\n\n\tfor (var i = 0; i < 256; i++) {\n\t\t_lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n\t}\n\n\tvar _seed = 1234567;\n\tvar MathUtils = {\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\t\tgenerateUUID: function generateUUID() {\n\t\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' + _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' + _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] + _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\n\n\t\t\treturn uuid.toUpperCase();\n\t\t},\n\t\tclamp: function clamp(value, min, max) {\n\t\t\treturn Math.max(min, Math.min(max, value));\n\t\t},\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\t\teuclideanModulo: function euclideanModulo(n, m) {\n\t\t\treturn (n % m + m) % m;\n\t\t},\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\t\tmapLinear: function mapLinear(x, a1, a2, b1, b2) {\n\t\t\treturn b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n\t\t},\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\t\tlerp: function lerp(x, y, t) {\n\t\t\treturn (1 - t) * x + t * y;\n\t\t},\n\t\t// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n\t\tdamp: function damp(x, y, lambda, dt) {\n\t\t\treturn MathUtils.lerp(x, y, 1 - Math.exp(-lambda * dt));\n\t\t},\n\t\t// https://www.desmos.com/calculator/vcsjnyz7x4\n\t\tpingpong: function pingpong(x, length) {\n\t\t\tif (length === void 0) {\n\t\t\t\tlength = 1;\n\t\t\t}\n\n\t\t\treturn length - Math.abs(MathUtils.euclideanModulo(x, length * 2) - length);\n\t\t},\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\t\tsmoothstep: function smoothstep(x, min, max) {\n\t\t\tif (x <= min) return 0;\n\t\t\tif (x >= max) return 1;\n\t\t\tx = (x - min) / (max - min);\n\t\t\treturn x * x * (3 - 2 * x);\n\t\t},\n\t\tsmootherstep: function smootherstep(x, min, max) {\n\t\t\tif (x <= min) return 0;\n\t\t\tif (x >= max) return 1;\n\t\t\tx = (x - min) / (max - min);\n\t\t\treturn x * x * x * (x * (x * 6 - 15) + 10);\n\t\t},\n\t\t// Random integer from <low, high> interval\n\t\trandInt: function randInt(low, high) {\n\t\t\treturn low + Math.floor(Math.random() * (high - low + 1));\n\t\t},\n\t\t// Random float from <low, high> interval\n\t\trandFloat: function randFloat(low, high) {\n\t\t\treturn low + Math.random() * (high - low);\n\t\t},\n\t\t// Random float from <-range/2, range/2> interval\n\t\trandFloatSpread: function randFloatSpread(range) {\n\t\t\treturn range * (0.5 - Math.random());\n\t\t},\n\t\t// Deterministic pseudo-random float in the interval [ 0, 1 ]\n\t\tseededRandom: function seededRandom(s) {\n\t\t\tif (s !== undefined) _seed = s % 2147483647; // Park-Miller algorithm\n\n\t\t\t_seed = _seed * 16807 % 2147483647;\n\t\t\treturn (_seed - 1) / 2147483646;\n\t\t},\n\t\tdegToRad: function degToRad(degrees) {\n\t\t\treturn degrees * MathUtils.DEG2RAD;\n\t\t},\n\t\tradToDeg: function radToDeg(radians) {\n\t\t\treturn radians * MathUtils.RAD2DEG;\n\t\t},\n\t\tisPowerOfTwo: function isPowerOfTwo(value) {\n\t\t\treturn (value & value - 1) === 0 && value !== 0;\n\t\t},\n\t\tceilPowerOfTwo: function ceilPowerOfTwo(value) {\n\t\t\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n\t\t},\n\t\tfloorPowerOfTwo: function floorPowerOfTwo(value) {\n\t\t\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n\t\t},\n\t\tsetQuaternionFromProperEuler: function setQuaternionFromProperEuler(q, a, b, c, order) {\n\t\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\t\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t\t// angles are in radians\n\t\t\tvar cos = Math.cos;\n\t\t\tvar sin = Math.sin;\n\t\t\tvar c2 = cos(b / 2);\n\t\t\tvar s2 = sin(b / 2);\n\t\t\tvar c13 = cos((a + c) / 2);\n\t\t\tvar s13 = sin((a + c) / 2);\n\t\t\tvar c1_3 = cos((a - c) / 2);\n\t\t\tvar s1_3 = sin((a - c) / 2);\n\t\t\tvar c3_1 = cos((c - a) / 2);\n\t\t\tvar s3_1 = sin((c - a) / 2);\n\n\t\t\tswitch (order) {\n\t\t\t\tcase 'XYX':\n\t\t\t\t\tq.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZY':\n\t\t\t\t\tq.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXZ':\n\t\t\t\t\tq.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZX':\n\t\t\t\t\tq.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXY':\n\t\t\t\t\tq.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYZ':\n\t\t\t\t\tq.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar Vector2 = /*#__PURE__*/function () {\n\t\tfunction Vector2(x, y) {\n\t\t\tif (x === void 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\n\t\t\tif (y === void 0) {\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tObject.defineProperty(this, 'isVector2', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tvar _proto = Vector2.prototype;\n\n\t\t_proto.set = function set(x, y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setScalar = function setScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setX = function setX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setY = function setY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setComponent = function setComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getComponent = function getComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor(this.x, this.y);\n\t\t};\n\n\t\t_proto.copy = function copy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.add = function add(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.addScalar = function addScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.addVectors = function addVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.addScaledVector = function addScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.sub = function sub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.subScalar = function subScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.subVectors = function subVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.multiply = function multiply(v) {\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.multiplyScalar = function multiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.divide = function divide(v) {\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.divideScalar = function divideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t};\n\n\t\t_proto.applyMatrix3 = function applyMatrix3(m) {\n\t\t\tvar x = this.x,\n\t\t\t\t\ty = this.y;\n\t\t\tvar e = m.elements;\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6];\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.min = function min(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.max = function max(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clamp = function clamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clampScalar = function clampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clampLength = function clampLength(min, max) {\n\t\t\tvar length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t};\n\n\t\t_proto.floor = function floor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.ceil = function ceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.round = function round() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.roundToZero = function roundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.negate = function negate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.dot = function dot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y;\n\t\t};\n\n\t\t_proto.cross = function cross(v) {\n\t\t\treturn this.x * v.y - this.y * v.x;\n\t\t};\n\n\t\t_proto.lengthSq = function lengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y;\n\t\t};\n\n\t\t_proto.length = function length() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t};\n\n\t\t_proto.manhattanLength = function manhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y);\n\t\t};\n\n\t\t_proto.normalize = function normalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t};\n\n\t\t_proto.angle = function angle() {\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\t\t\tvar angle = Math.atan2(-this.y, -this.x) + Math.PI;\n\t\t\treturn angle;\n\t\t};\n\n\t\t_proto.distanceTo = function distanceTo(v) {\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t\t};\n\n\t\t_proto.distanceToSquared = function distanceToSquared(v) {\n\t\t\tvar dx = this.x - v.x,\n\t\t\t\t\tdy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t};\n\n\t\t_proto.manhattanDistanceTo = function manhattanDistanceTo(v) {\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n\t\t};\n\n\t\t_proto.setLength = function setLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t};\n\n\t\t_proto.lerp = function lerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.lerpVectors = function lerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y;\n\t\t};\n\n\t\t_proto.fromArray = function fromArray(array, offset) {\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toArray = function toArray(array, offset) {\n\t\t\tif (array === void 0) {\n\t\t\t\tarray = [];\n\t\t\t}\n\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\treturn array;\n\t\t};\n\n\t\t_proto.fromBufferAttribute = function fromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.rotateAround = function rotateAround(center, angle) {\n\t\t\tvar c = Math.cos(angle),\n\t\t\t\t\ts = Math.sin(angle);\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.random = function random() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\treturn this;\n\t\t};\n\n\t\t_createClass(Vector2, [{\n\t\t\tkey: \"width\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.x;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.x = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"height\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.y;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.y = value;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Vector2;\n\t}();\n\n\tvar Matrix3 = /*#__PURE__*/function () {\n\t\tfunction Matrix3() {\n\t\t\tObject.defineProperty(this, 'isMatrix3', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\tthis.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tconsole.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = Matrix3.prototype;\n\n\t\t_proto.set = function set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n\t\t\tvar te = this.elements;\n\t\t\tte[0] = n11;\n\t\t\tte[1] = n21;\n\t\t\tte[2] = n31;\n\t\t\tte[3] = n12;\n\t\t\tte[4] = n22;\n\t\t\tte[5] = n32;\n\t\t\tte[6] = n13;\n\t\t\tte[7] = n23;\n\t\t\tte[8] = n33;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.identity = function identity() {\n\t\t\tthis.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor().fromArray(this.elements);\n\t\t};\n\n\t\t_proto.copy = function copy(m) {\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\t\t\tte[0] = me[0];\n\t\t\tte[1] = me[1];\n\t\t\tte[2] = me[2];\n\t\t\tte[3] = me[3];\n\t\t\tte[4] = me[4];\n\t\t\tte[5] = me[5];\n\t\t\tte[6] = me[6];\n\t\t\tte[7] = me[7];\n\t\t\tte[8] = me[8];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.extractBasis = function extractBasis(xAxis, yAxis, zAxis) {\n\t\t\txAxis.setFromMatrix3Column(this, 0);\n\t\t\tyAxis.setFromMatrix3Column(this, 1);\n\t\t\tzAxis.setFromMatrix3Column(this, 2);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromMatrix4 = function setFromMatrix4(m) {\n\t\t\tvar me = m.elements;\n\t\t\tthis.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.multiply = function multiply(m) {\n\t\t\treturn this.multiplyMatrices(this, m);\n\t\t};\n\n\t\t_proto.premultiply = function premultiply(m) {\n\t\t\treturn this.multiplyMatrices(m, this);\n\t\t};\n\n\t\t_proto.multiplyMatrices = function multiplyMatrices(a, b) {\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\t\t\tvar a11 = ae[0],\n\t\t\t\t\ta12 = ae[3],\n\t\t\t\t\ta13 = ae[6];\n\t\t\tvar a21 = ae[1],\n\t\t\t\t\ta22 = ae[4],\n\t\t\t\t\ta23 = ae[7];\n\t\t\tvar a31 = ae[2],\n\t\t\t\t\ta32 = ae[5],\n\t\t\t\t\ta33 = ae[8];\n\t\t\tvar b11 = be[0],\n\t\t\t\t\tb12 = be[3],\n\t\t\t\t\tb13 = be[6];\n\t\t\tvar b21 = be[1],\n\t\t\t\t\tb22 = be[4],\n\t\t\t\t\tb23 = be[7];\n\t\t\tvar b31 = be[2],\n\t\t\t\t\tb32 = be[5],\n\t\t\t\t\tb33 = be[8];\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[3] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[6] = a11 * b13 + a12 * b23 + a13 * b33;\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[4] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[7] = a21 * b13 + a22 * b23 + a23 * b33;\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[5] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[8] = a31 * b13 + a32 * b23 + a33 * b33;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.multiplyScalar = function multiplyScalar(s) {\n\t\t\tvar te = this.elements;\n\t\t\tte[0] *= s;\n\t\t\tte[3] *= s;\n\t\t\tte[6] *= s;\n\t\t\tte[1] *= s;\n\t\t\tte[4] *= s;\n\t\t\tte[7] *= s;\n\t\t\tte[2] *= s;\n\t\t\tte[5] *= s;\n\t\t\tte[8] *= s;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.determinant = function determinant() {\n\t\t\tvar te = this.elements;\n\t\t\tvar a = te[0],\n\t\t\t\t\tb = te[1],\n\t\t\t\t\tc = te[2],\n\t\t\t\t\td = te[3],\n\t\t\t\t\te = te[4],\n\t\t\t\t\tf = te[5],\n\t\t\t\t\tg = te[6],\n\t\t\t\t\th = te[7],\n\t\t\t\t\ti = te[8];\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\t\t};\n\n\t\t_proto.invert = function invert() {\n\t\t\tvar te = this.elements,\n\t\t\t\t\tn11 = te[0],\n\t\t\t\t\tn21 = te[1],\n\t\t\t\t\tn31 = te[2],\n\t\t\t\t\tn12 = te[3],\n\t\t\t\t\tn22 = te[4],\n\t\t\t\t\tn32 = te[5],\n\t\t\t\t\tn13 = te[6],\n\t\t\t\t\tn23 = te[7],\n\t\t\t\t\tn33 = te[8],\n\t\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\t\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n\t\t\tvar detInv = 1 / det;\n\t\t\tte[0] = t11 * detInv;\n\t\t\tte[1] = (n31 * n23 - n33 * n21) * detInv;\n\t\t\tte[2] = (n32 * n21 - n31 * n22) * detInv;\n\t\t\tte[3] = t12 * detInv;\n\t\t\tte[4] = (n33 * n11 - n31 * n13) * detInv;\n\t\t\tte[5] = (n31 * n12 - n32 * n11) * detInv;\n\t\t\tte[6] = t13 * detInv;\n\t\t\tte[7] = (n21 * n13 - n23 * n11) * detInv;\n\t\t\tte[8] = (n22 * n11 - n21 * n12) * detInv;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.transpose = function transpose() {\n\t\t\tvar tmp;\n\t\t\tvar m = this.elements;\n\t\t\ttmp = m[1];\n\t\t\tm[1] = m[3];\n\t\t\tm[3] = tmp;\n\t\t\ttmp = m[2];\n\t\t\tm[2] = m[6];\n\t\t\tm[6] = tmp;\n\t\t\ttmp = m[5];\n\t\t\tm[5] = m[7];\n\t\t\tm[7] = tmp;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getNormalMatrix = function getNormalMatrix(matrix4) {\n\t\t\treturn this.setFromMatrix4(matrix4).copy(this).invert().transpose();\n\t\t};\n\n\t\t_proto.transposeIntoArray = function transposeIntoArray(r) {\n\t\t\tvar m = this.elements;\n\t\t\tr[0] = m[0];\n\t\t\tr[1] = m[3];\n\t\t\tr[2] = m[6];\n\t\t\tr[3] = m[1];\n\t\t\tr[4] = m[4];\n\t\t\tr[5] = m[7];\n\t\t\tr[6] = m[2];\n\t\t\tr[7] = m[5];\n\t\t\tr[8] = m[8];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setUvTransform = function setUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n\t\t\tvar c = Math.cos(rotation);\n\t\t\tvar s = Math.sin(rotation);\n\t\t\tthis.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.scale = function scale(sx, sy) {\n\t\t\tvar te = this.elements;\n\t\t\tte[0] *= sx;\n\t\t\tte[3] *= sx;\n\t\t\tte[6] *= sx;\n\t\t\tte[1] *= sy;\n\t\t\tte[4] *= sy;\n\t\t\tte[7] *= sy;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.rotate = function rotate(theta) {\n\t\t\tvar c = Math.cos(theta);\n\t\t\tvar s = Math.sin(theta);\n\t\t\tvar te = this.elements;\n\t\t\tvar a11 = te[0],\n\t\t\t\t\ta12 = te[3],\n\t\t\t\t\ta13 = te[6];\n\t\t\tvar a21 = te[1],\n\t\t\t\t\ta22 = te[4],\n\t\t\t\t\ta23 = te[7];\n\t\t\tte[0] = c * a11 + s * a21;\n\t\t\tte[3] = c * a12 + s * a22;\n\t\t\tte[6] = c * a13 + s * a23;\n\t\t\tte[1] = -s * a11 + c * a21;\n\t\t\tte[4] = -s * a12 + c * a22;\n\t\t\tte[7] = -s * a13 + c * a23;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.translate = function translate(tx, ty) {\n\t\t\tvar te = this.elements;\n\t\t\tte[0] += tx * te[2];\n\t\t\tte[3] += tx * te[5];\n\t\t\tte[6] += tx * te[8];\n\t\t\tte[1] += ty * te[2];\n\t\t\tte[4] += ty * te[5];\n\t\t\tte[7] += ty * te[8];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(matrix) {\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor (var i = 0; i < 9; i++) {\n\t\t\t\tif (te[i] !== me[i]) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.fromArray = function fromArray(array, offset) {\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < 9; i++) {\n\t\t\t\tthis.elements[i] = array[i + offset];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toArray = function toArray(array, offset) {\n\t\t\tif (array === void 0) {\n\t\t\t\tarray = [];\n\t\t\t}\n\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\t\t\tarray[offset] = te[0];\n\t\t\tarray[offset + 1] = te[1];\n\t\t\tarray[offset + 2] = te[2];\n\t\t\tarray[offset + 3] = te[3];\n\t\t\tarray[offset + 4] = te[4];\n\t\t\tarray[offset + 5] = te[5];\n\t\t\tarray[offset + 6] = te[6];\n\t\t\tarray[offset + 7] = te[7];\n\t\t\tarray[offset + 8] = te[8];\n\t\t\treturn array;\n\t\t};\n\n\t\treturn Matrix3;\n\t}();\n\n\tvar _canvas;\n\n\tvar ImageUtils = {\n\t\tgetDataURL: function getDataURL(image) {\n\t\t\tif (/^data:/i.test(image.src)) {\n\t\t\t\treturn image.src;\n\t\t\t}\n\n\t\t\tif (typeof HTMLCanvasElement == 'undefined') {\n\t\t\t\treturn image.src;\n\t\t\t}\n\n\t\t\tvar canvas;\n\n\t\t\tif (image instanceof HTMLCanvasElement) {\n\t\t\t\tcanvas = image;\n\t\t\t} else {\n\t\t\t\tif (_canvas === undefined) _canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\t\t\t\t_canvas.width = image.width;\n\t\t\t\t_canvas.height = image.height;\n\n\t\t\t\tvar context = _canvas.getContext('2d');\n\n\t\t\t\tif (image instanceof ImageData) {\n\t\t\t\t\tcontext.putImageData(image, 0, 0);\n\t\t\t\t} else {\n\t\t\t\t\tcontext.drawImage(image, 0, 0, image.width, image.height);\n\t\t\t\t}\n\n\t\t\t\tcanvas = _canvas;\n\t\t\t}\n\n\t\t\tif (canvas.width > 2048 || canvas.height > 2048) {\n\t\t\t\treturn canvas.toDataURL('image/jpeg', 0.6);\n\t\t\t} else {\n\t\t\t\treturn canvas.toDataURL('image/png');\n\t\t\t}\n\t\t}\n\t};\n\n\tvar textureId = 0;\n\n\tfunction Texture(image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n\t\tif (image === void 0) {\n\t\t\timage = Texture.DEFAULT_IMAGE;\n\t\t}\n\n\t\tif (mapping === void 0) {\n\t\t\tmapping = Texture.DEFAULT_MAPPING;\n\t\t}\n\n\t\tif (wrapS === void 0) {\n\t\t\twrapS = ClampToEdgeWrapping;\n\t\t}\n\n\t\tif (wrapT === void 0) {\n\t\t\twrapT = ClampToEdgeWrapping;\n\t\t}\n\n\t\tif (magFilter === void 0) {\n\t\t\tmagFilter = LinearFilter;\n\t\t}\n\n\t\tif (minFilter === void 0) {\n\t\t\tminFilter = LinearMipmapLinearFilter;\n\t\t}\n\n\t\tif (format === void 0) {\n\t\t\tformat = RGBAFormat;\n\t\t}\n\n\t\tif (type === void 0) {\n\t\t\ttype = UnsignedByteType;\n\t\t}\n\n\t\tif (anisotropy === void 0) {\n\t\t\tanisotropy = 1;\n\t\t}\n\n\t\tif (encoding === void 0) {\n\t\t\tencoding = LinearEncoding;\n\t\t}\n\n\t\tObject.defineProperty(this, 'id', {\n\t\t\tvalue: textureId++\n\t\t});\n\t\tthis.uuid = MathUtils.generateUUID();\n\t\tthis.name = '';\n\t\tthis.image = image;\n\t\tthis.mipmaps = [];\n\t\tthis.mapping = mapping;\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\t\tthis.anisotropy = anisotropy;\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\t\tthis.offset = new Vector2(0, 0);\n\t\tthis.repeat = new Vector2(1, 1);\n\t\tthis.center = new Vector2(0, 0);\n\t\tthis.rotation = 0;\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n\t\tthis.encoding = encoding;\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\tTexture.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n\t\tconstructor: Texture,\n\t\tisTexture: true,\n\t\tupdateMatrix: function updateMatrix() {\n\t\t\tthis.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n\t\t},\n\t\tclone: function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t},\n\t\tcopy: function copy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice(0);\n\t\t\tthis.mapping = source.mapping;\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\t\t\tthis.anisotropy = source.anisotropy;\n\t\t\tthis.format = source.format;\n\t\t\tthis.internalFormat = source.internalFormat;\n\t\t\tthis.type = source.type;\n\t\t\tthis.offset.copy(source.offset);\n\t\t\tthis.repeat.copy(source.repeat);\n\t\t\tthis.center.copy(source.center);\n\t\t\tthis.rotation = source.rotation;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrix.copy(source.matrix);\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\t\t\treturn this;\n\t\t},\n\t\ttoJSON: function toJSON(meta) {\n\t\t\tvar isRootObject = meta === undefined || typeof meta === 'string';\n\n\t\t\tif (!isRootObject && meta.textures[this.uuid] !== undefined) {\n\t\t\t\treturn meta.textures[this.uuid];\n\t\t\t}\n\n\t\t\tvar output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\t\t\t\tmapping: this.mapping,\n\t\t\t\trepeat: [this.repeat.x, this.repeat.y],\n\t\t\t\toffset: [this.offset.x, this.offset.y],\n\t\t\t\tcenter: [this.center.x, this.center.y],\n\t\t\t\trotation: this.rotation,\n\t\t\t\twrap: [this.wrapS, this.wrapT],\n\t\t\t\tformat: this.format,\n\t\t\t\ttype: this.type,\n\t\t\t\tencoding: this.encoding,\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\t\t\t\tflipY: this.flipY,\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\t\tunpackAlignment: this.unpackAlignment\n\t\t\t};\n\n\t\t\tif (this.image !== undefined) {\n\t\t\t\t// TODO: Move to THREE.Image\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif (image.uuid === undefined) {\n\t\t\t\t\timage.uuid = MathUtils.generateUUID(); // UGH\n\t\t\t\t}\n\n\t\t\t\tif (!isRootObject && meta.images[image.uuid] === undefined) {\n\t\t\t\t\tvar url;\n\n\t\t\t\t\tif (Array.isArray(image)) {\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\n\t\t\t\t\t\turl = [];\n\n\t\t\t\t\t\tfor (var i = 0, l = image.length; i < l; i++) {\n\t\t\t\t\t\t\t// check cube texture with data textures\n\t\t\t\t\t\t\tif (image[i].isDataTexture) {\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i].image));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// process single image\n\t\t\t\t\t\turl = serializeImage(image);\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.images[image.uuid] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: url\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\t\t\t}\n\n\t\t\tif (!isRootObject) {\n\t\t\t\tmeta.textures[this.uuid] = output;\n\t\t\t}\n\n\t\t\treturn output;\n\t\t},\n\t\tdispose: function dispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t},\n\t\ttransformUv: function transformUv(uv) {\n\t\t\tif (this.mapping !== UVMapping) return uv;\n\t\t\tuv.applyMatrix3(this.matrix);\n\n\t\t\tif (uv.x < 0 || uv.x > 1) {\n\t\t\t\tswitch (this.wrapS) {\n\t\t\t\t\tcase RepeatWrapping:\n\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.x) % 2) === 1) {\n\t\t\t\t\t\t\tuv.x = Math.ceil(uv.x) - uv.x;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (uv.y < 0 || uv.y > 1) {\n\t\t\t\tswitch (this.wrapT) {\n\t\t\t\t\tcase RepeatWrapping:\n\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.y) % 2) === 1) {\n\t\t\t\t\t\t\tuv.y = Math.ceil(uv.y) - uv.y;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.flipY) {\n\t\t\t\tuv.y = 1 - uv.y;\n\t\t\t}\n\n\t\t\treturn uv;\n\t\t}\n\t});\n\tObject.defineProperty(Texture.prototype, 'needsUpdate', {\n\t\tset: function set(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\t});\n\n\tfunction serializeImage(image) {\n\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n\t\t\t// default images\n\t\t\treturn ImageUtils.getDataURL(image);\n\t\t} else {\n\t\t\tif (image.data) {\n\t\t\t\t// images of DataTexture\n\t\t\t\treturn {\n\t\t\t\t\tdata: Array.prototype.slice.call(image.data),\n\t\t\t\t\twidth: image.width,\n\t\t\t\t\theight: image.height,\n\t\t\t\t\ttype: image.data.constructor.name\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.Texture: Unable to serialize Texture.');\n\t\t\t\treturn {};\n\t\t\t}\n\t\t}\n\t}\n\n\tvar Vector4 = /*#__PURE__*/function () {\n\t\tfunction Vector4(x, y, z, w) {\n\t\t\tif (x === void 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\n\t\t\tif (y === void 0) {\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tif (z === void 0) {\n\t\t\t\tz = 0;\n\t\t\t}\n\n\t\t\tif (w === void 0) {\n\t\t\t\tw = 1;\n\t\t\t}\n\n\t\t\tObject.defineProperty(this, 'isVector4', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t}\n\n\t\tvar _proto = Vector4.prototype;\n\n\t\t_proto.set = function set(x, y, z, w) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setScalar = function setScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setX = function setX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setY = function setY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setZ = function setZ(z) {\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setW = function setW(w) {\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setComponent = function setComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.z = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.w = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getComponent = function getComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this.z;\n\n\t\t\t\tcase 3:\n\t\t\t\t\treturn this.w;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor(this.x, this.y, this.z, this.w);\n\t\t};\n\n\t\t_proto.copy = function copy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = v.w !== undefined ? v.w : 1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.add = function add(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.addScalar = function addScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.addVectors = function addVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.addScaledVector = function addScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.sub = function sub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.subScalar = function subScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.subVectors = function subVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.multiply = function multiply(v) {\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\t\t\tthis.w *= v.w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.multiplyScalar = function multiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.applyMatrix4 = function applyMatrix4(m) {\n\t\t\tvar x = this.x,\n\t\t\t\t\ty = this.y,\n\t\t\t\t\tz = this.z,\n\t\t\t\t\tw = this.w;\n\t\t\tvar e = m.elements;\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n\t\t\tthis.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.divideScalar = function divideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t};\n\n\t\t_proto.setAxisAngleFromQuaternion = function setAxisAngleFromQuaternion(q) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\t\t\t// q is assumed to be normalized\n\t\t\tthis.w = 2 * Math.acos(q.w);\n\t\t\tvar s = Math.sqrt(1 - q.w * q.w);\n\n\t\t\tif (s < 0.0001) {\n\t\t\t\tthis.x = 1;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\t\t\t} else {\n\t\t\t\tthis.x = q.x / s;\n\t\t\t\tthis.y = q.y / s;\n\t\t\t\tthis.z = q.z / s;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setAxisAngleFromRotationMatrix = function setAxisAngleFromRotationMatrix(m) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tvar angle, x, y, z; // variables for result\n\n\t\t\tvar epsilon = 0.01,\n\t\t\t\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\n\t\t\t\t\t// margin to distinguish between 0 and 180 degrees\n\t\t\tte = m.elements,\n\t\t\t\t\tm11 = te[0],\n\t\t\t\t\tm12 = te[4],\n\t\t\t\t\tm13 = te[8],\n\t\t\t\t\tm21 = te[1],\n\t\t\t\t\tm22 = te[5],\n\t\t\t\t\tm23 = te[9],\n\t\t\t\t\tm31 = te[2],\n\t\t\t\t\tm32 = te[6],\n\t\t\t\t\tm33 = te[10];\n\n\t\t\tif (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\t\t\t\tif (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\t\t\t\t\tthis.set(1, 0, 0, 0);\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\t\t\t\t} // otherwise this singularity is angle = 180\n\n\n\t\t\t\tangle = Math.PI;\n\t\t\t\tvar xx = (m11 + 1) / 2;\n\t\t\t\tvar yy = (m22 + 1) / 2;\n\t\t\t\tvar zz = (m33 + 1) / 2;\n\t\t\t\tvar xy = (m12 + m21) / 4;\n\t\t\t\tvar xz = (m13 + m31) / 4;\n\t\t\t\tvar yz = (m23 + m32) / 4;\n\n\t\t\t\tif (xx > yy && xx > zz) {\n\t\t\t\t\t// m11 is the largest diagonal term\n\t\t\t\t\tif (xx < epsilon) {\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = Math.sqrt(xx);\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\t\t\t\t\t}\n\t\t\t\t} else if (yy > zz) {\n\t\t\t\t\t// m22 is the largest diagonal term\n\t\t\t\t\tif (yy < epsilon) {\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty = Math.sqrt(yy);\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\t\t\t\t\tif (zz < epsilon) {\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tz = Math.sqrt(zz);\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.set(x, y, z, angle);\n\t\t\t\treturn this; // return 180 deg rotation\n\t\t\t} // as we have reached here there are no singularities so we can handle normally\n\n\n\t\t\tvar s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n\t\t\tif (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = (m32 - m23) / s;\n\t\t\tthis.y = (m13 - m31) / s;\n\t\t\tthis.z = (m21 - m12) / s;\n\t\t\tthis.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.min = function min(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\tthis.z = Math.min(this.z, v.z);\n\t\t\tthis.w = Math.min(this.w, v.w);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.max = function max(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\tthis.z = Math.max(this.z, v.z);\n\t\t\tthis.w = Math.max(this.w, v.w);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clamp = function clamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\t\tthis.w = Math.max(min.w, Math.min(max.w, this.w));\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clampScalar = function clampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\t\tthis.w = Math.max(minVal, Math.min(maxVal, this.w));\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clampLength = function clampLength(min, max) {\n\t\t\tvar length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t};\n\n\t\t_proto.floor = function floor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\tthis.z = Math.floor(this.z);\n\t\t\tthis.w = Math.floor(this.w);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.ceil = function ceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\tthis.z = Math.ceil(this.z);\n\t\t\tthis.w = Math.ceil(this.w);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.round = function round() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\tthis.z = Math.round(this.z);\n\t\t\tthis.w = Math.round(this.w);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.roundToZero = function roundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\t\t\tthis.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.negate = function negate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\tthis.z = -this.z;\n\t\t\tthis.w = -this.w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.dot = function dot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\t\t};\n\n\t\t_proto.lengthSq = function lengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\t\t};\n\n\t\t_proto.length = function length() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n\t\t};\n\n\t\t_proto.manhattanLength = function manhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n\t\t};\n\n\t\t_proto.normalize = function normalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t};\n\n\t\t_proto.setLength = function setLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t};\n\n\t\t_proto.lerp = function lerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\tthis.z += (v.z - this.z) * alpha;\n\t\t\tthis.w += (v.w - this.w) * alpha;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.lerpVectors = function lerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\n\t\t\tthis.w = v1.w + (v2.w - v1.w) * alpha;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n\t\t};\n\n\t\t_proto.fromArray = function fromArray(array, offset) {\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\tthis.z = array[offset + 2];\n\t\t\tthis.w = array[offset + 3];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toArray = function toArray(array, offset) {\n\t\t\tif (array === void 0) {\n\t\t\t\tarray = [];\n\t\t\t}\n\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\tarray[offset + 2] = this.z;\n\t\t\tarray[offset + 3] = this.w;\n\t\t\treturn array;\n\t\t};\n\n\t\t_proto.fromBufferAttribute = function fromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\tthis.z = attribute.getZ(index);\n\t\t\tthis.w = attribute.getW(index);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.random = function random() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\tthis.w = Math.random();\n\t\t\treturn this;\n\t\t};\n\n\t\t_createClass(Vector4, [{\n\t\t\tkey: \"width\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.z;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.z = value;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"height\",\n\t\t\tget: function get() {\n\t\t\t\treturn this.w;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis.w = value;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Vector4;\n\t}();\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\n\tvar WebGLRenderTarget = /*#__PURE__*/function (_EventDispatcher) {\n\t\t_inheritsLoose(WebGLRenderTarget, _EventDispatcher);\n\n\t\tfunction WebGLRenderTarget(width, height, options) {\n\t\t\tvar _this;\n\n\t\t\t_this = _EventDispatcher.call(this) || this;\n\t\t\tObject.defineProperty(_assertThisInitialized(_this), 'isWebGLRenderTarget', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\t_this.width = width;\n\t\t\t_this.height = height;\n\t\t\t_this.scissor = new Vector4(0, 0, width, height);\n\t\t\t_this.scissorTest = false;\n\t\t\t_this.viewport = new Vector4(0, 0, width, height);\n\t\t\toptions = options || {};\n\t\t\t_this.texture = new Texture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n\t\t\t_this.texture.image = {};\n\t\t\t_this.texture.image.width = width;\n\t\t\t_this.texture.image.height = height;\n\t\t\t_this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t\t_this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\t\t\t_this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\t\t_this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\t\t_this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = WebGLRenderTarget.prototype;\n\n\t\t_proto.setSize = function setSize(width, height) {\n\t\t\tif (this.width !== width || this.height !== height) {\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\t\t\t\tthis.texture.image.width = width;\n\t\t\t\tthis.texture.image.height = height;\n\t\t\t\tthis.dispose();\n\t\t\t}\n\n\t\t\tthis.viewport.set(0, 0, width, height);\n\t\t\tthis.scissor.set(0, 0, width, height);\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t};\n\n\t\t_proto.copy = function copy(source) {\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\tthis.viewport.copy(source.viewport);\n\t\t\tthis.texture = source.texture.clone();\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.dispose = function dispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t};\n\n\t\treturn WebGLRenderTarget;\n\t}(EventDispatcher);\n\n\tvar WebGLMultisampleRenderTarget = /*#__PURE__*/function (_WebGLRenderTarget) {\n\t\t_inheritsLoose(WebGLMultisampleRenderTarget, _WebGLRenderTarget);\n\n\t\tfunction WebGLMultisampleRenderTarget(width, height, options) {\n\t\t\tvar _this;\n\n\t\t\t_this = _WebGLRenderTarget.call(this, width, height, options) || this;\n\t\t\tObject.defineProperty(_assertThisInitialized(_this), 'isWebGLMultisampleRenderTarget', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\t_this.samples = 4;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = WebGLMultisampleRenderTarget.prototype;\n\n\t\t_proto.copy = function copy(source) {\n\t\t\t_WebGLRenderTarget.prototype.copy.call(this, source);\n\n\t\t\tthis.samples = source.samples;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn WebGLMultisampleRenderTarget;\n\t}(WebGLRenderTarget);\n\n\tvar Quaternion = /*#__PURE__*/function () {\n\t\tfunction Quaternion(x, y, z, w) {\n\t\t\tif (x === void 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\n\t\t\tif (y === void 0) {\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tif (z === void 0) {\n\t\t\t\tz = 0;\n\t\t\t}\n\n\t\t\tif (w === void 0) {\n\t\t\t\tw = 1;\n\t\t\t}\n\n\t\t\tObject.defineProperty(this, 'isQuaternion', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\t\t}\n\n\t\tQuaternion.slerp = function slerp(qa, qb, qm, t) {\n\t\t\treturn qm.copy(qa).slerp(qb, t);\n\t\t};\n\n\t\tQuaternion.slerpFlat = function slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\t\t\tvar x0 = src0[srcOffset0 + 0],\n\t\t\t\t\ty0 = src0[srcOffset0 + 1],\n\t\t\t\t\tz0 = src0[srcOffset0 + 2],\n\t\t\t\t\tw0 = src0[srcOffset0 + 3];\n\t\t\tvar x1 = src1[srcOffset1 + 0],\n\t\t\t\t\ty1 = src1[srcOffset1 + 1],\n\t\t\t\t\tz1 = src1[srcOffset1 + 2],\n\t\t\t\t\tw1 = src1[srcOffset1 + 3];\n\n\t\t\tif (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n\t\t\t\tvar s = 1 - t;\n\t\t\t\tvar cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\t\t\tdir = cos >= 0 ? 1 : -1,\n\t\t\t\t\t\tsqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n\t\t\t\tif (sqrSin > Number.EPSILON) {\n\t\t\t\t\tvar sin = Math.sqrt(sqrSin),\n\t\t\t\t\t\t\tlen = Math.atan2(sin, cos * dir);\n\t\t\t\t\ts = Math.sin(s * len) / sin;\n\t\t\t\t\tt = Math.sin(t * len) / sin;\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n\t\t\t\tif (s === 1 - t) {\n\t\t\t\t\tvar f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdst[dstOffset] = x0;\n\t\t\tdst[dstOffset + 1] = y0;\n\t\t\tdst[dstOffset + 2] = z0;\n\t\t\tdst[dstOffset + 3] = w0;\n\t\t};\n\n\t\tQuaternion.multiplyQuaternionsFlat = function multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\n\t\t\tvar x0 = src0[srcOffset0];\n\t\t\tvar y0 = src0[srcOffset0 + 1];\n\t\t\tvar z0 = src0[srcOffset0 + 2];\n\t\t\tvar w0 = src0[srcOffset0 + 3];\n\t\t\tvar x1 = src1[srcOffset1];\n\t\t\tvar y1 = src1[srcOffset1 + 1];\n\t\t\tvar z1 = src1[srcOffset1 + 2];\n\t\t\tvar w1 = src1[srcOffset1 + 3];\n\t\t\tdst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\t\tdst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\t\tdst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\t\tdst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\t\t\treturn dst;\n\t\t};\n\n\t\tvar _proto = Quaternion.prototype;\n\n\t\t_proto.set = function set(x, y, z, w) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._w);\n\t\t};\n\n\t\t_proto.copy = function copy(quaternion) {\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromEuler = function setFromEuler(euler, update) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tthrow new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\tvar x = euler._x,\n\t\t\t\t\ty = euler._y,\n\t\t\t\t\tz = euler._z,\n\t\t\t\t\torder = euler._order; // http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar cos = Math.cos;\n\t\t\tvar sin = Math.sin;\n\t\t\tvar c1 = cos(x / 2);\n\t\t\tvar c2 = cos(y / 2);\n\t\t\tvar c3 = cos(z / 2);\n\t\t\tvar s1 = sin(x / 2);\n\t\t\tvar s2 = sin(y / 2);\n\t\t\tvar s3 = sin(z / 2);\n\n\t\t\tswitch (order) {\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order);\n\t\t\t}\n\n\t\t\tif (update !== false) this._onChangeCallback();\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromAxisAngle = function setFromAxisAngle(axis, angle) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\t\t\t// assumes axis is normalized\n\t\t\tvar halfAngle = angle / 2,\n\t\t\t\t\ts = Math.sin(halfAngle);\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos(halfAngle);\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromRotationMatrix = function setFromRotationMatrix(m) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tvar te = m.elements,\n\t\t\t\t\tm11 = te[0],\n\t\t\t\t\tm12 = te[4],\n\t\t\t\t\tm13 = te[8],\n\t\t\t\t\tm21 = te[1],\n\t\t\t\t\tm22 = te[5],\n\t\t\t\t\tm23 = te[9],\n\t\t\t\t\tm31 = te[2],\n\t\t\t\t\tm32 = te[6],\n\t\t\t\t\tm33 = te[10],\n\t\t\t\t\ttrace = m11 + m22 + m33;\n\n\t\t\tif (trace > 0) {\n\t\t\t\tvar s = 0.5 / Math.sqrt(trace + 1.0);\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = (m32 - m23) * s;\n\t\t\t\tthis._y = (m13 - m31) * s;\n\t\t\t\tthis._z = (m21 - m12) * s;\n\t\t\t} else if (m11 > m22 && m11 > m33) {\n\t\t\t\tvar _s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n\t\t\t\tthis._w = (m32 - m23) / _s;\n\t\t\t\tthis._x = 0.25 * _s;\n\t\t\t\tthis._y = (m12 + m21) / _s;\n\t\t\t\tthis._z = (m13 + m31) / _s;\n\t\t\t} else if (m22 > m33) {\n\t\t\t\tvar _s2 = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n\t\t\t\tthis._w = (m13 - m31) / _s2;\n\t\t\t\tthis._x = (m12 + m21) / _s2;\n\t\t\t\tthis._y = 0.25 * _s2;\n\t\t\t\tthis._z = (m23 + m32) / _s2;\n\t\t\t} else {\n\t\t\t\tvar _s3 = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n\t\t\t\tthis._w = (m21 - m12) / _s3;\n\t\t\t\tthis._x = (m13 + m31) / _s3;\n\t\t\t\tthis._y = (m23 + m32) / _s3;\n\t\t\t\tthis._z = 0.25 * _s3;\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromUnitVectors = function setFromUnitVectors(vFrom, vTo) {\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\t\t\tvar EPS = 0.000001;\n\t\t\tvar r = vFrom.dot(vTo) + 1;\n\n\t\t\tif (r < EPS) {\n\t\t\t\tr = 0;\n\n\t\t\t\tif (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n\t\t\t\t\tthis._x = -vFrom.y;\n\t\t\t\t\tthis._y = vFrom.x;\n\t\t\t\t\tthis._z = 0;\n\t\t\t\t\tthis._w = r;\n\t\t\t\t} else {\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = -vFrom.z;\n\t\t\t\t\tthis._z = vFrom.y;\n\t\t\t\t\tthis._w = r;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\t\tthis._w = r;\n\t\t\t}\n\n\t\t\treturn this.normalize();\n\t\t};\n\n\t\t_proto.angleTo = function angleTo(q) {\n\t\t\treturn 2 * Math.acos(Math.abs(MathUtils.clamp(this.dot(q), -1, 1)));\n\t\t};\n\n\t\t_proto.rotateTowards = function rotateTowards(q, step) {\n\t\t\tvar angle = this.angleTo(q);\n\t\t\tif (angle === 0) return this;\n\t\t\tvar t = Math.min(1, step / angle);\n\t\t\tthis.slerp(q, t);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.identity = function identity() {\n\t\t\treturn this.set(0, 0, 0, 1);\n\t\t};\n\n\t\t_proto.invert = function invert() {\n\t\t\t// quaternion is assumed to have unit length\n\t\t\treturn this.conjugate();\n\t\t};\n\n\t\t_proto.conjugate = function conjugate() {\n\t\t\tthis._x *= -1;\n\t\t\tthis._y *= -1;\n\t\t\tthis._z *= -1;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.dot = function dot(v) {\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\t\t};\n\n\t\t_proto.lengthSq = function lengthSq() {\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\t\t};\n\n\t\t_proto.length = function length() {\n\t\t\treturn Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n\t\t};\n\n\t\t_proto.normalize = function normalize() {\n\t\t\tvar l = this.length();\n\n\t\t\tif (l === 0) {\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\t\t\t} else {\n\t\t\t\tl = 1 / l;\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.multiply = function multiply(q, p) {\n\t\t\tif (p !== undefined) {\n\t\t\t\tconsole.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n\t\t\t\treturn this.multiplyQuaternions(q, p);\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions(this, q);\n\t\t};\n\n\t\t_proto.premultiply = function premultiply(q) {\n\t\t\treturn this.multiplyQuaternions(q, this);\n\t\t};\n\n\t\t_proto.multiplyQuaternions = function multiplyQuaternions(a, b) {\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\t\t\tvar qax = a._x,\n\t\t\t\t\tqay = a._y,\n\t\t\t\t\tqaz = a._z,\n\t\t\t\t\tqaw = a._w;\n\t\t\tvar qbx = b._x,\n\t\t\t\t\tqby = b._y,\n\t\t\t\t\tqbz = b._z,\n\t\t\t\t\tqbw = b._w;\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.slerp = function slerp(qb, t) {\n\t\t\tif (t === 0) return this;\n\t\t\tif (t === 1) return this.copy(qb);\n\t\t\tvar x = this._x,\n\t\t\t\t\ty = this._y,\n\t\t\t\t\tz = this._z,\n\t\t\t\t\tw = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif (cosHalfTheta < 0) {\n\t\t\t\tthis._w = -qb._w;\n\t\t\t\tthis._x = -qb._x;\n\t\t\t\tthis._y = -qb._y;\n\t\t\t\tthis._z = -qb._z;\n\t\t\t\tcosHalfTheta = -cosHalfTheta;\n\t\t\t} else {\n\t\t\t\tthis.copy(qb);\n\t\t\t}\n\n\t\t\tif (cosHalfTheta >= 1.0) {\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\t\tif (sqrSinHalfTheta <= Number.EPSILON) {\n\t\t\t\tvar s = 1 - t;\n\t\t\t\tthis._w = s * w + t * this._w;\n\t\t\t\tthis._x = s * x + t * this._x;\n\t\t\t\tthis._y = s * y + t * this._y;\n\t\t\t\tthis._z = s * z + t * this._z;\n\t\t\t\tthis.normalize();\n\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n\t\t\tvar halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n\t\t\tvar ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n\t\t\t\t\tratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n\t\t\tthis._w = w * ratioA + this._w * ratioB;\n\t\t\tthis._x = x * ratioA + this._x * ratioB;\n\t\t\tthis._y = y * ratioA + this._y * ratioB;\n\t\t\tthis._z = z * ratioA + this._z * ratioB;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(quaternion) {\n\t\t\treturn quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n\t\t};\n\n\t\t_proto.fromArray = function fromArray(array, offset) {\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tthis._x = array[offset];\n\t\t\tthis._y = array[offset + 1];\n\t\t\tthis._z = array[offset + 2];\n\t\t\tthis._w = array[offset + 3];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toArray = function toArray(array, offset) {\n\t\t\tif (array === void 0) {\n\t\t\t\tarray = [];\n\t\t\t}\n\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tarray[offset] = this._x;\n\t\t\tarray[offset + 1] = this._y;\n\t\t\tarray[offset + 2] = this._z;\n\t\t\tarray[offset + 3] = this._w;\n\t\t\treturn array;\n\t\t};\n\n\t\t_proto.fromBufferAttribute = function fromBufferAttribute(attribute, index) {\n\t\t\tthis._x = attribute.getX(index);\n\t\t\tthis._y = attribute.getY(index);\n\t\t\tthis._z = attribute.getZ(index);\n\t\t\tthis._w = attribute.getW(index);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto._onChange = function _onChange(callback) {\n\t\t\tthis._onChangeCallback = callback;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto._onChangeCallback = function _onChangeCallback() {};\n\n\t\t_createClass(Quaternion, [{\n\t\t\tkey: \"x\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._x;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._x = value;\n\n\t\t\t\tthis._onChangeCallback();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"y\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._y;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._y = value;\n\n\t\t\t\tthis._onChangeCallback();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"z\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._z;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._z = value;\n\n\t\t\t\tthis._onChangeCallback();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"w\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._w;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._w = value;\n\n\t\t\t\tthis._onChangeCallback();\n\t\t\t}\n\t\t}]);\n\n\t\treturn Quaternion;\n\t}();\n\n\tvar Vector3 = /*#__PURE__*/function () {\n\t\tfunction Vector3(x, y, z) {\n\t\t\tif (x === void 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\n\t\t\tif (y === void 0) {\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tif (z === void 0) {\n\t\t\t\tz = 0;\n\t\t\t}\n\n\t\t\tObject.defineProperty(this, 'isVector3', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tvar _proto = Vector3.prototype;\n\n\t\t_proto.set = function set(x, y, z) {\n\t\t\tif (z === undefined) z = this.z; // sprite.scale.set(x,y)\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setScalar = function setScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setX = function setX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setY = function setY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setZ = function setZ(z) {\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setComponent = function setComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.z = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getComponent = function getComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this.z;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor(this.x, this.y, this.z);\n\t\t};\n\n\t\t_proto.copy = function copy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.add = function add(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.addScalar = function addScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.addVectors = function addVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.addScaledVector = function addScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.sub = function sub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.subScalar = function subScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.subVectors = function subVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.multiply = function multiply(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n\t\t\t\treturn this.multiplyVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.multiplyScalar = function multiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.multiplyVectors = function multiplyVectors(a, b) {\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.applyEuler = function applyEuler(euler) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tconsole.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion(_quaternion.setFromEuler(euler));\n\t\t};\n\n\t\t_proto.applyAxisAngle = function applyAxisAngle(axis, angle) {\n\t\t\treturn this.applyQuaternion(_quaternion.setFromAxisAngle(axis, angle));\n\t\t};\n\n\t\t_proto.applyMatrix3 = function applyMatrix3(m) {\n\t\t\tvar x = this.x,\n\t\t\t\t\ty = this.y,\n\t\t\t\t\tz = this.z;\n\t\t\tvar e = m.elements;\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6] * z;\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7] * z;\n\t\t\tthis.z = e[2] * x + e[5] * y + e[8] * z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.applyNormalMatrix = function applyNormalMatrix(m) {\n\t\t\treturn this.applyMatrix3(m).normalize();\n\t\t};\n\n\t\t_proto.applyMatrix4 = function applyMatrix4(m) {\n\t\t\tvar x = this.x,\n\t\t\t\t\ty = this.y,\n\t\t\t\t\tz = this.z;\n\t\t\tvar e = m.elements;\n\t\t\tvar w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n\t\t\tthis.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n\t\t\tthis.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n\t\t\tthis.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.applyQuaternion = function applyQuaternion(q) {\n\t\t\tvar x = this.x,\n\t\t\t\t\ty = this.y,\n\t\t\t\t\tz = this.z;\n\t\t\tvar qx = q.x,\n\t\t\t\t\tqy = q.y,\n\t\t\t\t\tqz = q.z,\n\t\t\t\t\tqw = q.w; // calculate quat * vector\n\n\t\t\tvar ix = qw * x + qy * z - qz * y;\n\t\t\tvar iy = qw * y + qz * x - qx * z;\n\t\t\tvar iz = qw * z + qx * y - qy * x;\n\t\t\tvar iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t\t\tthis.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t\t\tthis.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.project = function project(camera) {\n\t\t\treturn this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n\t\t};\n\n\t\t_proto.unproject = function unproject(camera) {\n\t\t\treturn this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n\t\t};\n\n\t\t_proto.transformDirection = function transformDirection(m) {\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\t\t\tvar x = this.x,\n\t\t\t\t\ty = this.y,\n\t\t\t\t\tz = this.z;\n\t\t\tvar e = m.elements;\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z;\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z;\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z;\n\t\t\treturn this.normalize();\n\t\t};\n\n\t\t_proto.divide = function divide(v) {\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.divideScalar = function divideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t};\n\n\t\t_proto.min = function min(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\tthis.z = Math.min(this.z, v.z);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.max = function max(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\tthis.z = Math.max(this.z, v.z);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clamp = function clamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clampScalar = function clampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clampLength = function clampLength(min, max) {\n\t\t\tvar length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t};\n\n\t\t_proto.floor = function floor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\tthis.z = Math.floor(this.z);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.ceil = function ceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\tthis.z = Math.ceil(this.z);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.round = function round() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\tthis.z = Math.round(this.z);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.roundToZero = function roundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.negate = function negate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\tthis.z = -this.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.dot = function dot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\t\t} // TODO lengthSquared?\n\t\t;\n\n\t\t_proto.lengthSq = function lengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\t\t};\n\n\t\t_proto.length = function length() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t};\n\n\t\t_proto.manhattanLength = function manhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n\t\t};\n\n\t\t_proto.normalize = function normalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t};\n\n\t\t_proto.setLength = function setLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t};\n\n\t\t_proto.lerp = function lerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\tthis.z += (v.z - this.z) * alpha;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.lerpVectors = function lerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.cross = function cross(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n\t\t\t\treturn this.crossVectors(v, w);\n\t\t\t}\n\n\t\t\treturn this.crossVectors(this, v);\n\t\t};\n\n\t\t_proto.crossVectors = function crossVectors(a, b) {\n\t\t\tvar ax = a.x,\n\t\t\t\t\tay = a.y,\n\t\t\t\t\taz = a.z;\n\t\t\tvar bx = b.x,\n\t\t\t\t\tby = b.y,\n\t\t\t\t\tbz = b.z;\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.projectOnVector = function projectOnVector(v) {\n\t\t\tvar denominator = v.lengthSq();\n\t\t\tif (denominator === 0) return this.set(0, 0, 0);\n\t\t\tvar scalar = v.dot(this) / denominator;\n\t\t\treturn this.copy(v).multiplyScalar(scalar);\n\t\t};\n\n\t\t_proto.projectOnPlane = function projectOnPlane(planeNormal) {\n\t\t\t_vector.copy(this).projectOnVector(planeNormal);\n\n\t\t\treturn this.sub(_vector);\n\t\t};\n\n\t\t_proto.reflect = function reflect(normal) {\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\t\t\treturn this.sub(_vector.copy(normal).multiplyScalar(2 * this.dot(normal)));\n\t\t};\n\n\t\t_proto.angleTo = function angleTo(v) {\n\t\t\tvar denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n\t\t\tif (denominator === 0) return Math.PI / 2;\n\t\t\tvar theta = this.dot(v) / denominator; // clamp, to handle numerical problems\n\n\t\t\treturn Math.acos(MathUtils.clamp(theta, -1, 1));\n\t\t};\n\n\t\t_proto.distanceTo = function distanceTo(v) {\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t\t};\n\n\t\t_proto.distanceToSquared = function distanceToSquared(v) {\n\t\t\tvar dx = this.x - v.x,\n\t\t\t\t\tdy = this.y - v.y,\n\t\t\t\t\tdz = this.z - v.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t};\n\n\t\t_proto.manhattanDistanceTo = function manhattanDistanceTo(v) {\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n\t\t};\n\n\t\t_proto.setFromSpherical = function setFromSpherical(s) {\n\t\t\treturn this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n\t\t};\n\n\t\t_proto.setFromSphericalCoords = function setFromSphericalCoords(radius, phi, theta) {\n\t\t\tvar sinPhiRadius = Math.sin(phi) * radius;\n\t\t\tthis.x = sinPhiRadius * Math.sin(theta);\n\t\t\tthis.y = Math.cos(phi) * radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos(theta);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromCylindrical = function setFromCylindrical(c) {\n\t\t\treturn this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n\t\t};\n\n\t\t_proto.setFromCylindricalCoords = function setFromCylindricalCoords(radius, theta, y) {\n\t\t\tthis.x = radius * Math.sin(theta);\n\t\t\tthis.y = y;\n\t\t\tthis.z = radius * Math.cos(theta);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromMatrixPosition = function setFromMatrixPosition(m) {\n\t\t\tvar e = m.elements;\n\t\t\tthis.x = e[12];\n\t\t\tthis.y = e[13];\n\t\t\tthis.z = e[14];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromMatrixScale = function setFromMatrixScale(m) {\n\t\t\tvar sx = this.setFromMatrixColumn(m, 0).length();\n\t\t\tvar sy = this.setFromMatrixColumn(m, 1).length();\n\t\t\tvar sz = this.setFromMatrixColumn(m, 2).length();\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromMatrixColumn = function setFromMatrixColumn(m, index) {\n\t\t\treturn this.fromArray(m.elements, index * 4);\n\t\t};\n\n\t\t_proto.setFromMatrix3Column = function setFromMatrix3Column(m, index) {\n\t\t\treturn this.fromArray(m.elements, index * 3);\n\t\t};\n\n\t\t_proto.equals = function equals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z;\n\t\t};\n\n\t\t_proto.fromArray = function fromArray(array, offset) {\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\tthis.z = array[offset + 2];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toArray = function toArray(array, offset) {\n\t\t\tif (array === void 0) {\n\t\t\t\tarray = [];\n\t\t\t}\n\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\tarray[offset + 2] = this.z;\n\t\t\treturn array;\n\t\t};\n\n\t\t_proto.fromBufferAttribute = function fromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\tthis.z = attribute.getZ(index);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.random = function random() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Vector3;\n\t}();\n\n\tvar _vector = /*@__PURE__*/new Vector3();\n\n\tvar _quaternion = /*@__PURE__*/new Quaternion();\n\n\tvar Box3 = /*#__PURE__*/function () {\n\t\tfunction Box3(min, max) {\n\t\t\tObject.defineProperty(this, 'isBox3', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\tthis.min = min !== undefined ? min : new Vector3(+Infinity, +Infinity, +Infinity);\n\t\t\tthis.max = max !== undefined ? max : new Vector3(-Infinity, -Infinity, -Infinity);\n\t\t}\n\n\t\tvar _proto = Box3.prototype;\n\n\t\t_proto.set = function set(min, max) {\n\t\t\tthis.min.copy(min);\n\t\t\tthis.max.copy(max);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromArray = function setFromArray(array) {\n\t\t\tvar minX = +Infinity;\n\t\t\tvar minY = +Infinity;\n\t\t\tvar minZ = +Infinity;\n\t\t\tvar maxX = -Infinity;\n\t\t\tvar maxY = -Infinity;\n\t\t\tvar maxZ = -Infinity;\n\n\t\t\tfor (var i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\tvar x = array[i];\n\t\t\t\tvar y = array[i + 1];\n\t\t\t\tvar z = array[i + 2];\n\t\t\t\tif (x < minX) minX = x;\n\t\t\t\tif (y < minY) minY = y;\n\t\t\t\tif (z < minZ) minZ = z;\n\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\tif (z > maxZ) maxZ = z;\n\t\t\t}\n\n\t\t\tthis.min.set(minX, minY, minZ);\n\t\t\tthis.max.set(maxX, maxY, maxZ);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromBufferAttribute = function setFromBufferAttribute(attribute) {\n\t\t\tvar minX = +Infinity;\n\t\t\tvar minY = +Infinity;\n\t\t\tvar minZ = +Infinity;\n\t\t\tvar maxX = -Infinity;\n\t\t\tvar maxY = -Infinity;\n\t\t\tvar maxZ = -Infinity;\n\n\t\t\tfor (var i = 0, l = attribute.count; i < l; i++) {\n\t\t\t\tvar x = attribute.getX(i);\n\t\t\t\tvar y = attribute.getY(i);\n\t\t\t\tvar z = attribute.getZ(i);\n\t\t\t\tif (x < minX) minX = x;\n\t\t\t\tif (y < minY) minY = y;\n\t\t\t\tif (z < minZ) minZ = z;\n\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\tif (z > maxZ) maxZ = z;\n\t\t\t}\n\n\t\t\tthis.min.set(minX, minY, minZ);\n\t\t\tthis.max.set(maxX, maxY, maxZ);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromPoints = function setFromPoints(points) {\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor (var i = 0, il = points.length; i < il; i++) {\n\t\t\t\tthis.expandByPoint(points[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromCenterAndSize = function setFromCenterAndSize(center, size) {\n\t\t\tvar halfSize = _vector$1.copy(size).multiplyScalar(0.5);\n\n\t\t\tthis.min.copy(center).sub(halfSize);\n\t\t\tthis.max.copy(center).add(halfSize);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromObject = function setFromObject(object) {\n\t\t\tthis.makeEmpty();\n\t\t\treturn this.expandByObject(object);\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t};\n\n\t\t_proto.copy = function copy(box) {\n\t\t\tthis.min.copy(box.min);\n\t\t\tthis.max.copy(box.max);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.makeEmpty = function makeEmpty() {\n\t\t\tthis.min.x = this.min.y = this.min.z = +Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = -Infinity;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.isEmpty = function isEmpty() {\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n\t\t};\n\n\t\t_proto.getCenter = function getCenter(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box3: .getCenter() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n\t\t};\n\n\t\t_proto.getSize = function getSize(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box3: .getSize() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n\t\t};\n\n\t\t_proto.expandByPoint = function expandByPoint(point) {\n\t\t\tthis.min.min(point);\n\t\t\tthis.max.max(point);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.expandByVector = function expandByVector(vector) {\n\t\t\tthis.min.sub(vector);\n\t\t\tthis.max.add(vector);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.expandByScalar = function expandByScalar(scalar) {\n\t\t\tthis.min.addScalar(-scalar);\n\t\t\tthis.max.addScalar(scalar);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.expandByObject = function expandByObject(object) {\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\t\t\tobject.updateWorldMatrix(false, false);\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif (geometry !== undefined) {\n\t\t\t\tif (geometry.boundingBox === null) {\n\t\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t\t}\n\n\t\t\t\t_box.copy(geometry.boundingBox);\n\n\t\t\t\t_box.applyMatrix4(object.matrixWorld);\n\n\t\t\t\tthis.union(_box);\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tthis.expandByObject(children[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.containsPoint = function containsPoint(point) {\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n\t\t};\n\n\t\t_proto.containsBox = function containsBox(box) {\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n\t\t};\n\n\t\t_proto.getParameter = function getParameter(point, target) {\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box3: .getParameter() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n\t\t};\n\n\t\t_proto.intersectsBox = function intersectsBox(box) {\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\t\t};\n\n\t\t_proto.intersectsSphere = function intersectsSphere(sphere) {\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint(sphere.center, _vector$1); // If that point is inside the sphere, the AABB and sphere intersect.\n\n\t\t\treturn _vector$1.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n\t\t};\n\n\t\t_proto.intersectsPlane = function intersectsPlane(plane) {\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\t\t\tvar min, max;\n\n\t\t\tif (plane.normal.x > 0) {\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\t\t\t} else {\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\t\t\t}\n\n\t\t\tif (plane.normal.y > 0) {\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\t\t\t} else {\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\t\t\t}\n\n\t\t\tif (plane.normal.z > 0) {\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\t\t\t} else {\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\t\t\t}\n\n\t\t\treturn min <= -plane.constant && max >= -plane.constant;\n\t\t};\n\n\t\t_proto.intersectsTriangle = function intersectsTriangle(triangle) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t} // compute box center and extents\n\n\n\t\t\tthis.getCenter(_center);\n\n\t\t\t_extents.subVectors(this.max, _center); // translate triangle to aabb origin\n\n\n\t\t\t_v0.subVectors(triangle.a, _center);\n\n\t\t\t_v1.subVectors(triangle.b, _center);\n\n\t\t\t_v2.subVectors(triangle.c, _center); // compute edge vectors for triangle\n\n\n\t\t\t_f0.subVectors(_v1, _v0);\n\n\t\t\t_f1.subVectors(_v2, _v1);\n\n\t\t\t_f2.subVectors(_v0, _v2); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\n\n\t\t\tvar axes = [0, -_f0.z, _f0.y, 0, -_f1.z, _f1.y, 0, -_f2.z, _f2.y, _f0.z, 0, -_f0.x, _f1.z, 0, -_f1.x, _f2.z, 0, -_f2.x, -_f0.y, _f0.x, 0, -_f1.y, _f1.x, 0, -_f2.y, _f2.x, 0];\n\n\t\t\tif (!satForAxes(axes, _v0, _v1, _v2, _extents)) {\n\t\t\t\treturn false;\n\t\t\t} // test 3 face normals from the aabb\n\n\n\t\t\taxes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n\t\t\tif (!satForAxes(axes, _v0, _v1, _v2, _extents)) {\n\t\t\t\treturn false;\n\t\t\t} // finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\n\n\t\t\t_triangleNormal.crossVectors(_f0, _f1);\n\n\t\t\taxes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n\t\t\treturn satForAxes(axes, _v0, _v1, _v2, _extents);\n\t\t};\n\n\t\t_proto.clampPoint = function clampPoint(point, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box3: .clampPoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\n\t\t};\n\n\t\t_proto.distanceToPoint = function distanceToPoint(point) {\n\t\t\tvar clampedPoint = _vector$1.copy(point).clamp(this.min, this.max);\n\n\t\t\treturn clampedPoint.sub(point).length();\n\t\t};\n\n\t\t_proto.getBoundingSphere = function getBoundingSphere(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.error('THREE.Box3: .getBoundingSphere() target is now required'); //target = new Sphere(); // removed to avoid cyclic dependency\n\t\t\t}\n\n\t\t\tthis.getCenter(target.center);\n\t\t\ttarget.radius = this.getSize(_vector$1).length() * 0.5;\n\t\t\treturn target;\n\t\t};\n\n\t\t_proto.intersect = function intersect(box) {\n\t\t\tthis.min.max(box.min);\n\t\t\tthis.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n\t\t\tif (this.isEmpty()) this.makeEmpty();\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.union = function union(box) {\n\t\t\tthis.min.min(box.min);\n\t\t\tthis.max.max(box.max);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.applyMatrix4 = function applyMatrix4(matrix) {\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n\t\t\t_points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n\n\t\t\t_points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n\n\t\t\t_points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n\n\t\t\t_points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n\n\t\t\t_points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n\n\t\t\t_points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n\n\t\t\t_points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n\n\t\t\t_points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n\n\t\t\tthis.setFromPoints(_points);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.translate = function translate(offset) {\n\t\t\tthis.min.add(offset);\n\t\t\tthis.max.add(offset);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(box) {\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\n\t\t};\n\n\t\treturn Box3;\n\t}();\n\n\tfunction satForAxes(axes, v0, v1, v2, extents) {\n\t\tfor (var i = 0, j = axes.length - 3; i <= j; i += 3) {\n\t\t\t_testAxis.fromArray(axes, i); // project the aabb onto the seperating axis\n\n\n\t\t\tvar r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\n\n\t\t\tvar p0 = v0.dot(_testAxis);\n\t\t\tvar p1 = v1.dot(_testAxis);\n\t\t\tvar p2 = v2.dot(_testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\n\n\t\t\tif (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tvar _points = [/*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3()];\n\n\tvar _vector$1 = /*@__PURE__*/new Vector3();\n\n\tvar _box = /*@__PURE__*/new Box3(); // triangle centered vertices\n\n\n\tvar _v0 = /*@__PURE__*/new Vector3();\n\n\tvar _v1 = /*@__PURE__*/new Vector3();\n\n\tvar _v2 = /*@__PURE__*/new Vector3(); // triangle edge vectors\n\n\n\tvar _f0 = /*@__PURE__*/new Vector3();\n\n\tvar _f1 = /*@__PURE__*/new Vector3();\n\n\tvar _f2 = /*@__PURE__*/new Vector3();\n\n\tvar _center = /*@__PURE__*/new Vector3();\n\n\tvar _extents = /*@__PURE__*/new Vector3();\n\n\tvar _triangleNormal = /*@__PURE__*/new Vector3();\n\n\tvar _testAxis = /*@__PURE__*/new Vector3();\n\n\tvar _box$1 = /*@__PURE__*/new Box3();\n\n\tvar Sphere = /*#__PURE__*/function () {\n\t\tfunction Sphere(center, radius) {\n\t\t\tthis.center = center !== undefined ? center : new Vector3();\n\t\t\tthis.radius = radius !== undefined ? radius : -1;\n\t\t}\n\n\t\tvar _proto = Sphere.prototype;\n\n\t\t_proto.set = function set(center, radius) {\n\t\t\tthis.center.copy(center);\n\t\t\tthis.radius = radius;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromPoints = function setFromPoints(points, optionalCenter) {\n\t\t\tvar center = this.center;\n\n\t\t\tif (optionalCenter !== undefined) {\n\t\t\t\tcenter.copy(optionalCenter);\n\t\t\t} else {\n\t\t\t\t_box$1.setFromPoints(points).getCenter(center);\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor (var i = 0, il = points.length; i < il; i++) {\n\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt(maxRadiusSq);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t};\n\n\t\t_proto.copy = function copy(sphere) {\n\t\t\tthis.center.copy(sphere.center);\n\t\t\tthis.radius = sphere.radius;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.isEmpty = function isEmpty() {\n\t\t\treturn this.radius < 0;\n\t\t};\n\n\t\t_proto.makeEmpty = function makeEmpty() {\n\t\t\tthis.center.set(0, 0, 0);\n\t\t\tthis.radius = -1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.containsPoint = function containsPoint(point) {\n\t\t\treturn point.distanceToSquared(this.center) <= this.radius * this.radius;\n\t\t};\n\n\t\t_proto.distanceToPoint = function distanceToPoint(point) {\n\t\t\treturn point.distanceTo(this.center) - this.radius;\n\t\t};\n\n\t\t_proto.intersectsSphere = function intersectsSphere(sphere) {\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\t\t\treturn sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n\t\t};\n\n\t\t_proto.intersectsBox = function intersectsBox(box) {\n\t\t\treturn box.intersectsSphere(this);\n\t\t};\n\n\t\t_proto.intersectsPlane = function intersectsPlane(plane) {\n\t\t\treturn Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n\t\t};\n\n\t\t_proto.clampPoint = function clampPoint(point, target) {\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared(point);\n\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Sphere: .clampPoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\ttarget.copy(point);\n\n\t\t\tif (deltaLengthSq > this.radius * this.radius) {\n\t\t\t\ttarget.sub(this.center).normalize();\n\t\t\t\ttarget.multiplyScalar(this.radius).add(this.center);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t};\n\n\t\t_proto.getBoundingBox = function getBoundingBox(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Sphere: .getBoundingBox() target is now required');\n\t\t\t\ttarget = new Box3();\n\t\t\t}\n\n\t\t\tif (this.isEmpty()) {\n\t\t\t\t// Empty sphere produces empty bounding box\n\t\t\t\ttarget.makeEmpty();\n\t\t\t\treturn target;\n\t\t\t}\n\n\t\t\ttarget.set(this.center, this.center);\n\t\t\ttarget.expandByScalar(this.radius);\n\t\t\treturn target;\n\t\t};\n\n\t\t_proto.applyMatrix4 = function applyMatrix4(matrix) {\n\t\t\tthis.center.applyMatrix4(matrix);\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.translate = function translate(offset) {\n\t\t\tthis.center.add(offset);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(sphere) {\n\t\t\treturn sphere.center.equals(this.center) && sphere.radius === this.radius;\n\t\t};\n\n\t\treturn Sphere;\n\t}();\n\n\tvar _vector$2 = /*@__PURE__*/new Vector3();\n\n\tvar _segCenter = /*@__PURE__*/new Vector3();\n\n\tvar _segDir = /*@__PURE__*/new Vector3();\n\n\tvar _diff = /*@__PURE__*/new Vector3();\n\n\tvar _edge1 = /*@__PURE__*/new Vector3();\n\n\tvar _edge2 = /*@__PURE__*/new Vector3();\n\n\tvar _normal = /*@__PURE__*/new Vector3();\n\n\tvar Ray = /*#__PURE__*/function () {\n\t\tfunction Ray(origin, direction) {\n\t\t\tthis.origin = origin !== undefined ? origin : new Vector3();\n\t\t\tthis.direction = direction !== undefined ? direction : new Vector3(0, 0, -1);\n\t\t}\n\n\t\tvar _proto = Ray.prototype;\n\n\t\t_proto.set = function set(origin, direction) {\n\t\t\tthis.origin.copy(origin);\n\t\t\tthis.direction.copy(direction);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t};\n\n\t\t_proto.copy = function copy(ray) {\n\t\t\tthis.origin.copy(ray.origin);\n\t\t\tthis.direction.copy(ray.direction);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.at = function at(t, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Ray: .at() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.copy(this.direction).multiplyScalar(t).add(this.origin);\n\t\t};\n\n\t\t_proto.lookAt = function lookAt(v) {\n\t\t\tthis.direction.copy(v).sub(this.origin).normalize();\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.recast = function recast(t) {\n\t\t\tthis.origin.copy(this.at(t, _vector$2));\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.closestPointToPoint = function closestPointToPoint(point, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Ray: .closestPointToPoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\ttarget.subVectors(point, this.origin);\n\t\t\tvar directionDistance = target.dot(this.direction);\n\n\t\t\tif (directionDistance < 0) {\n\t\t\t\treturn target.copy(this.origin);\n\t\t\t}\n\n\t\t\treturn target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\t\t};\n\n\t\t_proto.distanceToPoint = function distanceToPoint(point) {\n\t\t\treturn Math.sqrt(this.distanceSqToPoint(point));\n\t\t};\n\n\t\t_proto.distanceSqToPoint = function distanceSqToPoint(point) {\n\t\t\tvar directionDistance = _vector$2.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n\n\t\t\tif (directionDistance < 0) {\n\t\t\t\treturn this.origin.distanceToSquared(point);\n\t\t\t}\n\n\t\t\t_vector$2.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\n\t\t\treturn _vector$2.distanceToSquared(point);\n\t\t};\n\n\t\t_proto.distanceSqToSegment = function distanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\t\t\t_segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n\n\t\t\t_segDir.copy(v1).sub(v0).normalize();\n\n\t\t\t_diff.copy(this.origin).sub(_segCenter);\n\n\t\t\tvar segExtent = v0.distanceTo(v1) * 0.5;\n\t\t\tvar a01 = -this.direction.dot(_segDir);\n\n\t\t\tvar b0 = _diff.dot(this.direction);\n\n\t\t\tvar b1 = -_diff.dot(_segDir);\n\n\t\t\tvar c = _diff.lengthSq();\n\n\t\t\tvar det = Math.abs(1 - a01 * a01);\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif (det > 0) {\n\t\t\t\t// The ray and segment are not parallel.\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif (s0 >= 0) {\n\t\t\t\t\tif (s1 >= -extDet) {\n\t\t\t\t\t\tif (s1 <= extDet) {\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// region 1\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// region 5\n\t\t\t\t\t\ts1 = -segExtent;\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (s1 <= -extDet) {\n\t\t\t\t\t\t// region 4\n\t\t\t\t\t\ts0 = Math.max(0, -(-a01 * segExtent + b0));\n\t\t\t\t\t\ts1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t} else if (s1 <= extDet) {\n\t\t\t\t\t\t// region 3\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// region 2\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * segExtent + b0));\n\t\t\t\t\t\ts1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Ray and segment are parallel.\n\t\t\t\ts1 = a01 > 0 ? -segExtent : segExtent;\n\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t}\n\n\t\t\tif (optionalPointOnRay) {\n\t\t\t\toptionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n\t\t\t}\n\n\t\t\tif (optionalPointOnSegment) {\n\t\t\t\toptionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\t\t};\n\n\t\t_proto.intersectSphere = function intersectSphere(sphere, target) {\n\t\t\t_vector$2.subVectors(sphere.center, this.origin);\n\n\t\t\tvar tca = _vector$2.dot(this.direction);\n\n\t\t\tvar d2 = _vector$2.dot(_vector$2) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\t\t\tif (d2 > radius2) return null;\n\t\t\tvar thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n\t\t\tvar t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n\t\t\tvar t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n\t\t\tif (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\n\t\t\tif (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n\t\t\treturn this.at(t0, target);\n\t\t};\n\n\t\t_proto.intersectsSphere = function intersectsSphere(sphere) {\n\t\t\treturn this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\n\t\t};\n\n\t\t_proto.distanceToPlane = function distanceToPlane(plane) {\n\t\t\tvar denominator = plane.normal.dot(this.direction);\n\n\t\t\tif (denominator === 0) {\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif (plane.distanceToPoint(this.origin) === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t} // Null is preferable to undefined since undefined means.... it is undefined\n\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t : null;\n\t\t};\n\n\t\t_proto.intersectPlane = function intersectPlane(plane, target) {\n\t\t\tvar t = this.distanceToPlane(plane);\n\n\t\t\tif (t === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.at(t, target);\n\t\t};\n\n\t\t_proto.intersectsPlane = function intersectsPlane(plane) {\n\t\t\t// check if the ray lies on the plane first\n\t\t\tvar distToPoint = plane.distanceToPoint(this.origin);\n\n\t\t\tif (distToPoint === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot(this.direction);\n\n\t\t\tif (denominator * distToPoint < 0) {\n\t\t\t\treturn true;\n\t\t\t} // ray origin is behind the plane (and is pointing behind it)\n\n\n\t\t\treturn false;\n\t\t};\n\n\t\t_proto.intersectBox = function intersectBox(box, target) {\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\t\tinvdirz = 1 / this.direction.z;\n\t\t\tvar origin = this.origin;\n\n\t\t\tif (invdirx >= 0) {\n\t\t\t\ttmin = (box.min.x - origin.x) * invdirx;\n\t\t\t\ttmax = (box.max.x - origin.x) * invdirx;\n\t\t\t} else {\n\t\t\t\ttmin = (box.max.x - origin.x) * invdirx;\n\t\t\t\ttmax = (box.min.x - origin.x) * invdirx;\n\t\t\t}\n\n\t\t\tif (invdiry >= 0) {\n\t\t\t\ttymin = (box.min.y - origin.y) * invdiry;\n\t\t\t\ttymax = (box.max.y - origin.y) * invdiry;\n\t\t\t} else {\n\t\t\t\ttymin = (box.max.y - origin.y) * invdiry;\n\t\t\t\ttymax = (box.min.y - origin.y) * invdiry;\n\t\t\t}\n\n\t\t\tif (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif (tymin > tmin || tmin !== tmin) tmin = tymin;\n\t\t\tif (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n\t\t\tif (invdirz >= 0) {\n\t\t\t\ttzmin = (box.min.z - origin.z) * invdirz;\n\t\t\t\ttzmax = (box.max.z - origin.z) * invdirz;\n\t\t\t} else {\n\t\t\t\ttzmin = (box.max.z - origin.z) * invdirz;\n\t\t\t\ttzmax = (box.min.z - origin.z) * invdirz;\n\t\t\t}\n\n\t\t\tif (tmin > tzmax || tzmin > tmax) return null;\n\t\t\tif (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n\t\t\tif (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n\t\t\tif (tmax < 0) return null;\n\t\t\treturn this.at(tmin >= 0 ? tmin : tmax, target);\n\t\t};\n\n\t\t_proto.intersectsBox = function intersectsBox(box) {\n\t\t\treturn this.intersectBox(box, _vector$2) !== null;\n\t\t};\n\n\t\t_proto.intersectTriangle = function intersectTriangle(a, b, c, backfaceCulling, target) {\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\t\t\t_edge1.subVectors(b, a);\n\n\t\t\t_edge2.subVectors(c, a);\n\n\t\t\t_normal.crossVectors(_edge1, _edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//\t |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//\t |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//\t |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n\n\t\t\tvar DdN = this.direction.dot(_normal);\n\t\t\tvar sign;\n\n\t\t\tif (DdN > 0) {\n\t\t\t\tif (backfaceCulling) return null;\n\t\t\t\tsign = 1;\n\t\t\t} else if (DdN < 0) {\n\t\t\t\tsign = -1;\n\t\t\t\tDdN = -DdN;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t_diff.subVectors(this.origin, a);\n\n\t\t\tvar DdQxE2 = sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2)); // b1 < 0, no intersection\n\n\t\t\tif (DdQxE2 < 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff)); // b2 < 0, no intersection\n\n\t\t\tif (DdE1xQ < 0) {\n\t\t\t\treturn null;\n\t\t\t} // b1+b2 > 1, no intersection\n\n\n\t\t\tif (DdQxE2 + DdE1xQ > DdN) {\n\t\t\t\treturn null;\n\t\t\t} // Line intersects triangle, check if ray does.\n\n\n\t\t\tvar QdN = -sign * _diff.dot(_normal); // t < 0, no intersection\n\n\n\t\t\tif (QdN < 0) {\n\t\t\t\treturn null;\n\t\t\t} // Ray intersects triangle.\n\n\n\t\t\treturn this.at(QdN / DdN, target);\n\t\t};\n\n\t\t_proto.applyMatrix4 = function applyMatrix4(matrix4) {\n\t\t\tthis.origin.applyMatrix4(matrix4);\n\t\t\tthis.direction.transformDirection(matrix4);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(ray) {\n\t\t\treturn ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n\t\t};\n\n\t\treturn Ray;\n\t}();\n\n\tvar Matrix4 = /*#__PURE__*/function () {\n\t\tfunction Matrix4() {\n\t\t\tObject.defineProperty(this, 'isMatrix4', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\tthis.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tconsole.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = Matrix4.prototype;\n\n\t\t_proto.set = function set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n\t\t\tvar te = this.elements;\n\t\t\tte[0] = n11;\n\t\t\tte[4] = n12;\n\t\t\tte[8] = n13;\n\t\t\tte[12] = n14;\n\t\t\tte[1] = n21;\n\t\t\tte[5] = n22;\n\t\t\tte[9] = n23;\n\t\t\tte[13] = n24;\n\t\t\tte[2] = n31;\n\t\t\tte[6] = n32;\n\t\t\tte[10] = n33;\n\t\t\tte[14] = n34;\n\t\t\tte[3] = n41;\n\t\t\tte[7] = n42;\n\t\t\tte[11] = n43;\n\t\t\tte[15] = n44;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.identity = function identity() {\n\t\t\tthis.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new Matrix4().fromArray(this.elements);\n\t\t};\n\n\t\t_proto.copy = function copy(m) {\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\t\t\tte[0] = me[0];\n\t\t\tte[1] = me[1];\n\t\t\tte[2] = me[2];\n\t\t\tte[3] = me[3];\n\t\t\tte[4] = me[4];\n\t\t\tte[5] = me[5];\n\t\t\tte[6] = me[6];\n\t\t\tte[7] = me[7];\n\t\t\tte[8] = me[8];\n\t\t\tte[9] = me[9];\n\t\t\tte[10] = me[10];\n\t\t\tte[11] = me[11];\n\t\t\tte[12] = me[12];\n\t\t\tte[13] = me[13];\n\t\t\tte[14] = me[14];\n\t\t\tte[15] = me[15];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.copyPosition = function copyPosition(m) {\n\t\t\tvar te = this.elements,\n\t\t\t\t\tme = m.elements;\n\t\t\tte[12] = me[12];\n\t\t\tte[13] = me[13];\n\t\t\tte[14] = me[14];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromMatrix3 = function setFromMatrix3(m) {\n\t\t\tvar me = m.elements;\n\t\t\tthis.set(me[0], me[3], me[6], 0, me[1], me[4], me[7], 0, me[2], me[5], me[8], 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.extractBasis = function extractBasis(xAxis, yAxis, zAxis) {\n\t\t\txAxis.setFromMatrixColumn(this, 0);\n\t\t\tyAxis.setFromMatrixColumn(this, 1);\n\t\t\tzAxis.setFromMatrixColumn(this, 2);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.makeBasis = function makeBasis(xAxis, yAxis, zAxis) {\n\t\t\tthis.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.extractRotation = function extractRotation(m) {\n\t\t\t// this method does not support reflection matrices\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / _v1$1.setFromMatrixColumn(m, 0).length();\n\n\t\t\tvar scaleY = 1 / _v1$1.setFromMatrixColumn(m, 1).length();\n\n\t\t\tvar scaleZ = 1 / _v1$1.setFromMatrixColumn(m, 2).length();\n\n\t\t\tte[0] = me[0] * scaleX;\n\t\t\tte[1] = me[1] * scaleX;\n\t\t\tte[2] = me[2] * scaleX;\n\t\t\tte[3] = 0;\n\t\t\tte[4] = me[4] * scaleY;\n\t\t\tte[5] = me[5] * scaleY;\n\t\t\tte[6] = me[6] * scaleY;\n\t\t\tte[7] = 0;\n\t\t\tte[8] = me[8] * scaleZ;\n\t\t\tte[9] = me[9] * scaleZ;\n\t\t\tte[10] = me[10] * scaleZ;\n\t\t\tte[11] = 0;\n\t\t\tte[12] = 0;\n\t\t\tte[13] = 0;\n\t\t\tte[14] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.makeRotationFromEuler = function makeRotationFromEuler(euler) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tconsole.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = euler.x,\n\t\t\t\t\ty = euler.y,\n\t\t\t\t\tz = euler.z;\n\t\t\tvar a = Math.cos(x),\n\t\t\t\t\tb = Math.sin(x);\n\t\t\tvar c = Math.cos(y),\n\t\t\t\t\td = Math.sin(y);\n\t\t\tvar e = Math.cos(z),\n\t\t\t\t\tf = Math.sin(z);\n\n\t\t\tif (euler.order === 'XYZ') {\n\t\t\t\tvar ae = a * e,\n\t\t\t\t\t\taf = a * f,\n\t\t\t\t\t\tbe = b * e,\n\t\t\t\t\t\tbf = b * f;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = -c * f;\n\t\t\t\tte[8] = d;\n\t\t\t\tte[1] = af + be * d;\n\t\t\t\tte[5] = ae - bf * d;\n\t\t\t\tte[9] = -b * c;\n\t\t\t\tte[2] = bf - ae * d;\n\t\t\t\tte[6] = be + af * d;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'YXZ') {\n\t\t\t\tvar ce = c * e,\n\t\t\t\t\t\tcf = c * f,\n\t\t\t\t\t\tde = d * e,\n\t\t\t\t\t\tdf = d * f;\n\t\t\t\tte[0] = ce + df * b;\n\t\t\t\tte[4] = de * b - cf;\n\t\t\t\tte[8] = a * d;\n\t\t\t\tte[1] = a * f;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = -b;\n\t\t\t\tte[2] = cf * b - de;\n\t\t\t\tte[6] = df + ce * b;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'ZXY') {\n\t\t\t\tvar _ce = c * e,\n\t\t\t\t\t\t_cf = c * f,\n\t\t\t\t\t\t_de = d * e,\n\t\t\t\t\t\t_df = d * f;\n\n\t\t\t\tte[0] = _ce - _df * b;\n\t\t\t\tte[4] = -a * f;\n\t\t\t\tte[8] = _de + _cf * b;\n\t\t\t\tte[1] = _cf + _de * b;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = _df - _ce * b;\n\t\t\t\tte[2] = -a * d;\n\t\t\t\tte[6] = b;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'ZYX') {\n\t\t\t\tvar _ae = a * e,\n\t\t\t\t\t\t_af = a * f,\n\t\t\t\t\t\t_be = b * e,\n\t\t\t\t\t\t_bf = b * f;\n\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = _be * d - _af;\n\t\t\t\tte[8] = _ae * d + _bf;\n\t\t\t\tte[1] = c * f;\n\t\t\t\tte[5] = _bf * d + _ae;\n\t\t\t\tte[9] = _af * d - _be;\n\t\t\t\tte[2] = -d;\n\t\t\t\tte[6] = b * c;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'YZX') {\n\t\t\t\tvar ac = a * c,\n\t\t\t\t\t\tad = a * d,\n\t\t\t\t\t\tbc = b * c,\n\t\t\t\t\t\tbd = b * d;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = bd - ac * f;\n\t\t\t\tte[8] = bc * f + ad;\n\t\t\t\tte[1] = f;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = -b * e;\n\t\t\t\tte[2] = -d * e;\n\t\t\t\tte[6] = ad * f + bc;\n\t\t\t\tte[10] = ac - bd * f;\n\t\t\t} else if (euler.order === 'XZY') {\n\t\t\t\tvar _ac = a * c,\n\t\t\t\t\t\t_ad = a * d,\n\t\t\t\t\t\t_bc = b * c,\n\t\t\t\t\t\t_bd = b * d;\n\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = -f;\n\t\t\t\tte[8] = d * e;\n\t\t\t\tte[1] = _ac * f + _bd;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = _ad * f - _bc;\n\t\t\t\tte[2] = _bc * f - _ad;\n\t\t\t\tte[6] = b * e;\n\t\t\t\tte[10] = _bd * f + _ac;\n\t\t\t} // bottom row\n\n\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = 0; // last column\n\n\t\t\tte[12] = 0;\n\t\t\tte[13] = 0;\n\t\t\tte[14] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.makeRotationFromQuaternion = function makeRotationFromQuaternion(q) {\n\t\t\treturn this.compose(_zero, q, _one);\n\t\t};\n\n\t\t_proto.lookAt = function lookAt(eye, target, up) {\n\t\t\tvar te = this.elements;\n\n\t\t\t_z.subVectors(eye, target);\n\n\t\t\tif (_z.lengthSq() === 0) {\n\t\t\t\t// eye and target are in the same position\n\t\t\t\t_z.z = 1;\n\t\t\t}\n\n\t\t\t_z.normalize();\n\n\t\t\t_x.crossVectors(up, _z);\n\n\t\t\tif (_x.lengthSq() === 0) {\n\t\t\t\t// up and z are parallel\n\t\t\t\tif (Math.abs(up.z) === 1) {\n\t\t\t\t\t_z.x += 0.0001;\n\t\t\t\t} else {\n\t\t\t\t\t_z.z += 0.0001;\n\t\t\t\t}\n\n\t\t\t\t_z.normalize();\n\n\t\t\t\t_x.crossVectors(up, _z);\n\t\t\t}\n\n\t\t\t_x.normalize();\n\n\t\t\t_y.crossVectors(_z, _x);\n\n\t\t\tte[0] = _x.x;\n\t\t\tte[4] = _y.x;\n\t\t\tte[8] = _z.x;\n\t\t\tte[1] = _x.y;\n\t\t\tte[5] = _y.y;\n\t\t\tte[9] = _z.y;\n\t\t\tte[2] = _x.z;\n\t\t\tte[6] = _y.z;\n\t\t\tte[10] = _z.z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.multiply = function multiply(m, n) {\n\t\t\tif (n !== undefined) {\n\t\t\t\tconsole.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n\t\t\t\treturn this.multiplyMatrices(m, n);\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices(this, m);\n\t\t};\n\n\t\t_proto.premultiply = function premultiply(m) {\n\t\t\treturn this.multiplyMatrices(m, this);\n\t\t};\n\n\t\t_proto.multiplyMatrices = function multiplyMatrices(a, b) {\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\t\t\tvar a11 = ae[0],\n\t\t\t\t\ta12 = ae[4],\n\t\t\t\t\ta13 = ae[8],\n\t\t\t\t\ta14 = ae[12];\n\t\t\tvar a21 = ae[1],\n\t\t\t\t\ta22 = ae[5],\n\t\t\t\t\ta23 = ae[9],\n\t\t\t\t\ta24 = ae[13];\n\t\t\tvar a31 = ae[2],\n\t\t\t\t\ta32 = ae[6],\n\t\t\t\t\ta33 = ae[10],\n\t\t\t\t\ta34 = ae[14];\n\t\t\tvar a41 = ae[3],\n\t\t\t\t\ta42 = ae[7],\n\t\t\t\t\ta43 = ae[11],\n\t\t\t\t\ta44 = ae[15];\n\t\t\tvar b11 = be[0],\n\t\t\t\t\tb12 = be[4],\n\t\t\t\t\tb13 = be[8],\n\t\t\t\t\tb14 = be[12];\n\t\t\tvar b21 = be[1],\n\t\t\t\t\tb22 = be[5],\n\t\t\t\t\tb23 = be[9],\n\t\t\t\t\tb24 = be[13];\n\t\t\tvar b31 = be[2],\n\t\t\t\t\tb32 = be[6],\n\t\t\t\t\tb33 = be[10],\n\t\t\t\t\tb34 = be[14];\n\t\t\tvar b41 = be[3],\n\t\t\t\t\tb42 = be[7],\n\t\t\t\t\tb43 = be[11],\n\t\t\t\t\tb44 = be[15];\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\t\t\tte[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.multiplyScalar = function multiplyScalar(s) {\n\t\t\tvar te = this.elements;\n\t\t\tte[0] *= s;\n\t\t\tte[4] *= s;\n\t\t\tte[8] *= s;\n\t\t\tte[12] *= s;\n\t\t\tte[1] *= s;\n\t\t\tte[5] *= s;\n\t\t\tte[9] *= s;\n\t\t\tte[13] *= s;\n\t\t\tte[2] *= s;\n\t\t\tte[6] *= s;\n\t\t\tte[10] *= s;\n\t\t\tte[14] *= s;\n\t\t\tte[3] *= s;\n\t\t\tte[7] *= s;\n\t\t\tte[11] *= s;\n\t\t\tte[15] *= s;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.determinant = function determinant() {\n\t\t\tvar te = this.elements;\n\t\t\tvar n11 = te[0],\n\t\t\t\t\tn12 = te[4],\n\t\t\t\t\tn13 = te[8],\n\t\t\t\t\tn14 = te[12];\n\t\t\tvar n21 = te[1],\n\t\t\t\t\tn22 = te[5],\n\t\t\t\t\tn23 = te[9],\n\t\t\t\t\tn24 = te[13];\n\t\t\tvar n31 = te[2],\n\t\t\t\t\tn32 = te[6],\n\t\t\t\t\tn33 = te[10],\n\t\t\t\t\tn34 = te[14];\n\t\t\tvar n41 = te[3],\n\t\t\t\t\tn42 = te[7],\n\t\t\t\t\tn43 = te[11],\n\t\t\t\t\tn44 = te[15]; //TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n\t\t};\n\n\t\t_proto.transpose = function transpose() {\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\t\t\ttmp = te[1];\n\t\t\tte[1] = te[4];\n\t\t\tte[4] = tmp;\n\t\t\ttmp = te[2];\n\t\t\tte[2] = te[8];\n\t\t\tte[8] = tmp;\n\t\t\ttmp = te[6];\n\t\t\tte[6] = te[9];\n\t\t\tte[9] = tmp;\n\t\t\ttmp = te[3];\n\t\t\tte[3] = te[12];\n\t\t\tte[12] = tmp;\n\t\t\ttmp = te[7];\n\t\t\tte[7] = te[13];\n\t\t\tte[13] = tmp;\n\t\t\ttmp = te[11];\n\t\t\tte[11] = te[14];\n\t\t\tte[14] = tmp;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setPosition = function setPosition(x, y, z) {\n\t\t\tvar te = this.elements;\n\n\t\t\tif (x.isVector3) {\n\t\t\t\tte[12] = x.x;\n\t\t\t\tte[13] = x.y;\n\t\t\t\tte[14] = x.z;\n\t\t\t} else {\n\t\t\t\tte[12] = x;\n\t\t\t\tte[13] = y;\n\t\t\t\tte[14] = z;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.invert = function invert() {\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\t\tn11 = te[0],\n\t\t\t\t\tn21 = te[1],\n\t\t\t\t\tn31 = te[2],\n\t\t\t\t\tn41 = te[3],\n\t\t\t\t\tn12 = te[4],\n\t\t\t\t\tn22 = te[5],\n\t\t\t\t\tn32 = te[6],\n\t\t\t\t\tn42 = te[7],\n\t\t\t\t\tn13 = te[8],\n\t\t\t\t\tn23 = te[9],\n\t\t\t\t\tn33 = te[10],\n\t\t\t\t\tn43 = te[11],\n\t\t\t\t\tn14 = te[12],\n\t\t\t\t\tn24 = te[13],\n\t\t\t\t\tn34 = te[14],\n\t\t\t\t\tn44 = te[15],\n\t\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n\t\t\tvar detInv = 1 / det;\n\t\t\tte[0] = t11 * detInv;\n\t\t\tte[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n\t\t\tte[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n\t\t\tte[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n\t\t\tte[4] = t12 * detInv;\n\t\t\tte[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n\t\t\tte[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n\t\t\tte[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n\t\t\tte[8] = t13 * detInv;\n\t\t\tte[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n\t\t\tte[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n\t\t\tte[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n\t\t\tte[12] = t14 * detInv;\n\t\t\tte[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n\t\t\tte[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n\t\t\tte[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.scale = function scale(v) {\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x,\n\t\t\t\t\ty = v.y,\n\t\t\t\t\tz = v.z;\n\t\t\tte[0] *= x;\n\t\t\tte[4] *= y;\n\t\t\tte[8] *= z;\n\t\t\tte[1] *= x;\n\t\t\tte[5] *= y;\n\t\t\tte[9] *= z;\n\t\t\tte[2] *= x;\n\t\t\tte[6] *= y;\n\t\t\tte[10] *= z;\n\t\t\tte[3] *= x;\n\t\t\tte[7] *= y;\n\t\t\tte[11] *= z;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getMaxScaleOnAxis = function getMaxScaleOnAxis() {\n\t\t\tvar te = this.elements;\n\t\t\tvar scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n\t\t\tvar scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n\t\t\tvar scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n\t\t\treturn Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n\t\t};\n\n\t\t_proto.makeTranslation = function makeTranslation(x, y, z) {\n\t\t\tthis.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.makeRotationX = function makeRotationX(theta) {\n\t\t\tvar c = Math.cos(theta),\n\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.makeRotationY = function makeRotationY(theta) {\n\t\t\tvar c = Math.cos(theta),\n\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.makeRotationZ = function makeRotationZ(theta) {\n\t\t\tvar c = Math.cos(theta),\n\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.makeRotationAxis = function makeRotationAxis(axis, angle) {\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\t\t\tvar c = Math.cos(angle);\n\t\t\tvar s = Math.sin(angle);\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x,\n\t\t\t\t\ty = axis.y,\n\t\t\t\t\tz = axis.z;\n\t\t\tvar tx = t * x,\n\t\t\t\t\tty = t * y;\n\t\t\tthis.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.makeScale = function makeScale(x, y, z) {\n\t\t\tthis.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.makeShear = function makeShear(x, y, z) {\n\t\t\tthis.set(1, y, z, 0, x, 1, z, 0, x, y, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.compose = function compose(position, quaternion, scale) {\n\t\t\tvar te = this.elements;\n\t\t\tvar x = quaternion._x,\n\t\t\t\t\ty = quaternion._y,\n\t\t\t\t\tz = quaternion._z,\n\t\t\t\t\tw = quaternion._w;\n\t\t\tvar x2 = x + x,\n\t\t\t\t\ty2 = y + y,\n\t\t\t\t\tz2 = z + z;\n\t\t\tvar xx = x * x2,\n\t\t\t\t\txy = x * y2,\n\t\t\t\t\txz = x * z2;\n\t\t\tvar yy = y * y2,\n\t\t\t\t\tyz = y * z2,\n\t\t\t\t\tzz = z * z2;\n\t\t\tvar wx = w * x2,\n\t\t\t\t\twy = w * y2,\n\t\t\t\t\twz = w * z2;\n\t\t\tvar sx = scale.x,\n\t\t\t\t\tsy = scale.y,\n\t\t\t\t\tsz = scale.z;\n\t\t\tte[0] = (1 - (yy + zz)) * sx;\n\t\t\tte[1] = (xy + wz) * sx;\n\t\t\tte[2] = (xz - wy) * sx;\n\t\t\tte[3] = 0;\n\t\t\tte[4] = (xy - wz) * sy;\n\t\t\tte[5] = (1 - (xx + zz)) * sy;\n\t\t\tte[6] = (yz + wx) * sy;\n\t\t\tte[7] = 0;\n\t\t\tte[8] = (xz + wy) * sz;\n\t\t\tte[9] = (yz - wx) * sz;\n\t\t\tte[10] = (1 - (xx + yy)) * sz;\n\t\t\tte[11] = 0;\n\t\t\tte[12] = position.x;\n\t\t\tte[13] = position.y;\n\t\t\tte[14] = position.z;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.decompose = function decompose(position, quaternion, scale) {\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = _v1$1.set(te[0], te[1], te[2]).length();\n\n\t\t\tvar sy = _v1$1.set(te[4], te[5], te[6]).length();\n\n\t\t\tvar sz = _v1$1.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n\n\t\t\tvar det = this.determinant();\n\t\t\tif (det < 0) sx = -sx;\n\t\t\tposition.x = te[12];\n\t\t\tposition.y = te[13];\n\t\t\tposition.z = te[14]; // scale the rotation part\n\n\t\t\t_m1.copy(this);\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\t\t\t_m1.elements[0] *= invSX;\n\t\t\t_m1.elements[1] *= invSX;\n\t\t\t_m1.elements[2] *= invSX;\n\t\t\t_m1.elements[4] *= invSY;\n\t\t\t_m1.elements[5] *= invSY;\n\t\t\t_m1.elements[6] *= invSY;\n\t\t\t_m1.elements[8] *= invSZ;\n\t\t\t_m1.elements[9] *= invSZ;\n\t\t\t_m1.elements[10] *= invSZ;\n\t\t\tquaternion.setFromRotationMatrix(_m1);\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.makePerspective = function makePerspective(left, right, top, bottom, near, far) {\n\t\t\tif (far === undefined) {\n\t\t\t\tconsole.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / (right - left);\n\t\t\tvar y = 2 * near / (top - bottom);\n\t\t\tvar a = (right + left) / (right - left);\n\t\t\tvar b = (top + bottom) / (top - bottom);\n\t\t\tvar c = -(far + near) / (far - near);\n\t\t\tvar d = -2 * far * near / (far - near);\n\t\t\tte[0] = x;\n\t\t\tte[4] = 0;\n\t\t\tte[8] = a;\n\t\t\tte[12] = 0;\n\t\t\tte[1] = 0;\n\t\t\tte[5] = y;\n\t\t\tte[9] = b;\n\t\t\tte[13] = 0;\n\t\t\tte[2] = 0;\n\t\t\tte[6] = 0;\n\t\t\tte[10] = c;\n\t\t\tte[14] = d;\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = -1;\n\t\t\tte[15] = 0;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.makeOrthographic = function makeOrthographic(left, right, top, bottom, near, far) {\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / (right - left);\n\t\t\tvar h = 1.0 / (top - bottom);\n\t\t\tvar p = 1.0 / (far - near);\n\t\t\tvar x = (right + left) * w;\n\t\t\tvar y = (top + bottom) * h;\n\t\t\tvar z = (far + near) * p;\n\t\t\tte[0] = 2 * w;\n\t\t\tte[4] = 0;\n\t\t\tte[8] = 0;\n\t\t\tte[12] = -x;\n\t\t\tte[1] = 0;\n\t\t\tte[5] = 2 * h;\n\t\t\tte[9] = 0;\n\t\t\tte[13] = -y;\n\t\t\tte[2] = 0;\n\t\t\tte[6] = 0;\n\t\t\tte[10] = -2 * p;\n\t\t\tte[14] = -z;\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(matrix) {\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor (var i = 0; i < 16; i++) {\n\t\t\t\tif (te[i] !== me[i]) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.fromArray = function fromArray(array, offset) {\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < 16; i++) {\n\t\t\t\tthis.elements[i] = array[i + offset];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toArray = function toArray(array, offset) {\n\t\t\tif (array === void 0) {\n\t\t\t\tarray = [];\n\t\t\t}\n\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\t\t\tarray[offset] = te[0];\n\t\t\tarray[offset + 1] = te[1];\n\t\t\tarray[offset + 2] = te[2];\n\t\t\tarray[offset + 3] = te[3];\n\t\t\tarray[offset + 4] = te[4];\n\t\t\tarray[offset + 5] = te[5];\n\t\t\tarray[offset + 6] = te[6];\n\t\t\tarray[offset + 7] = te[7];\n\t\t\tarray[offset + 8] = te[8];\n\t\t\tarray[offset + 9] = te[9];\n\t\t\tarray[offset + 10] = te[10];\n\t\t\tarray[offset + 11] = te[11];\n\t\t\tarray[offset + 12] = te[12];\n\t\t\tarray[offset + 13] = te[13];\n\t\t\tarray[offset + 14] = te[14];\n\t\t\tarray[offset + 15] = te[15];\n\t\t\treturn array;\n\t\t};\n\n\t\treturn Matrix4;\n\t}();\n\n\tvar _v1$1 = /*@__PURE__*/new Vector3();\n\n\tvar _m1 = /*@__PURE__*/new Matrix4();\n\n\tvar _zero = /*@__PURE__*/new Vector3(0, 0, 0);\n\n\tvar _one = /*@__PURE__*/new Vector3(1, 1, 1);\n\n\tvar _x = /*@__PURE__*/new Vector3();\n\n\tvar _y = /*@__PURE__*/new Vector3();\n\n\tvar _z = /*@__PURE__*/new Vector3();\n\n\tvar Euler = /*#__PURE__*/function () {\n\t\tfunction Euler(x, y, z, order) {\n\t\t\tif (x === void 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\n\t\t\tif (y === void 0) {\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tif (z === void 0) {\n\t\t\t\tz = 0;\n\t\t\t}\n\n\t\t\tif (order === void 0) {\n\t\t\t\torder = Euler.DefaultOrder;\n\t\t\t}\n\n\t\t\tObject.defineProperty(this, 'isEuler', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order;\n\t\t}\n\n\t\tvar _proto = Euler.prototype;\n\n\t\t_proto.set = function set(x, y, z, order) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._order);\n\t\t};\n\n\t\t_proto.copy = function copy(euler) {\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromRotationMatrix = function setFromRotationMatrix(m, order, update) {\n\t\t\tvar clamp = MathUtils.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[0],\n\t\t\t\t\tm12 = te[4],\n\t\t\t\t\tm13 = te[8];\n\t\t\tvar m21 = te[1],\n\t\t\t\t\tm22 = te[5],\n\t\t\t\t\tm23 = te[9];\n\t\t\tvar m31 = te[2],\n\t\t\t\t\tm32 = te[6],\n\t\t\t\t\tm33 = te[10];\n\t\t\torder = order || this._order;\n\n\t\t\tswitch (order) {\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._y = Math.asin(clamp(m13, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m13) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\n\t\t\t\t\t\tthis._z = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = Math.asin(-clamp(m23, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m23) < 0.9999999) {\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m22);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\n\t\t\t\t\t\tthis._z = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = Math.asin(clamp(m32, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m32) < 0.9999999) {\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._y = Math.asin(-clamp(m31, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m31) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._z = Math.asin(clamp(m21, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m21) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m22);\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._z = Math.asin(-clamp(m12, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m12) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order);\n\t\t\t}\n\n\t\t\tthis._order = order;\n\t\t\tif (update !== false) this._onChangeCallback();\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromQuaternion = function setFromQuaternion(q, order, update) {\n\t\t\t_matrix.makeRotationFromQuaternion(q);\n\n\t\t\treturn this.setFromRotationMatrix(_matrix, order, update);\n\t\t};\n\n\t\t_proto.setFromVector3 = function setFromVector3(v, order) {\n\t\t\treturn this.set(v.x, v.y, v.z, order || this._order);\n\t\t};\n\n\t\t_proto.reorder = function reorder(newOrder) {\n\t\t\t// WARNING: this discards revolution information -bhouston\n\t\t\t_quaternion$1.setFromEuler(this);\n\n\t\t\treturn this.setFromQuaternion(_quaternion$1, newOrder);\n\t\t};\n\n\t\t_proto.equals = function equals(euler) {\n\t\t\treturn euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n\t\t};\n\n\t\t_proto.fromArray = function fromArray(array) {\n\t\t\tthis._x = array[0];\n\t\t\tthis._y = array[1];\n\t\t\tthis._z = array[2];\n\t\t\tif (array[3] !== undefined) this._order = array[3];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toArray = function toArray(array, offset) {\n\t\t\tif (array === void 0) {\n\t\t\t\tarray = [];\n\t\t\t}\n\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tarray[offset] = this._x;\n\t\t\tarray[offset + 1] = this._y;\n\t\t\tarray[offset + 2] = this._z;\n\t\t\tarray[offset + 3] = this._order;\n\t\t\treturn array;\n\t\t};\n\n\t\t_proto.toVector3 = function toVector3(optionalResult) {\n\t\t\tif (optionalResult) {\n\t\t\t\treturn optionalResult.set(this._x, this._y, this._z);\n\t\t\t} else {\n\t\t\t\treturn new Vector3(this._x, this._y, this._z);\n\t\t\t}\n\t\t};\n\n\t\t_proto._onChange = function _onChange(callback) {\n\t\t\tthis._onChangeCallback = callback;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto._onChangeCallback = function _onChangeCallback() {};\n\n\t\t_createClass(Euler, [{\n\t\t\tkey: \"x\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._x;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._x = value;\n\n\t\t\t\tthis._onChangeCallback();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"y\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._y;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._y = value;\n\n\t\t\t\tthis._onChangeCallback();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"z\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._z;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._z = value;\n\n\t\t\t\tthis._onChangeCallback();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"order\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._order;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tthis._order = value;\n\n\t\t\t\tthis._onChangeCallback();\n\t\t\t}\n\t\t}]);\n\n\t\treturn Euler;\n\t}();\n\n\tEuler.DefaultOrder = 'XYZ';\n\tEuler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n\n\tvar _matrix = /*@__PURE__*/new Matrix4();\n\n\tvar _quaternion$1 = /*@__PURE__*/new Quaternion();\n\n\tvar Layers = /*#__PURE__*/function () {\n\t\tfunction Layers() {\n\t\t\tthis.mask = 1 | 0;\n\t\t}\n\n\t\tvar _proto = Layers.prototype;\n\n\t\t_proto.set = function set(channel) {\n\t\t\tthis.mask = 1 << channel | 0;\n\t\t};\n\n\t\t_proto.enable = function enable(channel) {\n\t\t\tthis.mask |= 1 << channel | 0;\n\t\t};\n\n\t\t_proto.enableAll = function enableAll() {\n\t\t\tthis.mask = 0xffffffff | 0;\n\t\t};\n\n\t\t_proto.toggle = function toggle(channel) {\n\t\t\tthis.mask ^= 1 << channel | 0;\n\t\t};\n\n\t\t_proto.disable = function disable(channel) {\n\t\t\tthis.mask &= ~(1 << channel | 0);\n\t\t};\n\n\t\t_proto.disableAll = function disableAll() {\n\t\t\tthis.mask = 0;\n\t\t};\n\n\t\t_proto.test = function test(layers) {\n\t\t\treturn (this.mask & layers.mask) !== 0;\n\t\t};\n\n\t\treturn Layers;\n\t}();\n\n\tvar _object3DId = 0;\n\n\tvar _v1$2 = new Vector3();\n\n\tvar _q1 = new Quaternion();\n\n\tvar _m1$1 = new Matrix4();\n\n\tvar _target = new Vector3();\n\n\tvar _position = new Vector3();\n\n\tvar _scale = new Vector3();\n\n\tvar _quaternion$2 = new Quaternion();\n\n\tvar _xAxis = new Vector3(1, 0, 0);\n\n\tvar _yAxis = new Vector3(0, 1, 0);\n\n\tvar _zAxis = new Vector3(0, 0, 1);\n\n\tvar _addedEvent = {\n\t\ttype: 'added'\n\t};\n\tvar _removedEvent = {\n\t\ttype: 'removed'\n\t};\n\n\tfunction Object3D() {\n\t\tObject.defineProperty(this, 'id', {\n\t\t\tvalue: _object3DId++\n\t\t});\n\t\tthis.uuid = MathUtils.generateUUID();\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\t\tthis.up = Object3D.DefaultUp.clone();\n\t\tvar position = new Vector3();\n\t\tvar rotation = new Euler();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3(1, 1, 1);\n\n\t\tfunction onRotationChange() {\n\t\t\tquaternion.setFromEuler(rotation, false);\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\t\t\trotation.setFromQuaternion(quaternion, undefined, false);\n\t\t}\n\n\t\trotation._onChange(onRotationChange);\n\n\t\tquaternion._onChange(onQuaternionChange);\n\n\t\tObject.defineProperties(this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t});\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\t\tthis.animations = [];\n\t\tthis.userData = {};\n\t}\n\n\tObject3D.DefaultUp = new Vector3(0, 1, 0);\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\tObject3D.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n\t\tconstructor: Object3D,\n\t\tisObject3D: true,\n\t\tonBeforeRender: function onBeforeRender() {},\n\t\tonAfterRender: function onAfterRender() {},\n\t\tapplyMatrix4: function applyMatrix4(matrix) {\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\t\t\tthis.matrix.premultiply(matrix);\n\t\t\tthis.matrix.decompose(this.position, this.quaternion, this.scale);\n\t\t},\n\t\tapplyQuaternion: function applyQuaternion(q) {\n\t\t\tthis.quaternion.premultiply(q);\n\t\t\treturn this;\n\t\t},\n\t\tsetRotationFromAxisAngle: function setRotationFromAxisAngle(axis, angle) {\n\t\t\t// assumes axis is normalized\n\t\t\tthis.quaternion.setFromAxisAngle(axis, angle);\n\t\t},\n\t\tsetRotationFromEuler: function setRotationFromEuler(euler) {\n\t\t\tthis.quaternion.setFromEuler(euler, true);\n\t\t},\n\t\tsetRotationFromMatrix: function setRotationFromMatrix(m) {\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tthis.quaternion.setFromRotationMatrix(m);\n\t\t},\n\t\tsetRotationFromQuaternion: function setRotationFromQuaternion(q) {\n\t\t\t// assumes q is normalized\n\t\t\tthis.quaternion.copy(q);\n\t\t},\n\t\trotateOnAxis: function rotateOnAxis(axis, angle) {\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\t\t\t_q1.setFromAxisAngle(axis, angle);\n\n\t\t\tthis.quaternion.multiply(_q1);\n\t\t\treturn this;\n\t\t},\n\t\trotateOnWorldAxis: function rotateOnWorldAxis(axis, angle) {\n\t\t\t// rotate object on axis in world space\n\t\t\t// axis is assumed to be normalized\n\t\t\t// method assumes no rotated parent\n\t\t\t_q1.setFromAxisAngle(axis, angle);\n\n\t\t\tthis.quaternion.premultiply(_q1);\n\t\t\treturn this;\n\t\t},\n\t\trotateX: function rotateX(angle) {\n\t\t\treturn this.rotateOnAxis(_xAxis, angle);\n\t\t},\n\t\trotateY: function rotateY(angle) {\n\t\t\treturn this.rotateOnAxis(_yAxis, angle);\n\t\t},\n\t\trotateZ: function rotateZ(angle) {\n\t\t\treturn this.rotateOnAxis(_zAxis, angle);\n\t\t},\n\t\ttranslateOnAxis: function translateOnAxis(axis, distance) {\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\t\t\t_v1$2.copy(axis).applyQuaternion(this.quaternion);\n\n\t\t\tthis.position.add(_v1$2.multiplyScalar(distance));\n\t\t\treturn this;\n\t\t},\n\t\ttranslateX: function translateX(distance) {\n\t\t\treturn this.translateOnAxis(_xAxis, distance);\n\t\t},\n\t\ttranslateY: function translateY(distance) {\n\t\t\treturn this.translateOnAxis(_yAxis, distance);\n\t\t},\n\t\ttranslateZ: function translateZ(distance) {\n\t\t\treturn this.translateOnAxis(_zAxis, distance);\n\t\t},\n\t\tlocalToWorld: function localToWorld(vector) {\n\t\t\treturn vector.applyMatrix4(this.matrixWorld);\n\t\t},\n\t\tworldToLocal: function worldToLocal(vector) {\n\t\t\treturn vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());\n\t\t},\n\t\tlookAt: function lookAt(x, y, z) {\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\t\t\tif (x.isVector3) {\n\t\t\t\t_target.copy(x);\n\t\t\t} else {\n\t\t\t\t_target.set(x, y, z);\n\t\t\t}\n\n\t\t\tvar parent = this.parent;\n\t\t\tthis.updateWorldMatrix(true, false);\n\n\t\t\t_position.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\tif (this.isCamera || this.isLight) {\n\t\t\t\t_m1$1.lookAt(_position, _target, this.up);\n\t\t\t} else {\n\t\t\t\t_m1$1.lookAt(_target, _position, this.up);\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix(_m1$1);\n\n\t\t\tif (parent) {\n\t\t\t\t_m1$1.extractRotation(parent.matrixWorld);\n\n\t\t\t\t_q1.setFromRotationMatrix(_m1$1);\n\n\t\t\t\tthis.quaternion.premultiply(_q1.invert());\n\t\t\t}\n\t\t},\n\t\tadd: function add(object) {\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\t\tthis.add(arguments[i]);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (object === this) {\n\t\t\t\tconsole.error('THREE.Object3D.add: object can\\'t be added as a child of itself.', object);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (object && object.isObject3D) {\n\t\t\t\tif (object.parent !== null) {\n\t\t\t\t\tobject.parent.remove(object);\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tthis.children.push(object);\n\t\t\t\tobject.dispatchEvent(_addedEvent);\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tremove: function remove(object) {\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\t\tthis.remove(arguments[i]);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf(object);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tobject.parent = null;\n\t\t\t\tthis.children.splice(index, 1);\n\t\t\t\tobject.dispatchEvent(_removedEvent);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tclear: function clear() {\n\t\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\t\tvar object = this.children[i];\n\t\t\t\tobject.parent = null;\n\t\t\t\tobject.dispatchEvent(_removedEvent);\n\t\t\t}\n\n\t\t\tthis.children.length = 0;\n\t\t\treturn this;\n\t\t},\n\t\tattach: function attach(object) {\n\t\t\t// adds object as a child of this, while maintaining the object's world transform\n\t\t\tthis.updateWorldMatrix(true, false);\n\n\t\t\t_m1$1.copy(this.matrixWorld).invert();\n\n\t\t\tif (object.parent !== null) {\n\t\t\t\tobject.parent.updateWorldMatrix(true, false);\n\n\t\t\t\t_m1$1.multiply(object.parent.matrixWorld);\n\t\t\t}\n\n\t\t\tobject.applyMatrix4(_m1$1);\n\t\t\tobject.updateWorldMatrix(false, false);\n\t\t\tthis.add(object);\n\t\t\treturn this;\n\t\t},\n\t\tgetObjectById: function getObjectById(id) {\n\t\t\treturn this.getObjectByProperty('id', id);\n\t\t},\n\t\tgetObjectByName: function getObjectByName(name) {\n\t\t\treturn this.getObjectByProperty('name', name);\n\t\t},\n\t\tgetObjectByProperty: function getObjectByProperty(name, value) {\n\t\t\tif (this[name] === value) return this;\n\n\t\t\tfor (var i = 0, l = this.children.length; i < l; i++) {\n\t\t\t\tvar child = this.children[i];\n\t\t\t\tvar object = child.getObjectByProperty(name, value);\n\n\t\t\t\tif (object !== undefined) {\n\t\t\t\t\treturn object;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t},\n\t\tgetWorldPosition: function getWorldPosition(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Object3D: .getWorldPosition() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\treturn target.setFromMatrixPosition(this.matrixWorld);\n\t\t},\n\t\tgetWorldQuaternion: function getWorldQuaternion(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Object3D: .getWorldQuaternion() target is now required');\n\t\t\t\ttarget = new Quaternion();\n\t\t\t}\n\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tthis.matrixWorld.decompose(_position, target, _scale);\n\t\t\treturn target;\n\t\t},\n\t\tgetWorldScale: function getWorldScale(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Object3D: .getWorldScale() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tthis.matrixWorld.decompose(_position, _quaternion$2, target);\n\t\t\treturn target;\n\t\t},\n\t\tgetWorldDirection: function getWorldDirection(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Object3D: .getWorldDirection() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tvar e = this.matrixWorld.elements;\n\t\t\treturn target.set(e[8], e[9], e[10]).normalize();\n\t\t},\n\t\traycast: function raycast() {},\n\t\ttraverse: function traverse(callback) {\n\t\t\tcallback(this);\n\t\t\tvar children = this.children;\n\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].traverse(callback);\n\t\t\t}\n\t\t},\n\t\ttraverseVisible: function traverseVisible(callback) {\n\t\t\tif (this.visible === false) return;\n\t\t\tcallback(this);\n\t\t\tvar children = this.children;\n\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].traverseVisible(callback);\n\t\t\t}\n\t\t},\n\t\ttraverseAncestors: function traverseAncestors(callback) {\n\t\t\tvar parent = this.parent;\n\n\t\t\tif (parent !== null) {\n\t\t\t\tcallback(parent);\n\t\t\t\tparent.traverseAncestors(callback);\n\t\t\t}\n\t\t},\n\t\tupdateMatrix: function updateMatrix() {\n\t\t\tthis.matrix.compose(this.position, this.quaternion, this.scale);\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\t\t},\n\t\tupdateMatrixWorld: function updateMatrixWorld(force) {\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\n\t\t\tif (this.matrixWorldNeedsUpdate || force) {\n\t\t\t\tif (this.parent === null) {\n\t\t\t\t\tthis.matrixWorld.copy(this.matrix);\n\t\t\t\t} else {\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\t\t\t\tforce = true;\n\t\t\t} // update children\n\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].updateMatrixWorld(force);\n\t\t\t}\n\t\t},\n\t\tupdateWorldMatrix: function updateWorldMatrix(updateParents, updateChildren) {\n\t\t\tvar parent = this.parent;\n\n\t\t\tif (updateParents === true && parent !== null) {\n\t\t\t\tparent.updateWorldMatrix(true, false);\n\t\t\t}\n\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\n\t\t\tif (this.parent === null) {\n\t\t\t\tthis.matrixWorld.copy(this.matrix);\n\t\t\t} else {\n\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n\t\t\t} // update children\n\n\n\t\t\tif (updateChildren === true) {\n\t\t\t\tvar children = this.children;\n\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tchildren[i].updateWorldMatrix(false, true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttoJSON: function toJSON(meta) {\n\t\t\t// meta is a string when called from JSON.stringify\n\t\t\tvar isRootObject = meta === undefined || typeof meta === 'string';\n\t\t\tvar output = {}; // meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\n\t\t\tif (isRootObject) {\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {},\n\t\t\t\t\tshapes: {},\n\t\t\t\t\tskeletons: {},\n\t\t\t\t\tanimations: {}\n\t\t\t\t};\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\t\t\t} // standard Object3D serialization\n\n\n\t\t\tvar object = {};\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\t\t\tif (this.name !== '') object.name = this.name;\n\t\t\tif (this.castShadow === true) object.castShadow = true;\n\t\t\tif (this.receiveShadow === true) object.receiveShadow = true;\n\t\t\tif (this.visible === false) object.visible = false;\n\t\t\tif (this.frustumCulled === false) object.frustumCulled = false;\n\t\t\tif (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n\t\t\tif (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n\t\t\tobject.layers = this.layers.mask;\n\t\t\tobject.matrix = this.matrix.toArray();\n\t\t\tif (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n\t\t\tif (this.isInstancedMesh) {\n\t\t\t\tobject.type = 'InstancedMesh';\n\t\t\t\tobject.count = this.count;\n\t\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\t} //\n\n\n\t\t\tfunction serialize(library, element) {\n\t\t\t\tif (library[element.uuid] === undefined) {\n\t\t\t\t\tlibrary[element.uuid] = element.toJSON(meta);\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\t\t\t}\n\n\t\t\tif (this.isMesh || this.isLine || this.isPoints) {\n\t\t\t\tobject.geometry = serialize(meta.geometries, this.geometry);\n\t\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\t\tif (parameters !== undefined && parameters.shapes !== undefined) {\n\t\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\t\tif (Array.isArray(shapes)) {\n\t\t\t\t\t\tfor (var i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\t\t\t\tvar shape = shapes[i];\n\t\t\t\t\t\t\tserialize(meta.shapes, shape);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tserialize(meta.shapes, shapes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isSkinnedMesh) {\n\t\t\t\tobject.bindMode = this.bindMode;\n\t\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\t\tif (this.skeleton !== undefined) {\n\t\t\t\t\tserialize(meta.skeletons, this.skeleton);\n\t\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.material !== undefined) {\n\t\t\t\tif (Array.isArray(this.material)) {\n\t\t\t\t\tvar uuids = [];\n\n\t\t\t\t\tfor (var _i = 0, _l = this.material.length; _i < _l; _i++) {\n\t\t\t\t\t\tuuids.push(serialize(meta.materials, this.material[_i]));\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\t\t\t\t} else {\n\t\t\t\t\tobject.material = serialize(meta.materials, this.material);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tif (this.children.length > 0) {\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor (var _i2 = 0; _i2 < this.children.length; _i2++) {\n\t\t\t\t\tobject.children.push(this.children[_i2].toJSON(meta).object);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tif (this.animations.length > 0) {\n\t\t\t\tobject.animations = [];\n\n\t\t\t\tfor (var _i3 = 0; _i3 < this.animations.length; _i3++) {\n\t\t\t\t\tvar animation = this.animations[_i3];\n\t\t\t\t\tobject.animations.push(serialize(meta.animations, animation));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRootObject) {\n\t\t\t\tvar geometries = extractFromCache(meta.geometries);\n\t\t\t\tvar materials = extractFromCache(meta.materials);\n\t\t\t\tvar textures = extractFromCache(meta.textures);\n\t\t\t\tvar images = extractFromCache(meta.images);\n\n\t\t\t\tvar _shapes = extractFromCache(meta.shapes);\n\n\t\t\t\tvar skeletons = extractFromCache(meta.skeletons);\n\t\t\t\tvar animations = extractFromCache(meta.animations);\n\t\t\t\tif (geometries.length > 0) output.geometries = geometries;\n\t\t\t\tif (materials.length > 0) output.materials = materials;\n\t\t\t\tif (textures.length > 0) output.textures = textures;\n\t\t\t\tif (images.length > 0) output.images = images;\n\t\t\t\tif (_shapes.length > 0) output.shapes = _shapes;\n\t\t\t\tif (skeletons.length > 0) output.skeletons = skeletons;\n\t\t\t\tif (animations.length > 0) output.animations = animations;\n\t\t\t}\n\n\t\t\toutput.object = object;\n\t\t\treturn output; // extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\n\t\t\tfunction extractFromCache(cache) {\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor (var key in cache) {\n\t\t\t\t\tvar data = cache[key];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push(data);\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t}\n\t\t},\n\t\tclone: function clone(recursive) {\n\t\t\treturn new this.constructor().copy(this, recursive);\n\t\t},\n\t\tcopy: function copy(source, recursive) {\n\t\t\tif (recursive === void 0) {\n\t\t\t\trecursive = true;\n\t\t\t}\n\n\t\t\tthis.name = source.name;\n\t\t\tthis.up.copy(source.up);\n\t\t\tthis.position.copy(source.position);\n\t\t\tthis.rotation.order = source.rotation.order;\n\t\t\tthis.quaternion.copy(source.quaternion);\n\t\t\tthis.scale.copy(source.scale);\n\t\t\tthis.matrix.copy(source.matrix);\n\t\t\tthis.matrixWorld.copy(source.matrixWorld);\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\n\t\t\tif (recursive === true) {\n\t\t\t\tfor (var i = 0; i < source.children.length; i++) {\n\t\t\t\t\tvar child = source.children[i];\n\t\t\t\t\tthis.add(child.clone());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tvar _vector1 = /*@__PURE__*/new Vector3();\n\n\tvar _vector2 = /*@__PURE__*/new Vector3();\n\n\tvar _normalMatrix = /*@__PURE__*/new Matrix3();\n\n\tvar Plane = /*#__PURE__*/function () {\n\t\tfunction Plane(normal, constant) {\n\t\t\tObject.defineProperty(this, 'isPlane', {\n\t\t\t\tvalue: true\n\t\t\t}); // normal is assumed to be normalized\n\n\t\t\tthis.normal = normal !== undefined ? normal : new Vector3(1, 0, 0);\n\t\t\tthis.constant = constant !== undefined ? constant : 0;\n\t\t}\n\n\t\tvar _proto = Plane.prototype;\n\n\t\t_proto.set = function set(normal, constant) {\n\t\t\tthis.normal.copy(normal);\n\t\t\tthis.constant = constant;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setComponents = function setComponents(x, y, z, w) {\n\t\t\tthis.normal.set(x, y, z);\n\t\t\tthis.constant = w;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromNormalAndCoplanarPoint = function setFromNormalAndCoplanarPoint(normal, point) {\n\t\t\tthis.normal.copy(normal);\n\t\t\tthis.constant = -point.dot(this.normal);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromCoplanarPoints = function setFromCoplanarPoints(a, b, c) {\n\t\t\tvar normal = _vector1.subVectors(c, b).cross(_vector2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\n\t\t\tthis.setFromNormalAndCoplanarPoint(normal, a);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t};\n\n\t\t_proto.copy = function copy(plane) {\n\t\t\tthis.normal.copy(plane.normal);\n\t\t\tthis.constant = plane.constant;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.normalize = function normalize() {\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar(inverseNormalLength);\n\t\t\tthis.constant *= inverseNormalLength;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.negate = function negate() {\n\t\t\tthis.constant *= -1;\n\t\t\tthis.normal.negate();\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.distanceToPoint = function distanceToPoint(point) {\n\t\t\treturn this.normal.dot(point) + this.constant;\n\t\t};\n\n\t\t_proto.distanceToSphere = function distanceToSphere(sphere) {\n\t\t\treturn this.distanceToPoint(sphere.center) - sphere.radius;\n\t\t};\n\n\t\t_proto.projectPoint = function projectPoint(point, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Plane: .projectPoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\n\t\t};\n\n\t\t_proto.intersectLine = function intersectLine(line, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Plane: .intersectLine() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\tvar direction = line.delta(_vector1);\n\t\t\tvar denominator = this.normal.dot(direction);\n\n\t\t\tif (denominator === 0) {\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif (this.distanceToPoint(line.start) === 0) {\n\t\t\t\t\treturn target.copy(line.start);\n\t\t\t\t} // Unsure if this is the correct method to handle this case.\n\n\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tvar t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n\t\t\tif (t < 0 || t > 1) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn target.copy(direction).multiplyScalar(t).add(line.start);\n\t\t};\n\n\t\t_proto.intersectsLine = function intersectsLine(line) {\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\t\t\tvar startSign = this.distanceToPoint(line.start);\n\t\t\tvar endSign = this.distanceToPoint(line.end);\n\t\t\treturn startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n\t\t};\n\n\t\t_proto.intersectsBox = function intersectsBox(box) {\n\t\t\treturn box.intersectsPlane(this);\n\t\t};\n\n\t\t_proto.intersectsSphere = function intersectsSphere(sphere) {\n\t\t\treturn sphere.intersectsPlane(this);\n\t\t};\n\n\t\t_proto.coplanarPoint = function coplanarPoint(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Plane: .coplanarPoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.constant);\n\t\t};\n\n\t\t_proto.applyMatrix4 = function applyMatrix4(matrix, optionalNormalMatrix) {\n\t\t\tvar normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\n\n\t\t\tvar referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\n\t\t\tvar normal = this.normal.applyMatrix3(normalMatrix).normalize();\n\t\t\tthis.constant = -referencePoint.dot(normal);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.translate = function translate(offset) {\n\t\t\tthis.constant -= offset.dot(this.normal);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(plane) {\n\t\t\treturn plane.normal.equals(this.normal) && plane.constant === this.constant;\n\t\t};\n\n\t\treturn Plane;\n\t}();\n\n\tvar _v0$1 = /*@__PURE__*/new Vector3();\n\n\tvar _v1$3 = /*@__PURE__*/new Vector3();\n\n\tvar _v2$1 = /*@__PURE__*/new Vector3();\n\n\tvar _v3 = /*@__PURE__*/new Vector3();\n\n\tvar _vab = /*@__PURE__*/new Vector3();\n\n\tvar _vac = /*@__PURE__*/new Vector3();\n\n\tvar _vbc = /*@__PURE__*/new Vector3();\n\n\tvar _vap = /*@__PURE__*/new Vector3();\n\n\tvar _vbp = /*@__PURE__*/new Vector3();\n\n\tvar _vcp = /*@__PURE__*/new Vector3();\n\n\tvar Triangle = /*#__PURE__*/function () {\n\t\tfunction Triangle(a, b, c) {\n\t\t\tthis.a = a !== undefined ? a : new Vector3();\n\t\t\tthis.b = b !== undefined ? b : new Vector3();\n\t\t\tthis.c = c !== undefined ? c : new Vector3();\n\t\t}\n\n\t\tTriangle.getNormal = function getNormal(a, b, c, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Triangle: .getNormal() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\ttarget.subVectors(c, b);\n\n\t\t\t_v0$1.subVectors(a, b);\n\n\t\t\ttarget.cross(_v0$1);\n\t\t\tvar targetLengthSq = target.lengthSq();\n\n\t\t\tif (targetLengthSq > 0) {\n\t\t\t\treturn target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n\t\t\t}\n\n\t\t\treturn target.set(0, 0, 0);\n\t\t} // static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\t\t;\n\n\t\tTriangle.getBarycoord = function getBarycoord(point, a, b, c, target) {\n\t\t\t_v0$1.subVectors(c, a);\n\n\t\t\t_v1$3.subVectors(b, a);\n\n\t\t\t_v2$1.subVectors(point, a);\n\n\t\t\tvar dot00 = _v0$1.dot(_v0$1);\n\n\t\t\tvar dot01 = _v0$1.dot(_v1$3);\n\n\t\t\tvar dot02 = _v0$1.dot(_v2$1);\n\n\t\t\tvar dot11 = _v1$3.dot(_v1$3);\n\n\t\t\tvar dot12 = _v1$3.dot(_v2$1);\n\n\t\t\tvar denom = dot00 * dot11 - dot01 * dot01;\n\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Triangle: .getBarycoord() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t} // collinear or singular triangle\n\n\n\t\t\tif (denom === 0) {\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set(-2, -1, -1);\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n\t\t\tvar v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n\t\t\treturn target.set(1 - u - v, v, u);\n\t\t};\n\n\t\tTriangle.containsPoint = function containsPoint(point, a, b, c) {\n\t\t\tthis.getBarycoord(point, a, b, c, _v3);\n\t\t\treturn _v3.x >= 0 && _v3.y >= 0 && _v3.x + _v3.y <= 1;\n\t\t};\n\n\t\tTriangle.getUV = function getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\n\t\t\tthis.getBarycoord(point, p1, p2, p3, _v3);\n\t\t\ttarget.set(0, 0);\n\t\t\ttarget.addScaledVector(uv1, _v3.x);\n\t\t\ttarget.addScaledVector(uv2, _v3.y);\n\t\t\ttarget.addScaledVector(uv3, _v3.z);\n\t\t\treturn target;\n\t\t};\n\n\t\tTriangle.isFrontFacing = function isFrontFacing(a, b, c, direction) {\n\t\t\t_v0$1.subVectors(c, b);\n\n\t\t\t_v1$3.subVectors(a, b); // strictly front facing\n\n\n\t\t\treturn _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\n\t\t};\n\n\t\tvar _proto = Triangle.prototype;\n\n\t\t_proto.set = function set(a, b, c) {\n\t\t\tthis.a.copy(a);\n\t\t\tthis.b.copy(b);\n\t\t\tthis.c.copy(c);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromPointsAndIndices = function setFromPointsAndIndices(points, i0, i1, i2) {\n\t\t\tthis.a.copy(points[i0]);\n\t\t\tthis.b.copy(points[i1]);\n\t\t\tthis.c.copy(points[i2]);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t};\n\n\t\t_proto.copy = function copy(triangle) {\n\t\t\tthis.a.copy(triangle.a);\n\t\t\tthis.b.copy(triangle.b);\n\t\t\tthis.c.copy(triangle.c);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getArea = function getArea() {\n\t\t\t_v0$1.subVectors(this.c, this.b);\n\n\t\t\t_v1$3.subVectors(this.a, this.b);\n\n\t\t\treturn _v0$1.cross(_v1$3).length() * 0.5;\n\t\t};\n\n\t\t_proto.getMidpoint = function getMidpoint(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Triangle: .getMidpoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n\t\t};\n\n\t\t_proto.getNormal = function getNormal(target) {\n\t\t\treturn Triangle.getNormal(this.a, this.b, this.c, target);\n\t\t};\n\n\t\t_proto.getPlane = function getPlane(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Triangle: .getPlane() target is now required');\n\t\t\t\ttarget = new Plane();\n\t\t\t}\n\n\t\t\treturn target.setFromCoplanarPoints(this.a, this.b, this.c);\n\t\t};\n\n\t\t_proto.getBarycoord = function getBarycoord(point, target) {\n\t\t\treturn Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n\t\t};\n\n\t\t_proto.getUV = function getUV(point, uv1, uv2, uv3, target) {\n\t\t\treturn Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\n\t\t};\n\n\t\t_proto.containsPoint = function containsPoint(point) {\n\t\t\treturn Triangle.containsPoint(point, this.a, this.b, this.c);\n\t\t};\n\n\t\t_proto.isFrontFacing = function isFrontFacing(direction) {\n\t\t\treturn Triangle.isFrontFacing(this.a, this.b, this.c, direction);\n\t\t};\n\n\t\t_proto.intersectsBox = function intersectsBox(box) {\n\t\t\treturn box.intersectsTriangle(this);\n\t\t};\n\n\t\t_proto.closestPointToPoint = function closestPointToPoint(p, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Triangle: .closestPointToPoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\tvar a = this.a,\n\t\t\t\t\tb = this.b,\n\t\t\t\t\tc = this.c;\n\t\t\tvar v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\t_vab.subVectors(b, a);\n\n\t\t\t_vac.subVectors(c, a);\n\n\t\t\t_vap.subVectors(p, a);\n\n\t\t\tvar d1 = _vab.dot(_vap);\n\n\t\t\tvar d2 = _vac.dot(_vap);\n\n\t\t\tif (d1 <= 0 && d2 <= 0) {\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy(a);\n\t\t\t}\n\n\t\t\t_vbp.subVectors(p, b);\n\n\t\t\tvar d3 = _vab.dot(_vbp);\n\n\t\t\tvar d4 = _vac.dot(_vbp);\n\n\t\t\tif (d3 >= 0 && d4 <= d3) {\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy(b);\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\n\t\t\tif (vc <= 0 && d1 >= 0 && d3 <= 0) {\n\t\t\t\tv = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\n\n\t\t\t\treturn target.copy(a).addScaledVector(_vab, v);\n\t\t\t}\n\n\t\t\t_vcp.subVectors(p, c);\n\n\t\t\tvar d5 = _vab.dot(_vcp);\n\n\t\t\tvar d6 = _vac.dot(_vcp);\n\n\t\t\tif (d6 >= 0 && d5 <= d6) {\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy(c);\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\n\t\t\tif (vb <= 0 && d2 >= 0 && d6 <= 0) {\n\t\t\t\tw = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\n\n\t\t\t\treturn target.copy(a).addScaledVector(_vac, w);\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\n\t\t\tif (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n\t\t\t\t_vbc.subVectors(c, b);\n\n\t\t\t\tw = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\n\n\t\t\t\treturn target.copy(b).addScaledVector(_vbc, w); // edge region of BC\n\t\t\t} // face region\n\n\n\t\t\tvar denom = 1 / (va + vb + vc); // u = va * denom\n\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\n\t\t};\n\n\t\t_proto.equals = function equals(triangle) {\n\t\t\treturn triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n\t\t};\n\n\t\treturn Triangle;\n\t}();\n\n\tvar _colorKeywords = {\n\t\t'aliceblue': 0xF0F8FF,\n\t\t'antiquewhite': 0xFAEBD7,\n\t\t'aqua': 0x00FFFF,\n\t\t'aquamarine': 0x7FFFD4,\n\t\t'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC,\n\t\t'bisque': 0xFFE4C4,\n\t\t'black': 0x000000,\n\t\t'blanchedalmond': 0xFFEBCD,\n\t\t'blue': 0x0000FF,\n\t\t'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A,\n\t\t'burlywood': 0xDEB887,\n\t\t'cadetblue': 0x5F9EA0,\n\t\t'chartreuse': 0x7FFF00,\n\t\t'chocolate': 0xD2691E,\n\t\t'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED,\n\t\t'cornsilk': 0xFFF8DC,\n\t\t'crimson': 0xDC143C,\n\t\t'cyan': 0x00FFFF,\n\t\t'darkblue': 0x00008B,\n\t\t'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B,\n\t\t'darkgray': 0xA9A9A9,\n\t\t'darkgreen': 0x006400,\n\t\t'darkgrey': 0xA9A9A9,\n\t\t'darkkhaki': 0xBDB76B,\n\t\t'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F,\n\t\t'darkorange': 0xFF8C00,\n\t\t'darkorchid': 0x9932CC,\n\t\t'darkred': 0x8B0000,\n\t\t'darksalmon': 0xE9967A,\n\t\t'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B,\n\t\t'darkslategray': 0x2F4F4F,\n\t\t'darkslategrey': 0x2F4F4F,\n\t\t'darkturquoise': 0x00CED1,\n\t\t'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493,\n\t\t'deepskyblue': 0x00BFFF,\n\t\t'dimgray': 0x696969,\n\t\t'dimgrey': 0x696969,\n\t\t'dodgerblue': 0x1E90FF,\n\t\t'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0,\n\t\t'forestgreen': 0x228B22,\n\t\t'fuchsia': 0xFF00FF,\n\t\t'gainsboro': 0xDCDCDC,\n\t\t'ghostwhite': 0xF8F8FF,\n\t\t'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520,\n\t\t'gray': 0x808080,\n\t\t'green': 0x008000,\n\t\t'greenyellow': 0xADFF2F,\n\t\t'grey': 0x808080,\n\t\t'honeydew': 0xF0FFF0,\n\t\t'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C,\n\t\t'indigo': 0x4B0082,\n\t\t'ivory': 0xFFFFF0,\n\t\t'khaki': 0xF0E68C,\n\t\t'lavender': 0xE6E6FA,\n\t\t'lavenderblush': 0xFFF0F5,\n\t\t'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD,\n\t\t'lightblue': 0xADD8E6,\n\t\t'lightcoral': 0xF08080,\n\t\t'lightcyan': 0xE0FFFF,\n\t\t'lightgoldenrodyellow': 0xFAFAD2,\n\t\t'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90,\n\t\t'lightgrey': 0xD3D3D3,\n\t\t'lightpink': 0xFFB6C1,\n\t\t'lightsalmon': 0xFFA07A,\n\t\t'lightseagreen': 0x20B2AA,\n\t\t'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899,\n\t\t'lightslategrey': 0x778899,\n\t\t'lightsteelblue': 0xB0C4DE,\n\t\t'lightyellow': 0xFFFFE0,\n\t\t'lime': 0x00FF00,\n\t\t'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6,\n\t\t'magenta': 0xFF00FF,\n\t\t'maroon': 0x800000,\n\t\t'mediumaquamarine': 0x66CDAA,\n\t\t'mediumblue': 0x0000CD,\n\t\t'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB,\n\t\t'mediumseagreen': 0x3CB371,\n\t\t'mediumslateblue': 0x7B68EE,\n\t\t'mediumspringgreen': 0x00FA9A,\n\t\t'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585,\n\t\t'midnightblue': 0x191970,\n\t\t'mintcream': 0xF5FFFA,\n\t\t'mistyrose': 0xFFE4E1,\n\t\t'moccasin': 0xFFE4B5,\n\t\t'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080,\n\t\t'oldlace': 0xFDF5E6,\n\t\t'olive': 0x808000,\n\t\t'olivedrab': 0x6B8E23,\n\t\t'orange': 0xFFA500,\n\t\t'orangered': 0xFF4500,\n\t\t'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA,\n\t\t'palegreen': 0x98FB98,\n\t\t'paleturquoise': 0xAFEEEE,\n\t\t'palevioletred': 0xDB7093,\n\t\t'papayawhip': 0xFFEFD5,\n\t\t'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F,\n\t\t'pink': 0xFFC0CB,\n\t\t'plum': 0xDDA0DD,\n\t\t'powderblue': 0xB0E0E6,\n\t\t'purple': 0x800080,\n\t\t'rebeccapurple': 0x663399,\n\t\t'red': 0xFF0000,\n\t\t'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1,\n\t\t'saddlebrown': 0x8B4513,\n\t\t'salmon': 0xFA8072,\n\t\t'sandybrown': 0xF4A460,\n\t\t'seagreen': 0x2E8B57,\n\t\t'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D,\n\t\t'silver': 0xC0C0C0,\n\t\t'skyblue': 0x87CEEB,\n\t\t'slateblue': 0x6A5ACD,\n\t\t'slategray': 0x708090,\n\t\t'slategrey': 0x708090,\n\t\t'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F,\n\t\t'steelblue': 0x4682B4,\n\t\t'tan': 0xD2B48C,\n\t\t'teal': 0x008080,\n\t\t'thistle': 0xD8BFD8,\n\t\t'tomato': 0xFF6347,\n\t\t'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE,\n\t\t'wheat': 0xF5DEB3,\n\t\t'white': 0xFFFFFF,\n\t\t'whitesmoke': 0xF5F5F5,\n\t\t'yellow': 0xFFFF00,\n\t\t'yellowgreen': 0x9ACD32\n\t};\n\tvar _hslA = {\n\t\th: 0,\n\t\ts: 0,\n\t\tl: 0\n\t};\n\tvar _hslB = {\n\t\th: 0,\n\t\ts: 0,\n\t\tl: 0\n\t};\n\n\tfunction hue2rgb(p, q, t) {\n\t\tif (t < 0) t += 1;\n\t\tif (t > 1) t -= 1;\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\tif (t < 1 / 2) return q;\n\t\tif (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n\t\treturn p;\n\t}\n\n\tfunction SRGBToLinear(c) {\n\t\treturn c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n\t}\n\n\tfunction LinearToSRGB(c) {\n\t\treturn c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n\t}\n\n\tvar Color = /*#__PURE__*/function () {\n\t\tfunction Color(r, g, b) {\n\t\t\tObject.defineProperty(this, 'isColor', {\n\t\t\t\tvalue: true\n\t\t\t});\n\n\t\t\tif (g === undefined && b === undefined) {\n\t\t\t\t// r is THREE.Color, hex or string\n\t\t\t\treturn this.set(r);\n\t\t\t}\n\n\t\t\treturn this.setRGB(r, g, b);\n\t\t}\n\n\t\tvar _proto = Color.prototype;\n\n\t\t_proto.set = function set(value) {\n\t\t\tif (value && value.isColor) {\n\t\t\t\tthis.copy(value);\n\t\t\t} else if (typeof value === 'number') {\n\t\t\t\tthis.setHex(value);\n\t\t\t} else if (typeof value === 'string') {\n\t\t\t\tthis.setStyle(value);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setScalar = function setScalar(scalar) {\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setHex = function setHex(hex) {\n\t\t\thex = Math.floor(hex);\n\t\t\tthis.r = (hex >> 16 & 255) / 255;\n\t\t\tthis.g = (hex >> 8 & 255) / 255;\n\t\t\tthis.b = (hex & 255) / 255;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setRGB = function setRGB(r, g, b) {\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setHSL = function setHSL(h, s, l) {\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = MathUtils.euclideanModulo(h, 1);\n\t\t\ts = MathUtils.clamp(s, 0, 1);\n\t\t\tl = MathUtils.clamp(l, 0, 1);\n\n\t\t\tif (s === 0) {\n\t\t\t\tthis.r = this.g = this.b = l;\n\t\t\t} else {\n\t\t\t\tvar p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\t\tvar q = 2 * l - p;\n\t\t\t\tthis.r = hue2rgb(q, p, h + 1 / 3);\n\t\t\t\tthis.g = hue2rgb(q, p, h);\n\t\t\t\tthis.b = hue2rgb(q, p, h - 1 / 3);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setStyle = function setStyle(style) {\n\t\t\tfunction handleAlpha(string) {\n\t\t\t\tif (string === undefined) return;\n\n\t\t\t\tif (parseFloat(string) < 1) {\n\t\t\t\t\tconsole.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar m;\n\n\t\t\tif (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\n\t\t\t\t// rgb / hsl\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[1];\n\t\t\t\tvar components = m[2];\n\n\t\t\t\tswitch (name) {\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min(255, parseInt(color[1], 10)) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min(255, parseInt(color[2], 10)) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min(255, parseInt(color[3], 10)) / 255;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min(100, parseInt(color[1], 10)) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min(100, parseInt(color[2], 10)) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min(100, parseInt(color[3], 10)) / 100;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\t\t\t\t\t\tif (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat(color[1]) / 360;\n\t\t\t\t\t\t\tvar s = parseInt(color[2], 10) / 100;\n\t\t\t\t\t\t\tvar l = parseInt(color[3], 10) / 100;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this.setHSL(h, s, l);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n\t\t\t\t// hex color\n\t\t\t\tvar hex = m[1];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif (size === 3) {\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n\t\t\t\t\tthis.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n\t\t\t\t\tthis.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n\t\t\t\t\treturn this;\n\t\t\t\t} else if (size === 6) {\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n\t\t\t\t\tthis.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n\t\t\t\t\tthis.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (style && style.length > 0) {\n\t\t\t\treturn this.setColorName(style);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setColorName = function setColorName(style) {\n\t\t\t// color keywords\n\t\t\tvar hex = _colorKeywords[style];\n\n\t\t\tif (hex !== undefined) {\n\t\t\t\t// red\n\t\t\t\tthis.setHex(hex);\n\t\t\t} else {\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn('THREE.Color: Unknown color ' + style);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor(this.r, this.g, this.b);\n\t\t};\n\n\t\t_proto.copy = function copy(color) {\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.copyGammaToLinear = function copyGammaToLinear(color, gammaFactor) {\n\t\t\tif (gammaFactor === void 0) {\n\t\t\t\tgammaFactor = 2.0;\n\t\t\t}\n\n\t\t\tthis.r = Math.pow(color.r, gammaFactor);\n\t\t\tthis.g = Math.pow(color.g, gammaFactor);\n\t\t\tthis.b = Math.pow(color.b, gammaFactor);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.copyLinearToGamma = function copyLinearToGamma(color, gammaFactor) {\n\t\t\tif (gammaFactor === void 0) {\n\t\t\t\tgammaFactor = 2.0;\n\t\t\t}\n\n\t\t\tvar safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n\t\t\tthis.r = Math.pow(color.r, safeInverse);\n\t\t\tthis.g = Math.pow(color.g, safeInverse);\n\t\t\tthis.b = Math.pow(color.b, safeInverse);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.convertGammaToLinear = function convertGammaToLinear(gammaFactor) {\n\t\t\tthis.copyGammaToLinear(this, gammaFactor);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.convertLinearToGamma = function convertLinearToGamma(gammaFactor) {\n\t\t\tthis.copyLinearToGamma(this, gammaFactor);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.copySRGBToLinear = function copySRGBToLinear(color) {\n\t\t\tthis.r = SRGBToLinear(color.r);\n\t\t\tthis.g = SRGBToLinear(color.g);\n\t\t\tthis.b = SRGBToLinear(color.b);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.copyLinearToSRGB = function copyLinearToSRGB(color) {\n\t\t\tthis.r = LinearToSRGB(color.r);\n\t\t\tthis.g = LinearToSRGB(color.g);\n\t\t\tthis.b = LinearToSRGB(color.b);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.convertSRGBToLinear = function convertSRGBToLinear() {\n\t\t\tthis.copySRGBToLinear(this);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.convertLinearToSRGB = function convertLinearToSRGB() {\n\t\t\tthis.copyLinearToSRGB(this);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getHex = function getHex() {\n\t\t\treturn this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n\t\t};\n\n\t\t_proto.getHexString = function getHexString() {\n\t\t\treturn ('000000' + this.getHex().toString(16)).slice(-6);\n\t\t};\n\n\t\t_proto.getHSL = function getHSL(target) {\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Color: .getHSL() target is now required');\n\t\t\t\ttarget = {\n\t\t\t\t\th: 0,\n\t\t\t\t\ts: 0,\n\t\t\t\t\tl: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar r = this.r,\n\t\t\t\t\tg = this.g,\n\t\t\t\t\tb = this.b;\n\t\t\tvar max = Math.max(r, g, b);\n\t\t\tvar min = Math.min(r, g, b);\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = (min + max) / 2.0;\n\n\t\t\tif (min === max) {\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\t\t\t} else {\n\t\t\t\tvar delta = max - min;\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n\t\t\t\tswitch (max) {\n\t\t\t\t\tcase r:\n\t\t\t\t\t\thue = (g - b) / delta + (g < b ? 6 : 0);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase g:\n\t\t\t\t\t\thue = (b - r) / delta + 2;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase b:\n\t\t\t\t\t\thue = (r - g) / delta + 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\t\t\t}\n\n\t\t\ttarget.h = hue;\n\t\t\ttarget.s = saturation;\n\t\t\ttarget.l = lightness;\n\t\t\treturn target;\n\t\t};\n\n\t\t_proto.getStyle = function getStyle() {\n\t\t\treturn 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n\t\t};\n\n\t\t_proto.offsetHSL = function offsetHSL(h, s, l) {\n\t\t\tthis.getHSL(_hslA);\n\t\t\t_hslA.h += h;\n\t\t\t_hslA.s += s;\n\t\t\t_hslA.l += l;\n\t\t\tthis.setHSL(_hslA.h, _hslA.s, _hslA.l);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.add = function add(color) {\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.addColors = function addColors(color1, color2) {\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.addScalar = function addScalar(s) {\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.sub = function sub(color) {\n\t\t\tthis.r = Math.max(0, this.r - color.r);\n\t\t\tthis.g = Math.max(0, this.g - color.g);\n\t\t\tthis.b = Math.max(0, this.b - color.b);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.multiply = function multiply(color) {\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.multiplyScalar = function multiplyScalar(s) {\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.lerp = function lerp(color, alpha) {\n\t\t\tthis.r += (color.r - this.r) * alpha;\n\t\t\tthis.g += (color.g - this.g) * alpha;\n\t\t\tthis.b += (color.b - this.b) * alpha;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.lerpColors = function lerpColors(color1, color2, alpha) {\n\t\t\tthis.r = color1.r + (color2.r - color1.r) * alpha;\n\t\t\tthis.g = color1.g + (color2.g - color1.g) * alpha;\n\t\t\tthis.b = color1.b + (color2.b - color1.b) * alpha;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.lerpHSL = function lerpHSL(color, alpha) {\n\t\t\tthis.getHSL(_hslA);\n\t\t\tcolor.getHSL(_hslB);\n\t\t\tvar h = MathUtils.lerp(_hslA.h, _hslB.h, alpha);\n\t\t\tvar s = MathUtils.lerp(_hslA.s, _hslB.s, alpha);\n\t\t\tvar l = MathUtils.lerp(_hslA.l, _hslB.l, alpha);\n\t\t\tthis.setHSL(h, s, l);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(c) {\n\t\t\treturn c.r === this.r && c.g === this.g && c.b === this.b;\n\t\t};\n\n\t\t_proto.fromArray = function fromArray(array, offset) {\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tthis.r = array[offset];\n\t\t\tthis.g = array[offset + 1];\n\t\t\tthis.b = array[offset + 2];\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toArray = function toArray(array, offset) {\n\t\t\tif (array === void 0) {\n\t\t\t\tarray = [];\n\t\t\t}\n\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tarray[offset] = this.r;\n\t\t\tarray[offset + 1] = this.g;\n\t\t\tarray[offset + 2] = this.b;\n\t\t\treturn array;\n\t\t};\n\n\t\t_proto.fromBufferAttribute = function fromBufferAttribute(attribute, index) {\n\t\t\tthis.r = attribute.getX(index);\n\t\t\tthis.g = attribute.getY(index);\n\t\t\tthis.b = attribute.getZ(index);\n\n\t\t\tif (attribute.normalized === true) {\n\t\t\t\t// assuming Uint8Array\n\t\t\t\tthis.r /= 255;\n\t\t\t\tthis.g /= 255;\n\t\t\t\tthis.b /= 255;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toJSON = function toJSON() {\n\t\t\treturn this.getHex();\n\t\t};\n\n\t\treturn Color;\n\t}();\n\n\tColor.NAMES = _colorKeywords;\n\tColor.prototype.r = 1;\n\tColor.prototype.g = 1;\n\tColor.prototype.b = 1;\n\n\tvar Face3 = /*#__PURE__*/function () {\n\t\tfunction Face3(a, b, c, normal, color, materialIndex) {\n\t\t\tif (materialIndex === void 0) {\n\t\t\t\tmaterialIndex = 0;\n\t\t\t}\n\n\t\t\tthis.a = a;\n\t\t\tthis.b = b;\n\t\t\tthis.c = c;\n\t\t\tthis.normal = normal && normal.isVector3 ? normal : new Vector3();\n\t\t\tthis.vertexNormals = Array.isArray(normal) ? normal : [];\n\t\t\tthis.color = color && color.isColor ? color : new Color();\n\t\t\tthis.vertexColors = Array.isArray(color) ? color : [];\n\t\t\tthis.materialIndex = materialIndex;\n\t\t}\n\n\t\tvar _proto = Face3.prototype;\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t};\n\n\t\t_proto.copy = function copy(source) {\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\t\t\tthis.normal.copy(source.normal);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n\t\t\t\tthis.vertexNormals[i] = source.vertexNormals[i].clone();\n\t\t\t}\n\n\t\t\tfor (var _i = 0, _il = source.vertexColors.length; _i < _il; _i++) {\n\t\t\t\tthis.vertexColors[_i] = source.vertexColors[_i].clone();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Face3;\n\t}();\n\n\tvar materialId = 0;\n\n\tfunction Material() {\n\t\tObject.defineProperty(this, 'id', {\n\t\t\tvalue: materialId++\n\t\t});\n\t\tthis.uuid = MathUtils.generateUUID();\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\t\tthis.fog = true;\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.flatShading = false;\n\t\tthis.vertexColors = false;\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\t\tthis.shadowSide = null;\n\t\tthis.colorWrite = true;\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\t\tthis.dithering = false;\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.visible = true;\n\t\tthis.toneMapped = true;\n\t\tthis.userData = {};\n\t\tthis.version = 0;\n\t}\n\n\tMaterial.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n\t\tconstructor: Material,\n\t\tisMaterial: true,\n\t\tonBeforeCompile: function onBeforeCompile()\n\t\t/* shaderobject, renderer */\n\t\t{},\n\t\tcustomProgramCacheKey: function customProgramCacheKey() {\n\t\t\treturn this.onBeforeCompile.toString();\n\t\t},\n\t\tsetValues: function setValues(values) {\n\t\t\tif (values === undefined) return;\n\n\t\t\tfor (var key in values) {\n\t\t\t\tvar newValue = values[key];\n\n\t\t\t\tif (newValue === undefined) {\n\t\t\t\t\tconsole.warn('THREE.Material: \\'' + key + '\\' parameter is undefined.');\n\t\t\t\t\tcontinue;\n\t\t\t\t} // for backward compatability if shading is set in the constructor\n\n\n\t\t\t\tif (key === 'shading') {\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t\t\tthis.flatShading = newValue === FlatShading ? true : false;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[key];\n\n\t\t\t\tif (currentValue === undefined) {\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (currentValue && currentValue.isColor) {\n\t\t\t\t\tcurrentValue.set(newValue);\n\t\t\t\t} else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n\t\t\t\t\tcurrentValue.copy(newValue);\n\t\t\t\t} else {\n\t\t\t\t\tthis[key] = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttoJSON: function toJSON(meta) {\n\t\t\tvar isRoot = meta === undefined || typeof meta === 'string';\n\n\t\t\tif (isRoot) {\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t}; // standard Material serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (this.color && this.color.isColor) data.color = this.color.getHex();\n\t\t\tif (this.roughness !== undefined) data.roughness = this.roughness;\n\t\t\tif (this.metalness !== undefined) data.metalness = this.metalness;\n\t\t\tif (this.sheen && this.sheen.isColor) data.sheen = this.sheen.getHex();\n\t\t\tif (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n\t\t\tif (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n\t\t\tif (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n\t\t\tif (this.shininess !== undefined) data.shininess = this.shininess;\n\t\t\tif (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n\t\t\tif (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\t\tif (this.clearcoatMap && this.clearcoatMap.isTexture) {\n\t\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n\t\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n\t\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n\t\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\t\t\t}\n\n\t\t\tif (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n\t\t\tif (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\n\t\t\tif (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n\t\t\tif (this.lightMap && this.lightMap.isTexture) data.lightMap = this.lightMap.toJSON(meta).uuid;\n\n\t\t\tif (this.aoMap && this.aoMap.isTexture) {\n\t\t\t\tdata.aoMap = this.aoMap.toJSON(meta).uuid;\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\t\t\t}\n\n\t\t\tif (this.bumpMap && this.bumpMap.isTexture) {\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON(meta).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\t\t\t}\n\n\t\t\tif (this.normalMap && this.normalMap.isTexture) {\n\t\t\t\tdata.normalMap = this.normalMap.toJSON(meta).uuid;\n\t\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\t\t\t}\n\n\t\t\tif (this.displacementMap && this.displacementMap.isTexture) {\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON(meta).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\t\t\t}\n\n\t\t\tif (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n\t\t\tif (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n\t\t\tif (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n\t\t\tif (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n\t\t\tif (this.envMap && this.envMap.isTexture) {\n\t\t\t\tdata.envMap = this.envMap.toJSON(meta).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\t\tdata.refractionRatio = this.refractionRatio;\n\t\t\t\tif (this.combine !== undefined) data.combine = this.combine;\n\t\t\t\tif (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n\t\t\t}\n\n\t\t\tif (this.gradientMap && this.gradientMap.isTexture) {\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.size !== undefined) data.size = this.size;\n\t\t\tif (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n\t\t\tif (this.blending !== NormalBlending) data.blending = this.blending;\n\t\t\tif (this.flatShading === true) data.flatShading = this.flatShading;\n\t\t\tif (this.side !== FrontSide) data.side = this.side;\n\t\t\tif (this.vertexColors) data.vertexColors = true;\n\t\t\tif (this.opacity < 1) data.opacity = this.opacity;\n\t\t\tif (this.transparent === true) data.transparent = this.transparent;\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\t\t\tdata.stencilWrite = this.stencilWrite;\n\t\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\t\tdata.stencilFunc = this.stencilFunc;\n\t\t\tdata.stencilRef = this.stencilRef;\n\t\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\t\tdata.stencilFail = this.stencilFail;\n\t\t\tdata.stencilZFail = this.stencilZFail;\n\t\t\tdata.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\n\n\t\t\tif (this.rotation && this.rotation !== 0) data.rotation = this.rotation;\n\t\t\tif (this.polygonOffset === true) data.polygonOffset = true;\n\t\t\tif (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\t\tif (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\t\t\tif (this.linewidth && this.linewidth !== 1) data.linewidth = this.linewidth;\n\t\t\tif (this.dashSize !== undefined) data.dashSize = this.dashSize;\n\t\t\tif (this.gapSize !== undefined) data.gapSize = this.gapSize;\n\t\t\tif (this.scale !== undefined) data.scale = this.scale;\n\t\t\tif (this.dithering === true) data.dithering = true;\n\t\t\tif (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n\t\t\tif (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\t\tif (this.wireframe === true) data.wireframe = this.wireframe;\n\t\t\tif (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n\t\t\tif (this.morphTargets === true) data.morphTargets = true;\n\t\t\tif (this.morphNormals === true) data.morphNormals = true;\n\t\t\tif (this.skinning === true) data.skinning = true;\n\t\t\tif (this.visible === false) data.visible = false;\n\t\t\tif (this.toneMapped === false) data.toneMapped = false;\n\t\t\tif (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache(cache) {\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor (var key in cache) {\n\t\t\t\t\tvar _data = cache[key];\n\t\t\t\t\tdelete _data.metadata;\n\t\t\t\t\tvalues.push(_data);\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t}\n\n\t\t\tif (isRoot) {\n\t\t\t\tvar textures = extractFromCache(meta.textures);\n\t\t\t\tvar images = extractFromCache(meta.images);\n\t\t\t\tif (textures.length > 0) data.textures = textures;\n\t\t\t\tif (images.length > 0) data.images = images;\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\t\tclone: function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t},\n\t\tcopy: function copy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\tthis.vertexColors = source.vertexColors;\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\t\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\t\tthis.stencilFunc = source.stencilFunc;\n\t\t\tthis.stencilRef = source.stencilRef;\n\t\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\t\tthis.stencilFail = source.stencilFail;\n\t\t\tthis.stencilZFail = source.stencilZFail;\n\t\t\tthis.stencilZPass = source.stencilZPass;\n\t\t\tthis.stencilWrite = source.stencilWrite;\n\t\t\tvar srcPlanes = source.clippingPlanes;\n\t\t\tvar dstPlanes = null;\n\n\t\t\tif (srcPlanes !== null) {\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array(n);\n\n\t\t\t\tfor (var i = 0; i !== n; ++i) {\n\t\t\t\t\tdstPlanes[i] = srcPlanes[i].clone();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.shadowSide = source.shadowSide;\n\t\t\tthis.colorWrite = source.colorWrite;\n\t\t\tthis.precision = source.precision;\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\t\t\tthis.dithering = source.dithering;\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.toneMapped = source.toneMapped;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\t\t\treturn this;\n\t\t},\n\t\tdispose: function dispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\t});\n\tObject.defineProperty(Material.prototype, 'needsUpdate', {\n\t\tset: function set(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\t});\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.Multiply,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\tdepthTest: <bool>,\n\t *\tdepthWrite: <bool>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tskinning: <bool>,\n\t *\tmorphTargets: <bool>\n\t * }\n\t */\n\n\tfunction MeshBasicMaterial(parameters) {\n\t\tMaterial.call(this);\n\t\tthis.type = 'MeshBasicMaterial';\n\t\tthis.color = new Color(0xffffff); // emissive\n\n\t\tthis.map = null;\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\t\tthis.specularMap = null;\n\t\tthis.alphaMap = null;\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.setValues(parameters);\n\t}\n\n\tMeshBasicMaterial.prototype = Object.create(Material.prototype);\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tMeshBasicMaterial.prototype.copy = function (source) {\n\t\tMaterial.prototype.copy.call(this, source);\n\t\tthis.color.copy(source.color);\n\t\tthis.map = source.map;\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\tthis.specularMap = source.specularMap;\n\t\tthis.alphaMap = source.alphaMap;\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\treturn this;\n\t};\n\n\tvar _vector$3 = new Vector3();\n\n\tvar _vector2$1 = new Vector2();\n\n\tfunction BufferAttribute(array, itemSize, normalized) {\n\t\tif (Array.isArray(array)) {\n\t\t\tthrow new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n\t\t}\n\n\t\tthis.name = '';\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = {\n\t\t\toffset: 0,\n\t\t\tcount: -1\n\t\t};\n\t\tthis.version = 0;\n\t}\n\n\tObject.defineProperty(BufferAttribute.prototype, 'needsUpdate', {\n\t\tset: function set(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\t});\n\tObject.assign(BufferAttribute.prototype, {\n\t\tisBufferAttribute: true,\n\t\tonUploadCallback: function onUploadCallback() {},\n\t\tsetUsage: function setUsage(value) {\n\t\t\tthis.usage = value;\n\t\t\treturn this;\n\t\t},\n\t\tcopy: function copy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.array = new source.array.constructor(source.array);\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\t\t\tthis.usage = source.usage;\n\t\t\treturn this;\n\t\t},\n\t\tcopyAt: function copyAt(index1, attribute, index2) {\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor (var i = 0, l = this.itemSize; i < l; i++) {\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tcopyArray: function copyArray(array) {\n\t\t\tthis.array.set(array);\n\t\t\treturn this;\n\t\t},\n\t\tcopyColorsArray: function copyColorsArray(colors) {\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor (var i = 0, l = colors.length; i < l; i++) {\n\t\t\t\tvar color = colors[i];\n\n\t\t\t\tif (color === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n\t\t\t\t\tcolor = new Color();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = color.r;\n\t\t\t\tarray[offset++] = color.g;\n\t\t\t\tarray[offset++] = color.b;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tcopyVector2sArray: function copyVector2sArray(vectors) {\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor (var i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tvar vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector2();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tcopyVector3sArray: function copyVector3sArray(vectors) {\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor (var i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tvar vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector3();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t\tarray[offset++] = vector.z;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tcopyVector4sArray: function copyVector4sArray(vectors) {\n\t\t\tvar array = this.array;\n\t\t\tvar offset = 0;\n\n\t\t\tfor (var i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tvar vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector4();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t\tarray[offset++] = vector.z;\n\t\t\t\tarray[offset++] = vector.w;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tapplyMatrix3: function applyMatrix3(m) {\n\t\t\tif (this.itemSize === 2) {\n\t\t\t\tfor (var i = 0, l = this.count; i < l; i++) {\n\t\t\t\t\t_vector2$1.fromBufferAttribute(this, i);\n\n\t\t\t\t\t_vector2$1.applyMatrix3(m);\n\n\t\t\t\t\tthis.setXY(i, _vector2$1.x, _vector2$1.y);\n\t\t\t\t}\n\t\t\t} else if (this.itemSize === 3) {\n\t\t\t\tfor (var _i = 0, _l = this.count; _i < _l; _i++) {\n\t\t\t\t\t_vector$3.fromBufferAttribute(this, _i);\n\n\t\t\t\t\t_vector$3.applyMatrix3(m);\n\n\t\t\t\t\tthis.setXYZ(_i, _vector$3.x, _vector$3.y, _vector$3.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tapplyMatrix4: function applyMatrix4(m) {\n\t\t\tfor (var i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$3.x = this.getX(i);\n\t\t\t\t_vector$3.y = this.getY(i);\n\t\t\t\t_vector$3.z = this.getZ(i);\n\n\t\t\t\t_vector$3.applyMatrix4(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$3.x, _vector$3.y, _vector$3.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tapplyNormalMatrix: function applyNormalMatrix(m) {\n\t\t\tfor (var i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$3.x = this.getX(i);\n\t\t\t\t_vector$3.y = this.getY(i);\n\t\t\t\t_vector$3.z = this.getZ(i);\n\n\t\t\t\t_vector$3.applyNormalMatrix(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$3.x, _vector$3.y, _vector$3.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\ttransformDirection: function transformDirection(m) {\n\t\t\tfor (var i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$3.x = this.getX(i);\n\t\t\t\t_vector$3.y = this.getY(i);\n\t\t\t\t_vector$3.z = this.getZ(i);\n\n\t\t\t\t_vector$3.transformDirection(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$3.x, _vector$3.y, _vector$3.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tset: function set(value, offset) {\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tthis.array.set(value, offset);\n\t\t\treturn this;\n\t\t},\n\t\tgetX: function getX(index) {\n\t\t\treturn this.array[index * this.itemSize];\n\t\t},\n\t\tsetX: function setX(index, x) {\n\t\t\tthis.array[index * this.itemSize] = x;\n\t\t\treturn this;\n\t\t},\n\t\tgetY: function getY(index) {\n\t\t\treturn this.array[index * this.itemSize + 1];\n\t\t},\n\t\tsetY: function setY(index, y) {\n\t\t\tthis.array[index * this.itemSize + 1] = y;\n\t\t\treturn this;\n\t\t},\n\t\tgetZ: function getZ(index) {\n\t\t\treturn this.array[index * this.itemSize + 2];\n\t\t},\n\t\tsetZ: function setZ(index, z) {\n\t\t\tthis.array[index * this.itemSize + 2] = z;\n\t\t\treturn this;\n\t\t},\n\t\tgetW: function getW(index) {\n\t\t\treturn this.array[index * this.itemSize + 3];\n\t\t},\n\t\tsetW: function setW(index, w) {\n\t\t\tthis.array[index * this.itemSize + 3] = w;\n\t\t\treturn this;\n\t\t},\n\t\tsetXY: function setXY(index, x, y) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\treturn this;\n\t\t},\n\t\tsetXYZ: function setXYZ(index, x, y, z) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\tthis.array[index + 2] = z;\n\t\t\treturn this;\n\t\t},\n\t\tsetXYZW: function setXYZW(index, x, y, z, w) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\tthis.array[index + 2] = z;\n\t\t\tthis.array[index + 3] = w;\n\t\t\treturn this;\n\t\t},\n\t\tonUpload: function onUpload(callback) {\n\t\t\tthis.onUploadCallback = callback;\n\t\t\treturn this;\n\t\t},\n\t\tclone: function clone() {\n\t\t\treturn new this.constructor(this.array, this.itemSize).copy(this);\n\t\t},\n\t\ttoJSON: function toJSON() {\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call(this.array),\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\t\t}\n\t}); //\n\n\tfunction Int8BufferAttribute(array, itemSize, normalized) {\n\t\tBufferAttribute.call(this, new Int8Array(array), itemSize, normalized);\n\t}\n\n\tInt8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n\tInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\tfunction Uint8BufferAttribute(array, itemSize, normalized) {\n\t\tBufferAttribute.call(this, new Uint8Array(array), itemSize, normalized);\n\t}\n\n\tUint8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n\tUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\tfunction Uint8ClampedBufferAttribute(array, itemSize, normalized) {\n\t\tBufferAttribute.call(this, new Uint8ClampedArray(array), itemSize, normalized);\n\t}\n\n\tUint8ClampedBufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n\tUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\tfunction Int16BufferAttribute(array, itemSize, normalized) {\n\t\tBufferAttribute.call(this, new Int16Array(array), itemSize, normalized);\n\t}\n\n\tInt16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n\tInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\tfunction Uint16BufferAttribute(array, itemSize, normalized) {\n\t\tBufferAttribute.call(this, new Uint16Array(array), itemSize, normalized);\n\t}\n\n\tUint16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n\tUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\tfunction Int32BufferAttribute(array, itemSize, normalized) {\n\t\tBufferAttribute.call(this, new Int32Array(array), itemSize, normalized);\n\t}\n\n\tInt32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n\tInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\tfunction Uint32BufferAttribute(array, itemSize, normalized) {\n\t\tBufferAttribute.call(this, new Uint32Array(array), itemSize, normalized);\n\t}\n\n\tUint32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n\tUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\tfunction Float16BufferAttribute(array, itemSize, normalized) {\n\t\tBufferAttribute.call(this, new Uint16Array(array), itemSize, normalized);\n\t}\n\n\tFloat16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n\tFloat16BufferAttribute.prototype.constructor = Float16BufferAttribute;\n\tFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\n\tfunction Float32BufferAttribute(array, itemSize, normalized) {\n\t\tBufferAttribute.call(this, new Float32Array(array), itemSize, normalized);\n\t}\n\n\tFloat32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n\tFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\tfunction Float64BufferAttribute(array, itemSize, normalized) {\n\t\tBufferAttribute.call(this, new Float64Array(array), itemSize, normalized);\n\t}\n\n\tFloat64BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n\tFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute; //\n\n\tfunction arrayMax(array) {\n\t\tif (array.length === 0) return -Infinity;\n\t\tvar max = array[0];\n\n\t\tfor (var i = 1, l = array.length; i < l; ++i) {\n\t\t\tif (array[i] > max) max = array[i];\n\t\t}\n\n\t\treturn max;\n\t}\n\n\tvar TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\t// Workaround for IE11 pre KB2929437. See #11440\n\t\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\tfunction getTypedArray(type, buffer) {\n\t\treturn new TYPED_ARRAYS[type](buffer);\n\t}\n\n\tvar _id = 0;\n\n\tvar _m1$2 = new Matrix4();\n\n\tvar _obj = new Object3D();\n\n\tvar _offset = new Vector3();\n\n\tvar _box$2 = new Box3();\n\n\tvar _boxMorphTargets = new Box3();\n\n\tvar _vector$4 = new Vector3();\n\n\tfunction BufferGeometry() {\n\t\tObject.defineProperty(this, 'id', {\n\t\t\tvalue: _id++\n\t\t});\n\t\tthis.uuid = MathUtils.generateUUID();\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.drawRange = {\n\t\t\tstart: 0,\n\t\t\tcount: Infinity\n\t\t};\n\t\tthis.userData = {};\n\t}\n\n\tBufferGeometry.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n\t\tconstructor: BufferGeometry,\n\t\tisBufferGeometry: true,\n\t\tgetIndex: function getIndex() {\n\t\t\treturn this.index;\n\t\t},\n\t\tsetIndex: function setIndex(index) {\n\t\t\tif (Array.isArray(index)) {\n\t\t\t\tthis.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n\t\t\t} else {\n\t\t\t\tthis.index = index;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tgetAttribute: function getAttribute(name) {\n\t\t\treturn this.attributes[name];\n\t\t},\n\t\tsetAttribute: function setAttribute(name, attribute) {\n\t\t\tthis.attributes[name] = attribute;\n\t\t\treturn this;\n\t\t},\n\t\tdeleteAttribute: function deleteAttribute(name) {\n\t\t\tdelete this.attributes[name];\n\t\t\treturn this;\n\t\t},\n\t\thasAttribute: function hasAttribute(name) {\n\t\t\treturn this.attributes[name] !== undefined;\n\t\t},\n\t\taddGroup: function addGroup(start, count, materialIndex) {\n\t\t\tif (materialIndex === void 0) {\n\t\t\t\tmaterialIndex = 0;\n\t\t\t}\n\n\t\t\tthis.groups.push({\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex\n\t\t\t});\n\t\t},\n\t\tclearGroups: function clearGroups() {\n\t\t\tthis.groups = [];\n\t\t},\n\t\tsetDrawRange: function setDrawRange(start, count) {\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\t\t},\n\t\tapplyMatrix4: function applyMatrix4(matrix) {\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif (position !== undefined) {\n\t\t\t\tposition.applyMatrix4(matrix);\n\t\t\t\tposition.needsUpdate = true;\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif (normal !== undefined) {\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix(matrix);\n\t\t\t\tnormal.applyNormalMatrix(normalMatrix);\n\t\t\t\tnormal.needsUpdate = true;\n\t\t\t}\n\n\t\t\tvar tangent = this.attributes.tangent;\n\n\t\t\tif (tangent !== undefined) {\n\t\t\t\ttangent.transformDirection(matrix);\n\t\t\t\ttangent.needsUpdate = true;\n\t\t\t}\n\n\t\t\tif (this.boundingBox !== null) {\n\t\t\t\tthis.computeBoundingBox();\n\t\t\t}\n\n\t\t\tif (this.boundingSphere !== null) {\n\t\t\t\tthis.computeBoundingSphere();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\trotateX: function rotateX(angle) {\n\t\t\t// rotate geometry around world x-axis\n\t\t\t_m1$2.makeRotationX(angle);\n\n\t\t\tthis.applyMatrix4(_m1$2);\n\t\t\treturn this;\n\t\t},\n\t\trotateY: function rotateY(angle) {\n\t\t\t// rotate geometry around world y-axis\n\t\t\t_m1$2.makeRotationY(angle);\n\n\t\t\tthis.applyMatrix4(_m1$2);\n\t\t\treturn this;\n\t\t},\n\t\trotateZ: function rotateZ(angle) {\n\t\t\t// rotate geometry around world z-axis\n\t\t\t_m1$2.makeRotationZ(angle);\n\n\t\t\tthis.applyMatrix4(_m1$2);\n\t\t\treturn this;\n\t\t},\n\t\ttranslate: function translate(x, y, z) {\n\t\t\t// translate geometry\n\t\t\t_m1$2.makeTranslation(x, y, z);\n\n\t\t\tthis.applyMatrix4(_m1$2);\n\t\t\treturn this;\n\t\t},\n\t\tscale: function scale(x, y, z) {\n\t\t\t// scale geometry\n\t\t\t_m1$2.makeScale(x, y, z);\n\n\t\t\tthis.applyMatrix4(_m1$2);\n\t\t\treturn this;\n\t\t},\n\t\tlookAt: function lookAt(vector) {\n\t\t\t_obj.lookAt(vector);\n\n\t\t\t_obj.updateMatrix();\n\n\t\t\tthis.applyMatrix4(_obj.matrix);\n\t\t\treturn this;\n\t\t},\n\t\tcenter: function center() {\n\t\t\tthis.computeBoundingBox();\n\t\t\tthis.boundingBox.getCenter(_offset).negate();\n\t\t\tthis.translate(_offset.x, _offset.y, _offset.z);\n\t\t\treturn this;\n\t\t},\n\t\tsetFromPoints: function setFromPoints(points) {\n\t\t\tvar position = [];\n\n\t\t\tfor (var i = 0, l = points.length; i < l; i++) {\n\t\t\t\tvar point = points[i];\n\t\t\t\tposition.push(point.x, point.y, point.z || 0);\n\t\t\t}\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(position, 3));\n\t\t\treturn this;\n\t\t},\n\t\tcomputeBoundingBox: function computeBoundingBox() {\n\t\t\tif (this.boundingBox === null) {\n\t\t\t\tthis.boundingBox = new Box3();\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif (position && position.isGLBufferAttribute) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n\t\t\t\tthis.boundingBox.set(new Vector3(-Infinity, -Infinity, -Infinity), new Vector3(+Infinity, +Infinity, +Infinity));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (position !== undefined) {\n\t\t\t\tthis.boundingBox.setFromBufferAttribute(position); // process morph attributes if present\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (var i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[i];\n\n\t\t\t\t\t\t_box$2.setFromBufferAttribute(morphAttribute);\n\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\n\t\t\t\t\t\t\t_vector$4.addVectors(this.boundingBox.min, _box$2.min);\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$4);\n\n\t\t\t\t\t\t\t_vector$4.addVectors(this.boundingBox.max, _box$2.max);\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$4);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$2.min);\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$2.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.boundingBox.makeEmpty();\n\t\t\t}\n\n\t\t\tif (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n\t\t\t}\n\t\t},\n\t\tcomputeBoundingSphere: function computeBoundingSphere() {\n\t\t\tif (this.boundingSphere === null) {\n\t\t\t\tthis.boundingSphere = new Sphere();\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif (position && position.isGLBufferAttribute) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n\t\t\t\tthis.boundingSphere.set(new Vector3(), Infinity);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (position) {\n\t\t\t\t// first, find the center of the bounding sphere\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t_box$2.setFromBufferAttribute(position); // process morph attributes if present\n\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (var i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[i];\n\n\t\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute(morphAttribute);\n\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\n\t\t\t\t\t\t\t_vector$4.addVectors(_box$2.min, _boxMorphTargets.min);\n\n\t\t\t\t\t\t\t_box$2.expandByPoint(_vector$4);\n\n\t\t\t\t\t\t\t_vector$4.addVectors(_box$2.max, _boxMorphTargets.max);\n\n\t\t\t\t\t\t\t_box$2.expandByPoint(_vector$4);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_box$2.expandByPoint(_boxMorphTargets.min);\n\n\t\t\t\t\t\t\t_box$2.expandByPoint(_boxMorphTargets.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t_box$2.getCenter(center); // second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor (var _i = 0, _il = position.count; _i < _il; _i++) {\n\t\t\t\t\t_vector$4.fromBufferAttribute(position, _i);\n\n\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$4));\n\t\t\t\t} // process morph attributes if present\n\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (var _i2 = 0, _il2 = morphAttributesPosition.length; _i2 < _il2; _i2++) {\n\t\t\t\t\t\tvar _morphAttribute = morphAttributesPosition[_i2];\n\t\t\t\t\t\tvar morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\t\tfor (var j = 0, jl = _morphAttribute.count; j < jl; j++) {\n\t\t\t\t\t\t\t_vector$4.fromBufferAttribute(_morphAttribute, j);\n\n\t\t\t\t\t\t\tif (morphTargetsRelative) {\n\t\t\t\t\t\t\t\t_offset.fromBufferAttribute(position, j);\n\n\t\t\t\t\t\t\t\t_vector$4.add(_offset);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$4));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n\t\t\t\tif (isNaN(this.boundingSphere.radius)) {\n\t\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcomputeFaceNormals: function computeFaceNormals() {// backwards compatibility\n\t\t},\n\t\tcomputeTangents: function computeTangents() {\n\t\t\tvar index = this.index;\n\t\t\tvar attributes = this.attributes; // based on http://www.terathon.com/code/tangent.html\n\t\t\t// (per vertex tangents)\n\n\t\t\tif (index === null || attributes.position === undefined || attributes.normal === undefined || attributes.uv === undefined) {\n\t\t\t\tconsole.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar indices = index.array;\n\t\t\tvar positions = attributes.position.array;\n\t\t\tvar normals = attributes.normal.array;\n\t\t\tvar uvs = attributes.uv.array;\n\t\t\tvar nVertices = positions.length / 3;\n\n\t\t\tif (attributes.tangent === undefined) {\n\t\t\t\tthis.setAttribute('tangent', new BufferAttribute(new Float32Array(4 * nVertices), 4));\n\t\t\t}\n\n\t\t\tvar tangents = attributes.tangent.array;\n\t\t\tvar tan1 = [],\n\t\t\t\t\ttan2 = [];\n\n\t\t\tfor (var i = 0; i < nVertices; i++) {\n\t\t\t\ttan1[i] = new Vector3();\n\t\t\t\ttan2[i] = new Vector3();\n\t\t\t}\n\n\t\t\tvar vA = new Vector3(),\n\t\t\t\t\tvB = new Vector3(),\n\t\t\t\t\tvC = new Vector3(),\n\t\t\t\t\tuvA = new Vector2(),\n\t\t\t\t\tuvB = new Vector2(),\n\t\t\t\t\tuvC = new Vector2(),\n\t\t\t\t\tsdir = new Vector3(),\n\t\t\t\t\ttdir = new Vector3();\n\n\t\t\tfunction handleTriangle(a, b, c) {\n\t\t\t\tvA.fromArray(positions, a * 3);\n\t\t\t\tvB.fromArray(positions, b * 3);\n\t\t\t\tvC.fromArray(positions, c * 3);\n\t\t\t\tuvA.fromArray(uvs, a * 2);\n\t\t\t\tuvB.fromArray(uvs, b * 2);\n\t\t\t\tuvC.fromArray(uvs, c * 2);\n\t\t\t\tvB.sub(vA);\n\t\t\t\tvC.sub(vA);\n\t\t\t\tuvB.sub(uvA);\n\t\t\t\tuvC.sub(uvA);\n\t\t\t\tvar r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y); // silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\t\tif (!isFinite(r)) return;\n\t\t\t\tsdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC, -uvB.y).multiplyScalar(r);\n\t\t\t\ttdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB, -uvC.x).multiplyScalar(r);\n\t\t\t\ttan1[a].add(sdir);\n\t\t\t\ttan1[b].add(sdir);\n\t\t\t\ttan1[c].add(sdir);\n\t\t\t\ttan2[a].add(tdir);\n\t\t\t\ttan2[b].add(tdir);\n\t\t\t\ttan2[c].add(tdir);\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif (groups.length === 0) {\n\t\t\t\tgroups = [{\n\t\t\t\t\tstart: 0,\n\t\t\t\t\tcount: indices.length\n\t\t\t\t}];\n\t\t\t}\n\n\t\t\tfor (var _i3 = 0, il = groups.length; _i3 < il; ++_i3) {\n\t\t\t\tvar group = groups[_i3];\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor (var j = start, jl = start + count; j < jl; j += 3) {\n\t\t\t\t\thandleTriangle(indices[j + 0], indices[j + 1], indices[j + 2]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar tmp = new Vector3(),\n\t\t\t\t\ttmp2 = new Vector3();\n\t\t\tvar n = new Vector3(),\n\t\t\t\t\tn2 = new Vector3();\n\n\t\t\tfunction handleVertex(v) {\n\t\t\t\tn.fromArray(normals, v * 3);\n\t\t\t\tn2.copy(n);\n\t\t\t\tvar t = tan1[v]; // Gram-Schmidt orthogonalize\n\n\t\t\t\ttmp.copy(t);\n\t\t\t\ttmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\n\n\t\t\t\ttmp2.crossVectors(n2, t);\n\t\t\t\tvar test = tmp2.dot(tan2[v]);\n\t\t\t\tvar w = test < 0.0 ? -1.0 : 1.0;\n\t\t\t\ttangents[v * 4] = tmp.x;\n\t\t\t\ttangents[v * 4 + 1] = tmp.y;\n\t\t\t\ttangents[v * 4 + 2] = tmp.z;\n\t\t\t\ttangents[v * 4 + 3] = w;\n\t\t\t}\n\n\t\t\tfor (var _i4 = 0, _il3 = groups.length; _i4 < _il3; ++_i4) {\n\t\t\t\tvar _group = groups[_i4];\n\t\t\t\tvar _start = _group.start;\n\t\t\t\tvar _count = _group.count;\n\n\t\t\t\tfor (var _j = _start, _jl = _start + _count; _j < _jl; _j += 3) {\n\t\t\t\t\thandleVertex(indices[_j + 0]);\n\t\t\t\t\thandleVertex(indices[_j + 1]);\n\t\t\t\t\thandleVertex(indices[_j + 2]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcomputeVertexNormals: function computeVertexNormals() {\n\t\t\tvar index = this.index;\n\t\t\tvar positionAttribute = this.getAttribute('position');\n\n\t\t\tif (positionAttribute !== undefined) {\n\t\t\t\tvar normalAttribute = this.getAttribute('normal');\n\n\t\t\t\tif (normalAttribute === undefined) {\n\t\t\t\t\tnormalAttribute = new BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);\n\t\t\t\t\tthis.setAttribute('normal', normalAttribute);\n\t\t\t\t} else {\n\t\t\t\t\t// reset existing normals to zero\n\t\t\t\t\tfor (var i = 0, il = normalAttribute.count; i < il; i++) {\n\t\t\t\t\t\tnormalAttribute.setXYZ(i, 0, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar pA = new Vector3(),\n\t\t\t\t\t\tpB = new Vector3(),\n\t\t\t\t\t\tpC = new Vector3();\n\t\t\t\tvar nA = new Vector3(),\n\t\t\t\t\t\tnB = new Vector3(),\n\t\t\t\t\t\tnC = new Vector3();\n\t\t\t\tvar cb = new Vector3(),\n\t\t\t\t\t\tab = new Vector3(); // indexed elements\n\n\t\t\t\tif (index) {\n\t\t\t\t\tfor (var _i5 = 0, _il4 = index.count; _i5 < _il4; _i5 += 3) {\n\t\t\t\t\t\tvar vA = index.getX(_i5 + 0);\n\t\t\t\t\t\tvar vB = index.getX(_i5 + 1);\n\t\t\t\t\t\tvar vC = index.getX(_i5 + 2);\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, vA);\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, vB);\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, vC);\n\t\t\t\t\t\tcb.subVectors(pC, pB);\n\t\t\t\t\t\tab.subVectors(pA, pB);\n\t\t\t\t\t\tcb.cross(ab);\n\t\t\t\t\t\tnA.fromBufferAttribute(normalAttribute, vA);\n\t\t\t\t\t\tnB.fromBufferAttribute(normalAttribute, vB);\n\t\t\t\t\t\tnC.fromBufferAttribute(normalAttribute, vC);\n\t\t\t\t\t\tnA.add(cb);\n\t\t\t\t\t\tnB.add(cb);\n\t\t\t\t\t\tnC.add(cb);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\t\t\t\t\tfor (var _i6 = 0, _il5 = positionAttribute.count; _i6 < _il5; _i6 += 3) {\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, _i6 + 0);\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, _i6 + 1);\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, _i6 + 2);\n\t\t\t\t\t\tcb.subVectors(pC, pB);\n\t\t\t\t\t\tab.subVectors(pA, pB);\n\t\t\t\t\t\tcb.cross(ab);\n\t\t\t\t\t\tnormalAttribute.setXYZ(_i6 + 0, cb.x, cb.y, cb.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(_i6 + 1, cb.x, cb.y, cb.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(_i6 + 2, cb.x, cb.y, cb.z);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\t\t\t\tnormalAttribute.needsUpdate = true;\n\t\t\t}\n\t\t},\n\t\tmerge: function merge(geometry, offset) {\n\t\t\tif (!(geometry && geometry.isBufferGeometry)) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (offset === undefined) {\n\t\t\t\toffset = 0;\n\t\t\t\tconsole.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor (var key in attributes) {\n\t\t\t\tif (geometry.attributes[key] === undefined) continue;\n\t\t\t\tvar attribute1 = attributes[key];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\t\t\t\tvar attribute2 = geometry.attributes[key];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\t\t\t\tvar attributeOffset = attribute2.itemSize * offset;\n\t\t\t\tvar length = Math.min(attributeArray2.length, attributeArray1.length - attributeOffset);\n\n\t\t\t\tfor (var i = 0, j = attributeOffset; i < length; i++, j++) {\n\t\t\t\t\tattributeArray1[j] = attributeArray2[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tnormalizeNormals: function normalizeNormals() {\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor (var i = 0, il = normals.count; i < il; i++) {\n\t\t\t\t_vector$4.fromBufferAttribute(normals, i);\n\n\t\t\t\t_vector$4.normalize();\n\n\t\t\t\tnormals.setXYZ(i, _vector$4.x, _vector$4.y, _vector$4.z);\n\t\t\t}\n\t\t},\n\t\ttoNonIndexed: function toNonIndexed() {\n\t\t\tfunction convertBufferAttribute(attribute, indices) {\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\t\t\t\tvar normalized = attribute.normalized;\n\t\t\t\tvar array2 = new array.constructor(indices.length * itemSize);\n\t\t\t\tvar index = 0,\n\t\t\t\t\t\tindex2 = 0;\n\n\t\t\t\tfor (var i = 0, l = indices.length; i < l; i++) {\n\t\t\t\t\tindex = indices[i] * itemSize;\n\n\t\t\t\t\tfor (var j = 0; j < itemSize; j++) {\n\t\t\t\t\t\tarray2[index2++] = array[index++];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute(array2, itemSize, normalized);\n\t\t\t} //\n\n\n\t\t\tif (this.index === null) {\n\t\t\t\tconsole.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar geometry2 = new BufferGeometry();\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes; // attributes\n\n\t\t\tfor (var name in attributes) {\n\t\t\t\tvar attribute = attributes[name];\n\t\t\t\tvar newAttribute = convertBufferAttribute(attribute, indices);\n\t\t\t\tgeometry2.setAttribute(name, newAttribute);\n\t\t\t} // morph attributes\n\n\n\t\t\tvar morphAttributes = this.morphAttributes;\n\n\t\t\tfor (var _name in morphAttributes) {\n\t\t\t\tvar morphArray = [];\n\t\t\t\tvar morphAttribute = morphAttributes[_name]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor (var i = 0, il = morphAttribute.length; i < il; i++) {\n\t\t\t\t\tvar _attribute = morphAttribute[i];\n\n\t\t\t\t\tvar _newAttribute = convertBufferAttribute(_attribute, indices);\n\n\t\t\t\t\tmorphArray.push(_newAttribute);\n\t\t\t\t}\n\n\t\t\t\tgeometry2.morphAttributes[_name] = morphArray;\n\t\t\t}\n\n\t\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative; // groups\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tfor (var _i7 = 0, l = groups.length; _i7 < l; _i7++) {\n\t\t\t\tvar group = groups[_i7];\n\t\t\t\tgeometry2.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t}\n\n\t\t\treturn geometry2;\n\t\t},\n\t\ttoJSON: function toJSON() {\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t}; // standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n\t\t\tif (this.parameters !== undefined) {\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor (var key in parameters) {\n\t\t\t\t\tif (parameters[key] !== undefined) data[key] = parameters[key];\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tdata.data = {\n\t\t\t\tattributes: {}\n\t\t\t};\n\t\t\tvar index = this.index;\n\n\t\t\tif (index !== null) {\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: Array.prototype.slice.call(index.array)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor (var _key in attributes) {\n\t\t\t\tvar attribute = attributes[_key];\n\t\t\t\tvar attributeData = attribute.toJSON(data.data);\n\t\t\t\tif (attribute.name !== '') attributeData.name = attribute.name;\n\t\t\t\tdata.data.attributes[_key] = attributeData;\n\t\t\t}\n\n\t\t\tvar morphAttributes = {};\n\t\t\tvar hasMorphAttributes = false;\n\n\t\t\tfor (var _key2 in this.morphAttributes) {\n\t\t\t\tvar attributeArray = this.morphAttributes[_key2];\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor (var i = 0, il = attributeArray.length; i < il; i++) {\n\t\t\t\t\tvar _attribute2 = attributeArray[i];\n\n\t\t\t\t\tvar _attributeData = _attribute2.toJSON(data.data);\n\n\t\t\t\t\tif (_attribute2.name !== '') _attributeData.name = _attribute2.name;\n\t\t\t\t\tarray.push(_attributeData);\n\t\t\t\t}\n\n\t\t\t\tif (array.length > 0) {\n\t\t\t\t\tmorphAttributes[_key2] = array;\n\t\t\t\t\thasMorphAttributes = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasMorphAttributes) {\n\t\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif (groups.length > 0) {\n\t\t\t\tdata.data.groups = JSON.parse(JSON.stringify(groups));\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif (boundingSphere !== null) {\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\t\tclone: function clone() {\n\t\t\t/*\n\t\t\t // Handle primitives\n\t\t\t\t const parameters = this.parameters;\n\t\t\t\t if ( parameters !== undefined ) {\n\t\t\t\t const values = [];\n\t\t\t\t for ( const key in parameters ) {\n\t\t\t\t values.push( parameters[ key ] );\n\t\t\t\t }\n\t\t\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\t\t\t\t }\n\t\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\t\t\treturn new BufferGeometry().copy(this);\n\t\t},\n\t\tcopy: function copy(source) {\n\t\t\t// reset\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null; // used for storing cloned, shared data\n\n\t\t\tvar data = {}; // name\n\n\t\t\tthis.name = source.name; // index\n\n\t\t\tvar index = source.index;\n\n\t\t\tif (index !== null) {\n\t\t\t\tthis.setIndex(index.clone(data));\n\t\t\t} // attributes\n\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor (var name in attributes) {\n\t\t\t\tvar attribute = attributes[name];\n\t\t\t\tthis.setAttribute(name, attribute.clone(data));\n\t\t\t} // morph attributes\n\n\n\t\t\tvar morphAttributes = source.morphAttributes;\n\n\t\t\tfor (var _name2 in morphAttributes) {\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphAttribute = morphAttributes[_name2]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor (var i = 0, l = morphAttribute.length; i < l; i++) {\n\t\t\t\t\tarray.push(morphAttribute[i].clone(data));\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[_name2] = array;\n\t\t\t}\n\n\t\t\tthis.morphTargetsRelative = source.morphTargetsRelative; // groups\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor (var _i8 = 0, _l = groups.length; _i8 < _l; _i8++) {\n\t\t\t\tvar group = groups[_i8];\n\t\t\t\tthis.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t} // bounding box\n\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif (boundingBox !== null) {\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\t\t\t} // bounding sphere\n\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif (boundingSphere !== null) {\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\t\t\t} // draw range\n\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count; // user data\n\n\t\t\tthis.userData = source.userData;\n\t\t\treturn this;\n\t\t},\n\t\tdispose: function dispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\t});\n\n\tvar _inverseMatrix = new Matrix4();\n\n\tvar _ray = new Ray();\n\n\tvar _sphere = new Sphere();\n\n\tvar _vA = new Vector3();\n\n\tvar _vB = new Vector3();\n\n\tvar _vC = new Vector3();\n\n\tvar _tempA = new Vector3();\n\n\tvar _tempB = new Vector3();\n\n\tvar _tempC = new Vector3();\n\n\tvar _morphA = new Vector3();\n\n\tvar _morphB = new Vector3();\n\n\tvar _morphC = new Vector3();\n\n\tvar _uvA = new Vector2();\n\n\tvar _uvB = new Vector2();\n\n\tvar _uvC = new Vector2();\n\n\tvar _intersectionPoint = new Vector3();\n\n\tvar _intersectionPointWorld = new Vector3();\n\n\tfunction Mesh(geometry, material) {\n\t\tif (geometry === void 0) {\n\t\t\tgeometry = new BufferGeometry();\n\t\t}\n\n\t\tif (material === void 0) {\n\t\t\tmaterial = new MeshBasicMaterial();\n\t\t}\n\n\t\tObject3D.call(this);\n\t\tthis.type = 'Mesh';\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\t\tthis.updateMorphTargets();\n\t}\n\n\tMesh.prototype = Object.assign(Object.create(Object3D.prototype), {\n\t\tconstructor: Mesh,\n\t\tisMesh: true,\n\t\tcopy: function copy(source) {\n\t\t\tObject3D.prototype.copy.call(this, source);\n\n\t\t\tif (source.morphTargetInfluences !== undefined) {\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\t\t\t}\n\n\t\t\tif (source.morphTargetDictionary !== undefined) {\n\t\t\t\tthis.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n\t\t\t}\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t},\n\t\tupdateMorphTargets: function updateMorphTargets() {\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tvar morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (var m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tvar name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\traycast: function raycast(raycaster, intersects) {\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tif (material === undefined) return; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy(geometry.boundingSphere);\n\n\t\t\t_sphere.applyMatrix4(matrixWorld);\n\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere) === false) return; //\n\n\t\t\t_inverseMatrix.copy(matrixWorld).invert();\n\n\t\t\t_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix); // Check boundingBox before continuing\n\n\n\t\t\tif (geometry.boundingBox !== null) {\n\t\t\t\tif (_ray.intersectsBox(geometry.boundingBox) === false) return;\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar morphPosition = geometry.morphAttributes.position;\n\t\t\t\tvar morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar uv2 = geometry.attributes.uv2;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\t// indexed buffer geometry\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (var i = 0, il = groups.length; i < il; i++) {\n\t\t\t\t\t\t\tvar group = groups[i];\n\t\t\t\t\t\t\tvar groupMaterial = material[group.materialIndex];\n\t\t\t\t\t\t\tvar start = Math.max(group.start, drawRange.start);\n\t\t\t\t\t\t\tvar end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\t\tfor (var j = start, jl = end; j < jl; j += 3) {\n\t\t\t\t\t\t\t\tvar a = index.getX(j);\n\t\t\t\t\t\t\t\tvar b = index.getX(j + 1);\n\t\t\t\t\t\t\t\tvar c = index.getX(j + 2);\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _start = Math.max(0, drawRange.start);\n\n\t\t\t\t\t\tvar _end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\tfor (var _i = _start, _il = _end; _i < _il; _i += 3) {\n\t\t\t\t\t\t\tvar _a = index.getX(_i);\n\n\t\t\t\t\t\t\tvar _b = index.getX(_i + 1);\n\n\t\t\t\t\t\t\tvar _c = index.getX(_i + 2);\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, _a, _b, _c);\n\n\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(_i / 3); // triangle number in indexed buffer semantics\n\n\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (position !== undefined) {\n\t\t\t\t\t// non-indexed buffer geometry\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (var _i2 = 0, _il2 = groups.length; _i2 < _il2; _i2++) {\n\t\t\t\t\t\t\tvar _group = groups[_i2];\n\t\t\t\t\t\t\tvar _groupMaterial = material[_group.materialIndex];\n\n\t\t\t\t\t\t\tvar _start2 = Math.max(_group.start, drawRange.start);\n\n\t\t\t\t\t\t\tvar _end2 = Math.min(_group.start + _group.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\t\tfor (var _j = _start2, _jl = _end2; _j < _jl; _j += 3) {\n\t\t\t\t\t\t\t\tvar _a2 = _j;\n\n\t\t\t\t\t\t\t\tvar _b2 = _j + 1;\n\n\t\t\t\t\t\t\t\tvar _c2 = _j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, _groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, _a2, _b2, _c2);\n\n\t\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(_j / 3); // triangle number in non-indexed buffer semantics\n\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = _group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _start3 = Math.max(0, drawRange.start);\n\n\t\t\t\t\t\tvar _end3 = Math.min(position.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\tfor (var _i3 = _start3, _il3 = _end3; _i3 < _il3; _i3 += 3) {\n\t\t\t\t\t\t\tvar _a3 = _i3;\n\n\t\t\t\t\t\t\tvar _b3 = _i3 + 1;\n\n\t\t\t\t\t\t\tvar _c3 = _i3 + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, _a3, _b3, _c3);\n\n\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(_i3 / 3); // triangle number in non-indexed buffer semantics\n\n\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n\t\tvar intersect;\n\n\t\tif (material.side === BackSide) {\n\t\t\tintersect = ray.intersectTriangle(pC, pB, pA, true, point);\n\t\t} else {\n\t\t\tintersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n\t\t}\n\n\t\tif (intersect === null) return null;\n\n\t\t_intersectionPointWorld.copy(point);\n\n\t\t_intersectionPointWorld.applyMatrix4(object.matrixWorld);\n\n\t\tvar distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\n\t\tif (distance < raycaster.near || distance > raycaster.far) return null;\n\t\treturn {\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectionPointWorld.clone(),\n\t\t\tobject: object\n\t\t};\n\t}\n\n\tfunction checkBufferGeometryIntersection(object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c) {\n\t\t_vA.fromBufferAttribute(position, a);\n\n\t\t_vB.fromBufferAttribute(position, b);\n\n\t\t_vC.fromBufferAttribute(position, c);\n\n\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\tif (material.morphTargets && morphPosition && morphInfluences) {\n\t\t\t_morphA.set(0, 0, 0);\n\n\t\t\t_morphB.set(0, 0, 0);\n\n\t\t\t_morphC.set(0, 0, 0);\n\n\t\t\tfor (var i = 0, il = morphPosition.length; i < il; i++) {\n\t\t\t\tvar influence = morphInfluences[i];\n\t\t\t\tvar morphAttribute = morphPosition[i];\n\t\t\t\tif (influence === 0) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute(morphAttribute, a);\n\n\t\t\t\t_tempB.fromBufferAttribute(morphAttribute, b);\n\n\t\t\t\t_tempC.fromBufferAttribute(morphAttribute, c);\n\n\t\t\t\tif (morphTargetsRelative) {\n\t\t\t\t\t_morphA.addScaledVector(_tempA, influence);\n\n\t\t\t\t\t_morphB.addScaledVector(_tempB, influence);\n\n\t\t\t\t\t_morphC.addScaledVector(_tempC, influence);\n\t\t\t\t} else {\n\t\t\t\t\t_morphA.addScaledVector(_tempA.sub(_vA), influence);\n\n\t\t\t\t\t_morphB.addScaledVector(_tempB.sub(_vB), influence);\n\n\t\t\t\t\t_morphC.addScaledVector(_tempC.sub(_vC), influence);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_vA.add(_morphA);\n\n\t\t\t_vB.add(_morphB);\n\n\t\t\t_vC.add(_morphC);\n\t\t}\n\n\t\tif (object.isSkinnedMesh) {\n\t\t\tobject.boneTransform(a, _vA);\n\t\t\tobject.boneTransform(b, _vB);\n\t\t\tobject.boneTransform(c, _vC);\n\t\t}\n\n\t\tvar intersection = checkIntersection(object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint);\n\n\t\tif (intersection) {\n\t\t\tif (uv) {\n\t\t\t\t_uvA.fromBufferAttribute(uv, a);\n\n\t\t\t\t_uvB.fromBufferAttribute(uv, b);\n\n\t\t\t\t_uvC.fromBufferAttribute(uv, c);\n\n\t\t\t\tintersection.uv = Triangle.getUV(_intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2());\n\t\t\t}\n\n\t\t\tif (uv2) {\n\t\t\t\t_uvA.fromBufferAttribute(uv2, a);\n\n\t\t\t\t_uvB.fromBufferAttribute(uv2, b);\n\n\t\t\t\t_uvC.fromBufferAttribute(uv2, c);\n\n\t\t\t\tintersection.uv2 = Triangle.getUV(_intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2());\n\t\t\t}\n\n\t\t\tvar face = new Face3(a, b, c);\n\t\t\tTriangle.getNormal(_vA, _vB, _vC, face.normal);\n\t\t\tintersection.face = face;\n\t\t}\n\n\t\treturn intersection;\n\t}\n\n\tvar BoxGeometry = /*#__PURE__*/function (_BufferGeometry) {\n\t\t_inheritsLoose(BoxGeometry, _BufferGeometry);\n\n\t\tfunction BoxGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n\t\t\tvar _this;\n\n\t\t\tif (width === void 0) {\n\t\t\t\twidth = 1;\n\t\t\t}\n\n\t\t\tif (height === void 0) {\n\t\t\t\theight = 1;\n\t\t\t}\n\n\t\t\tif (depth === void 0) {\n\t\t\t\tdepth = 1;\n\t\t\t}\n\n\t\t\tif (widthSegments === void 0) {\n\t\t\t\twidthSegments = 1;\n\t\t\t}\n\n\t\t\tif (heightSegments === void 0) {\n\t\t\t\theightSegments = 1;\n\t\t\t}\n\n\t\t\tif (depthSegments === void 0) {\n\t\t\t\tdepthSegments = 1;\n\t\t\t}\n\n\t\t\t_this = _BufferGeometry.call(this) || this;\n\t\t\t_this.type = 'BoxGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\n\t\t\tvar scope = _assertThisInitialized(_this); // segments\n\n\n\t\t\twidthSegments = Math.floor(widthSegments);\n\t\t\theightSegments = Math.floor(heightSegments);\n\t\t\tdepthSegments = Math.floor(depthSegments); // buffers\n\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = []; // helper variables\n\n\t\t\tvar numberOfVertices = 0;\n\t\t\tvar groupStart = 0; // build each side of the box geometry\n\n\t\t\tbuildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n\t\t\tbuildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n\t\t\tbuildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n\t\t\tbuildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n\t\t\tbuildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n\t\t\tbuildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n\t\t\t// build geometry\n\n\t\t\t_this.setIndex(indices);\n\n\t\t\t_this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n\t\t\t_this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n\t\t\t_this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\tfunction buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n\t\t\t\tvar segmentWidth = width / gridX;\n\t\t\t\tvar segmentHeight = height / gridY;\n\t\t\t\tvar widthHalf = width / 2;\n\t\t\t\tvar heightHalf = height / 2;\n\t\t\t\tvar depthHalf = depth / 2;\n\t\t\t\tvar gridX1 = gridX + 1;\n\t\t\t\tvar gridY1 = gridY + 1;\n\t\t\t\tvar vertexCounter = 0;\n\t\t\t\tvar groupCount = 0;\n\t\t\t\tvar vector = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\t\tfor (var iy = 0; iy < gridY1; iy++) {\n\t\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\t\tfor (var ix = 0; ix < gridX1; ix++) {\n\t\t\t\t\t\tvar x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n\t\t\t\t\t\tvector[u] = x * udir;\n\t\t\t\t\t\tvector[v] = y * vdir;\n\t\t\t\t\t\tvector[w] = depthHalf; // now apply vector to vertex buffer\n\n\t\t\t\t\t\tvertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n\t\t\t\t\t\tvector[u] = 0;\n\t\t\t\t\t\tvector[v] = 0;\n\t\t\t\t\t\tvector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n\t\t\t\t\t\tnormals.push(vector.x, vector.y, vector.z); // uvs\n\n\t\t\t\t\t\tuvs.push(ix / gridX);\n\t\t\t\t\t\tuvs.push(1 - iy / gridY); // counters\n\n\t\t\t\t\t\tvertexCounter += 1;\n\t\t\t\t\t}\n\t\t\t\t} // indices\n\t\t\t\t// 1. you need three indices to draw a single face\n\t\t\t\t// 2. a single segment consists of two faces\n\t\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\n\t\t\t\tfor (var _iy = 0; _iy < gridY; _iy++) {\n\t\t\t\t\tfor (var _ix = 0; _ix < gridX; _ix++) {\n\t\t\t\t\t\tvar a = numberOfVertices + _ix + gridX1 * _iy;\n\t\t\t\t\t\tvar b = numberOfVertices + _ix + gridX1 * (_iy + 1);\n\t\t\t\t\t\tvar c = numberOfVertices + (_ix + 1) + gridX1 * (_iy + 1);\n\t\t\t\t\t\tvar d = numberOfVertices + (_ix + 1) + gridX1 * _iy; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d); // increase counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\t\t\t\t\t}\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount; // update total number of vertices\n\n\t\t\t\tnumberOfVertices += vertexCounter;\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn BoxGeometry;\n\t}(BufferGeometry);\n\n\t/**\n\t * Uniform Utilities\n\t */\n\tfunction cloneUniforms(src) {\n\t\tvar dst = {};\n\n\t\tfor (var u in src) {\n\t\t\tdst[u] = {};\n\n\t\t\tfor (var p in src[u]) {\n\t\t\t\tvar property = src[u][p];\n\n\t\t\t\tif (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture)) {\n\t\t\t\t\tdst[u][p] = property.clone();\n\t\t\t\t} else if (Array.isArray(property)) {\n\t\t\t\t\tdst[u][p] = property.slice();\n\t\t\t\t} else {\n\t\t\t\t\tdst[u][p] = property;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\tfunction mergeUniforms(uniforms) {\n\t\tvar merged = {};\n\n\t\tfor (var u = 0; u < uniforms.length; u++) {\n\t\t\tvar tmp = cloneUniforms(uniforms[u]);\n\n\t\t\tfor (var p in tmp) {\n\t\t\t\tmerged[p] = tmp[p];\n\t\t\t}\n\t\t}\n\n\t\treturn merged;\n\t} // Legacy\n\n\tvar UniformsUtils = {\n\t\tclone: cloneUniforms,\n\t\tmerge: mergeUniforms\n\t};\n\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n\t/**\n\t * parameters = {\n\t *\tdefines: { \"label\" : \"value\" },\n\t *\tuniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *\tfragmentShader: <string>,\n\t *\tvertexShader: <string>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tlights: <bool>,\n\t *\n\t *\tskinning: <bool>,\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tfunction ShaderMaterial(parameters) {\n\t\tMaterial.call(this);\n\t\tthis.type = 'ShaderMaterial';\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\t\tthis.linewidth = 1;\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.fog = false; // set to use scene fog\n\n\t\tthis.lights = false; // set to use scene lights\n\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\n\t\tthis.morphTargets = false; // set to use morph targets\n\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false,\n\t\t\t// set to use derivatives\n\t\t\tfragDepth: false,\n\t\t\t// set to use fragment depth values\n\t\t\tdrawBuffers: false,\n\t\t\t// set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\n\t\t}; // When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [1, 1, 1],\n\t\t\t'uv': [0, 0],\n\t\t\t'uv2': [0, 0]\n\t\t};\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\t\tthis.glslVersion = null;\n\n\t\tif (parameters !== undefined) {\n\t\t\tif (parameters.attributes !== undefined) {\n\t\t\t\tconsole.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n\t\t\t}\n\n\t\t\tthis.setValues(parameters);\n\t\t}\n\t}\n\n\tShaderMaterial.prototype = Object.create(Material.prototype);\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tShaderMaterial.prototype.copy = function (source) {\n\t\tMaterial.prototype.copy.call(this, source);\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\t\tthis.uniforms = cloneUniforms(source.uniforms);\n\t\tthis.defines = Object.assign({}, source.defines);\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\t\tthis.extensions = Object.assign({}, source.extensions);\n\t\tthis.glslVersion = source.glslVersion;\n\t\treturn this;\n\t};\n\n\tShaderMaterial.prototype.toJSON = function (meta) {\n\t\tvar data = Material.prototype.toJSON.call(this, meta);\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor (var name in this.uniforms) {\n\t\t\tvar uniform = this.uniforms[name];\n\t\t\tvar value = uniform.value;\n\n\t\t\tif (value && value.isTexture) {\n\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON(meta).uuid\n\t\t\t\t};\n\t\t\t} else if (value && value.isColor) {\n\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\t\t\t} else if (value && value.isVector2) {\n\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\t\t\t} else if (value && value.isVector3) {\n\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\t\t\t} else if (value && value.isVector4) {\n\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\t\t\t} else if (value && value.isMatrix3) {\n\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\t\t\t} else if (value && value.isMatrix4) {\n\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t}; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\t\t\t}\n\t\t}\n\n\t\tif (Object.keys(this.defines).length > 0) data.defines = this.defines;\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\t\tvar extensions = {};\n\n\t\tfor (var key in this.extensions) {\n\t\t\tif (this.extensions[key] === true) extensions[key] = true;\n\t\t}\n\n\t\tif (Object.keys(extensions).length > 0) data.extensions = extensions;\n\t\treturn data;\n\t};\n\n\tfunction Camera() {\n\t\tObject3D.call(this);\n\t\tthis.type = 'Camera';\n\t\tthis.matrixWorldInverse = new Matrix4();\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\t}\n\n\tCamera.prototype = Object.assign(Object.create(Object3D.prototype), {\n\t\tconstructor: Camera,\n\t\tisCamera: true,\n\t\tcopy: function copy(source, recursive) {\n\t\t\tObject3D.prototype.copy.call(this, source, recursive);\n\t\t\tthis.matrixWorldInverse.copy(source.matrixWorldInverse);\n\t\t\tthis.projectionMatrix.copy(source.projectionMatrix);\n\t\t\tthis.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n\t\t\treturn this;\n\t\t},\n\t\tgetWorldDirection: function getWorldDirection(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Camera: .getWorldDirection() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tvar e = this.matrixWorld.elements;\n\t\t\treturn target.set(-e[8], -e[9], -e[10]).normalize();\n\t\t},\n\t\tupdateMatrixWorld: function updateMatrixWorld(force) {\n\t\t\tObject3D.prototype.updateMatrixWorld.call(this, force);\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\n\t\t},\n\t\tupdateWorldMatrix: function updateWorldMatrix(updateParents, updateChildren) {\n\t\t\tObject3D.prototype.updateWorldMatrix.call(this, updateParents, updateChildren);\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\n\t\t},\n\t\tclone: function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\t});\n\n\tfunction PerspectiveCamera(fov, aspect, near, far) {\n\t\tif (fov === void 0) {\n\t\t\tfov = 50;\n\t\t}\n\n\t\tif (aspect === void 0) {\n\t\t\taspect = 1;\n\t\t}\n\n\t\tif (near === void 0) {\n\t\t\tnear = 0.1;\n\t\t}\n\n\t\tif (far === void 0) {\n\t\t\tfar = 2000;\n\t\t}\n\n\t\tCamera.call(this);\n\t\tthis.type = 'PerspectiveCamera';\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\t\tthis.filmGauge = 35; // width of the film (default in millimeters)\n\n\t\tthis.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\t}\n\n\tPerspectiveCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n\t\tconstructor: PerspectiveCamera,\n\t\tisPerspectiveCamera: true,\n\t\tcopy: function copy(source, recursive) {\n\t\t\tCamera.prototype.copy.call(this, source, recursive);\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function setFocalLength(focalLength) {\n\t\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\t\t\tthis.fov = MathUtils.RAD2DEG * 2 * Math.atan(vExtentSlope);\n\t\t\tthis.updateProjectionMatrix();\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function getFocalLength() {\n\t\t\tvar vExtentSlope = Math.tan(MathUtils.DEG2RAD * 0.5 * this.fov);\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\t\t},\n\t\tgetEffectiveFOV: function getEffectiveFOV() {\n\t\t\treturn MathUtils.RAD2DEG * 2 * Math.atan(Math.tan(MathUtils.DEG2RAD * 0.5 * this.fov) / this.zoom);\n\t\t},\n\t\tgetFilmWidth: function getFilmWidth() {\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min(this.aspect, 1);\n\t\t},\n\t\tgetFilmHeight: function getFilmHeight() {\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max(this.aspect, 1);\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *\t +---+---+---+\n\t\t *\t | A | B | C |\n\t\t *\t +---+---+---+\n\t\t *\t | D | E | F |\n\t\t *\t +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *\t const w = 1920;\n\t\t *\t const h = 1080;\n\t\t *\t const fullWidth = w * 3;\n\t\t *\t const fullHeight = h * 2;\n\t\t *\n\t\t *\t --A--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *\t --B--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *\t --C--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *\t --D--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *\t --E--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *\t --F--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *\t Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tif (this.view === null) {\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\t\t\tthis.updateProjectionMatrix();\n\t\t},\n\t\tclearViewOffset: function clearViewOffset() {\n\t\t\tif (this.view !== null) {\n\t\t\t\tthis.view.enabled = false;\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t},\n\t\tupdateProjectionMatrix: function updateProjectionMatrix() {\n\t\t\tvar near = this.near;\n\t\t\tvar top = near * Math.tan(MathUtils.DEG2RAD * 0.5 * this.fov) / this.zoom;\n\t\t\tvar height = 2 * top;\n\t\t\tvar width = this.aspect * height;\n\t\t\tvar left = -0.5 * width;\n\t\t\tvar view = this.view;\n\n\t\t\tif (this.view !== null && this.view.enabled) {\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\t\tfullHeight = view.fullHeight;\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif (skew !== 0) left += near * skew / this.getFilmWidth();\n\t\t\tthis.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n\t\t},\n\t\ttoJSON: function toJSON(meta) {\n\t\t\tvar data = Object3D.prototype.toJSON.call(this, meta);\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\t\t\tdata.object.aspect = this.aspect;\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\t\t\treturn data;\n\t\t}\n\t});\n\n\tvar fov = 90,\n\t\t\taspect = 1;\n\n\tfunction CubeCamera(near, far, renderTarget) {\n\t\tObject3D.call(this);\n\t\tthis.type = 'CubeCamera';\n\n\t\tif (renderTarget.isWebGLCubeRenderTarget !== true) {\n\t\t\tconsole.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\t\tvar cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set(0, -1, 0);\n\t\tcameraPX.lookAt(new Vector3(1, 0, 0));\n\t\tthis.add(cameraPX);\n\t\tvar cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set(0, -1, 0);\n\t\tcameraNX.lookAt(new Vector3(-1, 0, 0));\n\t\tthis.add(cameraNX);\n\t\tvar cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set(0, 0, 1);\n\t\tcameraPY.lookAt(new Vector3(0, 1, 0));\n\t\tthis.add(cameraPY);\n\t\tvar cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set(0, 0, -1);\n\t\tcameraNY.lookAt(new Vector3(0, -1, 0));\n\t\tthis.add(cameraNY);\n\t\tvar cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set(0, -1, 0);\n\t\tcameraPZ.lookAt(new Vector3(0, 0, 1));\n\t\tthis.add(cameraPZ);\n\t\tvar cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set(0, -1, 0);\n\t\tcameraNZ.lookAt(new Vector3(0, 0, -1));\n\t\tthis.add(cameraNZ);\n\n\t\tthis.update = function (renderer, scene) {\n\t\t\tif (this.parent === null) this.updateMatrixWorld();\n\t\t\tvar currentXrEnabled = renderer.xr.enabled;\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\t\t\trenderer.xr.enabled = false;\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\t\t\trenderer.setRenderTarget(renderTarget, 0);\n\t\t\trenderer.render(scene, cameraPX);\n\t\t\trenderer.setRenderTarget(renderTarget, 1);\n\t\t\trenderer.render(scene, cameraNX);\n\t\t\trenderer.setRenderTarget(renderTarget, 2);\n\t\t\trenderer.render(scene, cameraPY);\n\t\t\trenderer.setRenderTarget(renderTarget, 3);\n\t\t\trenderer.render(scene, cameraNY);\n\t\t\trenderer.setRenderTarget(renderTarget, 4);\n\t\t\trenderer.render(scene, cameraPZ);\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\t\t\trenderer.setRenderTarget(renderTarget, 5);\n\t\t\trenderer.render(scene, cameraNZ);\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t\trenderer.xr.enabled = currentXrEnabled;\n\t\t};\n\t}\n\n\tCubeCamera.prototype = Object.create(Object3D.prototype);\n\tCubeCamera.prototype.constructor = CubeCamera;\n\n\tfunction CubeTexture(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\tformat = format !== undefined ? format : RGBFormat;\n\t\tTexture.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\tthis.flipY = false; // Why CubeTexture._needsFlipEnvMap is necessary:\n\t\t//\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n\t\t// when using WebGLCubeRenderTarget.texture as a cube texture.\n\n\t\tthis._needsFlipEnvMap = true;\n\t}\n\n\tCubeTexture.prototype = Object.create(Texture.prototype);\n\tCubeTexture.prototype.constructor = CubeTexture;\n\tCubeTexture.prototype.isCubeTexture = true;\n\tObject.defineProperty(CubeTexture.prototype, 'images', {\n\t\tget: function get() {\n\t\t\treturn this.image;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis.image = value;\n\t\t}\n\t});\n\n\tvar WebGLCubeRenderTarget = /*#__PURE__*/function (_WebGLRenderTarget) {\n\t\t_inheritsLoose(WebGLCubeRenderTarget, _WebGLRenderTarget);\n\n\t\tfunction WebGLCubeRenderTarget(size, options, dummy) {\n\t\t\tvar _this;\n\n\t\t\tif (Number.isInteger(options)) {\n\t\t\t\tconsole.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');\n\t\t\t\toptions = dummy;\n\t\t\t}\n\n\t\t\t_this = _WebGLRenderTarget.call(this, size, size, options) || this;\n\t\t\tObject.defineProperty(_assertThisInitialized(_this), 'isWebGLCubeRenderTarget', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\toptions = options || {};\n\t\t\t_this.texture = new CubeTexture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n\t\t\t_this.texture._needsFlipEnvMap = false;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = WebGLCubeRenderTarget.prototype;\n\n\t\t_proto.fromEquirectangularTexture = function fromEquirectangularTexture(renderer, texture) {\n\t\t\tthis.texture.type = texture.type;\n\t\t\tthis.texture.format = RGBAFormat; // see #18859\n\n\t\t\tthis.texture.encoding = texture.encoding;\n\t\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\t\tthis.texture.minFilter = texture.minFilter;\n\t\t\tthis.texture.magFilter = texture.magFilter;\n\t\t\tvar shader = {\n\t\t\t\tuniforms: {\n\t\t\t\t\ttEquirect: {\n\t\t\t\t\t\tvalue: null\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tvertexShader:\n\t\t\t\t/* glsl */\n\t\t\t\t\"\\n\\n\\t\\t\\t\\tvarying vec3 vWorldDirection;\\n\\n\\t\\t\\t\\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\n\\t\\t\\t\\t\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\t\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\n\\t\\t\\t\\t\\t#include <begin_vertex>\\n\\t\\t\\t\\t\\t#include <project_vertex>\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\",\n\t\t\t\tfragmentShader:\n\t\t\t\t/* glsl */\n\t\t\t\t\"\\n\\n\\t\\t\\t\\tuniform sampler2D tEquirect;\\n\\n\\t\\t\\t\\tvarying vec3 vWorldDirection;\\n\\n\\t\\t\\t\\t#include <common>\\n\\n\\t\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\t\\tvec3 direction = normalize( vWorldDirection );\\n\\n\\t\\t\\t\\t\\tvec2 sampleUV = equirectUv( direction );\\n\\n\\t\\t\\t\\t\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\"\n\t\t\t};\n\t\t\tvar geometry = new BoxGeometry(5, 5, 5);\n\t\t\tvar material = new ShaderMaterial({\n\t\t\t\tname: 'CubemapFromEquirect',\n\t\t\t\tuniforms: cloneUniforms(shader.uniforms),\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\t\tside: BackSide,\n\t\t\t\tblending: NoBlending\n\t\t\t});\n\t\t\tmaterial.uniforms.tEquirect.value = texture;\n\t\t\tvar mesh = new Mesh(geometry, material);\n\t\t\tvar currentMinFilter = texture.minFilter; // Avoid blurred poles\n\n\t\t\tif (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\n\t\t\tvar camera = new CubeCamera(1, 10, this);\n\t\t\tcamera.update(renderer, mesh);\n\t\t\ttexture.minFilter = currentMinFilter;\n\t\t\tmesh.geometry.dispose();\n\t\t\tmesh.material.dispose();\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clear = function clear(renderer, color, depth, stencil) {\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\trenderer.setRenderTarget(this, i);\n\t\t\t\trenderer.clear(color, depth, stencil);\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t};\n\n\t\treturn WebGLCubeRenderTarget;\n\t}(WebGLRenderTarget);\n\n\tfunction DataTexture(data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n\t\tTexture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\tthis.image = {\n\t\t\tdata: data || null,\n\t\t\twidth: width || 1,\n\t\t\theight: height || 1\n\t\t};\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\t\tthis.needsUpdate = true;\n\t}\n\n\tDataTexture.prototype = Object.create(Texture.prototype);\n\tDataTexture.prototype.constructor = DataTexture;\n\tDataTexture.prototype.isDataTexture = true;\n\n\tvar _sphere$1 = /*@__PURE__*/new Sphere();\n\n\tvar _vector$5 = /*@__PURE__*/new Vector3();\n\n\tvar Frustum = /*#__PURE__*/function () {\n\t\tfunction Frustum(p0, p1, p2, p3, p4, p5) {\n\t\t\tthis.planes = [p0 !== undefined ? p0 : new Plane(), p1 !== undefined ? p1 : new Plane(), p2 !== undefined ? p2 : new Plane(), p3 !== undefined ? p3 : new Plane(), p4 !== undefined ? p4 : new Plane(), p5 !== undefined ? p5 : new Plane()];\n\t\t}\n\n\t\tvar _proto = Frustum.prototype;\n\n\t\t_proto.set = function set(p0, p1, p2, p3, p4, p5) {\n\t\t\tvar planes = this.planes;\n\t\t\tplanes[0].copy(p0);\n\t\t\tplanes[1].copy(p1);\n\t\t\tplanes[2].copy(p2);\n\t\t\tplanes[3].copy(p3);\n\t\t\tplanes[4].copy(p4);\n\t\t\tplanes[5].copy(p5);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t};\n\n\t\t_proto.copy = function copy(frustum) {\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\tplanes[i].copy(frustum.planes[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromProjectionMatrix = function setFromProjectionMatrix(m) {\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[0],\n\t\t\t\t\tme1 = me[1],\n\t\t\t\t\tme2 = me[2],\n\t\t\t\t\tme3 = me[3];\n\t\t\tvar me4 = me[4],\n\t\t\t\t\tme5 = me[5],\n\t\t\t\t\tme6 = me[6],\n\t\t\t\t\tme7 = me[7];\n\t\t\tvar me8 = me[8],\n\t\t\t\t\tme9 = me[9],\n\t\t\t\t\tme10 = me[10],\n\t\t\t\t\tme11 = me[11];\n\t\t\tvar me12 = me[12],\n\t\t\t\t\tme13 = me[13],\n\t\t\t\t\tme14 = me[14],\n\t\t\t\t\tme15 = me[15];\n\t\t\tplanes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n\t\t\tplanes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n\t\t\tplanes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n\t\t\tplanes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n\t\t\tplanes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n\t\t\tplanes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.intersectsObject = function intersectsObject(object) {\n\t\t\tvar geometry = object.geometry;\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$1.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n\t\t\treturn this.intersectsSphere(_sphere$1);\n\t\t};\n\n\t\t_proto.intersectsSprite = function intersectsSprite(sprite) {\n\t\t\t_sphere$1.center.set(0, 0, 0);\n\n\t\t\t_sphere$1.radius = 0.7071067811865476;\n\n\t\t\t_sphere$1.applyMatrix4(sprite.matrixWorld);\n\n\t\t\treturn this.intersectsSphere(_sphere$1);\n\t\t};\n\n\t\t_proto.intersectsSphere = function intersectsSphere(sphere) {\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = -sphere.radius;\n\n\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\tvar distance = planes[i].distanceToPoint(center);\n\n\t\t\t\tif (distance < negRadius) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.intersectsBox = function intersectsBox(box) {\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\tvar plane = planes[i]; // corner at max distance\n\n\t\t\t\t_vector$5.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t_vector$5.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t_vector$5.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif (plane.distanceToPoint(_vector$5) < 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.containsPoint = function containsPoint(point) {\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\tif (planes[i].distanceToPoint(point) < 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\treturn Frustum;\n\t}();\n\n\tfunction WebGLAnimation() {\n\t\tvar context = null;\n\t\tvar isAnimating = false;\n\t\tvar animationLoop = null;\n\t\tvar requestId = null;\n\n\t\tfunction onAnimationFrame(time, frame) {\n\t\t\tanimationLoop(time, frame);\n\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\n\t\t}\n\n\t\treturn {\n\t\t\tstart: function start() {\n\t\t\t\tif (isAnimating === true) return;\n\t\t\t\tif (animationLoop === null) return;\n\t\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\n\t\t\t\tisAnimating = true;\n\t\t\t},\n\t\t\tstop: function stop() {\n\t\t\t\tcontext.cancelAnimationFrame(requestId);\n\t\t\t\tisAnimating = false;\n\t\t\t},\n\t\t\tsetAnimationLoop: function setAnimationLoop(callback) {\n\t\t\t\tanimationLoop = callback;\n\t\t\t},\n\t\t\tsetContext: function setContext(value) {\n\t\t\t\tcontext = value;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction WebGLAttributes(gl, capabilities) {\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\t\tvar buffers = new WeakMap();\n\n\t\tfunction createBuffer(attribute, bufferType) {\n\t\t\tvar array = attribute.array;\n\t\t\tvar usage = attribute.usage;\n\t\t\tvar buffer = gl.createBuffer();\n\t\t\tgl.bindBuffer(bufferType, buffer);\n\t\t\tgl.bufferData(bufferType, array, usage);\n\t\t\tattribute.onUploadCallback();\n\t\t\tvar type = 5126;\n\n\t\t\tif (array instanceof Float32Array) {\n\t\t\t\ttype = 5126;\n\t\t\t} else if (array instanceof Float64Array) {\n\t\t\t\tconsole.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\n\t\t\t} else if (array instanceof Uint16Array) {\n\t\t\t\tif (attribute.isFloat16BufferAttribute) {\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\ttype = 5131;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttype = 5123;\n\t\t\t\t}\n\t\t\t} else if (array instanceof Int16Array) {\n\t\t\t\ttype = 5122;\n\t\t\t} else if (array instanceof Uint32Array) {\n\t\t\t\ttype = 5125;\n\t\t\t} else if (array instanceof Int32Array) {\n\t\t\t\ttype = 5124;\n\t\t\t} else if (array instanceof Int8Array) {\n\t\t\t\ttype = 5120;\n\t\t\t} else if (array instanceof Uint8Array) {\n\t\t\t\ttype = 5121;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\t\t}\n\n\t\tfunction updateBuffer(buffer, attribute, bufferType) {\n\t\t\tvar array = attribute.array;\n\t\t\tvar updateRange = attribute.updateRange;\n\t\t\tgl.bindBuffer(bufferType, buffer);\n\n\t\t\tif (updateRange.count === -1) {\n\t\t\t\t// Not using update ranges\n\t\t\t\tgl.bufferSubData(bufferType, 0, array);\n\t\t\t} else {\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array, updateRange.offset, updateRange.count);\n\t\t\t\t} else {\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n\t\t\t\t}\n\n\t\t\t\tupdateRange.count = -1; // reset range\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction get(attribute) {\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\treturn buffers.get(attribute);\n\t\t}\n\n\t\tfunction remove(attribute) {\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\tvar data = buffers.get(attribute);\n\n\t\t\tif (data) {\n\t\t\t\tgl.deleteBuffer(data.buffer);\n\t\t\t\tbuffers.delete(attribute);\n\t\t\t}\n\t\t}\n\n\t\tfunction update(attribute, bufferType) {\n\t\t\tif (attribute.isGLBufferAttribute) {\n\t\t\t\tvar cached = buffers.get(attribute);\n\n\t\t\t\tif (!cached || cached.version < attribute.version) {\n\t\t\t\t\tbuffers.set(attribute, {\n\t\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\t\tversion: attribute.version\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\tvar data = buffers.get(attribute);\n\n\t\t\tif (data === undefined) {\n\t\t\t\tbuffers.set(attribute, createBuffer(attribute, bufferType));\n\t\t\t} else if (data.version < attribute.version) {\n\t\t\t\tupdateBuffer(data.buffer, attribute, bufferType);\n\t\t\t\tdata.version = attribute.version;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tvar PlaneGeometry = /*#__PURE__*/function (_BufferGeometry) {\n\t\t_inheritsLoose(PlaneGeometry, _BufferGeometry);\n\n\t\tfunction PlaneGeometry(width, height, widthSegments, heightSegments) {\n\t\t\tvar _this;\n\n\t\t\tif (width === void 0) {\n\t\t\t\twidth = 1;\n\t\t\t}\n\n\t\t\tif (height === void 0) {\n\t\t\t\theight = 1;\n\t\t\t}\n\n\t\t\tif (widthSegments === void 0) {\n\t\t\t\twidthSegments = 1;\n\t\t\t}\n\n\t\t\tif (heightSegments === void 0) {\n\t\t\t\theightSegments = 1;\n\t\t\t}\n\n\t\t\t_this = _BufferGeometry.call(this) || this;\n\t\t\t_this.type = 'PlaneGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments\n\t\t\t};\n\t\t\tvar width_half = width / 2;\n\t\t\tvar height_half = height / 2;\n\t\t\tvar gridX = Math.floor(widthSegments);\n\t\t\tvar gridY = Math.floor(heightSegments);\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\t\t\tvar segment_width = width / gridX;\n\t\t\tvar segment_height = height / gridY; //\n\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\n\t\t\tfor (var iy = 0; iy < gridY1; iy++) {\n\t\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\t\tfor (var ix = 0; ix < gridX1; ix++) {\n\t\t\t\t\tvar x = ix * segment_width - width_half;\n\t\t\t\t\tvertices.push(x, -y, 0);\n\t\t\t\t\tnormals.push(0, 0, 1);\n\t\t\t\t\tuvs.push(ix / gridX);\n\t\t\t\t\tuvs.push(1 - iy / gridY);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var _iy = 0; _iy < gridY; _iy++) {\n\t\t\t\tfor (var _ix = 0; _ix < gridX; _ix++) {\n\t\t\t\t\tvar a = _ix + gridX1 * _iy;\n\t\t\t\t\tvar b = _ix + gridX1 * (_iy + 1);\n\t\t\t\t\tvar c = _ix + 1 + gridX1 * (_iy + 1);\n\t\t\t\t\tvar d = _ix + 1 + gridX1 * _iy;\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_this.setIndex(indices);\n\n\t\t\t_this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n\t\t\t_this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n\t\t\t_this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn PlaneGeometry;\n\t}(BufferGeometry);\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\n\tvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_pars_vertex = \"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor.xyz *= color.xyz;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\n\tvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\n\tvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\n\tvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\n\tvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(\t\t0, 1,\t\t0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\n\tvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\n\tvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\n\tvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\";\n\n\tvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\n\tvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\\n\\t#endif\\n#endif\";\n\n\tvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\n\tvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\n\tvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\n\tvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(\t1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,\t1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,\t1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\n\tvar transmissionmap_fragment = \"#ifdef USE_TRANSMISSIONMAP\\n\\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\\n#endif\";\n\n\tvar transmissionmap_pars_fragment = \"#ifdef USE_TRANSMISSIONMAP\\n\\tuniform sampler2D transmissionMap;\\n#endif\";\n\n\tvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\n\tvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\n\tvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\n\tvar cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\n\tvar meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSMISSION\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSMISSION\\n\\tuniform float transmission;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <transmissionmap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#ifdef TRANSMISSION\\n\\t\\tfloat totalTransmission = transmission;\\n\\t#endif\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <transmissionmap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSMISSION\\n\\t\\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar shadow_vert = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars_begin: lights_pars_begin,\n\t\tlights_toon_fragment: lights_toon_fragment,\n\t\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_fragment_begin: lights_fragment_begin,\n\t\tlights_fragment_maps: lights_fragment_maps,\n\t\tlights_fragment_end: lights_fragment_end,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment_begin: normal_fragment_begin,\n\t\tnormal_fragment_maps: normal_fragment_maps,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\t\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\t\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\ttransmissionmap_fragment: transmissionmap_fragment,\n\t\ttransmissionmap_pars_fragment: transmissionmap_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\t\tbackground_frag: background_frag,\n\t\tbackground_vert: background_vert,\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshmatcap_frag: meshmatcap_frag,\n\t\tmeshmatcap_vert: meshmatcap_vert,\n\t\tmeshtoon_frag: meshtoon_frag,\n\t\tmeshtoon_vert: meshtoon_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert,\n\t\tsprite_frag: sprite_frag,\n\t\tsprite_vert: sprite_vert\n\t};\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tvar UniformsLib = {\n\t\tcommon: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xeeeeee)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t},\n\t\t\tuv2Transform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tspecularmap: {\n\t\t\tspecularMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tenvmap: {\n\t\t\tenvMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tflipEnvMap: {\n\t\t\t\tvalue: -1\n\t\t\t},\n\t\t\treflectivity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\trefractionRatio: {\n\t\t\t\tvalue: 0.98\n\t\t\t},\n\t\t\tmaxMipLevel: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\taomap: {\n\t\t\taoMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\taoMapIntensity: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\tlightmap: {\n\t\t\tlightMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tlightMapIntensity: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\temissivemap: {\n\t\t\temissiveMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tbumpmap: {\n\t\t\tbumpMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tbumpScale: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\tnormalmap: {\n\t\t\tnormalMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tnormalScale: {\n\t\t\t\tvalue: new Vector2(1, 1)\n\t\t\t}\n\t\t},\n\t\tdisplacementmap: {\n\t\t\tdisplacementMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tdisplacementScale: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tdisplacementBias: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\troughnessmap: {\n\t\t\troughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tmetalnessmap: {\n\t\t\tmetalnessMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tgradientmap: {\n\t\t\tgradientMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tfog: {\n\t\t\tfogDensity: {\n\t\t\t\tvalue: 0.00025\n\t\t\t},\n\t\t\tfogNear: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tfogFar: {\n\t\t\t\tvalue: 2000\n\t\t\t},\n\t\t\tfogColor: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t}\n\t\t},\n\t\tlights: {\n\t\t\tambientLightColor: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tlightProbe: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tdirectionalLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tcolor: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdirectionalLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdirectionalShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tdirectionalShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tspotLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tdistance: {},\n\t\t\t\t\tconeCos: {},\n\t\t\t\t\tpenumbraCos: {},\n\t\t\t\t\tdecay: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tspotLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tspotShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tspotShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tpointLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdecay: {},\n\t\t\t\t\tdistance: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpointLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {},\n\t\t\t\t\tshadowCameraNear: {},\n\t\t\t\t\tshadowCameraFar: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpointShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tpointShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\themisphereLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tskyColor: {},\n\t\t\t\t\tgroundColor: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\twidth: {},\n\t\t\t\t\theight: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tltc_1: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tltc_2: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tpoints: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xeeeeee)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t},\n\t\tsprite: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xeeeeee)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tcenter: {\n\t\t\t\tvalue: new Vector2(0.5, 0.5)\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tvalue: 0.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t}\n\t};\n\n\tvar ShaderLib = {\n\t\tbasic: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\t\t},\n\t\tlambert: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\t\t},\n\t\tphong: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t},\n\t\t\t\tspecular: {\n\t\t\t\t\tvalue: new Color(0x111111)\n\t\t\t\t},\n\t\t\t\tshininess: {\n\t\t\t\t\tvalue: 30\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\t\t},\n\t\tstandard: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t},\n\t\t\t\troughness: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t},\n\t\t\t\tmetalness: {\n\t\t\t\t\tvalue: 0.0\n\t\t\t\t},\n\t\t\t\tenvMapIntensity: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t} // temporary\n\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t\t},\n\t\ttoon: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\t\t},\n\t\tmatcap: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n\t\t\t\tmatcap: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\t\t},\n\t\tpoints: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\t\t},\n\t\tdashed: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.fog, {\n\t\t\t\tscale: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\tdashSize: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\ttotalSize: {\n\t\t\t\t\tvalue: 2\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\t\t},\n\t\tdepth: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\t\t},\n\t\tnormal: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\t\t},\n\t\tsprite: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\n\t\t},\n\t\tbackground: {\n\t\t\tuniforms: {\n\t\t\t\tuvTransform: {\n\t\t\t\t\tvalue: new Matrix3()\n\t\t\t\t},\n\t\t\t\tt2D: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: ShaderChunk.background_vert,\n\t\t\tfragmentShader: ShaderChunk.background_frag\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\t\tcube: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.envmap, {\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\t\t},\n\t\tequirect: {\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\t\t},\n\t\tdistanceRGBA: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\n\t\t\t\treferencePosition: {\n\t\t\t\t\tvalue: new Vector3()\n\t\t\t\t},\n\t\t\t\tnearDistance: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\tfarDistance: {\n\t\t\t\t\tvalue: 1000\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\t\t},\n\t\tshadow: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\n\t\t\t\tcolor: {\n\t\t\t\t\tvalue: new Color(0x00000)\n\t\t\t\t},\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\t\t}\n\t};\n\tShaderLib.physical = {\n\t\tuniforms: mergeUniforms([ShaderLib.standard.uniforms, {\n\t\t\tclearcoat: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tclearcoatMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tclearcoatRoughness: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tclearcoatRoughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tclearcoatNormalScale: {\n\t\t\t\tvalue: new Vector2(1, 1)\n\t\t\t},\n\t\t\tclearcoatNormalMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tsheen: {\n\t\t\t\tvalue: new Color(0x000000)\n\t\t\t},\n\t\t\ttransmission: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\ttransmissionMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t}]),\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t};\n\n\tfunction WebGLBackground(renderer, cubemaps, state, objects, premultipliedAlpha) {\n\t\tvar clearColor = new Color(0x000000);\n\t\tvar clearAlpha = 0;\n\t\tvar planeMesh;\n\t\tvar boxMesh;\n\t\tvar currentBackground = null;\n\t\tvar currentBackgroundVersion = 0;\n\t\tvar currentTonemapping = null;\n\n\t\tfunction render(renderList, scene, camera, forceClear) {\n\t\t\tvar background = scene.isScene === true ? scene.background : null;\n\n\t\t\tif (background && background.isTexture) {\n\t\t\t\tbackground = cubemaps.get(background);\n\t\t\t} // Ignore background in AR\n\t\t\t// TODO: Reconsider this.\n\n\n\t\t\tvar xr = renderer.xr;\n\t\t\tvar session = xr.getSession && xr.getSession();\n\n\t\t\tif (session && session.environmentBlendMode === 'additive') {\n\t\t\t\tbackground = null;\n\t\t\t}\n\n\t\t\tif (background === null) {\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t} else if (background && background.isColor) {\n\t\t\t\tsetClear(background, 1);\n\t\t\t\tforceClear = true;\n\t\t\t}\n\n\t\t\tif (renderer.autoClear || forceClear) {\n\t\t\t\trenderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n\t\t\t}\n\n\t\t\tif (background && (background.isCubeTexture || background.isWebGLCubeRenderTarget || background.mapping === CubeUVReflectionMapping)) {\n\t\t\t\tif (boxMesh === undefined) {\n\t\t\t\t\tboxMesh = new Mesh(new BoxGeometry(1, 1, 1), new ShaderMaterial({\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.cube.uniforms),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t}));\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('normal');\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('uv');\n\n\t\t\t\t\tboxMesh.onBeforeRender = function (renderer, scene, camera) {\n\t\t\t\t\t\tthis.matrixWorld.copyPosition(camera.matrixWorld);\n\t\t\t\t\t}; // enable code injection for non-built-in material\n\n\n\t\t\t\t\tObject.defineProperty(boxMesh.material, 'envMap', {\n\t\t\t\t\t\tget: function get() {\n\t\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tobjects.update(boxMesh);\n\t\t\t\t}\n\n\t\t\t\tif (background.isWebGLCubeRenderTarget) {\n\t\t\t\t\t// TODO Deprecate\n\t\t\t\t\tbackground = background.texture;\n\t\t\t\t}\n\n\t\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\t\tboxMesh.material.uniforms.flipEnvMap.value = background.isCubeTexture && background._needsFlipEnvMap ? -1 : 1;\n\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\t\t\t\t} // push to the pre-sorted opaque render list\n\n\n\t\t\t\trenderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null);\n\t\t\t} else if (background && background.isTexture) {\n\t\t\t\tif (planeMesh === undefined) {\n\t\t\t\t\tplaneMesh = new Mesh(new PlaneGeometry(2, 2), new ShaderMaterial({\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.background.uniforms),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t}));\n\t\t\t\t\tplaneMesh.geometry.deleteAttribute('normal'); // enable code injection for non-built-in material\n\n\t\t\t\t\tObject.defineProperty(planeMesh.material, 'map', {\n\t\t\t\t\t\tget: function get() {\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tobjects.update(planeMesh);\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\t\tif (background.matrixAutoUpdate === true) {\n\t\t\t\t\tbackground.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy(background.matrix);\n\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\t\t\t\t} // push to the pre-sorted opaque render list\n\n\n\t\t\t\trenderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null);\n\t\t\t}\n\t\t}\n\n\t\tfunction setClear(color, alpha) {\n\t\t\tstate.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n\t\t}\n\n\t\treturn {\n\t\t\tgetClearColor: function getClearColor() {\n\t\t\t\treturn clearColor;\n\t\t\t},\n\t\t\tsetClearColor: function setClearColor(color, alpha) {\n\t\t\t\tif (alpha === void 0) {\n\t\t\t\t\talpha = 1;\n\t\t\t\t}\n\n\t\t\t\tclearColor.set(color);\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t},\n\t\t\tgetClearAlpha: function getClearAlpha() {\n\t\t\t\treturn clearAlpha;\n\t\t\t},\n\t\t\tsetClearAlpha: function setClearAlpha(alpha) {\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t},\n\t\t\trender: render\n\t\t};\n\t}\n\n\tfunction WebGLBindingStates(gl, extensions, attributes, capabilities) {\n\t\tvar maxVertexAttributes = gl.getParameter(34921);\n\t\tvar extension = capabilities.isWebGL2 ? null : extensions.get('OES_vertex_array_object');\n\t\tvar vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\t\tvar bindingStates = {};\n\t\tvar defaultState = createBindingState(null);\n\t\tvar currentState = defaultState;\n\n\t\tfunction setup(object, material, program, geometry, index) {\n\t\t\tvar updateBuffers = false;\n\n\t\t\tif (vaoAvailable) {\n\t\t\t\tvar state = getBindingState(geometry, program, material);\n\n\t\t\t\tif (currentState !== state) {\n\t\t\t\t\tcurrentState = state;\n\t\t\t\t\tbindVertexArrayObject(currentState.object);\n\t\t\t\t}\n\n\t\t\t\tupdateBuffers = needsUpdate(geometry, index);\n\t\t\t\tif (updateBuffers) saveCache(geometry, index);\n\t\t\t} else {\n\t\t\t\tvar wireframe = material.wireframe === true;\n\n\t\t\t\tif (currentState.geometry !== geometry.id || currentState.program !== program.id || currentState.wireframe !== wireframe) {\n\t\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\t\tcurrentState.program = program.id;\n\t\t\t\t\tcurrentState.wireframe = wireframe;\n\t\t\t\t\tupdateBuffers = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh === true) {\n\t\t\t\tupdateBuffers = true;\n\t\t\t}\n\n\t\t\tif (index !== null) {\n\t\t\t\tattributes.update(index, 34963);\n\t\t\t}\n\n\t\t\tif (updateBuffers) {\n\t\t\t\tsetupVertexAttributes(object, material, program, geometry);\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tgl.bindBuffer(34963, attributes.get(index).buffer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction createVertexArrayObject() {\n\t\t\tif (capabilities.isWebGL2) return gl.createVertexArray();\n\t\t\treturn extension.createVertexArrayOES();\n\t\t}\n\n\t\tfunction bindVertexArrayObject(vao) {\n\t\t\tif (capabilities.isWebGL2) return gl.bindVertexArray(vao);\n\t\t\treturn extension.bindVertexArrayOES(vao);\n\t\t}\n\n\t\tfunction deleteVertexArrayObject(vao) {\n\t\t\tif (capabilities.isWebGL2) return gl.deleteVertexArray(vao);\n\t\t\treturn extension.deleteVertexArrayOES(vao);\n\t\t}\n\n\t\tfunction getBindingState(geometry, program, material) {\n\t\t\tvar wireframe = material.wireframe === true;\n\t\t\tvar programMap = bindingStates[geometry.id];\n\n\t\t\tif (programMap === undefined) {\n\t\t\t\tprogramMap = {};\n\t\t\t\tbindingStates[geometry.id] = programMap;\n\t\t\t}\n\n\t\t\tvar stateMap = programMap[program.id];\n\n\t\t\tif (stateMap === undefined) {\n\t\t\t\tstateMap = {};\n\t\t\t\tprogramMap[program.id] = stateMap;\n\t\t\t}\n\n\t\t\tvar state = stateMap[wireframe];\n\n\t\t\tif (state === undefined) {\n\t\t\t\tstate = createBindingState(createVertexArrayObject());\n\t\t\t\tstateMap[wireframe] = state;\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tfunction createBindingState(vao) {\n\t\t\tvar newAttributes = [];\n\t\t\tvar enabledAttributes = [];\n\t\t\tvar attributeDivisors = [];\n\n\t\t\tfor (var i = 0; i < maxVertexAttributes; i++) {\n\t\t\t\tnewAttributes[i] = 0;\n\t\t\t\tenabledAttributes[i] = 0;\n\t\t\t\tattributeDivisors[i] = 0;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\t\tgeometry: null,\n\t\t\t\tprogram: null,\n\t\t\t\twireframe: false,\n\t\t\t\tnewAttributes: newAttributes,\n\t\t\t\tenabledAttributes: enabledAttributes,\n\t\t\t\tattributeDivisors: attributeDivisors,\n\t\t\t\tobject: vao,\n\t\t\t\tattributes: {},\n\t\t\t\tindex: null\n\t\t\t};\n\t\t}\n\n\t\tfunction needsUpdate(geometry, index) {\n\t\t\tvar cachedAttributes = currentState.attributes;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\t\t\tvar attributesNum = 0;\n\n\t\t\tfor (var key in geometryAttributes) {\n\t\t\t\tvar cachedAttribute = cachedAttributes[key];\n\t\t\t\tvar geometryAttribute = geometryAttributes[key];\n\t\t\t\tif (cachedAttribute === undefined) return true;\n\t\t\t\tif (cachedAttribute.attribute !== geometryAttribute) return true;\n\t\t\t\tif (cachedAttribute.data !== geometryAttribute.data) return true;\n\t\t\t\tattributesNum++;\n\t\t\t}\n\n\t\t\tif (currentState.attributesNum !== attributesNum) return true;\n\t\t\tif (currentState.index !== index) return true;\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction saveCache(geometry, index) {\n\t\t\tvar cache = {};\n\t\t\tvar attributes = geometry.attributes;\n\t\t\tvar attributesNum = 0;\n\n\t\t\tfor (var key in attributes) {\n\t\t\t\tvar attribute = attributes[key];\n\t\t\t\tvar data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif (attribute.data) {\n\t\t\t\t\tdata.data = attribute.data;\n\t\t\t\t}\n\n\t\t\t\tcache[key] = data;\n\t\t\t\tattributesNum++;\n\t\t\t}\n\n\t\t\tcurrentState.attributes = cache;\n\t\t\tcurrentState.attributesNum = attributesNum;\n\t\t\tcurrentState.index = index;\n\t\t}\n\n\t\tfunction initAttributes() {\n\t\t\tvar newAttributes = currentState.newAttributes;\n\n\t\t\tfor (var i = 0, il = newAttributes.length; i < il; i++) {\n\t\t\t\tnewAttributes[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\tfunction enableAttribute(attribute) {\n\t\t\tenableAttributeAndDivisor(attribute, 0);\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor(attribute, meshPerAttribute) {\n\t\t\tvar newAttributes = currentState.newAttributes;\n\t\t\tvar enabledAttributes = currentState.enabledAttributes;\n\t\t\tvar attributeDivisors = currentState.attributeDivisors;\n\t\t\tnewAttributes[attribute] = 1;\n\n\t\t\tif (enabledAttributes[attribute] === 0) {\n\t\t\t\tgl.enableVertexAttribArray(attribute);\n\t\t\t\tenabledAttributes[attribute] = 1;\n\t\t\t}\n\n\t\t\tif (attributeDivisors[attribute] !== meshPerAttribute) {\n\t\t\t\tvar _extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\n\n\t\t\t\t_extension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\n\n\t\t\t\tattributeDivisors[attribute] = meshPerAttribute;\n\t\t\t}\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\t\t\tvar newAttributes = currentState.newAttributes;\n\t\t\tvar enabledAttributes = currentState.enabledAttributes;\n\n\t\t\tfor (var i = 0, il = enabledAttributes.length; i < il; i++) {\n\t\t\t\tif (enabledAttributes[i] !== newAttributes[i]) {\n\t\t\t\t\tgl.disableVertexAttribArray(i);\n\t\t\t\t\tenabledAttributes[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction vertexAttribPointer(index, size, type, normalized, stride, offset) {\n\t\t\tif (capabilities.isWebGL2 === true && (type === 5124 || type === 5125)) {\n\t\t\t\tgl.vertexAttribIPointer(index, size, type, stride, offset);\n\t\t\t} else {\n\t\t\t\tgl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n\t\t\t}\n\t\t}\n\n\t\tfunction setupVertexAttributes(object, material, program, geometry) {\n\t\t\tif (capabilities.isWebGL2 === false && (object.isInstancedMesh || geometry.isInstancedBufferGeometry)) {\n\t\t\t\tif (extensions.get('ANGLE_instanced_arrays') === null) return;\n\t\t\t}\n\n\t\t\tinitAttributes();\n\t\t\tvar geometryAttributes = geometry.attributes;\n\t\t\tvar programAttributes = program.getAttributes();\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor (var name in programAttributes) {\n\t\t\t\tvar programAttribute = programAttributes[name];\n\n\t\t\t\tif (programAttribute >= 0) {\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[name];\n\n\t\t\t\t\tif (geometryAttribute !== undefined) {\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\t\t\t\t\t\tvar attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif (attribute === undefined) continue;\n\t\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif (geometryAttribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif (data && data.isInstancedInterleavedBuffer) {\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, data.meshPerAttribute);\n\n\t\t\t\t\t\t\t\tif (geometry._maxInstanceCount === undefined) {\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tenableAttribute(programAttribute);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer(34962, buffer);\n\t\t\t\t\t\t\tvertexAttribPointer(programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (geometryAttribute.isInstancedBufferAttribute) {\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute);\n\n\t\t\t\t\t\t\t\tif (geometry._maxInstanceCount === undefined) {\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tenableAttribute(programAttribute);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer(34962, buffer);\n\t\t\t\t\t\t\tvertexAttribPointer(programAttribute, size, type, normalized, 0, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (name === 'instanceMatrix') {\n\t\t\t\t\t\tvar _attribute = attributes.get(object.instanceMatrix); // TODO Attribute may not be available on context restore\n\n\n\t\t\t\t\t\tif (_attribute === undefined) continue;\n\t\t\t\t\t\tvar _buffer = _attribute.buffer;\n\t\t\t\t\t\tvar _type = _attribute.type;\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 0, 1);\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 1, 1);\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 2, 1);\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 3, 1);\n\t\t\t\t\t\tgl.bindBuffer(34962, _buffer);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 0, 4, _type, false, 64, 0);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 1, 4, _type, false, 64, 16);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 2, 4, _type, false, 64, 32);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 3, 4, _type, false, 64, 48);\n\t\t\t\t\t} else if (name === 'instanceColor') {\n\t\t\t\t\t\tvar _attribute2 = attributes.get(object.instanceColor); // TODO Attribute may not be available on context restore\n\n\n\t\t\t\t\t\tif (_attribute2 === undefined) continue;\n\t\t\t\t\t\tvar _buffer2 = _attribute2.buffer;\n\t\t\t\t\t\tvar _type2 = _attribute2.type;\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, 1);\n\t\t\t\t\t\tgl.bindBuffer(34962, _buffer2);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute, 3, _type2, false, 12, 0);\n\t\t\t\t\t} else if (materialDefaultAttributeValues !== undefined) {\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[name];\n\n\t\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\t\tswitch (value.length) {\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib2fv(programAttribute, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib3fv(programAttribute, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib4fv(programAttribute, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib1fv(programAttribute, value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdisableUnusedAttributes();\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\treset();\n\n\t\t\tfor (var geometryId in bindingStates) {\n\t\t\t\tvar programMap = bindingStates[geometryId];\n\n\t\t\t\tfor (var programId in programMap) {\n\t\t\t\t\tvar stateMap = programMap[programId];\n\n\t\t\t\t\tfor (var wireframe in stateMap) {\n\t\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete programMap[programId];\n\t\t\t\t}\n\n\t\t\t\tdelete bindingStates[geometryId];\n\t\t\t}\n\t\t}\n\n\t\tfunction releaseStatesOfGeometry(geometry) {\n\t\t\tif (bindingStates[geometry.id] === undefined) return;\n\t\t\tvar programMap = bindingStates[geometry.id];\n\n\t\t\tfor (var programId in programMap) {\n\t\t\t\tvar stateMap = programMap[programId];\n\n\t\t\t\tfor (var wireframe in stateMap) {\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[programId];\n\t\t\t}\n\n\t\t\tdelete bindingStates[geometry.id];\n\t\t}\n\n\t\tfunction releaseStatesOfProgram(program) {\n\t\t\tfor (var geometryId in bindingStates) {\n\t\t\t\tvar programMap = bindingStates[geometryId];\n\t\t\t\tif (programMap[program.id] === undefined) continue;\n\t\t\t\tvar stateMap = programMap[program.id];\n\n\t\t\t\tfor (var wireframe in stateMap) {\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[program.id];\n\t\t\t}\n\t\t}\n\n\t\tfunction reset() {\n\t\t\tresetDefaultState();\n\t\t\tif (currentState === defaultState) return;\n\t\t\tcurrentState = defaultState;\n\t\t\tbindVertexArrayObject(currentState.object);\n\t\t} // for backward-compatilibity\n\n\n\t\tfunction resetDefaultState() {\n\t\t\tdefaultState.geometry = null;\n\t\t\tdefaultState.program = null;\n\t\t\tdefaultState.wireframe = false;\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\treset: reset,\n\t\t\tresetDefaultState: resetDefaultState,\n\t\t\tdispose: dispose,\n\t\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes\n\t\t};\n\t}\n\n\tfunction WebGLBufferRenderer(gl, extensions, info, capabilities) {\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\t\tvar mode;\n\n\t\tfunction setMode(value) {\n\t\t\tmode = value;\n\t\t}\n\n\t\tfunction render(start, count) {\n\t\t\tgl.drawArrays(mode, start, count);\n\t\t\tinfo.update(count, mode, 1);\n\t\t}\n\n\t\tfunction renderInstances(start, count, primcount) {\n\t\t\tif (primcount === 0) return;\n\t\t\tvar extension, methodName;\n\n\t\t\tif (isWebGL2) {\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawArraysInstanced';\n\t\t\t} else {\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\n\t\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension[methodName](mode, start, count, primcount);\n\t\t\tinfo.update(count, mode, primcount);\n\t\t} //\n\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\t}\n\n\tfunction WebGLCapabilities(gl, extensions, parameters) {\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\t\t\tif (maxAnisotropy !== undefined) return maxAnisotropy;\n\t\t\tvar extension = extensions.get('EXT_texture_filter_anisotropic');\n\n\t\t\tif (extension !== null) {\n\t\t\t\tmaxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n\t\t\t} else {\n\t\t\t\tmaxAnisotropy = 0;\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\t\t}\n\n\t\tfunction getMaxPrecision(precision) {\n\t\t\tif (precision === 'highp') {\n\t\t\t\tif (gl.getShaderPrecisionFormat(35633, 36338).precision > 0 && gl.getShaderPrecisionFormat(35632, 36338).precision > 0) {\n\t\t\t\t\treturn 'highp';\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\t\t\t}\n\n\t\t\tif (precision === 'mediump') {\n\t\t\t\tif (gl.getShaderPrecisionFormat(35633, 36337).precision > 0 && gl.getShaderPrecisionFormat(35632, 36337).precision > 0) {\n\t\t\t\t\treturn 'mediump';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\t\t}\n\t\t/* eslint-disable no-undef */\n\n\n\t\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\n\t\t/* eslint-enable no-undef */\n\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tvar maxPrecision = getMaxPrecision(precision);\n\n\t\tif (maxPrecision !== precision) {\n\t\t\tconsole.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n\t\t\tprecision = maxPrecision;\n\t\t}\n\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\t\tvar maxTextures = gl.getParameter(34930);\n\t\tvar maxVertexTextures = gl.getParameter(35660);\n\t\tvar maxTextureSize = gl.getParameter(3379);\n\t\tvar maxCubemapSize = gl.getParameter(34076);\n\t\tvar maxAttributes = gl.getParameter(34921);\n\t\tvar maxVertexUniforms = gl.getParameter(36347);\n\t\tvar maxVaryings = gl.getParameter(36348);\n\t\tvar maxFragmentUniforms = gl.getParameter(36349);\n\t\tvar vertexTextures = maxVertexTextures > 0;\n\t\tvar floatFragmentTextures = isWebGL2 || !!extensions.get('OES_texture_float');\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\t\tvar maxSamples = isWebGL2 ? gl.getParameter(36183) : 0;\n\t\treturn {\n\t\t\tisWebGL2: isWebGL2,\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures,\n\t\t\tmaxSamples: maxSamples\n\t\t};\n\t}\n\n\tfunction WebGLClipping(properties) {\n\t\tvar scope = this;\n\t\tvar globalState = null,\n\t\t\t\tnumGlobalPlanes = 0,\n\t\t\t\tlocalClippingEnabled = false,\n\t\t\t\trenderingShadows = false;\n\t\tvar plane = new Plane(),\n\t\t\t\tviewNormalMatrix = new Matrix3(),\n\t\t\t\tuniform = {\n\t\t\tvalue: null,\n\t\t\tneedsUpdate: false\n\t\t};\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function (planes, enableLocalClipping, camera) {\n\t\t\tvar enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 || localClippingEnabled;\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\t\t\tglobalState = projectPlanes(planes, camera, 0);\n\t\t\tnumGlobalPlanes = planes.length;\n\t\t\treturn enabled;\n\t\t};\n\n\t\tthis.beginShadows = function () {\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes(null);\n\t\t};\n\n\t\tthis.endShadows = function () {\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\t\t};\n\n\t\tthis.setState = function (material, camera, useCache) {\n\t\t\tvar planes = material.clippingPlanes,\n\t\t\t\t\tclipIntersection = material.clipIntersection,\n\t\t\t\t\tclipShadows = material.clipShadows;\n\t\t\tvar materialProperties = properties.get(material);\n\n\t\t\tif (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n\t\t\t\t// there's no local clipping\n\t\t\t\tif (renderingShadows) {\n\t\t\t\t\t// there's no global clipping\n\t\t\t\t\tprojectPlanes(null);\n\t\t\t\t} else {\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\t\tlGlobal = nGlobal * 4;\n\t\t\t\tvar dstArray = materialProperties.clippingState || null;\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes(planes, camera, lGlobal, useCache);\n\n\t\t\t\tfor (var i = 0; i !== lGlobal; ++i) {\n\t\t\t\t\tdstArray[i] = globalState[i];\n\t\t\t\t}\n\n\t\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\t\t\t}\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\t\t\tif (uniform.value !== globalState) {\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\t\t}\n\n\t\tfunction projectPlanes(planes, camera, dstOffset, skipTransform) {\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0;\n\t\t\tvar dstArray = null;\n\n\t\t\tif (nPlanes !== 0) {\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif (skipTransform !== true || dstArray === null) {\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix(viewMatrix);\n\n\t\t\t\t\tif (dstArray === null || dstArray.length < flatSize) {\n\t\t\t\t\t\tdstArray = new Float32Array(flatSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n\t\t\t\t\t\tplane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n\t\t\t\t\t\tplane.normal.toArray(dstArray, i4);\n\t\t\t\t\t\tdstArray[i4 + 3] = plane.constant;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\tscope.numIntersection = 0;\n\t\t\treturn dstArray;\n\t\t}\n\t}\n\n\tfunction WebGLCubeMaps(renderer) {\n\t\tvar cubemaps = new WeakMap();\n\n\t\tfunction mapTextureMapping(texture, mapping) {\n\t\t\tif (mapping === EquirectangularReflectionMapping) {\n\t\t\t\ttexture.mapping = CubeReflectionMapping;\n\t\t\t} else if (mapping === EquirectangularRefractionMapping) {\n\t\t\t\ttexture.mapping = CubeRefractionMapping;\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction get(texture) {\n\t\t\tif (texture && texture.isTexture) {\n\t\t\t\tvar mapping = texture.mapping;\n\n\t\t\t\tif (mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping) {\n\t\t\t\t\tif (cubemaps.has(texture)) {\n\t\t\t\t\t\tvar cubemap = cubemaps.get(texture).texture;\n\t\t\t\t\t\treturn mapTextureMapping(cubemap, texture.mapping);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar image = texture.image;\n\n\t\t\t\t\t\tif (image && image.height > 0) {\n\t\t\t\t\t\t\tvar currentRenderList = renderer.getRenderList();\n\t\t\t\t\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\t\t\t\t\t\t\tvar renderTarget = new WebGLCubeRenderTarget(image.height / 2);\n\t\t\t\t\t\t\trenderTarget.fromEquirectangularTexture(renderer, texture);\n\t\t\t\t\t\t\tcubemaps.set(texture, renderTarget);\n\t\t\t\t\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t\t\t\t\t\trenderer.setRenderList(currentRenderList);\n\t\t\t\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\t\t\t\treturn mapTextureMapping(renderTarget.texture, texture.mapping);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tvar texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tvar cubemap = cubemaps.get(texture);\n\n\t\t\tif (cubemap !== undefined) {\n\t\t\t\tcubemaps.delete(texture);\n\t\t\t\tcubemap.dispose();\n\t\t\t}\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tcubemaps = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction WebGLExtensions(gl) {\n\t\tvar extensions = {};\n\n\t\tfunction getExtension(name) {\n\t\t\tif (extensions[name] !== undefined) {\n\t\t\t\treturn extensions[name];\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch (name) {\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension(name);\n\t\t\t}\n\n\t\t\textensions[name] = extension;\n\t\t\treturn extension;\n\t\t}\n\n\t\treturn {\n\t\t\thas: function has(name) {\n\t\t\t\treturn getExtension(name) !== null;\n\t\t\t},\n\t\t\tinit: function init(capabilities) {\n\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\tgetExtension('EXT_color_buffer_float');\n\t\t\t\t} else {\n\t\t\t\t\tgetExtension('WEBGL_depth_texture');\n\t\t\t\t\tgetExtension('OES_texture_float');\n\t\t\t\t\tgetExtension('OES_texture_half_float');\n\t\t\t\t\tgetExtension('OES_texture_half_float_linear');\n\t\t\t\t\tgetExtension('OES_standard_derivatives');\n\t\t\t\t\tgetExtension('OES_element_index_uint');\n\t\t\t\t\tgetExtension('OES_vertex_array_object');\n\t\t\t\t\tgetExtension('ANGLE_instanced_arrays');\n\t\t\t\t}\n\n\t\t\t\tgetExtension('OES_texture_float_linear');\n\t\t\t\tgetExtension('EXT_color_buffer_half_float');\n\t\t\t},\n\t\t\tget: function get(name) {\n\t\t\t\tvar extension = getExtension(name);\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n\t\t\t\t}\n\n\t\t\t\treturn extension;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction WebGLGeometries(gl, attributes, info, bindingStates) {\n\t\tvar geometries = {};\n\t\tvar wireframeAttributes = new WeakMap();\n\n\t\tfunction onGeometryDispose(event) {\n\t\t\tvar geometry = event.target;\n\n\t\t\tif (geometry.index !== null) {\n\t\t\t\tattributes.remove(geometry.index);\n\t\t\t}\n\n\t\t\tfor (var name in geometry.attributes) {\n\t\t\t\tattributes.remove(geometry.attributes[name]);\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener('dispose', onGeometryDispose);\n\t\t\tdelete geometries[geometry.id];\n\t\t\tvar attribute = wireframeAttributes.get(geometry);\n\n\t\t\tif (attribute) {\n\t\t\t\tattributes.remove(attribute);\n\t\t\t\twireframeAttributes.delete(geometry);\n\t\t\t}\n\n\t\t\tbindingStates.releaseStatesOfGeometry(geometry);\n\n\t\t\tif (geometry.isInstancedBufferGeometry === true) {\n\t\t\t\tdelete geometry._maxInstanceCount;\n\t\t\t} //\n\n\n\t\t\tinfo.memory.geometries--;\n\t\t}\n\n\t\tfunction get(object, geometry) {\n\t\t\tif (geometries[geometry.id] === true) return geometry;\n\t\t\tgeometry.addEventListener('dispose', onGeometryDispose);\n\t\t\tgeometries[geometry.id] = true;\n\t\t\tinfo.memory.geometries++;\n\t\t\treturn geometry;\n\t\t}\n\n\t\tfunction update(geometry) {\n\t\t\tvar geometryAttributes = geometry.attributes; // Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\t\tfor (var name in geometryAttributes) {\n\t\t\t\tattributes.update(geometryAttributes[name], 34962);\n\t\t\t} // morph targets\n\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor (var _name in morphAttributes) {\n\t\t\t\tvar array = morphAttributes[_name];\n\n\t\t\t\tfor (var i = 0, l = array.length; i < l; i++) {\n\t\t\t\t\tattributes.update(array[i], 34962);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction updateWireframeAttribute(geometry) {\n\t\t\tvar indices = [];\n\t\t\tvar geometryIndex = geometry.index;\n\t\t\tvar geometryPosition = geometry.attributes.position;\n\t\t\tvar version = 0;\n\n\t\t\tif (geometryIndex !== null) {\n\t\t\t\tvar array = geometryIndex.array;\n\t\t\t\tversion = geometryIndex.version;\n\n\t\t\t\tfor (var i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\t\tvar a = array[i + 0];\n\t\t\t\t\tvar b = array[i + 1];\n\t\t\t\t\tvar c = array[i + 2];\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _array = geometryPosition.array;\n\t\t\t\tversion = geometryPosition.version;\n\n\t\t\t\tfor (var _i = 0, _l = _array.length / 3 - 1; _i < _l; _i += 3) {\n\t\t\t\t\tvar _a = _i + 0;\n\n\t\t\t\t\tvar _b = _i + 1;\n\n\t\t\t\t\tvar _c = _i + 2;\n\n\t\t\t\t\tindices.push(_a, _b, _b, _c, _c, _a);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n\t\t\tattribute.version = version; // Updating index buffer in VAO now. See WebGLBindingStates\n\t\t\t//\n\n\t\t\tvar previousAttribute = wireframeAttributes.get(geometry);\n\t\t\tif (previousAttribute) attributes.remove(previousAttribute); //\n\n\t\t\twireframeAttributes.set(geometry, attribute);\n\t\t}\n\n\t\tfunction getWireframeAttribute(geometry) {\n\t\t\tvar currentAttribute = wireframeAttributes.get(geometry);\n\n\t\t\tif (currentAttribute) {\n\t\t\t\tvar geometryIndex = geometry.index;\n\n\t\t\t\tif (geometryIndex !== null) {\n\t\t\t\t\t// if the attribute is obsolete, create a new one\n\t\t\t\t\tif (currentAttribute.version < geometryIndex.version) {\n\t\t\t\t\t\tupdateWireframeAttribute(geometry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdateWireframeAttribute(geometry);\n\t\t\t}\n\n\t\t\treturn wireframeAttributes.get(geometry);\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tupdate: update,\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\t\t};\n\t}\n\n\tfunction WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\t\tvar mode;\n\n\t\tfunction setMode(value) {\n\t\t\tmode = value;\n\t\t}\n\n\t\tvar type, bytesPerElement;\n\n\t\tfunction setIndex(value) {\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\t\t}\n\n\t\tfunction render(start, count) {\n\t\t\tgl.drawElements(mode, count, type, start * bytesPerElement);\n\t\t\tinfo.update(count, mode, 1);\n\t\t}\n\n\t\tfunction renderInstances(start, count, primcount) {\n\t\t\tif (primcount === 0) return;\n\t\t\tvar extension, methodName;\n\n\t\t\tif (isWebGL2) {\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawElementsInstanced';\n\t\t\t} else {\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\n\t\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension[methodName](mode, count, type, start * bytesPerElement, primcount);\n\t\t\tinfo.update(count, mode, primcount);\n\t\t} //\n\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\t}\n\n\tfunction WebGLInfo(gl) {\n\t\tvar memory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t};\n\t\tvar render = {\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\ttriangles: 0,\n\t\t\tpoints: 0,\n\t\t\tlines: 0\n\t\t};\n\n\t\tfunction update(count, mode, instanceCount) {\n\t\t\trender.calls++;\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase 4:\n\t\t\t\t\trender.triangles += instanceCount * (count / 3);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\trender.lines += instanceCount * (count / 2);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\trender.lines += instanceCount * (count - 1);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0:\n\t\t\t\t\trender.points += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error('THREE.WebGLInfo: Unknown draw mode:', mode);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfunction reset() {\n\t\t\trender.frame++;\n\t\t\trender.calls = 0;\n\t\t\trender.triangles = 0;\n\t\t\trender.points = 0;\n\t\t\trender.lines = 0;\n\t\t}\n\n\t\treturn {\n\t\t\tmemory: memory,\n\t\t\trender: render,\n\t\t\tprograms: null,\n\t\t\tautoReset: true,\n\t\t\treset: reset,\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tfunction numericalSort(a, b) {\n\t\treturn a[0] - b[0];\n\t}\n\n\tfunction absNumericalSort(a, b) {\n\t\treturn Math.abs(b[1]) - Math.abs(a[1]);\n\t}\n\n\tfunction WebGLMorphtargets(gl) {\n\t\tvar influencesList = {};\n\t\tvar morphInfluences = new Float32Array(8);\n\t\tvar workInfluences = [];\n\n\t\tfor (var i = 0; i < 8; i++) {\n\t\t\tworkInfluences[i] = [i, 0];\n\t\t}\n\n\t\tfunction update(object, geometry, material, program) {\n\t\t\tvar objectInfluences = object.morphTargetInfluences; // When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tvar length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\t\t\tvar influences = influencesList[geometry.id];\n\n\t\t\tif (influences === undefined) {\n\t\t\t\t// initialise list\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor (var _i = 0; _i < length; _i++) {\n\t\t\t\t\tinfluences[_i] = [_i, 0];\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[geometry.id] = influences;\n\t\t\t} // Collect influences\n\n\n\t\t\tfor (var _i2 = 0; _i2 < length; _i2++) {\n\t\t\t\tvar influence = influences[_i2];\n\t\t\t\tinfluence[0] = _i2;\n\t\t\t\tinfluence[1] = objectInfluences[_i2];\n\t\t\t}\n\n\t\t\tinfluences.sort(absNumericalSort);\n\n\t\t\tfor (var _i3 = 0; _i3 < 8; _i3++) {\n\t\t\t\tif (_i3 < length && influences[_i3][1]) {\n\t\t\t\t\tworkInfluences[_i3][0] = influences[_i3][0];\n\t\t\t\t\tworkInfluences[_i3][1] = influences[_i3][1];\n\t\t\t\t} else {\n\t\t\t\t\tworkInfluences[_i3][0] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[_i3][1] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tworkInfluences.sort(numericalSort);\n\t\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\t\t\tvar morphInfluencesSum = 0;\n\n\t\t\tfor (var _i4 = 0; _i4 < 8; _i4++) {\n\t\t\t\tvar _influence = workInfluences[_i4];\n\t\t\t\tvar index = _influence[0];\n\t\t\t\tvar value = _influence[1];\n\n\t\t\t\tif (index !== Number.MAX_SAFE_INTEGER && value) {\n\t\t\t\t\tif (morphTargets && geometry.getAttribute('morphTarget' + _i4) !== morphTargets[index]) {\n\t\t\t\t\t\tgeometry.setAttribute('morphTarget' + _i4, morphTargets[index]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (morphNormals && geometry.getAttribute('morphNormal' + _i4) !== morphNormals[index]) {\n\t\t\t\t\t\tgeometry.setAttribute('morphNormal' + _i4, morphNormals[index]);\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[_i4] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\t\t\t\t} else {\n\t\t\t\t\tif (morphTargets && geometry.hasAttribute('morphTarget' + _i4) === true) {\n\t\t\t\t\t\tgeometry.deleteAttribute('morphTarget' + _i4);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (morphNormals && geometry.hasAttribute('morphNormal' + _i4) === true) {\n\t\t\t\t\t\tgeometry.deleteAttribute('morphNormal' + _i4);\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[_i4] = 0;\n\t\t\t\t}\n\t\t\t} // GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\n\n\t\t\tvar morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\n\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tfunction WebGLObjects(gl, geometries, attributes, info) {\n\t\tvar updateMap = new WeakMap();\n\n\t\tfunction update(object) {\n\t\t\tvar frame = info.render.frame;\n\t\t\tvar geometry = object.geometry;\n\t\t\tvar buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n\t\t\tif (updateMap.get(buffergeometry) !== frame) {\n\t\t\t\tgeometries.update(buffergeometry);\n\t\t\t\tupdateMap.set(buffergeometry, frame);\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh) {\n\t\t\t\tif (object.hasEventListener('dispose', onInstancedMeshDispose) === false) {\n\t\t\t\t\tobject.addEventListener('dispose', onInstancedMeshDispose);\n\t\t\t\t}\n\n\t\t\t\tattributes.update(object.instanceMatrix, 34962);\n\n\t\t\t\tif (object.instanceColor !== null) {\n\t\t\t\t\tattributes.update(object.instanceColor, 34962);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tupdateMap = new WeakMap();\n\t\t}\n\n\t\tfunction onInstancedMeshDispose(event) {\n\t\t\tvar instancedMesh = event.target;\n\t\t\tinstancedMesh.removeEventListener('dispose', onInstancedMeshDispose);\n\t\t\tattributes.remove(instancedMesh.instanceMatrix);\n\t\t\tif (instancedMesh.instanceColor !== null) attributes.remove(instancedMesh.instanceColor);\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction DataTexture2DArray(data, width, height, depth) {\n\t\tif (data === void 0) {\n\t\t\tdata = null;\n\t\t}\n\n\t\tif (width === void 0) {\n\t\t\twidth = 1;\n\t\t}\n\n\t\tif (height === void 0) {\n\t\t\theight = 1;\n\t\t}\n\n\t\tif (depth === void 0) {\n\t\t\tdepth = 1;\n\t\t}\n\n\t\tTexture.call(this, null);\n\t\tthis.image = {\n\t\t\tdata: data,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth\n\t\t};\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.needsUpdate = true;\n\t}\n\n\tDataTexture2DArray.prototype = Object.create(Texture.prototype);\n\tDataTexture2DArray.prototype.constructor = DataTexture2DArray;\n\tDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n\tfunction DataTexture3D(data, width, height, depth) {\n\t\tif (data === void 0) {\n\t\t\tdata = null;\n\t\t}\n\n\t\tif (width === void 0) {\n\t\t\twidth = 1;\n\t\t}\n\n\t\tif (height === void 0) {\n\t\t\theight = 1;\n\t\t}\n\n\t\tif (depth === void 0) {\n\t\t\tdepth = 1;\n\t\t}\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\t\tTexture.call(this, null);\n\t\tthis.image = {\n\t\t\tdata: data,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth\n\t\t};\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.needsUpdate = true;\n\t}\n\n\tDataTexture3D.prototype = Object.create(Texture.prototype);\n\tDataTexture3D.prototype.constructor = DataTexture3D;\n\tDataTexture3D.prototype.isDataTexture3D = true;\n\n\t/**\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [textures] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *\t\tthe 'textures' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (textures factorizations):\n\t *\n\t * .upload( gl, seq, values, textures )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (textures factorizations):\n\t *\n\t * .setValue( gl, name, value, textures )\n\t *\n\t * \t\tsets uniform with\tname 'name' to 'value'\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\tvar emptyTexture = new Texture();\n\tvar emptyTexture2dArray = new DataTexture2DArray();\n\tvar emptyTexture3d = new DataTexture3D();\n\tvar emptyCubeTexture = new CubeTexture(); // --- Utilities ---\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tvar arrayCacheF32 = [];\n\tvar arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\n\tvar mat4array = new Float32Array(16);\n\tvar mat3array = new Float32Array(9);\n\tvar mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\n\n\tfunction flatten(array, nBlocks, blockSize) {\n\t\tvar firstElem = array[0];\n\t\tif (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tvar n = nBlocks * blockSize;\n\t\tvar r = arrayCacheF32[n];\n\n\t\tif (r === undefined) {\n\t\t\tr = new Float32Array(n);\n\t\t\tarrayCacheF32[n] = r;\n\t\t}\n\n\t\tif (nBlocks !== 0) {\n\t\t\tfirstElem.toArray(r, 0);\n\n\t\t\tfor (var i = 1, offset = 0; i !== nBlocks; ++i) {\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[i].toArray(r, offset);\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tfunction arraysEqual(a, b) {\n\t\tif (a.length !== b.length) return false;\n\n\t\tfor (var i = 0, l = a.length; i < l; i++) {\n\t\t\tif (a[i] !== b[i]) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction copyArray(a, b) {\n\t\tfor (var i = 0, l = b.length; i < l; i++) {\n\t\t\ta[i] = b[i];\n\t\t}\n\t} // Texture unit allocation\n\n\n\tfunction allocTexUnits(textures, n) {\n\t\tvar r = arrayCacheI32[n];\n\n\t\tif (r === undefined) {\n\t\t\tr = new Int32Array(n);\n\t\t\tarrayCacheI32[n] = r;\n\t\t}\n\n\t\tfor (var i = 0; i !== n; ++i) {\n\t\t\tr[i] = textures.allocateTextureUnit();\n\t\t}\n\n\t\treturn r;\n\t} // --- Setters ---\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\t// Single scalar\n\n\n\tfunction setValueV1f(gl, v) {\n\t\tvar cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1f(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single float vector (from flat array or THREE.VectorN)\n\n\n\tfunction setValueV2f(gl, v) {\n\t\tvar cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y) {\n\t\t\t\tgl.uniform2f(this.addr, v.x, v.y);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform2fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t}\n\n\tfunction setValueV3f(gl, v) {\n\t\tvar cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n\t\t\t\tgl.uniform3f(this.addr, v.x, v.y, v.z);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t\tcache[2] = v.z;\n\t\t\t}\n\t\t} else if (v.r !== undefined) {\n\t\t\tif (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n\t\t\t\tgl.uniform3f(this.addr, v.r, v.g, v.b);\n\t\t\t\tcache[0] = v.r;\n\t\t\t\tcache[1] = v.g;\n\t\t\t\tcache[2] = v.b;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform3fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t}\n\n\tfunction setValueV4f(gl, v) {\n\t\tvar cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n\t\t\t\tgl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t\tcache[2] = v.z;\n\t\t\t\tcache[3] = v.w;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform4fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t} // Single matrix (from flat array or MatrixN)\n\n\n\tfunction setValueM2(gl, v) {\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix2fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat2array.set(elements);\n\t\t\tgl.uniformMatrix2fv(this.addr, false, mat2array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t}\n\n\tfunction setValueM3(gl, v) {\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix3fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat3array.set(elements);\n\t\t\tgl.uniformMatrix3fv(this.addr, false, mat3array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t}\n\n\tfunction setValueM4(gl, v) {\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix4fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat4array.set(elements);\n\t\t\tgl.uniformMatrix4fv(this.addr, false, mat4array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t} // Single texture (2D / Cube)\n\n\n\tfunction setValueT1(gl, v, textures) {\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.safeSetTexture2D(v || emptyTexture, unit);\n\t}\n\n\tfunction setValueT2DArray1(gl, v, textures) {\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.setTexture2DArray(v || emptyTexture2dArray, unit);\n\t}\n\n\tfunction setValueT3D1(gl, v, textures) {\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.setTexture3D(v || emptyTexture3d, unit);\n\t}\n\n\tfunction setValueT6(gl, v, textures) {\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.safeSetTextureCube(v || emptyCubeTexture, unit);\n\t} // Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\n\tfunction setValueV1i(gl, v) {\n\t\tvar cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1i(this.addr, v);\n\t\tcache[0] = v;\n\t}\n\n\tfunction setValueV2i(gl, v) {\n\t\tvar cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform2iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV3i(gl, v) {\n\t\tvar cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform3iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV4i(gl, v) {\n\t\tvar cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform4iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t} // uint\n\n\n\tfunction setValueV1ui(gl, v) {\n\t\tvar cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1ui(this.addr, v);\n\t\tcache[0] = v;\n\t} // Helper to pick the right setter for the singular case\n\n\n\tfunction getSingularSetter(type) {\n\t\tswitch (type) {\n\t\t\tcase 0x1406:\n\t\t\t\treturn setValueV1f;\n\t\t\t// FLOAT\n\n\t\t\tcase 0x8b50:\n\t\t\t\treturn setValueV2f;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b51:\n\t\t\t\treturn setValueV3f;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b52:\n\t\t\t\treturn setValueV4f;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5a:\n\t\t\t\treturn setValueM2;\n\t\t\t// _MAT2\n\n\t\t\tcase 0x8b5b:\n\t\t\t\treturn setValueM3;\n\t\t\t// _MAT3\n\n\t\t\tcase 0x8b5c:\n\t\t\t\treturn setValueM4;\n\t\t\t// _MAT4\n\n\t\t\tcase 0x1404:\n\t\t\tcase 0x8b56:\n\t\t\t\treturn setValueV1i;\n\t\t\t// INT, BOOL\n\n\t\t\tcase 0x8b53:\n\t\t\tcase 0x8b57:\n\t\t\t\treturn setValueV2i;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b54:\n\t\t\tcase 0x8b58:\n\t\t\t\treturn setValueV3i;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b55:\n\t\t\tcase 0x8b59:\n\t\t\t\treturn setValueV4i;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x1405:\n\t\t\t\treturn setValueV1ui;\n\t\t\t// UINT\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n\t\t\tcase 0x8b62:\n\t\t\t\t// SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1;\n\n\t\t\tcase 0x8b5f: // SAMPLER_3D\n\n\t\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\n\t\t\tcase 0x8dd3:\n\t\t\t\t// UNSIGNED_INT_SAMPLER_3D\n\t\t\t\treturn setValueT3D1;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dc5:\n\t\t\t\t// SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6;\n\n\t\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dc4:\n\t\t\t\t// SAMPLER_2D_ARRAY_SHADOW\n\t\t\t\treturn setValueT2DArray1;\n\t\t}\n\t} // Array of scalars\n\n\n\tfunction setValueV1fArray(gl, v) {\n\t\tgl.uniform1fv(this.addr, v);\n\t} // Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\n\tfunction setValueV1iArray(gl, v) {\n\t\tgl.uniform1iv(this.addr, v);\n\t}\n\n\tfunction setValueV2iArray(gl, v) {\n\t\tgl.uniform2iv(this.addr, v);\n\t}\n\n\tfunction setValueV3iArray(gl, v) {\n\t\tgl.uniform3iv(this.addr, v);\n\t}\n\n\tfunction setValueV4iArray(gl, v) {\n\t\tgl.uniform4iv(this.addr, v);\n\t} // Array of vectors (flat or from THREE classes)\n\n\n\tfunction setValueV2fArray(gl, v) {\n\t\tvar data = flatten(v, this.size, 2);\n\t\tgl.uniform2fv(this.addr, data);\n\t}\n\n\tfunction setValueV3fArray(gl, v) {\n\t\tvar data = flatten(v, this.size, 3);\n\t\tgl.uniform3fv(this.addr, data);\n\t}\n\n\tfunction setValueV4fArray(gl, v) {\n\t\tvar data = flatten(v, this.size, 4);\n\t\tgl.uniform4fv(this.addr, data);\n\t} // Array of matrices (flat or from THREE clases)\n\n\n\tfunction setValueM2Array(gl, v) {\n\t\tvar data = flatten(v, this.size, 4);\n\t\tgl.uniformMatrix2fv(this.addr, false, data);\n\t}\n\n\tfunction setValueM3Array(gl, v) {\n\t\tvar data = flatten(v, this.size, 9);\n\t\tgl.uniformMatrix3fv(this.addr, false, data);\n\t}\n\n\tfunction setValueM4Array(gl, v) {\n\t\tvar data = flatten(v, this.size, 16);\n\t\tgl.uniformMatrix4fv(this.addr, false, data);\n\t} // Array of textures (2D / Cube)\n\n\n\tfunction setValueT1Array(gl, v, textures) {\n\t\tvar n = v.length;\n\t\tvar units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (var i = 0; i !== n; ++i) {\n\t\t\ttextures.safeSetTexture2D(v[i] || emptyTexture, units[i]);\n\t\t}\n\t}\n\n\tfunction setValueT6Array(gl, v, textures) {\n\t\tvar n = v.length;\n\t\tvar units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (var i = 0; i !== n; ++i) {\n\t\t\ttextures.safeSetTextureCube(v[i] || emptyCubeTexture, units[i]);\n\t\t}\n\t} // Helper to pick the right setter for a pure (bottom-level) array\n\n\n\tfunction getPureArraySetter(type) {\n\t\tswitch (type) {\n\t\t\tcase 0x1406:\n\t\t\t\treturn setValueV1fArray;\n\t\t\t// FLOAT\n\n\t\t\tcase 0x8b50:\n\t\t\t\treturn setValueV2fArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b51:\n\t\t\t\treturn setValueV3fArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b52:\n\t\t\t\treturn setValueV4fArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5a:\n\t\t\t\treturn setValueM2Array;\n\t\t\t// _MAT2\n\n\t\t\tcase 0x8b5b:\n\t\t\t\treturn setValueM3Array;\n\t\t\t// _MAT3\n\n\t\t\tcase 0x8b5c:\n\t\t\t\treturn setValueM4Array;\n\t\t\t// _MAT4\n\n\t\t\tcase 0x1404:\n\t\t\tcase 0x8b56:\n\t\t\t\treturn setValueV1iArray;\n\t\t\t// INT, BOOL\n\n\t\t\tcase 0x8b53:\n\t\t\tcase 0x8b57:\n\t\t\t\treturn setValueV2iArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b54:\n\t\t\tcase 0x8b58:\n\t\t\t\treturn setValueV3iArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b55:\n\t\t\tcase 0x8b59:\n\t\t\t\treturn setValueV4iArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n\t\t\tcase 0x8b62:\n\t\t\t\t// SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1Array;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dc5:\n\t\t\t\t// SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6Array;\n\t\t}\n\t} // --- Uniform Classes ---\n\n\n\tfunction SingleUniform(id, activeInfo, addr) {\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n\t}\n\n\tfunction PureArrayUniform(id, activeInfo, addr) {\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n\t}\n\n\tPureArrayUniform.prototype.updateCache = function (data) {\n\t\tvar cache = this.cache;\n\n\t\tif (data instanceof Float32Array && cache.length !== data.length) {\n\t\t\tthis.cache = new Float32Array(data.length);\n\t\t}\n\n\t\tcopyArray(cache, data);\n\t};\n\n\tfunction StructuredUniform(id) {\n\t\tthis.id = id;\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\t}\n\n\tStructuredUniform.prototype.setValue = function (gl, value, textures) {\n\t\tvar seq = this.seq;\n\n\t\tfor (var i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tvar u = seq[i];\n\t\t\tu.setValue(gl, value[u.id], textures);\n\t\t}\n\t}; // --- Top-level ---\n\t// Parser - builds up the property tree from the path strings\n\n\n\tvar RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g; // extracts\n\t// \t- the identifier (member name or array index)\n\t//\t- followed by an optional right bracket (found when array index)\n\t//\t- followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform(container, uniformObject) {\n\t\tcontainer.seq.push(uniformObject);\n\t\tcontainer.map[uniformObject.id] = uniformObject;\n\t}\n\n\tfunction parseUniform(activeInfo, addr, container) {\n\t\tvar path = activeInfo.name,\n\t\t\t\tpathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n\t\tRePathPart.lastIndex = 0;\n\n\t\twhile (true) {\n\t\t\tvar match = RePathPart.exec(path),\n\t\t\t\t\tmatchEnd = RePathPart.lastIndex;\n\t\t\tvar id = match[1];\n\t\t\tvar idIsIndex = match[2] === ']',\n\t\t\t\t\tsubscript = match[3];\n\t\t\tif (idIsIndex) id = id | 0; // convert to integer\n\n\t\t\tif (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\t\t\t\taddUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\t\t\t\tvar map = container.map;\n\t\t\t\tvar next = map[id];\n\n\t\t\t\tif (next === undefined) {\n\t\t\t\t\tnext = new StructuredUniform(id);\n\t\t\t\t\taddUniform(container, next);\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\t\t\t}\n\t\t}\n\t} // Root Container\n\n\n\tfunction WebGLUniforms(gl, program) {\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\t\tvar n = gl.getProgramParameter(program, 35718);\n\n\t\tfor (var i = 0; i < n; ++i) {\n\t\t\tvar info = gl.getActiveUniform(program, i),\n\t\t\t\t\taddr = gl.getUniformLocation(program, info.name);\n\t\t\tparseUniform(info, addr, this);\n\t\t}\n\t}\n\n\tWebGLUniforms.prototype.setValue = function (gl, name, value, textures) {\n\t\tvar u = this.map[name];\n\t\tif (u !== undefined) u.setValue(gl, value, textures);\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function (gl, object, name) {\n\t\tvar v = object[name];\n\t\tif (v !== undefined) this.setValue(gl, name, v);\n\t}; // Static interface\n\n\n\tWebGLUniforms.upload = function (gl, seq, values, textures) {\n\t\tfor (var i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tvar u = seq[i],\n\t\t\t\t\tv = values[u.id];\n\n\t\t\tif (v.needsUpdate !== false) {\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue(gl, v.value, textures);\n\t\t\t}\n\t\t}\n\t};\n\n\tWebGLUniforms.seqWithValue = function (seq, values) {\n\t\tvar r = [];\n\n\t\tfor (var i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tvar u = seq[i];\n\t\t\tif (u.id in values) r.push(u);\n\t\t}\n\n\t\treturn r;\n\t};\n\n\tfunction WebGLShader(gl, type, string) {\n\t\tvar shader = gl.createShader(type);\n\t\tgl.shaderSource(shader, string);\n\t\tgl.compileShader(shader);\n\t\treturn shader;\n\t}\n\n\tvar programIdCount = 0;\n\n\tfunction addLineNumbers(string) {\n\t\tvar lines = string.split('\\n');\n\n\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\tlines[i] = i + 1 + ': ' + lines[i];\n\t\t}\n\n\t\treturn lines.join('\\n');\n\t}\n\n\tfunction getEncodingComponents(encoding) {\n\t\tswitch (encoding) {\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn ['Linear', '( value )'];\n\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn ['sRGB', '( value )'];\n\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn ['RGBE', '( value )'];\n\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn ['RGBM', '( value, 7.0 )'];\n\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn ['RGBM', '( value, 16.0 )'];\n\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn ['RGBD', '( value, 256.0 )'];\n\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n\t\t\tcase LogLuvEncoding:\n\t\t\t\treturn ['LogLuv', '( value )'];\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\n\t\t\t\treturn ['Linear', '( value )'];\n\t\t}\n\t}\n\n\tfunction getShaderErrors(gl, shader, type) {\n\t\tvar status = gl.getShaderParameter(shader, 35713);\n\t\tvar log = gl.getShaderInfoLog(shader).trim();\n\t\tif (status && log === '') return ''; // --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tvar source = gl.getShaderSource(shader);\n\t\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers(source);\n\t}\n\n\tfunction getTexelDecodingFunction(functionName, encoding) {\n\t\tvar components = getEncodingComponents(encoding);\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[0] + 'ToLinear' + components[1] + '; }';\n\t}\n\n\tfunction getTexelEncodingFunction(functionName, encoding) {\n\t\tvar components = getEncodingComponents(encoding);\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n\t}\n\n\tfunction getToneMappingFunction(functionName, toneMapping) {\n\t\tvar toneMappingName;\n\n\t\tswitch (toneMapping) {\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = 'Reinhard';\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\t\tbreak;\n\n\t\t\tcase ACESFilmicToneMapping:\n\t\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\t\tbreak;\n\n\t\t\tcase CustomToneMapping:\n\t\t\t\ttoneMappingName = 'Custom';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t}\n\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\t}\n\n\tfunction generateExtensions(parameters) {\n\t\tvar chunks = [parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ? '#extension GL_OES_standard_derivatives : enable' : '', (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '', parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? '#extension GL_EXT_draw_buffers : require' : '', (parameters.extensionShaderTextureLOD || parameters.envMap) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n\t\treturn chunks.filter(filterEmptyLine).join('\\n');\n\t}\n\n\tfunction generateDefines(defines) {\n\t\tvar chunks = [];\n\n\t\tfor (var name in defines) {\n\t\t\tvar value = defines[name];\n\t\t\tif (value === false) continue;\n\t\t\tchunks.push('#define ' + name + ' ' + value);\n\t\t}\n\n\t\treturn chunks.join('\\n');\n\t}\n\n\tfunction fetchAttributeLocations(gl, program) {\n\t\tvar attributes = {};\n\t\tvar n = gl.getProgramParameter(program, 35721);\n\n\t\tfor (var i = 0; i < n; i++) {\n\t\t\tvar info = gl.getActiveAttrib(program, i);\n\t\t\tvar name = info.name; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\t\tattributes[name] = gl.getAttribLocation(program, name);\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tfunction filterEmptyLine(string) {\n\t\treturn string !== '';\n\t}\n\n\tfunction replaceLightNums(string, parameters) {\n\t\treturn string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\n\t}\n\n\tfunction replaceClippingPlaneNums(string, parameters) {\n\t\treturn string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n\t} // Resolve Includes\n\n\n\tvar includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction resolveIncludes(string) {\n\t\treturn string.replace(includePattern, includeReplacer);\n\t}\n\n\tfunction includeReplacer(match, include) {\n\t\tvar string = ShaderChunk[include];\n\n\t\tif (string === undefined) {\n\t\t\tthrow new Error('Can not resolve #include <' + include + '>');\n\t\t}\n\n\t\treturn resolveIncludes(string);\n\t} // Unroll Loops\n\n\n\tvar deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\tvar unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\n\tfunction unrollLoops(string) {\n\t\treturn string.replace(unrollLoopPattern, loopReplacer).replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\n\t}\n\n\tfunction deprecatedLoopReplacer(match, start, end, snippet) {\n\t\tconsole.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');\n\t\treturn loopReplacer(match, start, end, snippet);\n\t}\n\n\tfunction loopReplacer(match, start, end, snippet) {\n\t\tvar string = '';\n\n\t\tfor (var i = parseInt(start); i < parseInt(end); i++) {\n\t\t\tstring += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\n\t\t}\n\n\t\treturn string;\n\t} //\n\n\n\tfunction generatePrecision(parameters) {\n\t\tvar precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\t\tif (parameters.precision === 'highp') {\n\t\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\t\t} else if (parameters.precision === 'mediump') {\n\t\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\t\t} else if (parameters.precision === 'lowp') {\n\t\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\t\t}\n\n\t\treturn precisionstring;\n\t}\n\n\tfunction generateShadowMapTypeDefine(parameters) {\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif (parameters.shadowMapType === PCFShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\t\t} else if (parameters.shadowMapType === PCFSoftShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\t\t} else if (parameters.shadowMapType === VSMShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\t\t}\n\n\t\treturn shadowMapTypeDefine;\n\t}\n\n\tfunction generateEnvMapTypeDefine(parameters) {\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.envMapMode) {\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapTypeDefine;\n\t}\n\n\tfunction generateEnvMapModeDefine(parameters) {\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.envMapMode) {\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapModeDefine;\n\t}\n\n\tfunction generateEnvMapBlendingDefine(parameters) {\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.combine) {\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapBlendingDefine;\n\t}\n\n\tfunction WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\n\t\tvar gl = renderer.getContext();\n\t\tvar defines = parameters.defines;\n\t\tvar vertexShader = parameters.vertexShader;\n\t\tvar fragmentShader = parameters.fragmentShader;\n\t\tvar shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\n\t\tvar envMapTypeDefine = generateEnvMapTypeDefine(parameters);\n\t\tvar envMapModeDefine = generateEnvMapModeDefine(parameters);\n\t\tvar envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\n\t\tvar gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0;\n\t\tvar customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\n\t\tvar customDefines = generateDefines(defines);\n\t\tvar program = gl.createProgram();\n\t\tvar prefixVertex, prefixFragment;\n\t\tvar versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\t\tif (parameters.isRawShaderMaterial) {\n\t\t\tprefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n\t\t\tif (prefixVertex.length > 0) {\n\t\t\t\tprefixVertex += '\\n';\n\t\t\t}\n\n\t\t\tprefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n\t\t\tif (prefixFragment.length > 0) {\n\t\t\t\tprefixFragment += '\\n';\n\t\t\t}\n\t\t} else {\n\t\t\tprefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', '\tattribute mat4 instanceMatrix;', '#endif', '#ifdef USE_INSTANCING_COLOR', '\tattribute vec3 instanceColor;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#ifdef USE_COLOR', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n\t\t\tprefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + (parameters.alphaTest % 1 ? '' : '.0') : '', // add '.0' if integer\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', (parameters.extensionShaderTextureLOD || parameters.envMap) && parameters.rendererExtensionShaderTextureLod ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\tparameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', ShaderChunk['encodings_pars_fragment'], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.matcap ? getTexelDecodingFunction('matcapTexelToLinear', parameters.matcapEncoding) : '', parameters.envMap ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMap ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.lightMap ? getTexelDecodingFunction('lightMapTexelToLinear', parameters.lightMapEncoding) : '', getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding), parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n\t\t}\n\n\t\tvertexShader = resolveIncludes(vertexShader);\n\t\tvertexShader = replaceLightNums(vertexShader, parameters);\n\t\tvertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n\t\tfragmentShader = resolveIncludes(fragmentShader);\n\t\tfragmentShader = replaceLightNums(fragmentShader, parameters);\n\t\tfragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n\t\tvertexShader = unrollLoops(vertexShader);\n\t\tfragmentShader = unrollLoops(fragmentShader);\n\n\t\tif (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\n\t\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\t\t\tversionString = '#version 300 es\\n';\n\t\t\tprefixVertex = ['#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n\t\t\tprefixFragment = ['#define varying in', parameters.glslVersion === GLSL3 ? '' : 'out highp vec4 pc_fragColor;', parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\n\t\t}\n\n\t\tvar vertexGlsl = versionString + prefixVertex + vertexShader;\n\t\tvar fragmentGlsl = versionString + prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tvar glVertexShader = WebGLShader(gl, 35633, vertexGlsl);\n\t\tvar glFragmentShader = WebGLShader(gl, 35632, fragmentGlsl);\n\t\tgl.attachShader(program, glVertexShader);\n\t\tgl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n\t\tif (parameters.index0AttributeName !== undefined) {\n\t\t\tgl.bindAttribLocation(program, 0, parameters.index0AttributeName);\n\t\t} else if (parameters.morphTargets === true) {\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation(program, 0, 'position');\n\t\t}\n\n\t\tgl.linkProgram(program); // check for link errors\n\n\t\tif (renderer.debug.checkShaderErrors) {\n\t\t\tvar programLog = gl.getProgramInfoLog(program).trim();\n\t\t\tvar vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n\t\t\tvar fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n\t\t\tvar runnable = true;\n\t\t\tvar haveDiagnostics = true;\n\n\t\t\tif (gl.getProgramParameter(program, 35714) === false) {\n\t\t\t\trunnable = false;\n\t\t\t\tvar vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\n\t\t\t\tvar fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\n\t\t\t\tconsole.error('THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter(program, 35715), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors);\n\t\t\t} else if (programLog !== '') {\n\t\t\t\tconsole.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n\t\t\t} else if (vertexLog === '' || fragmentLog === '') {\n\t\t\t\thaveDiagnostics = false;\n\t\t\t}\n\n\t\t\tif (haveDiagnostics) {\n\t\t\t\tthis.diagnostics = {\n\t\t\t\t\trunnable: runnable,\n\t\t\t\t\tprogramLog: programLog,\n\t\t\t\t\tvertexShader: {\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\t\t\t\t\t},\n\t\t\t\t\tfragmentShader: {\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t} // Clean up\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\n\t\tgl.deleteShader(glVertexShader);\n\t\tgl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n\t\tvar cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\t\t\tif (cachedUniforms === undefined) {\n\t\t\t\tcachedUniforms = new WebGLUniforms(gl, program);\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\t\t}; // set up caching for attribute locations\n\n\n\t\tvar cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\t\t\tif (cachedAttributes === undefined) {\n\t\t\t\tcachedAttributes = fetchAttributeLocations(gl, program);\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\t\t}; // free resource\n\n\n\t\tthis.destroy = function () {\n\t\t\tbindingStates.releaseStatesOfProgram(this);\n\t\t\tgl.deleteProgram(program);\n\t\t\tthis.program = undefined;\n\t\t}; //\n\n\n\t\tthis.name = parameters.shaderName;\n\t\tthis.id = programIdCount++;\n\t\tthis.cacheKey = cacheKey;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\t\treturn this;\n\t}\n\n\tfunction WebGLPrograms(renderer, cubemaps, extensions, capabilities, bindingStates, clipping) {\n\t\tvar programs = [];\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\t\tvar logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\t\tvar floatVertexTextures = capabilities.floatVertexTextures;\n\t\tvar maxVertexUniforms = capabilities.maxVertexUniforms;\n\t\tvar vertexTextures = capabilities.vertexTextures;\n\t\tvar precision = capabilities.precision;\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'toon',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tMeshMatcapMaterial: 'matcap',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow',\n\t\t\tSpriteMaterial: 'sprite'\n\t\t};\n\t\tvar parameterNames = ['precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor', 'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV', 'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap', 'roughnessMap', 'metalnessMap', 'gradientMap', 'alphaMap', 'combine', 'vertexColors', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2', 'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning', 'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'maxMorphTargets', 'maxMorphNormals', 'premultipliedAlpha', 'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights', 'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows', 'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights', 'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering', 'sheen', 'transmissionMap'];\n\n\t\tfunction getMaxBones(object) {\n\t\t\tvar skeleton = object.skeleton;\n\t\t\tvar bones = skeleton.bones;\n\n\t\t\tif (floatVertexTextures) {\n\t\t\t\treturn 1024;\n\t\t\t} else {\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//\t- leave some extra space for other uniforms\n\t\t\t\t//\t- limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//\t\t(up to 54 should be safe)\n\t\t\t\tvar nVertexUniforms = maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n\t\t\t\tvar maxBones = Math.min(nVertexMatrices, bones.length);\n\n\t\t\t\tif (maxBones < bones.length) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\t\t\t}\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap(map) {\n\t\t\tvar encoding;\n\n\t\t\tif (map && map.isTexture) {\n\t\t\t\tencoding = map.encoding;\n\t\t\t} else if (map && map.isWebGLRenderTarget) {\n\t\t\t\tconsole.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.');\n\t\t\t\tencoding = map.texture.encoding;\n\t\t\t} else {\n\t\t\t\tencoding = LinearEncoding;\n\t\t\t}\n\n\t\t\treturn encoding;\n\t\t}\n\n\t\tfunction getParameters(material, lights, shadows, scene, object) {\n\t\t\tvar fog = scene.fog;\n\t\t\tvar environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tvar envMap = cubemaps.get(material.envMap || environment);\n\t\t\tvar shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = object.isSkinnedMesh ? getMaxBones(object) : 0;\n\n\t\t\tif (material.precision !== null) {\n\t\t\t\tprecision = capabilities.getMaxPrecision(material.precision);\n\n\t\t\t\tif (precision !== material.precision) {\n\t\t\t\t\tconsole.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar vertexShader, fragmentShader;\n\n\t\t\tif (shaderID) {\n\t\t\t\tvar shader = ShaderLib[shaderID];\n\t\t\t\tvertexShader = shader.vertexShader;\n\t\t\t\tfragmentShader = shader.fragmentShader;\n\t\t\t} else {\n\t\t\t\tvertexShader = material.vertexShader;\n\t\t\t\tfragmentShader = material.fragmentShader;\n\t\t\t}\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\t\t\tvar parameters = {\n\t\t\t\tisWebGL2: isWebGL2,\n\t\t\t\tshaderID: shaderID,\n\t\t\t\tshaderName: material.type,\n\t\t\t\tvertexShader: vertexShader,\n\t\t\t\tfragmentShader: fragmentShader,\n\t\t\t\tdefines: material.defines,\n\t\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\t\tglslVersion: material.glslVersion,\n\t\t\t\tprecision: precision,\n\t\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\t\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\t\toutputEncoding: currentRenderTarget !== null ? getTextureEncodingFromMap(currentRenderTarget.texture) : renderer.outputEncoding,\n\t\t\t\tmap: !!material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap(material.map),\n\t\t\t\tmatcap: !!material.matcap,\n\t\t\t\tmatcapEncoding: getTextureEncodingFromMap(material.matcap),\n\t\t\t\tenvMap: !!envMap,\n\t\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap(envMap),\n\t\t\t\tenvMapCubeUV: !!envMap && (envMap.mapping === CubeUVReflectionMapping || envMap.mapping === CubeUVRefractionMapping),\n\t\t\t\tlightMap: !!material.lightMap,\n\t\t\t\tlightMapEncoding: getTextureEncodingFromMap(material.lightMap),\n\t\t\t\taoMap: !!material.aoMap,\n\t\t\t\temissiveMap: !!material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap),\n\t\t\t\tbumpMap: !!material.bumpMap,\n\t\t\t\tnormalMap: !!material.normalMap,\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\t\tclearcoatMap: !!material.clearcoatMap,\n\t\t\t\tclearcoatRoughnessMap: !!material.clearcoatRoughnessMap,\n\t\t\t\tclearcoatNormalMap: !!material.clearcoatNormalMap,\n\t\t\t\tdisplacementMap: !!material.displacementMap,\n\t\t\t\troughnessMap: !!material.roughnessMap,\n\t\t\t\tmetalnessMap: !!material.metalnessMap,\n\t\t\t\tspecularMap: !!material.specularMap,\n\t\t\t\talphaMap: !!material.alphaMap,\n\t\t\t\tgradientMap: !!material.gradientMap,\n\t\t\t\tsheen: !!material.sheen,\n\t\t\t\ttransmissionMap: !!material.transmissionMap,\n\t\t\t\tcombine: material.combine,\n\t\t\t\tvertexTangents: material.normalMap && material.vertexTangents,\n\t\t\t\tvertexColors: material.vertexColors,\n\t\t\t\tvertexUvs: !!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatMap || !!material.clearcoatRoughnessMap || !!material.clearcoatNormalMap || !!material.displacementMap || !!material.transmissionMap,\n\t\t\t\tuvsVertexOnly: !(!!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap || !!material.transmissionMap) && !!material.displacementMap,\n\t\t\t\tfog: !!fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp2: fog && fog.isFogExp2,\n\t\t\t\tflatShading: material.flatShading,\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: floatVertexTextures,\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\t\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\t\tnumClipIntersection: clipping.numIntersection,\n\t\t\t\tdithering: material.dithering,\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\t\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\t\t\t\tdepthPacking: material.depthPacking !== undefined ? material.depthPacking : false,\n\t\t\t\tindex0AttributeName: material.index0AttributeName,\n\t\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\t\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has('EXT_frag_depth'),\n\t\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has('WEBGL_draw_buffers'),\n\t\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has('EXT_shader_texture_lod'),\n\t\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\t\t\t};\n\t\t\treturn parameters;\n\t\t}\n\n\t\tfunction getProgramCacheKey(parameters) {\n\t\t\tvar array = [];\n\n\t\t\tif (parameters.shaderID) {\n\t\t\t\tarray.push(parameters.shaderID);\n\t\t\t} else {\n\t\t\t\tarray.push(parameters.fragmentShader);\n\t\t\t\tarray.push(parameters.vertexShader);\n\t\t\t}\n\n\t\t\tif (parameters.defines !== undefined) {\n\t\t\t\tfor (var name in parameters.defines) {\n\t\t\t\t\tarray.push(name);\n\t\t\t\t\tarray.push(parameters.defines[name]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parameters.isRawShaderMaterial === false) {\n\t\t\t\tfor (var i = 0; i < parameterNames.length; i++) {\n\t\t\t\t\tarray.push(parameters[parameterNames[i]]);\n\t\t\t\t}\n\n\t\t\t\tarray.push(renderer.outputEncoding);\n\t\t\t\tarray.push(renderer.gammaFactor);\n\t\t\t}\n\n\t\t\tarray.push(parameters.customProgramCacheKey);\n\t\t\treturn array.join();\n\t\t}\n\n\t\tfunction getUniforms(material) {\n\t\t\tvar shaderID = shaderIDs[material.type];\n\t\t\tvar uniforms;\n\n\t\t\tif (shaderID) {\n\t\t\t\tvar shader = ShaderLib[shaderID];\n\t\t\t\tuniforms = UniformsUtils.clone(shader.uniforms);\n\t\t\t} else {\n\t\t\t\tuniforms = material.uniforms;\n\t\t\t}\n\n\t\t\treturn uniforms;\n\t\t}\n\n\t\tfunction acquireProgram(parameters, cacheKey) {\n\t\t\tvar program; // Check if code has been already compiled\n\n\t\t\tfor (var p = 0, pl = programs.length; p < pl; p++) {\n\t\t\t\tvar preexistingProgram = programs[p];\n\n\t\t\t\tif (preexistingProgram.cacheKey === cacheKey) {\n\t\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t\t++program.usedTimes;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (program === undefined) {\n\t\t\t\tprogram = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);\n\t\t\t\tprograms.push(program);\n\t\t\t}\n\n\t\t\treturn program;\n\t\t}\n\n\t\tfunction releaseProgram(program) {\n\t\t\tif (--program.usedTimes === 0) {\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf(program);\n\t\t\t\tprograms[i] = programs[programs.length - 1];\n\t\t\t\tprograms.pop(); // Free WebGL resources\n\n\t\t\t\tprogram.destroy();\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tgetParameters: getParameters,\n\t\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\t\tgetUniforms: getUniforms,\n\t\t\tacquireProgram: acquireProgram,\n\t\t\treleaseProgram: releaseProgram,\n\t\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\t\tprograms: programs\n\t\t};\n\t}\n\n\tfunction WebGLProperties() {\n\t\tvar properties = new WeakMap();\n\n\t\tfunction get(object) {\n\t\t\tvar map = properties.get(object);\n\n\t\t\tif (map === undefined) {\n\t\t\t\tmap = {};\n\t\t\t\tproperties.set(object, map);\n\t\t\t}\n\n\t\t\treturn map;\n\t\t}\n\n\t\tfunction remove(object) {\n\t\t\tproperties.delete(object);\n\t\t}\n\n\t\tfunction update(object, key, value) {\n\t\t\tproperties.get(object)[key] = value;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tproperties = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction painterSortStable(a, b) {\n\t\tif (a.groupOrder !== b.groupOrder) {\n\t\t\treturn a.groupOrder - b.groupOrder;\n\t\t} else if (a.renderOrder !== b.renderOrder) {\n\t\t\treturn a.renderOrder - b.renderOrder;\n\t\t} else if (a.program !== b.program) {\n\t\t\treturn a.program.id - b.program.id;\n\t\t} else if (a.material.id !== b.material.id) {\n\t\t\treturn a.material.id - b.material.id;\n\t\t} else if (a.z !== b.z) {\n\t\t\treturn a.z - b.z;\n\t\t} else {\n\t\t\treturn a.id - b.id;\n\t\t}\n\t}\n\n\tfunction reversePainterSortStable(a, b) {\n\t\tif (a.groupOrder !== b.groupOrder) {\n\t\t\treturn a.groupOrder - b.groupOrder;\n\t\t} else if (a.renderOrder !== b.renderOrder) {\n\t\t\treturn a.renderOrder - b.renderOrder;\n\t\t} else if (a.z !== b.z) {\n\t\t\treturn b.z - a.z;\n\t\t} else {\n\t\t\treturn a.id - b.id;\n\t\t}\n\t}\n\n\tfunction WebGLRenderList(properties) {\n\t\tvar renderItems = [];\n\t\tvar renderItemsIndex = 0;\n\t\tvar opaque = [];\n\t\tvar transparent = [];\n\t\tvar defaultProgram = {\n\t\t\tid: -1\n\t\t};\n\n\t\tfunction init() {\n\t\t\trenderItemsIndex = 0;\n\t\t\topaque.length = 0;\n\t\t\ttransparent.length = 0;\n\t\t}\n\n\t\tfunction getNextRenderItem(object, geometry, material, groupOrder, z, group) {\n\t\t\tvar renderItem = renderItems[renderItemsIndex];\n\t\t\tvar materialProperties = properties.get(material);\n\n\t\t\tif (renderItem === undefined) {\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\t\t\t\trenderItems[renderItemsIndex] = renderItem;\n\t\t\t} else {\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\t\t\t}\n\n\t\t\trenderItemsIndex++;\n\t\t\treturn renderItem;\n\t\t}\n\n\t\tfunction push(object, geometry, material, groupOrder, z, group) {\n\t\t\tvar renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\t\t\t(material.transparent === true ? transparent : opaque).push(renderItem);\n\t\t}\n\n\t\tfunction unshift(object, geometry, material, groupOrder, z, group) {\n\t\t\tvar renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\t\t\t(material.transparent === true ? transparent : opaque).unshift(renderItem);\n\t\t}\n\n\t\tfunction sort(customOpaqueSort, customTransparentSort) {\n\t\t\tif (opaque.length > 1) opaque.sort(customOpaqueSort || painterSortStable);\n\t\t\tif (transparent.length > 1) transparent.sort(customTransparentSort || reversePainterSortStable);\n\t\t}\n\n\t\tfunction finish() {\n\t\t\t// Clear references from inactive renderItems in the list\n\t\t\tfor (var i = renderItemsIndex, il = renderItems.length; i < il; i++) {\n\t\t\t\tvar renderItem = renderItems[i];\n\t\t\t\tif (renderItem.id === null) break;\n\t\t\t\trenderItem.id = null;\n\t\t\t\trenderItem.object = null;\n\t\t\t\trenderItem.geometry = null;\n\t\t\t\trenderItem.material = null;\n\t\t\t\trenderItem.program = null;\n\t\t\t\trenderItem.group = null;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransparent: transparent,\n\t\t\tinit: init,\n\t\t\tpush: push,\n\t\t\tunshift: unshift,\n\t\t\tfinish: finish,\n\t\t\tsort: sort\n\t\t};\n\t}\n\n\tfunction WebGLRenderLists(properties) {\n\t\tvar lists = new WeakMap();\n\n\t\tfunction get(scene, camera) {\n\t\t\tvar cameras = lists.get(scene);\n\t\t\tvar list;\n\n\t\t\tif (cameras === undefined) {\n\t\t\t\tlist = new WebGLRenderList(properties);\n\t\t\t\tlists.set(scene, new WeakMap());\n\t\t\t\tlists.get(scene).set(camera, list);\n\t\t\t} else {\n\t\t\t\tlist = cameras.get(camera);\n\n\t\t\t\tif (list === undefined) {\n\t\t\t\t\tlist = new WebGLRenderList(properties);\n\t\t\t\t\tcameras.set(camera, list);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tlists = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction UniformsCache() {\n\t\tvar lights = {};\n\t\treturn {\n\t\t\tget: function get(light) {\n\t\t\t\tif (lights[light.id] !== undefined) {\n\t\t\t\t\treturn lights[light.id];\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch (light.type) {\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlights[light.id] = uniforms;\n\t\t\t\treturn uniforms;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction ShadowUniformsCache() {\n\t\tvar lights = {};\n\t\treturn {\n\t\t\tget: function get(light) {\n\t\t\t\tif (lights[light.id] !== undefined) {\n\t\t\t\t\treturn lights[light.id];\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch (light.type) {\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t}\n\n\t\t\t\tlights[light.id] = uniforms;\n\t\t\t\treturn uniforms;\n\t\t\t}\n\t\t};\n\t}\n\n\tvar nextVersion = 0;\n\n\tfunction shadowCastingLightsFirst(lightA, lightB) {\n\t\treturn (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\n\t}\n\n\tfunction WebGLLights(extensions, capabilities) {\n\t\tvar cache = new UniformsCache();\n\t\tvar shadowCache = ShadowUniformsCache();\n\t\tvar state = {\n\t\t\tversion: 0,\n\t\t\thash: {\n\t\t\t\tdirectionalLength: -1,\n\t\t\t\tpointLength: -1,\n\t\t\t\tspotLength: -1,\n\t\t\t\trectAreaLength: -1,\n\t\t\t\themiLength: -1,\n\t\t\t\tnumDirectionalShadows: -1,\n\t\t\t\tnumPointShadows: -1,\n\t\t\t\tnumSpotShadows: -1\n\t\t\t},\n\t\t\tambient: [0, 0, 0],\n\t\t\tprobe: [],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadow: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadow: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\trectAreaLTC1: null,\n\t\t\trectAreaLTC2: null,\n\t\t\tpoint: [],\n\t\t\tpointShadow: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: []\n\t\t};\n\n\t\tfor (var i = 0; i < 9; i++) {\n\t\t\tstate.probe.push(new Vector3());\n\t\t}\n\n\t\tvar vector3 = new Vector3();\n\t\tvar matrix4 = new Matrix4();\n\t\tvar matrix42 = new Matrix4();\n\n\t\tfunction setup(lights) {\n\t\t\tvar r = 0,\n\t\t\t\t\tg = 0,\n\t\t\t\t\tb = 0;\n\n\t\t\tfor (var _i = 0; _i < 9; _i++) {\n\t\t\t\tstate.probe[_i].set(0, 0, 0);\n\t\t\t}\n\n\t\t\tvar directionalLength = 0;\n\t\t\tvar pointLength = 0;\n\t\t\tvar spotLength = 0;\n\t\t\tvar rectAreaLength = 0;\n\t\t\tvar hemiLength = 0;\n\t\t\tvar numDirectionalShadows = 0;\n\t\t\tvar numPointShadows = 0;\n\t\t\tvar numSpotShadows = 0;\n\t\t\tlights.sort(shadowCastingLightsFirst);\n\n\t\t\tfor (var _i2 = 0, l = lights.length; _i2 < l; _i2++) {\n\t\t\t\tvar light = lights[_i2];\n\t\t\t\tvar color = light.color;\n\t\t\t\tvar intensity = light.intensity;\n\t\t\t\tvar distance = light.distance;\n\t\t\t\tvar shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n\t\t\t\tif (light.isAmbientLight) {\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\t\t\t\t} else if (light.isLightProbe) {\n\t\t\t\t\tfor (var j = 0; j < 9; j++) {\n\t\t\t\t\t\tstate.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\n\t\t\t\t\t}\n\t\t\t\t} else if (light.isDirectionalLight) {\n\t\t\t\t\tvar uniforms = cache.get(light);\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity);\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tvar shadow = light.shadow;\n\t\t\t\t\t\tvar shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tstate.directionalShadow[directionalLength] = shadowUniforms;\n\t\t\t\t\t\tstate.directionalShadowMap[directionalLength] = shadowMap;\n\t\t\t\t\t\tstate.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumDirectionalShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directional[directionalLength] = uniforms;\n\t\t\t\t\tdirectionalLength++;\n\t\t\t\t} else if (light.isSpotLight) {\n\t\t\t\t\tvar _uniforms = cache.get(light);\n\n\t\t\t\t\t_uniforms.position.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\t\t\t_uniforms.color.copy(color).multiplyScalar(intensity);\n\n\t\t\t\t\t_uniforms.distance = distance;\n\t\t\t\t\t_uniforms.coneCos = Math.cos(light.angle);\n\t\t\t\t\t_uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n\t\t\t\t\t_uniforms.decay = light.decay;\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tvar _shadow = light.shadow;\n\n\t\t\t\t\t\tvar _shadowUniforms = shadowCache.get(light);\n\n\t\t\t\t\t\t_shadowUniforms.shadowBias = _shadow.bias;\n\t\t\t\t\t\t_shadowUniforms.shadowNormalBias = _shadow.normalBias;\n\t\t\t\t\t\t_shadowUniforms.shadowRadius = _shadow.radius;\n\t\t\t\t\t\t_shadowUniforms.shadowMapSize = _shadow.mapSize;\n\t\t\t\t\t\tstate.spotShadow[spotLength] = _shadowUniforms;\n\t\t\t\t\t\tstate.spotShadowMap[spotLength] = shadowMap;\n\t\t\t\t\t\tstate.spotShadowMatrix[spotLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumSpotShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spot[spotLength] = _uniforms;\n\t\t\t\t\tspotLength++;\n\t\t\t\t} else if (light.isRectAreaLight) {\n\t\t\t\t\tvar _uniforms2 = cache.get(light); // (a) intensity is the total visible light emitted\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\t\t\t\t\t// (b) intensity is the brightness of the light\n\n\n\t\t\t\t\t_uniforms2.color.copy(color).multiplyScalar(intensity);\n\n\t\t\t\t\t_uniforms2.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\n\t\t\t\t\t_uniforms2.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\n\t\t\t\t\tstate.rectArea[rectAreaLength] = _uniforms2;\n\t\t\t\t\trectAreaLength++;\n\t\t\t\t} else if (light.isPointLight) {\n\t\t\t\t\tvar _uniforms3 = cache.get(light);\n\n\t\t\t\t\t_uniforms3.color.copy(light.color).multiplyScalar(light.intensity);\n\n\t\t\t\t\t_uniforms3.distance = light.distance;\n\t\t\t\t\t_uniforms3.decay = light.decay;\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tvar _shadow2 = light.shadow;\n\n\t\t\t\t\t\tvar _shadowUniforms2 = shadowCache.get(light);\n\n\t\t\t\t\t\t_shadowUniforms2.shadowBias = _shadow2.bias;\n\t\t\t\t\t\t_shadowUniforms2.shadowNormalBias = _shadow2.normalBias;\n\t\t\t\t\t\t_shadowUniforms2.shadowRadius = _shadow2.radius;\n\t\t\t\t\t\t_shadowUniforms2.shadowMapSize = _shadow2.mapSize;\n\t\t\t\t\t\t_shadowUniforms2.shadowCameraNear = _shadow2.camera.near;\n\t\t\t\t\t\t_shadowUniforms2.shadowCameraFar = _shadow2.camera.far;\n\t\t\t\t\t\tstate.pointShadow[pointLength] = _shadowUniforms2;\n\t\t\t\t\t\tstate.pointShadowMap[pointLength] = shadowMap;\n\t\t\t\t\t\tstate.pointShadowMatrix[pointLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumPointShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.point[pointLength] = _uniforms3;\n\t\t\t\t\tpointLength++;\n\t\t\t\t} else if (light.isHemisphereLight) {\n\t\t\t\t\tvar _uniforms4 = cache.get(light);\n\n\t\t\t\t\t_uniforms4.skyColor.copy(light.color).multiplyScalar(intensity);\n\n\t\t\t\t\t_uniforms4.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n\n\t\t\t\t\tstate.hemi[hemiLength] = _uniforms4;\n\t\t\t\t\themiLength++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (rectAreaLength > 0) {\n\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\t// WebGL 2\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\t\t\t\t} else {\n\t\t\t\t\t// WebGL 1\n\t\t\t\t\tif (extensions.has('OES_texture_float_linear') === true) {\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\t\t\t\t\t} else if (extensions.has('OES_texture_half_float_linear') === true) {\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.ambient[0] = r;\n\t\t\tstate.ambient[1] = g;\n\t\t\tstate.ambient[2] = b;\n\t\t\tvar hash = state.hash;\n\n\t\t\tif (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows) {\n\t\t\t\tstate.directional.length = directionalLength;\n\t\t\t\tstate.spot.length = spotLength;\n\t\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\t\tstate.point.length = pointLength;\n\t\t\t\tstate.hemi.length = hemiLength;\n\t\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\t\t\t\thash.directionalLength = directionalLength;\n\t\t\t\thash.pointLength = pointLength;\n\t\t\t\thash.spotLength = spotLength;\n\t\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\t\thash.hemiLength = hemiLength;\n\t\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\t\thash.numPointShadows = numPointShadows;\n\t\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\t\tstate.version = nextVersion++;\n\t\t\t}\n\t\t}\n\n\t\tfunction setupView(lights, camera) {\n\t\t\tvar directionalLength = 0;\n\t\t\tvar pointLength = 0;\n\t\t\tvar spotLength = 0;\n\t\t\tvar rectAreaLength = 0;\n\t\t\tvar hemiLength = 0;\n\t\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tfor (var _i3 = 0, l = lights.length; _i3 < l; _i3++) {\n\t\t\t\tvar light = lights[_i3];\n\n\t\t\t\tif (light.isDirectionalLight) {\n\t\t\t\t\tvar uniforms = state.directional[directionalLength];\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\n\t\t\t\t\tuniforms.direction.sub(vector3);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tdirectionalLength++;\n\t\t\t\t} else if (light.isSpotLight) {\n\t\t\t\t\tvar _uniforms5 = state.spot[spotLength];\n\n\t\t\t\t\t_uniforms5.position.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\t\t\t_uniforms5.position.applyMatrix4(viewMatrix);\n\n\t\t\t\t\t_uniforms5.direction.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\n\n\t\t\t\t\t_uniforms5.direction.sub(vector3);\n\n\t\t\t\t\t_uniforms5.direction.transformDirection(viewMatrix);\n\n\t\t\t\t\tspotLength++;\n\t\t\t\t} else if (light.isRectAreaLight) {\n\t\t\t\t\tvar _uniforms6 = state.rectArea[rectAreaLength];\n\n\t\t\t\t\t_uniforms6.position.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\t\t\t_uniforms6.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy(light.matrixWorld);\n\t\t\t\t\tmatrix4.premultiply(viewMatrix);\n\t\t\t\t\tmatrix42.extractRotation(matrix4);\n\n\t\t\t\t\t_uniforms6.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\n\t\t\t\t\t_uniforms6.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\n\t\t\t\t\t_uniforms6.halfWidth.applyMatrix4(matrix42);\n\n\t\t\t\t\t_uniforms6.halfHeight.applyMatrix4(matrix42);\n\n\t\t\t\t\trectAreaLength++;\n\t\t\t\t} else if (light.isPointLight) {\n\t\t\t\t\tvar _uniforms7 = state.point[pointLength];\n\n\t\t\t\t\t_uniforms7.position.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\t\t\t_uniforms7.position.applyMatrix4(viewMatrix);\n\n\t\t\t\t\tpointLength++;\n\t\t\t\t} else if (light.isHemisphereLight) {\n\t\t\t\t\tvar _uniforms8 = state.hemi[hemiLength];\n\n\t\t\t\t\t_uniforms8.direction.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\t\t\t_uniforms8.direction.transformDirection(viewMatrix);\n\n\t\t\t\t\t_uniforms8.direction.normalize();\n\n\t\t\t\t\themiLength++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tsetupView: setupView,\n\t\t\tstate: state\n\t\t};\n\t}\n\n\tfunction WebGLRenderState(extensions, capabilities) {\n\t\tvar lights = new WebGLLights(extensions, capabilities);\n\t\tvar lightsArray = [];\n\t\tvar shadowsArray = [];\n\n\t\tfunction init() {\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\t\t}\n\n\t\tfunction pushLight(light) {\n\t\t\tlightsArray.push(light);\n\t\t}\n\n\t\tfunction pushShadow(shadowLight) {\n\t\t\tshadowsArray.push(shadowLight);\n\t\t}\n\n\t\tfunction setupLights() {\n\t\t\tlights.setup(lightsArray);\n\t\t}\n\n\t\tfunction setupLightsView(camera) {\n\t\t\tlights.setupView(lightsArray, camera);\n\t\t}\n\n\t\tvar state = {\n\t\t\tlightsArray: lightsArray,\n\t\t\tshadowsArray: shadowsArray,\n\t\t\tlights: lights\n\t\t};\n\t\treturn {\n\t\t\tinit: init,\n\t\t\tstate: state,\n\t\t\tsetupLights: setupLights,\n\t\t\tsetupLightsView: setupLightsView,\n\t\t\tpushLight: pushLight,\n\t\t\tpushShadow: pushShadow\n\t\t};\n\t}\n\n\tfunction WebGLRenderStates(extensions, capabilities) {\n\t\tvar renderStates = new WeakMap();\n\n\t\tfunction get(scene, renderCallDepth) {\n\t\t\tif (renderCallDepth === void 0) {\n\t\t\t\trenderCallDepth = 0;\n\t\t\t}\n\n\t\t\tvar renderState;\n\n\t\t\tif (renderStates.has(scene) === false) {\n\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\n\t\t\t\trenderStates.set(scene, []);\n\t\t\t\trenderStates.get(scene).push(renderState);\n\t\t\t} else {\n\t\t\t\tif (renderCallDepth >= renderStates.get(scene).length) {\n\t\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\n\t\t\t\t\trenderStates.get(scene).push(renderState);\n\t\t\t\t} else {\n\t\t\t\t\trenderState = renderStates.get(scene)[renderCallDepth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn renderState;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\trenderStates = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\t/**\n\t * parameters = {\n\t *\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshDepthMaterial(parameters) {\n\t\tMaterial.call(this);\n\t\tthis.type = 'MeshDepthMaterial';\n\t\tthis.depthPacking = BasicDepthPacking;\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.map = null;\n\t\tthis.alphaMap = null;\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.fog = false;\n\t\tthis.setValues(parameters);\n\t}\n\n\tMeshDepthMaterial.prototype = Object.create(Material.prototype);\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\tMeshDepthMaterial.prototype.copy = function (source) {\n\t\tMaterial.prototype.copy.call(this, source);\n\t\tthis.depthPacking = source.depthPacking;\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.map = source.map;\n\t\tthis.alphaMap = source.alphaMap;\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\treturn this;\n\t};\n\n\t/**\n\t * parameters = {\n\t *\n\t *\treferencePosition: <float>,\n\t *\tnearDistance: <float>,\n\t *\tfarDistance: <float>,\n\t *\n\t *\tskinning: <bool>,\n\t *\tmorphTargets: <bool>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>\n\t *\n\t * }\n\t */\n\n\tfunction MeshDistanceMaterial(parameters) {\n\t\tMaterial.call(this);\n\t\tthis.type = 'MeshDistanceMaterial';\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.map = null;\n\t\tthis.alphaMap = null;\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\t\tthis.fog = false;\n\t\tthis.setValues(parameters);\n\t}\n\n\tMeshDistanceMaterial.prototype = Object.create(Material.prototype);\n\tMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n\tMeshDistanceMaterial.prototype.copy = function (source) {\n\t\tMaterial.prototype.copy.call(this, source);\n\t\tthis.referencePosition.copy(source.referencePosition);\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.map = source.map;\n\t\tthis.alphaMap = source.alphaMap;\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\t\treturn this;\n\t};\n\n\tvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\n\tvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\n\tfunction WebGLShadowMap(_renderer, _objects, maxTextureSize) {\n\t\tvar _frustum = new Frustum();\n\n\t\tvar _shadowMapSize = new Vector2(),\n\t\t\t\t_viewportSize = new Vector2(),\n\t\t\t\t_viewport = new Vector4(),\n\t\t\t\t_depthMaterials = [],\n\t\t\t\t_distanceMaterials = [],\n\t\t\t\t_materialCache = {};\n\n\t\tvar shadowSide = {\n\t\t\t0: BackSide,\n\t\t\t1: FrontSide,\n\t\t\t2: DoubleSide\n\t\t};\n\t\tvar shadowMaterialVertical = new ShaderMaterial({\n\t\t\tdefines: {\n\t\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\tshadow_pass: {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\tresolution: {\n\t\t\t\t\tvalue: new Vector2()\n\t\t\t\t},\n\t\t\t\tradius: {\n\t\t\t\t\tvalue: 4.0\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: vsm_vert,\n\t\t\tfragmentShader: vsm_frag\n\t\t});\n\t\tvar shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\t\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\t\tvar fullScreenTri = new BufferGeometry();\n\t\tfullScreenTri.setAttribute('position', new BufferAttribute(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));\n\t\tvar fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);\n\t\tvar scope = this;\n\t\tthis.enabled = false;\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.render = function (lights, scene, camera) {\n\t\t\tif (scope.enabled === false) return;\n\t\t\tif (scope.autoUpdate === false && scope.needsUpdate === false) return;\n\t\t\tif (lights.length === 0) return;\n\n\t\t\tvar currentRenderTarget = _renderer.getRenderTarget();\n\n\t\t\tvar activeCubeFace = _renderer.getActiveCubeFace();\n\n\t\t\tvar activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\t\tvar _state = _renderer.state; // Set GL state for depth map.\n\n\t\t\t_state.setBlending(NoBlending);\n\n\t\t\t_state.buffers.color.setClear(1, 1, 1, 1);\n\n\t\t\t_state.buffers.depth.setTest(true);\n\n\t\t\t_state.setScissorTest(false); // render depth map\n\n\n\t\t\tfor (var i = 0, il = lights.length; i < il; i++) {\n\t\t\t\tvar light = lights[i];\n\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\tif (shadow === undefined) {\n\t\t\t\t\tconsole.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;\n\n\t\t\t\t_shadowMapSize.copy(shadow.mapSize);\n\n\t\t\t\tvar shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t\t_shadowMapSize.multiply(shadowFrameExtents);\n\n\t\t\t\t_viewportSize.copy(shadow.mapSize);\n\n\t\t\t\tif (_shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize) {\n\t\t\t\t\tif (_shadowMapSize.x > maxTextureSize) {\n\t\t\t\t\t\t_viewportSize.x = Math.floor(maxTextureSize / shadowFrameExtents.x);\n\t\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_shadowMapSize.y > maxTextureSize) {\n\t\t\t\t\t\t_viewportSize.y = Math.floor(maxTextureSize / shadowFrameExtents.y);\n\t\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (shadow.map === null && !shadow.isPointLightShadow && this.type === VSMShadowMap) {\n\t\t\t\t\tvar pars = {\n\t\t\t\t\t\tminFilter: LinearFilter,\n\t\t\t\t\t\tmagFilter: LinearFilter,\n\t\t\t\t\t\tformat: RGBAFormat\n\t\t\t\t\t};\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\t\t\t\t\tshadow.mapPass = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\t\t\t\t}\n\n\t\t\t\tif (shadow.map === null) {\n\t\t\t\t\tvar _pars = {\n\t\t\t\t\t\tminFilter: NearestFilter,\n\t\t\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\t\t\tformat: RGBAFormat\n\t\t\t\t\t};\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, _pars);\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget(shadow.map);\n\n\t\t\t\t_renderer.clear();\n\n\t\t\t\tvar viewportCount = shadow.getViewportCount();\n\n\t\t\t\tfor (var vp = 0; vp < viewportCount; vp++) {\n\t\t\t\t\tvar viewport = shadow.getViewport(vp);\n\n\t\t\t\t\t_viewport.set(_viewportSize.x * viewport.x, _viewportSize.y * viewport.y, _viewportSize.x * viewport.z, _viewportSize.y * viewport.w);\n\n\t\t\t\t\t_state.viewport(_viewport);\n\n\t\t\t\t\tshadow.updateMatrices(light, vp);\n\t\t\t\t\t_frustum = shadow.getFrustum();\n\t\t\t\t\trenderObject(scene, camera, shadow.camera, light, this.type);\n\t\t\t\t} // do blur pass for VSM\n\n\n\t\t\t\tif (!shadow.isPointLightShadow && this.type === VSMShadowMap) {\n\t\t\t\t\tVSMPass(shadow, camera);\n\t\t\t\t}\n\n\t\t\t\tshadow.needsUpdate = false;\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t\t_renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\n\t\t};\n\n\t\tfunction VSMPass(shadow, camera) {\n\t\t\tvar geometry = _objects.update(fullScreenMesh); // vertical pass\n\n\n\t\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\n\t\t\t_renderer.setRenderTarget(shadow.mapPass);\n\n\t\t\t_renderer.clear();\n\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null); // horizontal pass\n\n\n\t\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\n\t\t\t_renderer.setRenderTarget(shadow.map);\n\n\t\t\t_renderer.clear();\n\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null);\n\t\t}\n\n\t\tfunction getDepthMaterialVariant(useMorphing, useSkinning, useInstancing) {\n\t\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\t\t\tvar material = _depthMaterials[index];\n\n\t\t\tif (material === undefined) {\n\t\t\t\tmaterial = new MeshDepthMaterial({\n\t\t\t\t\tdepthPacking: RGBADepthPacking,\n\t\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\t\tskinning: useSkinning\n\t\t\t\t});\n\t\t\t\t_depthMaterials[index] = material;\n\t\t\t}\n\n\t\t\treturn material;\n\t\t}\n\n\t\tfunction getDistanceMaterialVariant(useMorphing, useSkinning, useInstancing) {\n\t\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\t\t\tvar material = _distanceMaterials[index];\n\n\t\t\tif (material === undefined) {\n\t\t\t\tmaterial = new MeshDistanceMaterial({\n\t\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\t\tskinning: useSkinning\n\t\t\t\t});\n\t\t\t\t_distanceMaterials[index] = material;\n\t\t\t}\n\n\t\t\treturn material;\n\t\t}\n\n\t\tfunction getDepthMaterial(object, geometry, material, light, shadowCameraNear, shadowCameraFar, type) {\n\t\t\tvar result = null;\n\t\t\tvar getMaterialVariant = getDepthMaterialVariant;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif (light.isPointLight === true) {\n\t\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\t\t\t}\n\n\t\t\tif (customMaterial === undefined) {\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif (material.morphTargets === true) {\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = false;\n\n\t\t\t\tif (object.isSkinnedMesh === true) {\n\t\t\t\t\tif (material.skinning === true) {\n\t\t\t\t\t\tuseSkinning = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar useInstancing = object.isInstancedMesh === true;\n\t\t\t\tresult = getMaterialVariant(useMorphing, useSkinning, useInstancing);\n\t\t\t} else {\n\t\t\t\tresult = customMaterial;\n\t\t\t}\n\n\t\t\tif (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0) {\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\t\t\t\tvar keyA = result.uuid,\n\t\t\t\t\t\tkeyB = material.uuid;\n\t\t\t\tvar materialsForVariant = _materialCache[keyA];\n\n\t\t\t\tif (materialsForVariant === undefined) {\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[keyA] = materialsForVariant;\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[keyB];\n\n\t\t\t\tif (cachedMaterial === undefined) {\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[keyB] = cachedMaterial;\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tif (type === VSMShadowMap) {\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : material.side;\n\t\t\t} else {\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];\n\t\t\t}\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\n\t\t\t\tresult.referencePosition.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\tresult.farDistance = shadowCameraFar;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction renderObject(object, camera, shadowCamera, light, type) {\n\t\t\tif (object.visible === false) return;\n\t\t\tvar visible = object.layers.test(camera.layers);\n\n\t\t\tif (visible && (object.isMesh || object.isLine || object.isPoints)) {\n\t\t\t\tif ((object.castShadow || object.receiveShadow && type === VSMShadowMap) && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n\t\t\t\t\tvar geometry = _objects.update(object);\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor (var k = 0, kl = groups.length; k < kl; k++) {\n\t\t\t\t\t\t\tvar group = groups[k];\n\t\t\t\t\t\t\tvar groupMaterial = material[group.materialIndex];\n\n\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial(object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type);\n\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (material.visible) {\n\t\t\t\t\t\tvar _depthMaterial = getDepthMaterial(object, geometry, material, light, shadowCamera.near, shadowCamera.far, type);\n\n\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, _depthMaterial, object, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\trenderObject(children[i], camera, shadowCamera, light, type);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction WebGLState(gl, extensions, capabilities) {\n\t\tvar _equationToGL, _factorToGL;\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction ColorBuffer() {\n\t\t\tvar locked = false;\n\t\t\tvar color = new Vector4();\n\t\t\tvar currentColorMask = null;\n\t\t\tvar currentColorClear = new Vector4(0, 0, 0, 0);\n\t\t\treturn {\n\t\t\t\tsetMask: function setMask(colorMask) {\n\t\t\t\t\tif (currentColorMask !== colorMask && !locked) {\n\t\t\t\t\t\tgl.colorMask(colorMask, colorMask, colorMask, colorMask);\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function setLocked(lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function setClear(r, g, b, a, premultipliedAlpha) {\n\t\t\t\t\tif (premultipliedAlpha === true) {\n\t\t\t\t\t\tr *= a;\n\t\t\t\t\t\tg *= a;\n\t\t\t\t\t\tb *= a;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set(r, g, b, a);\n\n\t\t\t\t\tif (currentColorClear.equals(color) === false) {\n\t\t\t\t\t\tgl.clearColor(r, g, b, a);\n\t\t\t\t\t\tcurrentColorClear.copy(color);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function reset() {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set(-1, 0, 0, 0); // set to invalid state\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\t\t\tvar locked = false;\n\t\t\tvar currentDepthMask = null;\n\t\t\tvar currentDepthFunc = null;\n\t\t\tvar currentDepthClear = null;\n\t\t\treturn {\n\t\t\t\tsetTest: function setTest(depthTest) {\n\t\t\t\t\tif (depthTest) {\n\t\t\t\t\t\tenable(2929);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisable(2929);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetMask: function setMask(depthMask) {\n\t\t\t\t\tif (currentDepthMask !== depthMask && !locked) {\n\t\t\t\t\t\tgl.depthMask(depthMask);\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetFunc: function setFunc(depthFunc) {\n\t\t\t\t\tif (currentDepthFunc !== depthFunc) {\n\t\t\t\t\t\tif (depthFunc) {\n\t\t\t\t\t\t\tswitch (depthFunc) {\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(512);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(519);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(513);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(515);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(514);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(518);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(516);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(517);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(515);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgl.depthFunc(515);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function setLocked(lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function setClear(depth) {\n\t\t\t\t\tif (currentDepthClear !== depth) {\n\t\t\t\t\t\tgl.clearDepth(depth);\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function reset() {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\t\t\tvar locked = false;\n\t\t\tvar currentStencilMask = null;\n\t\t\tvar currentStencilFunc = null;\n\t\t\tvar currentStencilRef = null;\n\t\t\tvar currentStencilFuncMask = null;\n\t\t\tvar currentStencilFail = null;\n\t\t\tvar currentStencilZFail = null;\n\t\t\tvar currentStencilZPass = null;\n\t\t\tvar currentStencilClear = null;\n\t\t\treturn {\n\t\t\t\tsetTest: function setTest(stencilTest) {\n\t\t\t\t\tif (!locked) {\n\t\t\t\t\t\tif (stencilTest) {\n\t\t\t\t\t\t\tenable(2960);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdisable(2960);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetMask: function setMask(stencilMask) {\n\t\t\t\t\tif (currentStencilMask !== stencilMask && !locked) {\n\t\t\t\t\t\tgl.stencilMask(stencilMask);\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetFunc: function setFunc(stencilFunc, stencilRef, stencilMask) {\n\t\t\t\t\tif (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n\t\t\t\t\t\tgl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetOp: function setOp(stencilFail, stencilZFail, stencilZPass) {\n\t\t\t\t\tif (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n\t\t\t\t\t\tgl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function setLocked(lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function setClear(stencil) {\n\t\t\t\t\tif (currentStencilClear !== stencil) {\n\t\t\t\t\t\tgl.clearStencil(stencil);\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function reset() {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\t\t\t\t}\n\t\t\t};\n\t\t} //\n\n\n\t\tvar colorBuffer = new ColorBuffer();\n\t\tvar depthBuffer = new DepthBuffer();\n\t\tvar stencilBuffer = new StencilBuffer();\n\t\tvar enabledCapabilities = {};\n\t\tvar currentProgram = null;\n\t\tvar currentBlendingEnabled = null;\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\t\tvar currentLineWidth = null;\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\t\tvar maxTextures = gl.getParameter(35661);\n\t\tvar lineWidthAvailable = false;\n\t\tvar version = 0;\n\t\tvar glVersion = gl.getParameter(7938);\n\n\t\tif (glVersion.indexOf('WebGL') !== -1) {\n\t\t\tversion = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\n\t\t\tlineWidthAvailable = version >= 1.0;\n\t\t} else if (glVersion.indexOf('OpenGL ES') !== -1) {\n\t\t\tversion = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\n\t\t\tlineWidthAvailable = version >= 2.0;\n\t\t}\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\t\tvar currentScissor = new Vector4();\n\t\tvar currentViewport = new Vector4();\n\n\t\tfunction createTexture(type, target, count) {\n\t\t\tvar data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n\t\t\tvar texture = gl.createTexture();\n\t\t\tgl.bindTexture(type, texture);\n\t\t\tgl.texParameteri(type, 10241, 9728);\n\t\t\tgl.texParameteri(type, 10240, 9728);\n\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tgl.texImage2D(target + i, 0, 6408, 1, 1, 0, 6408, 5121, data);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[3553] = createTexture(3553, 3553, 1);\n\t\temptyTextures[34067] = createTexture(34067, 34069, 6); // init\n\n\t\tcolorBuffer.setClear(0, 0, 0, 1);\n\t\tdepthBuffer.setClear(1);\n\t\tstencilBuffer.setClear(0);\n\t\tenable(2929);\n\t\tdepthBuffer.setFunc(LessEqualDepth);\n\t\tsetFlipSided(false);\n\t\tsetCullFace(CullFaceBack);\n\t\tenable(2884);\n\t\tsetBlending(NoBlending); //\n\n\t\tfunction enable(id) {\n\t\t\tif (enabledCapabilities[id] !== true) {\n\t\t\t\tgl.enable(id);\n\t\t\t\tenabledCapabilities[id] = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction disable(id) {\n\t\t\tif (enabledCapabilities[id] !== false) {\n\t\t\t\tgl.disable(id);\n\t\t\t\tenabledCapabilities[id] = false;\n\t\t\t}\n\t\t}\n\n\t\tfunction useProgram(program) {\n\t\t\tif (currentProgram !== program) {\n\t\t\t\tgl.useProgram(program);\n\t\t\t\tcurrentProgram = program;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tvar equationToGL = (_equationToGL = {}, _equationToGL[AddEquation] = 32774, _equationToGL[SubtractEquation] = 32778, _equationToGL[ReverseSubtractEquation] = 32779, _equationToGL);\n\n\t\tif (isWebGL2) {\n\t\t\tequationToGL[MinEquation] = 32775;\n\t\t\tequationToGL[MaxEquation] = 32776;\n\t\t} else {\n\t\t\tvar extension = extensions.get('EXT_blend_minmax');\n\n\t\t\tif (extension !== null) {\n\t\t\t\tequationToGL[MinEquation] = extension.MIN_EXT;\n\t\t\t\tequationToGL[MaxEquation] = extension.MAX_EXT;\n\t\t\t}\n\t\t}\n\n\t\tvar factorToGL = (_factorToGL = {}, _factorToGL[ZeroFactor] = 0, _factorToGL[OneFactor] = 1, _factorToGL[SrcColorFactor] = 768, _factorToGL[SrcAlphaFactor] = 770, _factorToGL[SrcAlphaSaturateFactor] = 776, _factorToGL[DstColorFactor] = 774, _factorToGL[DstAlphaFactor] = 772, _factorToGL[OneMinusSrcColorFactor] = 769, _factorToGL[OneMinusSrcAlphaFactor] = 771, _factorToGL[OneMinusDstColorFactor] = 775, _factorToGL[OneMinusDstAlphaFactor] = 773, _factorToGL);\n\n\t\tfunction setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n\t\t\tif (blending === NoBlending) {\n\t\t\t\tif (currentBlendingEnabled) {\n\t\t\t\t\tdisable(3042);\n\t\t\t\t\tcurrentBlendingEnabled = false;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!currentBlendingEnabled) {\n\t\t\t\tenable(3042);\n\t\t\t\tcurrentBlendingEnabled = true;\n\t\t\t}\n\n\t\t\tif (blending !== CustomBlending) {\n\t\t\t\tif (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n\t\t\t\t\tif (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\n\t\t\t\t\t\tgl.blendEquation(32774);\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (premultipliedAlpha) {\n\t\t\t\t\t\tswitch (blending) {\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(1, 771, 1, 771);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(1, 1);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(0, 0, 769, 771);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(0, 768, 0, 770);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswitch (blending) {\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(770, 771, 1, 771);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(770, 1);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(0, 769);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(0, 768);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\t\tcurrentBlendDst = null;\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\t\tcurrentBlending = blending;\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} // custom blending\n\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n\t\t\t\tgl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\t\t\t}\n\n\t\t\tif (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n\t\t\t\tgl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = null;\n\t\t}\n\n\t\tfunction setMaterial(material, frontFaceCW) {\n\t\t\tmaterial.side === DoubleSide ? disable(2884) : enable(2884);\n\t\t\tvar flipSided = material.side === BackSide;\n\t\t\tif (frontFaceCW) flipSided = !flipSided;\n\t\t\tsetFlipSided(flipSided);\n\t\t\tmaterial.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n\t\t\tdepthBuffer.setFunc(material.depthFunc);\n\t\t\tdepthBuffer.setTest(material.depthTest);\n\t\t\tdepthBuffer.setMask(material.depthWrite);\n\t\t\tcolorBuffer.setMask(material.colorWrite);\n\t\t\tvar stencilWrite = material.stencilWrite;\n\t\t\tstencilBuffer.setTest(stencilWrite);\n\n\t\t\tif (stencilWrite) {\n\t\t\t\tstencilBuffer.setMask(material.stencilWriteMask);\n\t\t\t\tstencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\n\t\t\t\tstencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\n\t\t\t}\n\n\t\t\tsetPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n\t\t} //\n\n\n\t\tfunction setFlipSided(flipSided) {\n\t\t\tif (currentFlipSided !== flipSided) {\n\t\t\t\tif (flipSided) {\n\t\t\t\t\tgl.frontFace(2304);\n\t\t\t\t} else {\n\t\t\t\t\tgl.frontFace(2305);\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\t\t\t}\n\t\t}\n\n\t\tfunction setCullFace(cullFace) {\n\t\t\tif (cullFace !== CullFaceNone) {\n\t\t\t\tenable(2884);\n\n\t\t\t\tif (cullFace !== currentCullFace) {\n\t\t\t\t\tif (cullFace === CullFaceBack) {\n\t\t\t\t\t\tgl.cullFace(1029);\n\t\t\t\t\t} else if (cullFace === CullFaceFront) {\n\t\t\t\t\t\tgl.cullFace(1028);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgl.cullFace(1032);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdisable(2884);\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\t\t}\n\n\t\tfunction setLineWidth(width) {\n\t\t\tif (width !== currentLineWidth) {\n\t\t\t\tif (lineWidthAvailable) gl.lineWidth(width);\n\t\t\t\tcurrentLineWidth = width;\n\t\t\t}\n\t\t}\n\n\t\tfunction setPolygonOffset(polygonOffset, factor, units) {\n\t\t\tif (polygonOffset) {\n\t\t\t\tenable(32823);\n\n\t\t\t\tif (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n\t\t\t\t\tgl.polygonOffset(factor, units);\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdisable(32823);\n\t\t\t}\n\t\t}\n\n\t\tfunction setScissorTest(scissorTest) {\n\t\t\tif (scissorTest) {\n\t\t\t\tenable(3089);\n\t\t\t} else {\n\t\t\t\tdisable(3089);\n\t\t\t}\n\t\t} // texture\n\n\n\t\tfunction activeTexture(webglSlot) {\n\t\t\tif (webglSlot === undefined) webglSlot = 33984 + maxTextures - 1;\n\n\t\t\tif (currentTextureSlot !== webglSlot) {\n\t\t\t\tgl.activeTexture(webglSlot);\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindTexture(webglType, webglTexture) {\n\t\t\tif (currentTextureSlot === null) {\n\t\t\t\tactiveTexture();\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[currentTextureSlot];\n\n\t\t\tif (boundTexture === undefined) {\n\t\t\t\tboundTexture = {\n\t\t\t\t\ttype: undefined,\n\t\t\t\t\ttexture: undefined\n\t\t\t\t};\n\t\t\t\tcurrentBoundTextures[currentTextureSlot] = boundTexture;\n\t\t\t}\n\n\t\t\tif (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n\t\t\t\tgl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\t\t\t}\n\t\t}\n\n\t\tfunction unbindTexture() {\n\t\t\tvar boundTexture = currentBoundTextures[currentTextureSlot];\n\n\t\t\tif (boundTexture !== undefined && boundTexture.type !== undefined) {\n\t\t\t\tgl.bindTexture(boundTexture.type, null);\n\t\t\t\tboundTexture.type = undefined;\n\t\t\t\tboundTexture.texture = undefined;\n\t\t\t}\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.compressedTexImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.texImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texImage3D() {\n\t\t\ttry {\n\t\t\t\tgl.texImage3D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction scissor(scissor) {\n\t\t\tif (currentScissor.equals(scissor) === false) {\n\t\t\t\tgl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n\t\t\t\tcurrentScissor.copy(scissor);\n\t\t\t}\n\t\t}\n\n\t\tfunction viewport(viewport) {\n\t\t\tif (currentViewport.equals(viewport) === false) {\n\t\t\t\tgl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n\t\t\t\tcurrentViewport.copy(viewport);\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction reset() {\n\t\t\tenabledCapabilities = {};\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\t\t\tcurrentProgram = null;\n\t\t\tcurrentBlendingEnabled = null;\n\t\t\tcurrentBlending = null;\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\t\t\tcurrentPremultipledAlpha = false;\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\t\t\tcurrentLineWidth = null;\n\t\t\tcurrentPolygonOffsetFactor = null;\n\t\t\tcurrentPolygonOffsetUnits = null;\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\t\t}\n\n\t\treturn {\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tuseProgram: useProgram,\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\t\t\tsetScissorTest: setScissorTest,\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tunbindTexture: unbindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\t\t\ttexImage3D: texImage3D,\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\t\t\treset: reset\n\t\t};\n\t}\n\n\tfunction WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\n\t\tvar _wrappingToGL, _filterToGL;\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\t\tvar maxTextures = capabilities.maxTextures;\n\t\tvar maxCubemapSize = capabilities.maxCubemapSize;\n\t\tvar maxTextureSize = capabilities.maxTextureSize;\n\t\tvar maxSamples = capabilities.maxSamples;\n\n\t\tvar _videoTextures = new WeakMap();\n\n\t\tvar _canvas; // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\n\t\tvar useOffscreenCanvas = false;\n\n\t\ttry {\n\t\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined' && new OffscreenCanvas(1, 1).getContext('2d') !== null;\n\t\t} catch (err) {// Ignore any errors\n\t\t}\n\n\t\tfunction createCanvas(width, height) {\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\t\t\treturn useOffscreenCanvas ? new OffscreenCanvas(width, height) : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\t\t}\n\n\t\tfunction resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {\n\t\t\tvar scale = 1; // handle case if texture exceeds max size\n\n\t\t\tif (image.width > maxSize || image.height > maxSize) {\n\t\t\t\tscale = maxSize / Math.max(image.width, image.height);\n\t\t\t} // only perform resize if necessary\n\n\n\t\t\tif (scale < 1 || needsPowerOfTwo === true) {\n\t\t\t\t// only perform resize for certain image types\n\t\t\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n\t\t\t\t\tvar floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;\n\t\t\t\t\tvar width = floor(scale * image.width);\n\t\t\t\t\tvar height = floor(scale * image.height);\n\t\t\t\t\tif (_canvas === undefined) _canvas = createCanvas(width, height); // cube textures can't reuse the same canvas\n\n\t\t\t\t\tvar canvas = needsNewCanvas ? createCanvas(width, height) : _canvas;\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\t\t\t\t\tvar context = canvas.getContext('2d');\n\t\t\t\t\tcontext.drawImage(image, 0, 0, width, height);\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').');\n\t\t\t\t\treturn canvas;\n\t\t\t\t} else {\n\t\t\t\t\tif ('data' in image) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn image;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn image;\n\t\t}\n\n\t\tfunction isPowerOfTwo(image) {\n\t\t\treturn MathUtils.isPowerOfTwo(image.width) && MathUtils.isPowerOfTwo(image.height);\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo(texture) {\n\t\t\tif (isWebGL2) return false;\n\t\t\treturn texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps(texture, supportsMips) {\n\t\t\treturn texture.generateMipmaps && supportsMips && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\t\t}\n\n\t\tfunction generateMipmap(target, texture, width, height) {\n\t\t\t_gl.generateMipmap(target);\n\n\t\t\tvar textureProperties = properties.get(texture); // Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\n\t\t\ttextureProperties.__maxMipLevel = Math.log(Math.max(width, height)) * Math.LOG2E;\n\t\t}\n\n\t\tfunction getInternalFormat(internalFormatName, glFormat, glType) {\n\t\t\tif (isWebGL2 === false) return glFormat;\n\n\t\t\tif (internalFormatName !== null) {\n\t\t\t\tif (_gl[internalFormatName] !== undefined) return _gl[internalFormatName];\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'');\n\t\t\t}\n\n\t\t\tvar internalFormat = glFormat;\n\n\t\t\tif (glFormat === 6403) {\n\t\t\t\tif (glType === 5126) internalFormat = 33326;\n\t\t\t\tif (glType === 5131) internalFormat = 33325;\n\t\t\t\tif (glType === 5121) internalFormat = 33321;\n\t\t\t}\n\n\t\t\tif (glFormat === 6407) {\n\t\t\t\tif (glType === 5126) internalFormat = 34837;\n\t\t\t\tif (glType === 5131) internalFormat = 34843;\n\t\t\t\tif (glType === 5121) internalFormat = 32849;\n\t\t\t}\n\n\t\t\tif (glFormat === 6408) {\n\t\t\t\tif (glType === 5126) internalFormat = 34836;\n\t\t\t\tif (glType === 5131) internalFormat = 34842;\n\t\t\t\tif (glType === 5121) internalFormat = 32856;\n\t\t\t}\n\n\t\t\tif (internalFormat === 33325 || internalFormat === 33326 || internalFormat === 34842 || internalFormat === 34836) {\n\t\t\t\textensions.get('EXT_color_buffer_float');\n\t\t\t}\n\n\t\t\treturn internalFormat;\n\t\t} // Fallback filters for non-power-of-2 textures\n\n\n\t\tfunction filterFallback(f) {\n\t\t\tif (f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter) {\n\t\t\t\treturn 9728;\n\t\t\t}\n\n\t\t\treturn 9729;\n\t\t} //\n\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tvar texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tdeallocateTexture(texture);\n\n\t\t\tif (texture.isVideoTexture) {\n\t\t\t\t_videoTextures.delete(texture);\n\t\t\t}\n\n\t\t\tinfo.memory.textures--;\n\t\t}\n\n\t\tfunction onRenderTargetDispose(event) {\n\t\t\tvar renderTarget = event.target;\n\t\t\trenderTarget.removeEventListener('dispose', onRenderTargetDispose);\n\t\t\tdeallocateRenderTarget(renderTarget);\n\t\t\tinfo.memory.textures--;\n\t\t} //\n\n\n\t\tfunction deallocateTexture(texture) {\n\t\t\tvar textureProperties = properties.get(texture);\n\t\t\tif (textureProperties.__webglInit === undefined) return;\n\n\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\n\n\t\t\tproperties.remove(texture);\n\t\t}\n\n\t\tfunction deallocateRenderTarget(renderTarget) {\n\t\t\tvar renderTargetProperties = properties.get(renderTarget);\n\t\t\tvar textureProperties = properties.get(renderTarget.texture);\n\t\t\tif (!renderTarget) return;\n\n\t\t\tif (textureProperties.__webglTexture !== undefined) {\n\t\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\n\t\t\t}\n\n\t\t\tif (renderTarget.depthTexture) {\n\t\t\t\trenderTarget.depthTexture.dispose();\n\t\t\t}\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\n\t\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n\t\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n\t\t\t\tif (renderTargetProperties.__webglMultisampledFramebuffer) _gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\tif (renderTargetProperties.__webglColorRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);\n\t\t\t\tif (renderTargetProperties.__webglDepthRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);\n\t\t\t}\n\n\t\t\tproperties.remove(renderTarget.texture);\n\t\t\tproperties.remove(renderTarget);\n\t\t} //\n\n\n\t\tvar textureUnits = 0;\n\n\t\tfunction resetTextureUnits() {\n\t\t\ttextureUnits = 0;\n\t\t}\n\n\t\tfunction allocateTextureUnit() {\n\t\t\tvar textureUnit = textureUnits;\n\n\t\t\tif (textureUnit >= maxTextures) {\n\t\t\t\tconsole.warn('THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures);\n\t\t\t}\n\n\t\t\ttextureUnits += 1;\n\t\t\treturn textureUnit;\n\t\t} //\n\n\n\t\tfunction setTexture2D(texture, slot) {\n\t\t\tvar textureProperties = properties.get(texture);\n\t\t\tif (texture.isVideoTexture) updateVideoTexture(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif (image === undefined) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');\n\t\t\t\t} else if (image.complete === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\n\t\t\t\t} else {\n\t\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.activeTexture(33984 + slot);\n\t\t\tstate.bindTexture(3553, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTexture2DArray(texture, slot) {\n\t\t\tvar textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(33984 + slot);\n\t\t\tstate.bindTexture(35866, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTexture3D(texture, slot) {\n\t\t\tvar textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(33984 + slot);\n\t\t\tstate.bindTexture(32879, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTextureCube(texture, slot) {\n\t\t\tvar textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadCubeTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(33984 + slot);\n\t\t\tstate.bindTexture(34067, textureProperties.__webglTexture);\n\t\t}\n\n\t\tvar wrappingToGL = (_wrappingToGL = {}, _wrappingToGL[RepeatWrapping] = 10497, _wrappingToGL[ClampToEdgeWrapping] = 33071, _wrappingToGL[MirroredRepeatWrapping] = 33648, _wrappingToGL);\n\t\tvar filterToGL = (_filterToGL = {}, _filterToGL[NearestFilter] = 9728, _filterToGL[NearestMipmapNearestFilter] = 9984, _filterToGL[NearestMipmapLinearFilter] = 9986, _filterToGL[LinearFilter] = 9729, _filterToGL[LinearMipmapNearestFilter] = 9985, _filterToGL[LinearMipmapLinearFilter] = 9987, _filterToGL);\n\n\t\tfunction setTextureParameters(textureType, texture, supportsMips) {\n\t\t\tif (supportsMips) {\n\t\t\t\t_gl.texParameteri(textureType, 10242, wrappingToGL[texture.wrapS]);\n\n\t\t\t\t_gl.texParameteri(textureType, 10243, wrappingToGL[texture.wrapT]);\n\n\t\t\t\tif (textureType === 32879 || textureType === 35866) {\n\t\t\t\t\t_gl.texParameteri(textureType, 32882, wrappingToGL[texture.wrapR]);\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri(textureType, 10240, filterToGL[texture.magFilter]);\n\n\t\t\t\t_gl.texParameteri(textureType, 10241, filterToGL[texture.minFilter]);\n\t\t\t} else {\n\t\t\t\t_gl.texParameteri(textureType, 10242, 33071);\n\n\t\t\t\t_gl.texParameteri(textureType, 10243, 33071);\n\n\t\t\t\tif (textureType === 32879 || textureType === 35866) {\n\t\t\t\t\t_gl.texParameteri(textureType, 32882, 33071);\n\t\t\t\t}\n\n\t\t\t\tif (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri(textureType, 10240, filterFallback(texture.magFilter));\n\n\t\t\t\t_gl.texParameteri(textureType, 10241, filterFallback(texture.minFilter));\n\n\t\t\t\tif (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar extension = extensions.get('EXT_texture_filter_anisotropic');\n\n\t\t\tif (extension) {\n\t\t\t\tif (texture.type === FloatType && extensions.get('OES_texture_float_linear') === null) return;\n\t\t\t\tif (texture.type === HalfFloatType && (isWebGL2 || extensions.get('OES_texture_half_float_linear')) === null) return;\n\n\t\t\t\tif (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n\t\t\t\t\t_gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n\t\t\t\t\tproperties.get(texture).__currentAnisotropy = texture.anisotropy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction initTexture(textureProperties, texture) {\n\t\t\tif (textureProperties.__webglInit === undefined) {\n\t\t\t\ttextureProperties.__webglInit = true;\n\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\t\tinfo.memory.textures++;\n\t\t\t}\n\t\t}\n\n\t\tfunction uploadTexture(textureProperties, texture, slot) {\n\t\t\tvar textureType = 3553;\n\t\t\tif (texture.isDataTexture2DArray) textureType = 35866;\n\t\t\tif (texture.isDataTexture3D) textureType = 32879;\n\t\t\tinitTexture(textureProperties, texture);\n\t\t\tstate.activeTexture(33984 + slot);\n\t\t\tstate.bindTexture(textureType, textureProperties.__webglTexture);\n\n\t\t\t_gl.pixelStorei(37440, texture.flipY);\n\n\t\t\t_gl.pixelStorei(37441, texture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(3317, texture.unpackAlignment);\n\n\t\t\tvar needsPowerOfTwo = textureNeedsPowerOfTwo(texture) && isPowerOfTwo(texture.image) === false;\n\t\t\tvar image = resizeImage(texture.image, needsPowerOfTwo, false, maxTextureSize);\n\t\t\tvar supportsMips = isPowerOfTwo(image) || isWebGL2,\n\t\t\t\t\tglFormat = utils.convert(texture.format);\n\t\t\tvar glType = utils.convert(texture.type),\n\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\t\t\tsetTextureParameters(textureType, texture, supportsMips);\n\t\t\tvar mipmap;\n\t\t\tvar mipmaps = texture.mipmaps;\n\n\t\t\tif (texture.isDepthTexture) {\n\t\t\t\t// populate depth texture with dummy data\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tif (texture.type === FloatType) {\n\t\t\t\t\t\tglInternalFormat = 36012;\n\t\t\t\t\t} else if (texture.type === UnsignedIntType) {\n\t\t\t\t\t\tglInternalFormat = 33190;\n\t\t\t\t\t} else if (texture.type === UnsignedInt248Type) {\n\t\t\t\t\t\tglInternalFormat = 35056;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (texture.type === FloatType) {\n\t\t\t\t\t\tconsole.error('WebGLRenderer: Floating point depth texture requires WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t} // validation checks for WebGL 1\n\n\n\t\t\t\tif (texture.format === DepthFormat && glInternalFormat === 6402) {\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert(texture.type);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (texture.format === DepthStencilFormat && glInternalFormat === 6402) {\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n\t\t\t\t\tif (texture.type !== UnsignedInt248Type) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert(texture.type);\n\t\t\t\t\t}\n\t\t\t\t} //\n\n\n\t\t\t\tstate.texImage2D(3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\n\t\t\t} else if (texture.isDataTexture) {\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\n\t\t\t\t\tfor (var i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\t\tmipmap = mipmaps[i];\n\t\t\t\t\t\tstate.texImage2D(3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage2D(3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t\t}\n\t\t\t} else if (texture.isCompressedTexture) {\n\t\t\t\tfor (var _i = 0, _il = mipmaps.length; _i < _il; _i++) {\n\t\t\t\t\tmipmap = mipmaps[_i];\n\n\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n\t\t\t\t\t\tif (glFormat !== null) {\n\t\t\t\t\t\t\tstate.compressedTexImage2D(3553, _i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.texImage2D(3553, _i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t} else if (texture.isDataTexture2DArray) {\n\t\t\t\tstate.texImage3D(35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t} else if (texture.isDataTexture3D) {\n\t\t\t\tstate.texImage3D(32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t} else {\n\t\t\t\t// regular Texture (image, video, canvas)\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\n\t\t\t\t\tfor (var _i2 = 0, _il2 = mipmaps.length; _i2 < _il2; _i2++) {\n\t\t\t\t\t\tmipmap = mipmaps[_i2];\n\t\t\t\t\t\tstate.texImage2D(3553, _i2, glInternalFormat, glFormat, glType, mipmap);\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage2D(3553, 0, glInternalFormat, glFormat, glType, image);\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\tgenerateMipmap(textureType, texture, image.width, image.height);\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\n\t\t}\n\n\t\tfunction uploadCubeTexture(textureProperties, texture, slot) {\n\t\t\tif (texture.image.length !== 6) return;\n\t\t\tinitTexture(textureProperties, texture);\n\t\t\tstate.activeTexture(33984 + slot);\n\t\t\tstate.bindTexture(34067, textureProperties.__webglTexture);\n\n\t\t\t_gl.pixelStorei(37440, texture.flipY);\n\n\t\t\t_gl.pixelStorei(37441, texture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(3317, texture.unpackAlignment);\n\n\t\t\tvar isCompressed = texture && (texture.isCompressedTexture || texture.image[0].isCompressedTexture);\n\t\t\tvar isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n\t\t\tvar cubeImage = [];\n\n\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\tif (!isCompressed && !isDataTexture) {\n\t\t\t\t\tcubeImage[i] = resizeImage(texture.image[i], false, true, maxCubemapSize);\n\t\t\t\t} else {\n\t\t\t\t\tcubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar image = cubeImage[0],\n\t\t\t\t\tsupportsMips = isPowerOfTwo(image) || isWebGL2,\n\t\t\t\t\tglFormat = utils.convert(texture.format),\n\t\t\t\t\tglType = utils.convert(texture.type),\n\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\t\t\tsetTextureParameters(34067, texture, supportsMips);\n\t\t\tvar mipmaps;\n\n\t\t\tif (isCompressed) {\n\t\t\t\tfor (var _i3 = 0; _i3 < 6; _i3++) {\n\t\t\t\t\tmipmaps = cubeImage[_i3].mipmaps;\n\n\t\t\t\t\tfor (var j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\tvar mipmap = mipmaps[j];\n\n\t\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n\t\t\t\t\t\t\tif (glFormat !== null) {\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D(34069 + _i3, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.texImage2D(34069 + _i3, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t} else {\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tfor (var _i4 = 0; _i4 < 6; _i4++) {\n\t\t\t\t\tif (isDataTexture) {\n\t\t\t\t\t\tstate.texImage2D(34069 + _i4, 0, glInternalFormat, cubeImage[_i4].width, cubeImage[_i4].height, 0, glFormat, glType, cubeImage[_i4].data);\n\n\t\t\t\t\t\tfor (var _j = 0; _j < mipmaps.length; _j++) {\n\t\t\t\t\t\t\tvar _mipmap = mipmaps[_j];\n\t\t\t\t\t\t\tvar mipmapImage = _mipmap.image[_i4].image;\n\t\t\t\t\t\t\tstate.texImage2D(34069 + _i4, _j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.texImage2D(34069 + _i4, 0, glInternalFormat, glFormat, glType, cubeImage[_i4]);\n\n\t\t\t\t\t\tfor (var _j2 = 0; _j2 < mipmaps.length; _j2++) {\n\t\t\t\t\t\t\tvar _mipmap2 = mipmaps[_j2];\n\t\t\t\t\t\t\tstate.texImage2D(34069 + _i4, _j2 + 1, glInternalFormat, glFormat, glType, _mipmap2.image[_i4]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\t\t\t}\n\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap(34067, texture, image.width, image.height);\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\n\t\t} // Render targets\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\n\n\t\tfunction setupFrameBufferTexture(framebuffer, renderTarget, attachment, textureTarget) {\n\t\t\tvar glFormat = utils.convert(renderTarget.texture.format);\n\t\t\tvar glType = utils.convert(renderTarget.texture.type);\n\t\t\tvar glInternalFormat = getInternalFormat(renderTarget.texture.internalFormat, glFormat, glType);\n\t\t\tstate.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\n\t\t\t_gl.bindFramebuffer(36160, framebuffer);\n\n\t\t\t_gl.framebufferTexture2D(36160, attachment, textureTarget, properties.get(renderTarget.texture).__webglTexture, 0);\n\n\t\t\t_gl.bindFramebuffer(36160, null);\n\t\t} // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n\t\tfunction setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {\n\t\t\t_gl.bindRenderbuffer(36161, renderbuffer);\n\n\t\t\tif (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n\t\t\t\tvar glInternalFormat = 33189;\n\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tvar depthTexture = renderTarget.depthTexture;\n\n\t\t\t\t\tif (depthTexture && depthTexture.isDepthTexture) {\n\t\t\t\t\t\tif (depthTexture.type === FloatType) {\n\t\t\t\t\t\t\tglInternalFormat = 36012;\n\t\t\t\t\t\t} else if (depthTexture.type === UnsignedIntType) {\n\t\t\t\t\t\t\tglInternalFormat = 33190;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(36161, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(36161, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer(36160, 36096, 36161, renderbuffer);\n\t\t\t} else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tvar _samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(36161, _samples, 35056, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(36161, 34041, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer(36160, 33306, 36161, renderbuffer);\n\t\t\t} else {\n\t\t\t\tvar glFormat = utils.convert(renderTarget.texture.format);\n\t\t\t\tvar glType = utils.convert(renderTarget.texture.type);\n\n\t\t\t\tvar _glInternalFormat = getInternalFormat(renderTarget.texture.internalFormat, glFormat, glType);\n\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tvar _samples2 = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(36161, _samples2, _glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(36161, _glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer(36161, null);\n\t\t} // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n\t\tfunction setupDepthTexture(framebuffer, renderTarget) {\n\t\t\tvar isCube = renderTarget && renderTarget.isWebGLCubeRenderTarget;\n\t\t\tif (isCube) throw new Error('Depth Texture with cube render targets is not supported');\n\n\t\t\t_gl.bindFramebuffer(36160, framebuffer);\n\n\t\t\tif (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\t\t\t} // upload an empty depth texture with framebuffer size\n\n\n\t\t\tif (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D(renderTarget.depthTexture, 0);\n\n\t\t\tvar webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n\t\t\tif (renderTarget.depthTexture.format === DepthFormat) {\n\t\t\t\t_gl.framebufferTexture2D(36160, 36096, 3553, webglDepthTexture, 0);\n\t\t\t} else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n\t\t\t\t_gl.framebufferTexture2D(36160, 33306, 3553, webglDepthTexture, 0);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown depthTexture format');\n\t\t\t}\n\t\t} // Setup GL resources for a non-texture depth buffer\n\n\n\t\tfunction setupDepthRenderbuffer(renderTarget) {\n\t\t\tvar renderTargetProperties = properties.get(renderTarget);\n\t\t\tvar isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\n\t\t\tif (renderTarget.depthTexture) {\n\t\t\t\tif (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n\t\t\t\tsetupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n\t\t\t} else {\n\t\t\t\tif (isCube) {\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\t\t\t_gl.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer[i]);\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget, false);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t_gl.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer);\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer(36160, null);\n\t\t} // Set up GL resources for the render target\n\n\n\t\tfunction setupRenderTarget(renderTarget) {\n\t\t\tvar renderTargetProperties = properties.get(renderTarget);\n\t\t\tvar textureProperties = properties.get(renderTarget.texture);\n\t\t\trenderTarget.addEventListener('dispose', onRenderTargetDispose);\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\tinfo.memory.textures++;\n\t\t\tvar isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\t\t\tvar isMultisample = renderTarget.isWebGLMultisampleRenderTarget === true;\n\t\t\tvar supportsMips = isPowerOfTwo(renderTarget) || isWebGL2; // Handles WebGL2 RGBFormat fallback - #18858\n\n\t\t\tif (isWebGL2 && renderTarget.texture.format === RGBFormat && (renderTarget.texture.type === FloatType || renderTarget.texture.type === HalfFloatType)) {\n\t\t\t\trenderTarget.texture.format = RGBAFormat;\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');\n\t\t\t} // Setup framebuffer\n\n\n\t\t\tif (isCube) {\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t\t_gl.bindRenderbuffer(36161, renderTargetProperties.__webglColorRenderbuffer);\n\n\t\t\t\t\t\tvar glFormat = utils.convert(renderTarget.texture.format);\n\t\t\t\t\t\tvar glType = utils.convert(renderTarget.texture.type);\n\t\t\t\t\t\tvar glInternalFormat = getInternalFormat(renderTarget.texture.internalFormat, glFormat, glType);\n\t\t\t\t\t\tvar samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample(36161, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\n\t\t\t\t\t\t_gl.bindFramebuffer(36160, renderTargetProperties.__webglMultisampledFramebuffer);\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer(36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer);\n\n\t\t\t\t\t\t_gl.bindRenderbuffer(36161, null);\n\n\t\t\t\t\t\tif (renderTarget.depthBuffer) {\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindFramebuffer(36160, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // Setup color buffer\n\n\n\t\t\tif (isCube) {\n\t\t\t\tstate.bindTexture(34067, textureProperties.__webglTexture);\n\t\t\t\tsetTextureParameters(34067, renderTarget.texture, supportsMips);\n\n\t\t\t\tfor (var _i5 = 0; _i5 < 6; _i5++) {\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[_i5], renderTarget, 36064, 34069 + _i5);\n\t\t\t\t}\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(renderTarget.texture, supportsMips)) {\n\t\t\t\t\tgenerateMipmap(34067, renderTarget.texture, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(34067, null);\n\t\t\t} else {\n\t\t\t\tstate.bindTexture(3553, textureProperties.__webglTexture);\n\t\t\t\tsetTextureParameters(3553, renderTarget.texture, supportsMips);\n\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553);\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(renderTarget.texture, supportsMips)) {\n\t\t\t\t\tgenerateMipmap(3553, renderTarget.texture, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(3553, null);\n\t\t\t} // Setup depth and stencil buffers\n\n\n\t\t\tif (renderTarget.depthBuffer) {\n\t\t\t\tsetupDepthRenderbuffer(renderTarget);\n\t\t\t}\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap(renderTarget) {\n\t\t\tvar texture = renderTarget.texture;\n\t\t\tvar supportsMips = isPowerOfTwo(renderTarget) || isWebGL2;\n\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\tvar target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\n\t\t\t\tvar webglTexture = properties.get(texture).__webglTexture;\n\n\t\t\t\tstate.bindTexture(target, webglTexture);\n\t\t\t\tgenerateMipmap(target, texture, renderTarget.width, renderTarget.height);\n\t\t\t\tstate.bindTexture(target, null);\n\t\t\t}\n\t\t}\n\n\t\tfunction updateMultisampleRenderTarget(renderTarget) {\n\t\t\tif (renderTarget.isWebGLMultisampleRenderTarget) {\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tvar renderTargetProperties = properties.get(renderTarget);\n\n\t\t\t\t\t_gl.bindFramebuffer(36008, renderTargetProperties.__webglMultisampledFramebuffer);\n\n\t\t\t\t\t_gl.bindFramebuffer(36009, renderTargetProperties.__webglFramebuffer);\n\n\t\t\t\t\tvar width = renderTarget.width;\n\t\t\t\t\tvar height = renderTarget.height;\n\t\t\t\t\tvar mask = 16384;\n\t\t\t\t\tif (renderTarget.depthBuffer) mask |= 256;\n\t\t\t\t\tif (renderTarget.stencilBuffer) mask |= 1024;\n\n\t\t\t\t\t_gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, 9728);\n\n\t\t\t\t\t_gl.bindFramebuffer(36160, renderTargetProperties.__webglMultisampledFramebuffer); // see #18905\n\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction getRenderTargetSamples(renderTarget) {\n\t\t\treturn isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ? Math.min(maxSamples, renderTarget.samples) : 0;\n\t\t}\n\n\t\tfunction updateVideoTexture(texture) {\n\t\t\tvar frame = info.render.frame; // Check the last frame we updated the VideoTexture\n\n\t\t\tif (_videoTextures.get(texture) !== frame) {\n\t\t\t\t_videoTextures.set(texture, frame);\n\n\t\t\t\ttexture.update();\n\t\t\t}\n\t\t} // backwards compatibility\n\n\n\t\tvar warnedTexture2D = false;\n\t\tvar warnedTextureCube = false;\n\n\t\tfunction safeSetTexture2D(texture, slot) {\n\t\t\tif (texture && texture.isWebGLRenderTarget) {\n\t\t\t\tif (warnedTexture2D === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');\n\t\t\t\t\twarnedTexture2D = true;\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\t\t\t}\n\n\t\t\tsetTexture2D(texture, slot);\n\t\t}\n\n\t\tfunction safeSetTextureCube(texture, slot) {\n\t\t\tif (texture && texture.isWebGLCubeRenderTarget) {\n\t\t\t\tif (warnedTextureCube === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');\n\t\t\t\t\twarnedTextureCube = true;\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\t\t\t}\n\n\t\t\tsetTextureCube(texture, slot);\n\t\t} //\n\n\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\n\t\tthis.resetTextureUnits = resetTextureUnits;\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTexture2DArray = setTexture2DArray;\n\t\tthis.setTexture3D = setTexture3D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\t\tthis.safeSetTexture2D = safeSetTexture2D;\n\t\tthis.safeSetTextureCube = safeSetTextureCube;\n\t}\n\n\tfunction WebGLUtils(gl, extensions, capabilities) {\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction convert(p) {\n\t\t\tvar extension;\n\t\t\tif (p === UnsignedByteType) return 5121;\n\t\t\tif (p === UnsignedShort4444Type) return 32819;\n\t\t\tif (p === UnsignedShort5551Type) return 32820;\n\t\t\tif (p === UnsignedShort565Type) return 33635;\n\t\t\tif (p === ByteType) return 5120;\n\t\t\tif (p === ShortType) return 5122;\n\t\t\tif (p === UnsignedShortType) return 5123;\n\t\t\tif (p === IntType) return 5124;\n\t\t\tif (p === UnsignedIntType) return 5125;\n\t\t\tif (p === FloatType) return 5126;\n\n\t\t\tif (p === HalfFloatType) {\n\t\t\t\tif (isWebGL2) return 5131;\n\t\t\t\textension = extensions.get('OES_texture_half_float');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.HALF_FLOAT_OES;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === AlphaFormat) return 6406;\n\t\t\tif (p === RGBFormat) return 6407;\n\t\t\tif (p === RGBAFormat) return 6408;\n\t\t\tif (p === LuminanceFormat) return 6409;\n\t\t\tif (p === LuminanceAlphaFormat) return 6410;\n\t\t\tif (p === DepthFormat) return 6402;\n\t\t\tif (p === DepthStencilFormat) return 34041;\n\t\t\tif (p === RedFormat) return 6403; // WebGL2 formats.\n\n\t\t\tif (p === RedIntegerFormat) return 36244;\n\t\t\tif (p === RGFormat) return 33319;\n\t\t\tif (p === RGIntegerFormat) return 33320;\n\t\t\tif (p === RGBIntegerFormat) return 36248;\n\t\t\tif (p === RGBAIntegerFormat) return 36249;\n\n\t\t\tif (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_ETC1_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc1');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_ETC2_Format) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\t\tif (p === RGBA_ETC2_EAC_Format) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format || p === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format || p === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format || p === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format || p === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format || p === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_astc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\t// TODO Complete?\n\t\t\t\t\treturn p;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGBA_BPTC_Format) {\n\t\t\t\textension = extensions.get('EXT_texture_compression_bptc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\t// TODO Complete?\n\t\t\t\t\treturn p;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === UnsignedInt248Type) {\n\t\t\t\tif (isWebGL2) return 34042;\n\t\t\t\textension = extensions.get('WEBGL_depth_texture');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tconvert: convert\n\t\t};\n\t}\n\n\tfunction ArrayCamera(array) {\n\t\tif (array === void 0) {\n\t\t\tarray = [];\n\t\t}\n\n\t\tPerspectiveCamera.call(this);\n\t\tthis.cameras = array;\n\t}\n\n\tArrayCamera.prototype = Object.assign(Object.create(PerspectiveCamera.prototype), {\n\t\tconstructor: ArrayCamera,\n\t\tisArrayCamera: true\n\t});\n\n\tfunction Group() {\n\t\tObject3D.call(this);\n\t\tthis.type = 'Group';\n\t}\n\n\tGroup.prototype = Object.assign(Object.create(Object3D.prototype), {\n\t\tconstructor: Group,\n\t\tisGroup: true\n\t});\n\n\tfunction WebXRController() {\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\t}\n\n\tObject.assign(WebXRController.prototype, {\n\t\tconstructor: WebXRController,\n\t\tgetHandSpace: function getHandSpace() {\n\t\t\tif (this._hand === null) {\n\t\t\t\tthis._hand = new Group();\n\t\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\t\tthis._hand.visible = false;\n\t\t\t\tthis._hand.joints = {};\n\t\t\t\tthis._hand.inputState = {\n\t\t\t\t\tpinching: false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn this._hand;\n\t\t},\n\t\tgetTargetRaySpace: function getTargetRaySpace() {\n\t\t\tif (this._targetRay === null) {\n\t\t\t\tthis._targetRay = new Group();\n\t\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\t\tthis._targetRay.visible = false;\n\t\t\t}\n\n\t\t\treturn this._targetRay;\n\t\t},\n\t\tgetGripSpace: function getGripSpace() {\n\t\t\tif (this._grip === null) {\n\t\t\t\tthis._grip = new Group();\n\t\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\t\tthis._grip.visible = false;\n\t\t\t}\n\n\t\t\treturn this._grip;\n\t\t},\n\t\tdispatchEvent: function dispatchEvent(event) {\n\t\t\tif (this._targetRay !== null) {\n\t\t\t\tthis._targetRay.dispatchEvent(event);\n\t\t\t}\n\n\t\t\tif (this._grip !== null) {\n\t\t\t\tthis._grip.dispatchEvent(event);\n\t\t\t}\n\n\t\t\tif (this._hand !== null) {\n\t\t\t\tthis._hand.dispatchEvent(event);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tdisconnect: function disconnect(inputSource) {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'disconnected',\n\t\t\t\tdata: inputSource\n\t\t\t});\n\n\t\t\tif (this._targetRay !== null) {\n\t\t\t\tthis._targetRay.visible = false;\n\t\t\t}\n\n\t\t\tif (this._grip !== null) {\n\t\t\t\tthis._grip.visible = false;\n\t\t\t}\n\n\t\t\tif (this._hand !== null) {\n\t\t\t\tthis._hand.visible = false;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tupdate: function update(inputSource, frame, referenceSpace) {\n\t\t\tvar inputPose = null;\n\t\t\tvar gripPose = null;\n\t\t\tvar handPose = null;\n\t\t\tvar targetRay = this._targetRay;\n\t\t\tvar grip = this._grip;\n\t\t\tvar hand = this._hand;\n\n\t\t\tif (inputSource && frame.session.visibilityState !== 'visible-blurred') {\n\t\t\t\tif (hand && inputSource.hand) {\n\t\t\t\t\thandPose = true;\n\n\t\t\t\t\tfor (var _iterator = _createForOfIteratorHelperLoose(inputSource.hand.values()), _step; !(_step = _iterator()).done;) {\n\t\t\t\t\t\tvar inputjoint = _step.value;\n\t\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\t\tvar jointPose = frame.getJointPose(inputjoint, referenceSpace);\n\n\t\t\t\t\t\tif (hand.joints[inputjoint.jointName] === undefined) {\n\t\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\t\tvar _joint = new Group();\n\n\t\t\t\t\t\t\t_joint.matrixAutoUpdate = false;\n\t\t\t\t\t\t\t_joint.visible = false;\n\t\t\t\t\t\t\thand.joints[inputjoint.jointName] = _joint; // ??\n\n\t\t\t\t\t\t\thand.add(_joint);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar joint = hand.joints[inputjoint.jointName];\n\n\t\t\t\t\t\tif (jointPose !== null) {\n\t\t\t\t\t\t\tjoint.matrix.fromArray(jointPose.transform.matrix);\n\t\t\t\t\t\t\tjoint.matrix.decompose(joint.position, joint.rotation, joint.scale);\n\t\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjoint.visible = jointPose !== null;\n\t\t\t\t\t} // Custom events\n\t\t\t\t\t// Check pinchz\n\n\n\t\t\t\t\tvar indexTip = hand.joints['index-finger-tip'];\n\t\t\t\t\tvar thumbTip = hand.joints['thumb-tip'];\n\t\t\t\t\tvar distance = indexTip.position.distanceTo(thumbTip.position);\n\t\t\t\t\tvar distanceToPinch = 0.02;\n\t\t\t\t\tvar threshold = 0.005;\n\n\t\t\t\t\tif (hand.inputState.pinching && distance > distanceToPinch + threshold) {\n\t\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (!hand.inputState.pinching && distance <= distanceToPinch - threshold) {\n\t\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (targetRay !== null) {\n\t\t\t\t\t\tinputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n\n\t\t\t\t\t\tif (inputPose !== null) {\n\t\t\t\t\t\t\ttargetRay.matrix.fromArray(inputPose.transform.matrix);\n\t\t\t\t\t\t\ttargetRay.matrix.decompose(targetRay.position, targetRay.rotation, targetRay.scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (grip !== null && inputSource.gripSpace) {\n\t\t\t\t\t\tgripPose = frame.getPose(inputSource.gripSpace, referenceSpace);\n\n\t\t\t\t\t\tif (gripPose !== null) {\n\t\t\t\t\t\t\tgrip.matrix.fromArray(gripPose.transform.matrix);\n\t\t\t\t\t\t\tgrip.matrix.decompose(grip.position, grip.rotation, grip.scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (targetRay !== null) {\n\t\t\t\ttargetRay.visible = inputPose !== null;\n\t\t\t}\n\n\t\t\tif (grip !== null) {\n\t\t\t\tgrip.visible = gripPose !== null;\n\t\t\t}\n\n\t\t\tif (hand !== null) {\n\t\t\t\thand.visible = handPose !== null;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tfunction WebXRManager(renderer, gl) {\n\t\tvar scope = this;\n\t\tvar session = null;\n\t\tvar framebufferScaleFactor = 1.0;\n\t\tvar referenceSpace = null;\n\t\tvar referenceSpaceType = 'local-floor';\n\t\tvar pose = null;\n\t\tvar controllers = [];\n\t\tvar inputSourcesMap = new Map(); //\n\n\t\tvar cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable(1);\n\t\tcameraL.viewport = new Vector4();\n\t\tvar cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable(2);\n\t\tcameraR.viewport = new Vector4();\n\t\tvar cameras = [cameraL, cameraR];\n\t\tvar cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable(1);\n\t\tcameraVR.layers.enable(2);\n\t\tvar _currentDepthNear = null;\n\t\tvar _currentDepthFar = null; //\n\n\t\tthis.enabled = false;\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function (index) {\n\t\t\tvar controller = controllers[index];\n\n\t\t\tif (controller === undefined) {\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[index] = controller;\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\t\t};\n\n\t\tthis.getControllerGrip = function (index) {\n\t\t\tvar controller = controllers[index];\n\n\t\t\tif (controller === undefined) {\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[index] = controller;\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\t\t};\n\n\t\tthis.getHand = function (index) {\n\t\t\tvar controller = controllers[index];\n\n\t\t\tif (controller === undefined) {\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[index] = controller;\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\t\t}; //\n\n\n\t\tfunction onSessionEvent(event) {\n\t\t\tvar controller = inputSourcesMap.get(event.inputSource);\n\n\t\t\tif (controller) {\n\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\ttype: event.type,\n\t\t\t\t\tdata: event.inputSource\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\t\t\tinputSourcesMap.forEach(function (controller, inputSource) {\n\t\t\t\tcontroller.disconnect(inputSource);\n\t\t\t});\n\t\t\tinputSourcesMap.clear();\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null; //\n\n\t\t\trenderer.setFramebuffer(null);\n\t\t\trenderer.setRenderTarget(renderer.getRenderTarget()); // Hack #15830\n\n\t\t\tanimation.stop();\n\t\t\tscope.isPresenting = false;\n\t\t\tscope.dispatchEvent({\n\t\t\t\ttype: 'sessionend'\n\t\t\t});\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function (value) {\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif (scope.isPresenting === true) {\n\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\n\t\t\t}\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function (value) {\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif (scope.isPresenting === true) {\n\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\n\t\t\t}\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\t\t\treturn referenceSpace;\n\t\t};\n\n\t\tthis.getSession = function () {\n\t\t\treturn session;\n\t\t};\n\n\t\tthis.setSession = /*#__PURE__*/function () {\n\t\t\tvar _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(value) {\n\t\t\t\tvar attributes, layerInit, baseLayer;\n\t\t\t\treturn regeneratorRuntime.wrap(function _callee$(_context) {\n\t\t\t\t\twhile (1) {\n\t\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\tsession = value;\n\n\t\t\t\t\t\t\t\tif (!(session !== null)) {\n\t\t\t\t\t\t\t\t\t_context.next = 24;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsession.addEventListener('select', onSessionEvent);\n\t\t\t\t\t\t\t\tsession.addEventListener('selectstart', onSessionEvent);\n\t\t\t\t\t\t\t\tsession.addEventListener('selectend', onSessionEvent);\n\t\t\t\t\t\t\t\tsession.addEventListener('squeeze', onSessionEvent);\n\t\t\t\t\t\t\t\tsession.addEventListener('squeezestart', onSessionEvent);\n\t\t\t\t\t\t\t\tsession.addEventListener('squeezeend', onSessionEvent);\n\t\t\t\t\t\t\t\tsession.addEventListener('end', onSessionEnd);\n\t\t\t\t\t\t\t\tsession.addEventListener('inputsourceschange', onInputSourcesChange);\n\t\t\t\t\t\t\t\tattributes = gl.getContextAttributes();\n\n\t\t\t\t\t\t\t\tif (!(attributes.xrCompatible !== true)) {\n\t\t\t\t\t\t\t\t\t_context.next = 14;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t_context.next = 14;\n\t\t\t\t\t\t\t\treturn gl.makeXRCompatible();\n\n\t\t\t\t\t\t\tcase 14:\n\t\t\t\t\t\t\t\tlayerInit = {\n\t\t\t\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t\t\t\t}; // eslint-disable-next-line no-undef\n\n\t\t\t\t\t\t\t\tbaseLayer = new XRWebGLLayer(session, gl, layerInit);\n\t\t\t\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\t\t\t\tbaseLayer: baseLayer\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t_context.next = 19;\n\t\t\t\t\t\t\t\treturn session.requestReferenceSpace(referenceSpaceType);\n\n\t\t\t\t\t\t\tcase 19:\n\t\t\t\t\t\t\t\treferenceSpace = _context.sent;\n\t\t\t\t\t\t\t\tanimation.setContext(session);\n\t\t\t\t\t\t\t\tanimation.start();\n\t\t\t\t\t\t\t\tscope.isPresenting = true;\n\t\t\t\t\t\t\t\tscope.dispatchEvent({\n\t\t\t\t\t\t\t\t\ttype: 'sessionstart'\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tcase 24:\n\t\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, _callee);\n\t\t\t}));\n\n\t\t\treturn function (_x) {\n\t\t\t\treturn _ref.apply(this, arguments);\n\t\t\t};\n\t\t}();\n\n\t\tfunction onInputSourcesChange(event) {\n\t\t\tvar inputSources = session.inputSources; // Assign inputSources to available controllers\n\n\t\t\tfor (var i = 0; i < controllers.length; i++) {\n\t\t\t\tinputSourcesMap.set(inputSources[i], controllers[i]);\n\t\t\t} // Notify disconnected\n\n\n\t\t\tfor (var _i = 0; _i < event.removed.length; _i++) {\n\t\t\t\tvar inputSource = event.removed[_i];\n\t\t\t\tvar controller = inputSourcesMap.get(inputSource);\n\n\t\t\t\tif (controller) {\n\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\ttype: 'disconnected',\n\t\t\t\t\t\tdata: inputSource\n\t\t\t\t\t});\n\t\t\t\t\tinputSourcesMap.delete(inputSource);\n\t\t\t\t}\n\t\t\t} // Notify connected\n\n\n\t\t\tfor (var _i2 = 0; _i2 < event.added.length; _i2++) {\n\t\t\t\tvar _inputSource = event.added[_i2];\n\n\t\t\t\tvar _controller = inputSourcesMap.get(_inputSource);\n\n\t\t\t\tif (_controller) {\n\t\t\t\t\t_controller.dispatchEvent({\n\t\t\t\t\t\ttype: 'connected',\n\t\t\t\t\t\tdata: _inputSource\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} //\n\n\n\t\tvar cameraLPos = new Vector3();\n\t\tvar cameraRPos = new Vector3();\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\n\t\tfunction setProjectionFromUnion(camera, cameraL, cameraR) {\n\t\t\tcameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n\t\t\tcameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n\t\t\tvar ipd = cameraLPos.distanceTo(cameraRPos);\n\t\t\tvar projL = cameraL.projectionMatrix.elements;\n\t\t\tvar projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\n\t\t\tvar near = projL[14] / (projL[10] - 1);\n\t\t\tvar far = projL[14] / (projL[10] + 1);\n\t\t\tvar topFov = (projL[9] + 1) / projL[5];\n\t\t\tvar bottomFov = (projL[9] - 1) / projL[5];\n\t\t\tvar leftFov = (projL[8] - 1) / projL[0];\n\t\t\tvar rightFov = (projR[8] + 1) / projR[0];\n\t\t\tvar left = near * leftFov;\n\t\t\tvar right = near * rightFov; // Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\n\t\t\tvar zOffset = ipd / (-leftFov + rightFov);\n\t\t\tvar xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\n\n\t\t\tcameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n\t\t\tcamera.translateX(xOffset);\n\t\t\tcamera.translateZ(zOffset);\n\t\t\tcamera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\n\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\n\t\t\tvar near2 = near + zOffset;\n\t\t\tvar far2 = far + zOffset;\n\t\t\tvar left2 = left - xOffset;\n\t\t\tvar right2 = right + (ipd - xOffset);\n\t\t\tvar top2 = topFov * far / far2 * near2;\n\t\t\tvar bottom2 = bottomFov * far / far2 * near2;\n\t\t\tcamera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\n\t\t}\n\n\t\tfunction updateCamera(camera, parent) {\n\t\t\tif (parent === null) {\n\t\t\t\tcamera.matrixWorld.copy(camera.matrix);\n\t\t\t} else {\n\t\t\t\tcamera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n\t\t}\n\n\t\tthis.getCamera = function (camera) {\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\t\t\t\tsession.updateRenderState({\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t});\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\t\t\t}\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\t\t\tupdateCamera(cameraVR, parent);\n\n\t\t\tfor (var i = 0; i < cameras.length; i++) {\n\t\t\t\tupdateCamera(cameras[i], parent);\n\t\t\t} // update camera and its children\n\n\n\t\t\tcamera.matrixWorld.copy(cameraVR.matrixWorld);\n\t\t\tcamera.matrix.copy(cameraVR.matrix);\n\t\t\tcamera.matrix.decompose(camera.position, camera.quaternion, camera.scale);\n\t\t\tvar children = camera.children;\n\n\t\t\tfor (var _i3 = 0, l = children.length; _i3 < l; _i3++) {\n\t\t\t\tchildren[_i3].updateMatrixWorld(true);\n\t\t\t} // update projection matrix for proper view frustum culling\n\n\n\t\t\tif (cameras.length === 2) {\n\t\t\t\tsetProjectionFromUnion(cameraVR, cameraL, cameraR);\n\t\t\t} else {\n\t\t\t\t// assume single camera setup (AR)\n\t\t\t\tcameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\t\t}; // Animation Loop\n\n\n\t\tvar onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame(time, frame) {\n\t\t\tpose = frame.getViewerPose(referenceSpace);\n\n\t\t\tif (pose !== null) {\n\t\t\t\tvar views = pose.views;\n\t\t\t\tvar baseLayer = session.renderState.baseLayer;\n\t\t\t\trenderer.setFramebuffer(baseLayer.framebuffer);\n\t\t\t\tvar cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif (views.length !== cameraVR.cameras.length) {\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0; i < views.length; i++) {\n\t\t\t\t\tvar view = views[i];\n\t\t\t\t\tvar viewport = baseLayer.getViewport(view);\n\t\t\t\t\tvar camera = cameras[i];\n\t\t\t\t\tcamera.matrix.fromArray(view.transform.matrix);\n\t\t\t\t\tcamera.projectionMatrix.fromArray(view.projectionMatrix);\n\t\t\t\t\tcamera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tcameraVR.matrix.copy(camera.matrix);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cameraVRNeedsUpdate === true) {\n\t\t\t\t\t\tcameraVR.cameras.push(camera);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tvar inputSources = session.inputSources;\n\n\t\t\tfor (var _i4 = 0; _i4 < controllers.length; _i4++) {\n\t\t\t\tvar controller = controllers[_i4];\n\t\t\t\tvar inputSource = inputSources[_i4];\n\t\t\t\tcontroller.update(inputSource, frame, referenceSpace);\n\t\t\t}\n\n\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\n\t\t}\n\n\t\tvar animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop(onAnimationFrame);\n\n\t\tthis.setAnimationLoop = function (callback) {\n\t\t\tonAnimationFrameCallback = callback;\n\t\t};\n\n\t\tthis.dispose = function () {};\n\t}\n\n\tObject.assign(WebXRManager.prototype, EventDispatcher.prototype);\n\n\tfunction WebGLMaterials(properties) {\n\t\tfunction refreshFogUniforms(uniforms, fog) {\n\t\t\tuniforms.fogColor.value.copy(fog.color);\n\n\t\t\tif (fog.isFog) {\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\t\t\t} else if (fog.isFogExp2) {\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshMaterialUniforms(uniforms, material, pixelRatio, height) {\n\t\t\tif (material.isMeshBasicMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t} else if (material.isMeshLambertMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsLambert(uniforms, material);\n\t\t\t} else if (material.isMeshToonMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsToon(uniforms, material);\n\t\t\t} else if (material.isMeshPhongMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsPhong(uniforms, material);\n\t\t\t} else if (material.isMeshStandardMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\n\t\t\t\tif (material.isMeshPhysicalMaterial) {\n\t\t\t\t\trefreshUniformsPhysical(uniforms, material);\n\t\t\t\t} else {\n\t\t\t\t\trefreshUniformsStandard(uniforms, material);\n\t\t\t\t}\n\t\t\t} else if (material.isMeshMatcapMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsMatcap(uniforms, material);\n\t\t\t} else if (material.isMeshDepthMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsDepth(uniforms, material);\n\t\t\t} else if (material.isMeshDistanceMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsDistance(uniforms, material);\n\t\t\t} else if (material.isMeshNormalMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsNormal(uniforms, material);\n\t\t\t} else if (material.isLineBasicMaterial) {\n\t\t\t\trefreshUniformsLine(uniforms, material);\n\n\t\t\t\tif (material.isLineDashedMaterial) {\n\t\t\t\t\trefreshUniformsDash(uniforms, material);\n\t\t\t\t}\n\t\t\t} else if (material.isPointsMaterial) {\n\t\t\t\trefreshUniformsPoints(uniforms, material, pixelRatio, height);\n\t\t\t} else if (material.isSpriteMaterial) {\n\t\t\t\trefreshUniformsSprites(uniforms, material);\n\t\t\t} else if (material.isShadowMaterial) {\n\t\t\t\tuniforms.color.value.copy(material.color);\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\t} else if (material.isShaderMaterial) {\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsCommon(uniforms, material) {\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif (material.color) {\n\t\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\t}\n\n\t\t\tif (material.emissive) {\n\t\t\t\tuniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n\t\t\t}\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (material.specularMap) {\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t}\n\n\t\t\tvar envMap = properties.get(material).envMap;\n\n\t\t\tif (envMap) {\n\t\t\t\tuniforms.envMap.value = envMap;\n\t\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture && envMap._needsFlipEnvMap ? -1 : 1;\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\tvar maxMipLevel = properties.get(envMap).__maxMipLevel;\n\n\t\t\t\tif (maxMipLevel !== undefined) {\n\t\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (material.lightMap) {\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\t\t\t}\n\n\t\t\tif (material.aoMap) {\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. displacementMap map\n\t\t\t// 4. normal map\n\t\t\t// 5. bump map\n\t\t\t// 6. roughnessMap map\n\t\t\t// 7. metalnessMap map\n\t\t\t// 8. alphaMap map\n\t\t\t// 9. emissiveMap map\n\t\t\t// 10. clearcoat map\n\t\t\t// 11. clearcoat normal map\n\t\t\t// 12. clearcoat roughnessMap map\n\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.specularMap) {\n\t\t\t\tuvScaleMap = material.specularMap;\n\t\t\t} else if (material.displacementMap) {\n\t\t\t\tuvScaleMap = material.displacementMap;\n\t\t\t} else if (material.normalMap) {\n\t\t\t\tuvScaleMap = material.normalMap;\n\t\t\t} else if (material.bumpMap) {\n\t\t\t\tuvScaleMap = material.bumpMap;\n\t\t\t} else if (material.roughnessMap) {\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\t\t\t} else if (material.metalnessMap) {\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t} else if (material.emissiveMap) {\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\t\t\t} else if (material.clearcoatMap) {\n\t\t\t\tuvScaleMap = material.clearcoatMap;\n\t\t\t} else if (material.clearcoatNormalMap) {\n\t\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\t\t\t} else if (material.clearcoatRoughnessMap) {\n\t\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\t// backwards compatibility\n\t\t\t\tif (uvScaleMap.isWebGLRenderTarget) {\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\t\t\t\t}\n\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t} // uv repeat and offset setting priorities for uv2\n\t\t\t// 1. ao map\n\t\t\t// 2. light map\n\n\n\t\t\tvar uv2ScaleMap;\n\n\t\t\tif (material.aoMap) {\n\t\t\t\tuv2ScaleMap = material.aoMap;\n\t\t\t} else if (material.lightMap) {\n\t\t\t\tuv2ScaleMap = material.lightMap;\n\t\t\t}\n\n\t\t\tif (uv2ScaleMap !== undefined) {\n\t\t\t\t// backwards compatibility\n\t\t\t\tif (uv2ScaleMap.isWebGLRenderTarget) {\n\t\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\t\t\t\t}\n\n\t\t\t\tif (uv2ScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuv2ScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsLine(uniforms, material) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t}\n\n\t\tfunction refreshUniformsDash(uniforms, material) {\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\t\t}\n\n\t\tfunction refreshUniformsPoints(uniforms, material, pixelRatio, height) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * pixelRatio;\n\t\t\tuniforms.scale.value = height * 0.5;\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsSprites(uniforms, material) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.rotation.value = material.rotation;\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsLambert(uniforms, material) {\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsPhong(uniforms, material) {\n\t\t\tuniforms.specular.value.copy(material.specular);\n\t\t\tuniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsToon(uniforms, material) {\n\t\t\tif (material.gradientMap) {\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\t\t\t}\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsStandard(uniforms, material) {\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif (material.roughnessMap) {\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\t\t\t}\n\n\t\t\tif (material.metalnessMap) {\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\t\t\t}\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\n\t\t\tvar envMap = properties.get(material).envMap;\n\n\t\t\tif (envMap) {\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsPhysical(uniforms, material) {\n\t\t\trefreshUniformsStandard(uniforms, material);\n\t\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\t\tif (material.sheen) uniforms.sheen.value.copy(material.sheen);\n\n\t\t\tif (material.clearcoatMap) {\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\t\t\t}\n\n\t\t\tif (material.clearcoatRoughnessMap) {\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\t\t\t}\n\n\t\t\tif (material.clearcoatNormalMap) {\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif (material.side === BackSide) {\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\n\t\t\tif (material.transmissionMap) {\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsMatcap(uniforms, material) {\n\t\t\tif (material.matcap) {\n\t\t\t\tuniforms.matcap.value = material.matcap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsDepth(uniforms, material) {\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsDistance(uniforms, material) {\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\n\t\t\tuniforms.referencePosition.value.copy(material.referencePosition);\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\tuniforms.farDistance.value = material.farDistance;\n\t\t}\n\n\t\tfunction refreshUniformsNormal(uniforms, material) {\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trefreshFogUniforms: refreshFogUniforms,\n\t\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t\t};\n\t}\n\n\tfunction createCanvasElement() {\n\t\tvar canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\t\tcanvas.style.display = 'block';\n\t\treturn canvas;\n\t}\n\n\tfunction WebGLRenderer(parameters) {\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\t\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\t\tvar currentRenderList = null;\n\t\tvar currentRenderState = null; // render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its state isolated from the parent render call.\n\n\t\tvar renderStateStack = []; // public properties\n\n\t\tthis.domElement = _canvas; // Debug configuration container\n\n\t\tthis.debug = {\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true\n\t\t}; // clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true; // scene graph\n\n\t\tthis.sortObjects = true; // user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false; // physically based shading\n\n\t\tthis.gammaFactor = 2.0; // for backwards compatibility\n\n\t\tthis.outputEncoding = LinearEncoding; // physical lights\n\n\t\tthis.physicallyCorrectLights = false; // tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0; // morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4; // internal properties\n\n\t\tvar _this = this;\n\n\t\tvar _isContextLost = false; // internal state cache\n\n\t\tvar _framebuffer = null;\n\t\tvar _currentActiveCubeFace = 0;\n\t\tvar _currentActiveMipmapLevel = 0;\n\t\tvar _currentRenderTarget = null;\n\t\tvar _currentFramebuffer = null;\n\n\t\tvar _currentMaterialId = -1;\n\n\t\tvar _currentCamera = null;\n\n\t\tvar _currentViewport = new Vector4();\n\n\t\tvar _currentScissor = new Vector4();\n\n\t\tvar _currentScissorTest = null; //\n\n\t\tvar _width = _canvas.width;\n\t\tvar _height = _canvas.height;\n\t\tvar _pixelRatio = 1;\n\t\tvar _opaqueSort = null;\n\t\tvar _transparentSort = null;\n\n\t\tvar _viewport = new Vector4(0, 0, _width, _height);\n\n\t\tvar _scissor = new Vector4(0, 0, _width, _height);\n\n\t\tvar _scissorTest = false; // frustum\n\n\t\tvar _frustum = new Frustum(); // clipping\n\n\n\t\tvar _clippingEnabled = false;\n\t\tvar _localClippingEnabled = false; // camera matrices cache\n\n\t\tvar _projScreenMatrix = new Matrix4();\n\n\t\tvar _vector3 = new Vector3();\n\n\t\tvar _emptyScene = {\n\t\t\tbackground: null,\n\t\t\tfog: null,\n\t\t\tenvironment: null,\n\t\t\toverrideMaterial: null,\n\t\t\tisScene: true\n\t\t};\n\n\t\tfunction getTargetPixelRatio() {\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\t\t} // initialize\n\n\n\t\tvar _gl = _context;\n\n\t\tfunction getContext(contextNames, contextAttributes) {\n\t\t\tfor (var i = 0; i < contextNames.length; i++) {\n\t\t\t\tvar contextName = contextNames[i];\n\n\t\t\t\tvar context = _canvas.getContext(contextName, contextAttributes);\n\n\t\t\t\tif (context !== null) return context;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\ttry {\n\t\t\tvar contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\t\tpowerPreference: _powerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t\t}; // event listeners must be registered before WebGL context is created, see #12753\n\n\t\t\t_canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n\t\t\t_canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n\t\t\tif (_gl === null) {\n\t\t\t\tvar contextNames = ['webgl2', 'webgl', 'experimental-webgl'];\n\n\t\t\t\tif (_this.isWebGL1Renderer === true) {\n\t\t\t\t\tcontextNames.shift();\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext(contextNames, contextAttributes);\n\n\t\t\t\tif (_gl === null) {\n\t\t\t\t\tif (getContext(contextNames)) {\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context with your selected attributes.');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n\t\t\tif (_gl.getShaderPrecisionFormat === undefined) {\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'rangeMin': 1,\n\t\t\t\t\t\t'rangeMax': 1,\n\t\t\t\t\t\t'precision': 1\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('THREE.WebGLRenderer: ' + error.message);\n\t\t\tthrow error;\n\t\t}\n\n\t\tvar extensions, capabilities, state, info;\n\t\tvar properties, textures, cubemaps, attributes, geometries, objects;\n\t\tvar programCache, materials, renderLists, renderStates, clipping;\n\t\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\t\tvar utils, bindingStates;\n\n\t\tfunction initGLContext() {\n\t\t\textensions = new WebGLExtensions(_gl);\n\t\t\tcapabilities = new WebGLCapabilities(_gl, extensions, parameters);\n\t\t\textensions.init(capabilities);\n\t\t\tutils = new WebGLUtils(_gl, extensions, capabilities);\n\t\t\tstate = new WebGLState(_gl, extensions, capabilities);\n\t\t\tstate.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n\t\t\tstate.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n\t\t\tinfo = new WebGLInfo(_gl);\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n\t\t\tcubemaps = new WebGLCubeMaps(_this);\n\t\t\tattributes = new WebGLAttributes(_gl, capabilities);\n\t\t\tbindingStates = new WebGLBindingStates(_gl, extensions, attributes, capabilities);\n\t\t\tgeometries = new WebGLGeometries(_gl, attributes, info, bindingStates);\n\t\t\tobjects = new WebGLObjects(_gl, geometries, attributes, info);\n\t\t\tmorphtargets = new WebGLMorphtargets(_gl);\n\t\t\tclipping = new WebGLClipping(properties);\n\t\t\tprogramCache = new WebGLPrograms(_this, cubemaps, extensions, capabilities, bindingStates, clipping);\n\t\t\tmaterials = new WebGLMaterials(properties);\n\t\t\trenderLists = new WebGLRenderLists(properties);\n\t\t\trenderStates = new WebGLRenderStates(extensions, capabilities);\n\t\t\tbackground = new WebGLBackground(_this, cubemaps, state, objects, _premultipliedAlpha);\n\t\t\tbufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\n\t\t\tinfo.programs = programCache.programs;\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\t\t}\n\n\t\tinitGLContext(); // xr\n\n\t\tvar xr = new WebXRManager(_this, _gl);\n\t\tthis.xr = xr; // shadow map\n\n\t\tvar shadowMap = new WebGLShadowMap(_this, objects, capabilities.maxTextureSize);\n\t\tthis.shadowMap = shadowMap; // API\n\n\t\tthis.getContext = function () {\n\t\t\treturn _gl;\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\t\t\treturn _gl.getContextAttributes();\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\t\t\tvar extension = extensions.get('WEBGL_lose_context');\n\t\t\tif (extension) extension.loseContext();\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\t\t\tvar extension = extensions.get('WEBGL_lose_context');\n\t\t\tif (extension) extension.restoreContext();\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\t\t\treturn _pixelRatio;\n\t\t};\n\n\t\tthis.setPixelRatio = function (value) {\n\t\t\tif (value === undefined) return;\n\t\t\t_pixelRatio = value;\n\t\t\tthis.setSize(_width, _height, false);\n\t\t};\n\n\t\tthis.getSize = function (target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('WebGLRenderer: .getsize() now requires a Vector2 as an argument');\n\t\t\t\ttarget = new Vector2();\n\t\t\t}\n\n\t\t\treturn target.set(_width, _height);\n\t\t};\n\n\t\tthis.setSize = function (width, height, updateStyle) {\n\t\t\tif (xr.isPresenting) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_canvas.width = Math.floor(width * _pixelRatio);\n\t\t\t_canvas.height = Math.floor(height * _pixelRatio);\n\n\t\t\tif (updateStyle !== false) {\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\t\t\t}\n\n\t\t\tthis.setViewport(0, 0, width, height);\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function (target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument');\n\t\t\t\ttarget = new Vector2();\n\t\t\t}\n\n\t\t\treturn target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function (width, height, pixelRatio) {\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_pixelRatio = pixelRatio;\n\t\t\t_canvas.width = Math.floor(width * pixelRatio);\n\t\t\t_canvas.height = Math.floor(height * pixelRatio);\n\t\t\tthis.setViewport(0, 0, width, height);\n\t\t};\n\n\t\tthis.getCurrentViewport = function (target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument');\n\t\t\t\ttarget = new Vector4();\n\t\t\t}\n\n\t\t\treturn target.copy(_currentViewport);\n\t\t};\n\n\t\tthis.getViewport = function (target) {\n\t\t\treturn target.copy(_viewport);\n\t\t};\n\n\t\tthis.setViewport = function (x, y, width, height) {\n\t\t\tif (x.isVector4) {\n\t\t\t\t_viewport.set(x.x, x.y, x.z, x.w);\n\t\t\t} else {\n\t\t\t\t_viewport.set(x, y, width, height);\n\t\t\t}\n\n\t\t\tstate.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n\t\t};\n\n\t\tthis.getScissor = function (target) {\n\t\t\treturn target.copy(_scissor);\n\t\t};\n\n\t\tthis.setScissor = function (x, y, width, height) {\n\t\t\tif (x.isVector4) {\n\t\t\t\t_scissor.set(x.x, x.y, x.z, x.w);\n\t\t\t} else {\n\t\t\t\t_scissor.set(x, y, width, height);\n\t\t\t}\n\n\t\t\tstate.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\t\t\treturn _scissorTest;\n\t\t};\n\n\t\tthis.setScissorTest = function (boolean) {\n\t\t\tstate.setScissorTest(_scissorTest = boolean);\n\t\t};\n\n\t\tthis.setOpaqueSort = function (method) {\n\t\t\t_opaqueSort = method;\n\t\t};\n\n\t\tthis.setTransparentSort = function (method) {\n\t\t\t_transparentSort = method;\n\t\t}; // Clearing\n\n\n\t\tthis.getClearColor = function (target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('WebGLRenderer: .getClearColor() now requires a Color as an argument');\n\t\t\t\ttarget = new Color();\n\t\t\t}\n\n\t\t\treturn target.copy(background.getClearColor());\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\t\t\tbackground.setClearColor.apply(background, arguments);\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\t\t\treturn background.getClearAlpha();\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\t\t\tbackground.setClearAlpha.apply(background, arguments);\n\t\t};\n\n\t\tthis.clear = function (color, depth, stencil) {\n\t\t\tvar bits = 0;\n\t\t\tif (color === undefined || color) bits |= 16384;\n\t\t\tif (depth === undefined || depth) bits |= 256;\n\t\t\tif (stencil === undefined || stencil) bits |= 1024;\n\n\t\t\t_gl.clear(bits);\n\t\t};\n\n\t\tthis.clearColor = function () {\n\t\t\tthis.clear(true, false, false);\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\t\t\tthis.clear(false, true, false);\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\t\t\tthis.clear(false, false, true);\n\t\t}; //\n\n\n\t\tthis.dispose = function () {\n\t\t\t_canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n\t\t\t_canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\txr.dispose();\n\t\t\tanimation.stop();\n\t\t}; // Events\n\n\n\t\tfunction onContextLost(event) {\n\t\t\tevent.preventDefault();\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Lost.');\n\t\t\t_isContextLost = true;\n\t\t}\n\n\t\tfunction onContextRestore()\n\t\t/* event */\n\t\t{\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Restored.');\n\t\t\t_isContextLost = false;\n\t\t\tinitGLContext();\n\t\t}\n\n\t\tfunction onMaterialDispose(event) {\n\t\t\tvar material = event.target;\n\t\t\tmaterial.removeEventListener('dispose', onMaterialDispose);\n\t\t\tdeallocateMaterial(material);\n\t\t} // Buffer deallocation\n\n\n\t\tfunction deallocateMaterial(material) {\n\t\t\treleaseMaterialProgramReference(material);\n\t\t\tproperties.remove(material);\n\t\t}\n\n\t\tfunction releaseMaterialProgramReference(material) {\n\t\t\tvar programInfo = properties.get(material).program;\n\n\t\t\tif (programInfo !== undefined) {\n\t\t\t\tprogramCache.releaseProgram(programInfo);\n\t\t\t}\n\t\t} // Buffer rendering\n\n\n\t\tfunction renderObjectImmediate(object, program) {\n\t\t\tobject.render(function (object) {\n\t\t\t\t_this.renderBufferImmediate(object, program);\n\t\t\t});\n\t\t}\n\n\t\tthis.renderBufferImmediate = function (object, program) {\n\t\t\tbindingStates.initAttributes();\n\t\t\tvar buffers = properties.get(object);\n\t\t\tif (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n\t\t\tif (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n\t\t\tif (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n\t\t\tif (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif (object.hasPositions) {\n\t\t\t\t_gl.bindBuffer(34962, buffers.position);\n\n\t\t\t\t_gl.bufferData(34962, object.positionArray, 35048);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.position);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.position, 3, 5126, false, 0, 0);\n\t\t\t}\n\n\t\t\tif (object.hasNormals) {\n\t\t\t\t_gl.bindBuffer(34962, buffers.normal);\n\n\t\t\t\t_gl.bufferData(34962, object.normalArray, 35048);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.normal);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.normal, 3, 5126, false, 0, 0);\n\t\t\t}\n\n\t\t\tif (object.hasUvs) {\n\t\t\t\t_gl.bindBuffer(34962, buffers.uv);\n\n\t\t\t\t_gl.bufferData(34962, object.uvArray, 35048);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.uv);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.uv, 2, 5126, false, 0, 0);\n\t\t\t}\n\n\t\t\tif (object.hasColors) {\n\t\t\t\t_gl.bindBuffer(34962, buffers.color);\n\n\t\t\t\t_gl.bufferData(34962, object.colorArray, 35048);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.color);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.color, 3, 5126, false, 0, 0);\n\t\t\t}\n\n\t\t\tbindingStates.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays(4, 0, object.count);\n\n\t\t\tobject.count = 0;\n\t\t};\n\n\t\tthis.renderBufferDirect = function (camera, scene, geometry, material, object, group) {\n\t\t\tif (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tvar frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n\t\t\tvar program = setProgram(camera, scene, material, object);\n\t\t\tstate.setMaterial(material, frontFaceCW); //\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position; //\n\n\t\t\tif (index === null) {\n\t\t\t\tif (position === undefined || position.count === 0) return;\n\t\t\t} else if (index.count === 0) {\n\t\t\t\treturn;\n\t\t\t} //\n\n\n\t\t\tvar rangeFactor = 1;\n\n\t\t\tif (material.wireframe === true) {\n\t\t\t\tindex = geometries.getWireframeAttribute(geometry);\n\t\t\t\trangeFactor = 2;\n\t\t\t}\n\n\t\t\tif (material.morphTargets || material.morphNormals) {\n\t\t\t\tmorphtargets.update(object, geometry, material, program);\n\t\t\t}\n\n\t\t\tbindingStates.setup(object, material, program, geometry, index);\n\t\t\tvar attribute;\n\t\t\tvar renderer = bufferRenderer;\n\n\t\t\tif (index !== null) {\n\t\t\t\tattribute = attributes.get(index);\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex(attribute);\n\t\t\t} //\n\n\n\t\t\tvar dataCount = index !== null ? index.count : position.count;\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\t\t\tvar drawStart = Math.max(rangeStart, groupStart);\n\t\t\tvar drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n\t\t\tvar drawCount = Math.max(0, drawEnd - drawStart + 1);\n\t\t\tif (drawCount === 0) return; //\n\n\t\t\tif (object.isMesh) {\n\t\t\t\tif (material.wireframe === true) {\n\t\t\t\t\tstate.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n\t\t\t\t\trenderer.setMode(1);\n\t\t\t\t} else {\n\t\t\t\t\trenderer.setMode(4);\n\t\t\t\t}\n\t\t\t} else if (object.isLine) {\n\t\t\t\tvar lineWidth = material.linewidth;\n\t\t\t\tif (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth(lineWidth * getTargetPixelRatio());\n\n\t\t\t\tif (object.isLineSegments) {\n\t\t\t\t\trenderer.setMode(1);\n\t\t\t\t} else if (object.isLineLoop) {\n\t\t\t\t\trenderer.setMode(2);\n\t\t\t\t} else {\n\t\t\t\t\trenderer.setMode(3);\n\t\t\t\t}\n\t\t\t} else if (object.isPoints) {\n\t\t\t\trenderer.setMode(0);\n\t\t\t} else if (object.isSprite) {\n\t\t\t\trenderer.setMode(4);\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh) {\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, object.count);\n\t\t\t} else if (geometry.isInstancedBufferGeometry) {\n\t\t\t\tvar instanceCount = Math.min(geometry.instanceCount, geometry._maxInstanceCount);\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, instanceCount);\n\t\t\t} else {\n\t\t\t\trenderer.render(drawStart, drawCount);\n\t\t\t}\n\t\t}; // Compile\n\n\n\t\tthis.compile = function (scene, camera) {\n\t\t\tcurrentRenderState = renderStates.get(scene);\n\t\t\tcurrentRenderState.init();\n\t\t\tscene.traverseVisible(function (object) {\n\t\t\t\tif (object.isLight && object.layers.test(camera.layers)) {\n\t\t\t\t\tcurrentRenderState.pushLight(object);\n\n\t\t\t\t\tif (object.castShadow) {\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tcurrentRenderState.setupLights();\n\t\t\tvar compiled = new WeakMap();\n\t\t\tscene.traverse(function (object) {\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif (material) {\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (var i = 0; i < material.length; i++) {\n\t\t\t\t\t\t\tvar material2 = material[i];\n\n\t\t\t\t\t\t\tif (compiled.has(material2) === false) {\n\t\t\t\t\t\t\t\tinitMaterial(material2, scene, object);\n\t\t\t\t\t\t\t\tcompiled.set(material2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (compiled.has(material) === false) {\n\t\t\t\t\t\tinitMaterial(material, scene, object);\n\t\t\t\t\t\tcompiled.set(material);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}; // Animation Loop\n\n\n\t\tvar onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame(time) {\n\t\t\tif (xr.isPresenting) return;\n\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time);\n\t\t}\n\n\t\tvar animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop(onAnimationFrame);\n\t\tif (typeof window !== 'undefined') animation.setContext(window);\n\n\t\tthis.setAnimationLoop = function (callback) {\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop(callback);\n\t\t\tcallback === null ? animation.stop() : animation.start();\n\t\t}; // Rendering\n\n\n\t\tthis.render = function (scene, camera) {\n\t\t\tvar renderTarget, forceClear;\n\n\t\t\tif (arguments[2] !== undefined) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.');\n\t\t\t\trenderTarget = arguments[2];\n\t\t\t}\n\n\t\t\tif (arguments[3] !== undefined) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.');\n\t\t\t\tforceClear = arguments[3];\n\t\t\t}\n\n\t\t\tif (camera !== undefined && camera.isCamera !== true) {\n\t\t\t\tconsole.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_isContextLost === true) return; // reset caching for this frame\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = -1;\n\t\t\t_currentCamera = null; // update scene graph\n\n\t\t\tif (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n\t\t\tif (camera.parent === null) camera.updateMatrixWorld();\n\n\t\t\tif (xr.enabled === true && xr.isPresenting === true) {\n\t\t\t\tcamera = xr.getCamera(camera);\n\t\t\t} //\n\n\n\t\t\tif (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, renderTarget || _currentRenderTarget);\n\t\t\tcurrentRenderState = renderStates.get(scene, renderStateStack.length);\n\t\t\tcurrentRenderState.init();\n\t\t\trenderStateStack.push(currentRenderState);\n\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n\t\t\t_frustum.setFromProjectionMatrix(_projScreenMatrix);\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n\t\t\tcurrentRenderList = renderLists.get(scene, camera);\n\t\t\tcurrentRenderList.init();\n\t\t\tprojectObject(scene, camera, 0, _this.sortObjects);\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif (_this.sortObjects === true) {\n\t\t\t\tcurrentRenderList.sort(_opaqueSort, _transparentSort);\n\t\t\t} //\n\n\n\t\t\tif (_clippingEnabled === true) clipping.beginShadows();\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\t\t\tshadowMap.render(shadowsArray, scene, camera);\n\t\t\tcurrentRenderState.setupLights();\n\t\t\tcurrentRenderState.setupLightsView(camera);\n\t\t\tif (_clippingEnabled === true) clipping.endShadows(); //\n\n\t\t\tif (this.info.autoReset === true) this.info.reset();\n\n\t\t\tif (renderTarget !== undefined) {\n\t\t\t\tthis.setRenderTarget(renderTarget);\n\t\t\t} //\n\n\n\t\t\tbackground.render(currentRenderList, scene, camera, forceClear); // render scene\n\n\t\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\t\tvar transparentObjects = currentRenderList.transparent;\n\t\t\tif (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\n\t\t\tif (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera); //\n\n\t\t\tif (scene.isScene === true) scene.onAfterRender(_this, scene, camera); //\n\n\t\t\tif (_currentRenderTarget !== null) {\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\t\t\t\ttextures.updateRenderTargetMipmap(_currentRenderTarget); // resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget(_currentRenderTarget);\n\t\t\t} // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\n\t\t\tstate.buffers.depth.setTest(true);\n\t\t\tstate.buffers.depth.setMask(true);\n\t\t\tstate.buffers.color.setMask(true);\n\t\t\tstate.setPolygonOffset(false); // _gl.finish();\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif (renderStateStack.length > 0) {\n\t\t\t\tcurrentRenderState = renderStateStack[renderStateStack.length - 1];\n\t\t\t} else {\n\t\t\t\tcurrentRenderState = null;\n\t\t\t}\n\n\t\t\tcurrentRenderList = null;\n\t\t};\n\n\t\tfunction projectObject(object, camera, groupOrder, sortObjects) {\n\t\t\tif (object.visible === false) return;\n\t\t\tvar visible = object.layers.test(camera.layers);\n\n\t\t\tif (visible) {\n\t\t\t\tif (object.isGroup) {\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\t\t\t\t} else if (object.isLOD) {\n\t\t\t\t\tif (object.autoUpdate === true) object.update(camera);\n\t\t\t\t} else if (object.isLight) {\n\t\t\t\t\tcurrentRenderState.pushLight(object);\n\n\t\t\t\t\tif (object.castShadow) {\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\n\t\t\t\t\t}\n\t\t\t\t} else if (object.isSprite) {\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n\t\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry = objects.update(object);\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif (material.visible) {\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (object.isImmediateRenderObject) {\n\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderList.push(object, null, object.material, groupOrder, _vector3.z, null);\n\t\t\t\t} else if (object.isMesh || object.isLine || object.isPoints) {\n\t\t\t\t\tif (object.isSkinnedMesh) {\n\t\t\t\t\t\t// update skeleton only once in a frame\n\t\t\t\t\t\tif (object.skeleton.frame !== info.render.frame) {\n\t\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsObject(object)) {\n\t\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar _geometry = objects.update(object);\n\n\t\t\t\t\t\tvar _material = object.material;\n\n\t\t\t\t\t\tif (Array.isArray(_material)) {\n\t\t\t\t\t\t\tvar groups = _geometry.groups;\n\n\t\t\t\t\t\t\tfor (var i = 0, l = groups.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar group = groups[i];\n\t\t\t\t\t\t\t\tvar groupMaterial = _material[group.materialIndex];\n\n\t\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push(object, _geometry, groupMaterial, groupOrder, _vector3.z, group);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (_material.visible) {\n\t\t\t\t\t\t\tcurrentRenderList.push(object, _geometry, _material, groupOrder, _vector3.z, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor (var _i = 0, _l = children.length; _i < _l; _i++) {\n\t\t\t\tprojectObject(children[_i], camera, groupOrder, sortObjects);\n\t\t\t}\n\t\t}\n\n\t\tfunction renderObjects(renderList, scene, camera) {\n\t\t\tvar overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor (var i = 0, l = renderList.length; i < l; i++) {\n\t\t\t\tvar renderItem = renderList[i];\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tif (camera.isArrayCamera) {\n\t\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\t\tfor (var j = 0, jl = cameras.length; j < jl; j++) {\n\t\t\t\t\t\tvar camera2 = cameras[j];\n\n\t\t\t\t\t\tif (object.layers.test(camera2.layers)) {\n\t\t\t\t\t\t\tstate.viewport(_currentViewport.copy(camera2.viewport));\n\t\t\t\t\t\t\tcurrentRenderState.setupLightsView(camera2);\n\t\t\t\t\t\t\trenderObject(object, scene, camera2, geometry, material, group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trenderObject(object, scene, camera, geometry, material, group);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction renderObject(object, scene, camera, geometry, material, group) {\n\t\t\tobject.onBeforeRender(_this, scene, camera, geometry, material, group);\n\t\t\tobject.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n\t\t\tobject.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n\t\t\tif (object.isImmediateRenderObject) {\n\t\t\t\tvar program = setProgram(camera, scene, material, object);\n\t\t\t\tstate.setMaterial(material);\n\t\t\t\tbindingStates.reset();\n\t\t\t\trenderObjectImmediate(object, program);\n\t\t\t} else {\n\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\t\t\t}\n\n\t\t\tobject.onAfterRender(_this, scene, camera, geometry, material, group);\n\t\t}\n\n\t\tfunction initMaterial(material, scene, object) {\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tvar materialProperties = properties.get(material);\n\t\t\tvar lights = currentRenderState.state.lights;\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\t\t\tvar lightsStateVersion = lights.state.version;\n\t\t\tvar parameters = programCache.getParameters(material, lights.state, shadowsArray, scene, object);\n\t\t\tvar programCacheKey = programCache.getProgramCacheKey(parameters);\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true; // always update environment and fog - changing these trigger an initMaterial call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = cubemaps.get(material.envMap || materialProperties.environment);\n\n\t\t\tif (program === undefined) {\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener('dispose', onMaterialDispose);\n\t\t\t} else if (program.cacheKey !== programCacheKey) {\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference(material);\n\t\t\t} else if (materialProperties.lightsStateVersion !== lightsStateVersion) {\n\t\t\t\tprogramChange = false;\n\t\t\t} else if (parameters.shaderID !== undefined) {\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\t\t\t}\n\n\t\t\tif (programChange) {\n\t\t\t\tparameters.uniforms = programCache.getUniforms(material);\n\t\t\t\tmaterial.onBeforeCompile(parameters, _this);\n\t\t\t\tprogram = programCache.acquireProgram(parameters, programCacheKey);\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.uniforms;\n\n\t\t\tif (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n\t\t\t\tmaterialProperties.numClippingPlanes = clipping.numPlanes;\n\t\t\t\tmaterialProperties.numIntersection = clipping.numIntersection;\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\t\t\t} // store the light setup it was created for\n\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights(material);\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif (materialProperties.needsLights) {\n\t\t\t\t// wire up the material to this renderer's lighting state\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms();\n\t\t\tvar uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\t\t}\n\n\t\tfunction setProgram(camera, scene, material, object) {\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\t\t\tvar fog = scene.fog;\n\t\t\tvar environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tvar encoding = _currentRenderTarget === null ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\t\tvar envMap = cubemaps.get(material.envMap || environment);\n\t\t\tvar materialProperties = properties.get(material);\n\t\t\tvar lights = currentRenderState.state.lights;\n\n\t\t\tif (_clippingEnabled === true) {\n\t\t\t\tif (_localClippingEnabled === true || camera !== _currentCamera) {\n\t\t\t\t\tvar useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\n\t\t\t\t\tclipping.setState(material, camera, useCache);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (material.version === materialProperties.__version) {\n\t\t\t\tif (material.fog && materialProperties.fog !== fog) {\n\t\t\t\t\tinitMaterial(material, scene, object);\n\t\t\t\t} else if (materialProperties.environment !== environment) {\n\t\t\t\t\tinitMaterial(material, scene, object);\n\t\t\t\t} else if (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {\n\t\t\t\t\tinitMaterial(material, scene, object);\n\t\t\t\t} else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== clipping.numPlanes || materialProperties.numIntersection !== clipping.numIntersection)) {\n\t\t\t\t\tinitMaterial(material, scene, object);\n\t\t\t\t} else if (materialProperties.outputEncoding !== encoding) {\n\t\t\t\t\tinitMaterial(material, scene, object);\n\t\t\t\t} else if (materialProperties.envMap !== envMap) {\n\t\t\t\t\tinitMaterial(material, scene, object);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinitMaterial(material, scene, object);\n\t\t\t\tmaterialProperties.__version = material.version;\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\t\t\tvar program = materialProperties.program,\n\t\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif (state.useProgram(program.program)) {\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\t\t\t}\n\n\t\t\tif (material.id !== _currentMaterialId) {\n\t\t\t\t_currentMaterialId = material.id;\n\t\t\t\trefreshMaterial = true;\n\t\t\t}\n\n\t\t\tif (refreshProgram || _currentCamera !== camera) {\n\t\t\t\tp_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n\t\t\t\tif (capabilities.logarithmicDepthBuffer) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n\t\t\t\t}\n\n\t\t\t\tif (_currentCamera !== camera) {\n\t\t\t\t\t_currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true; // set to true on material change\n\n\t\t\t\t\trefreshLights = true; // remains set until update done\n\t\t\t\t} // load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\n\t\t\t\tif (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshStandardMaterial || material.envMap) {\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif (uCamPos !== undefined) {\n\t\t\t\t\t\tuCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\n\t\t\t\t}\n\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.isShadowMaterial || material.skinning) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n\t\t\t\t}\n\t\t\t} // skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\n\t\t\tif (material.skinning) {\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrix');\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif (skeleton) {\n\t\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\t\tif (capabilities.floatVertexTextures) {\n\t\t\t\t\t\tif (skeleton.boneTexture === null) {\n\t\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t\t//\t\t\tRGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t\t//\twith\t8x8\tpixel texture max\t 16 bones * 4 pixels =\t(8 * 8)\n\t\t\t\t\t\t\t//\t\t\t 16x16 pixel texture max\t 64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t\t//\t\t\t 32x32 pixel texture max\t256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t\t//\t\t\t 64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\t\t\t\t\t\t\tvar size = Math.sqrt(bones.length * 4); // 4 pixels needed for 1 matrix\n\n\t\t\t\t\t\t\tsize = MathUtils.ceilPowerOfTwo(size);\n\t\t\t\t\t\t\tsize = Math.max(size, 4);\n\t\t\t\t\t\t\tvar boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n\t\t\t\t\t\t\tboneMatrices.set(skeleton.boneMatrices); // copy current values\n\n\t\t\t\t\t\t\tvar boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n\t\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\n\t\t\t}\n\n\t\t\tif (refreshMaterial) {\n\t\t\t\tp_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n\n\t\t\t\tif (materialProperties.needsLights) {\n\t\t\t\t\t// the current material requires lighting info\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n\t\t\t\t} // refresh uniforms common to several materials\n\n\n\t\t\t\tif (fog && material.fog) {\n\t\t\t\t\tmaterials.refreshFogUniforms(m_uniforms, fog);\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms(m_uniforms, material, _pixelRatio, _height);\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\t\t\t}\n\n\t\t\tif (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\t\t\t}\n\n\t\t\tif (material.isSpriteMaterial) {\n\t\t\t\tp_uniforms.setValue(_gl, 'center', object.center);\n\t\t\t} // common matrices\n\n\n\t\t\tp_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n\t\t\tp_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n\t\t\tp_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n\t\t\treturn program;\n\t\t} // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n\t\tfunction markUniformsLightsNeedsUpdate(uniforms, value) {\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\t\t}\n\n\t\tfunction materialNeedsLights(material) {\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;\n\t\t} //\n\n\n\t\tthis.setFramebuffer = function (value) {\n\t\t\tif (_framebuffer !== value && _currentRenderTarget === null) _gl.bindFramebuffer(36160, value);\n\t\t\t_framebuffer = value;\n\t\t};\n\n\t\tthis.getActiveCubeFace = function () {\n\t\t\treturn _currentActiveCubeFace;\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\t\t\treturn _currentActiveMipmapLevel;\n\t\t};\n\n\t\tthis.getRenderList = function () {\n\t\t\treturn currentRenderList;\n\t\t};\n\n\t\tthis.setRenderList = function (renderList) {\n\t\t\tcurrentRenderList = renderList;\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\t\t\treturn _currentRenderTarget;\n\t\t};\n\n\t\tthis.setRenderTarget = function (renderTarget, activeCubeFace, activeMipmapLevel) {\n\t\t\tif (activeCubeFace === void 0) {\n\t\t\t\tactiveCubeFace = 0;\n\t\t\t}\n\n\t\t\tif (activeMipmapLevel === void 0) {\n\t\t\t\tactiveMipmapLevel = 0;\n\t\t\t}\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tif (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n\t\t\t\ttextures.setupRenderTarget(renderTarget);\n\t\t\t}\n\n\t\t\tvar framebuffer = _framebuffer;\n\t\t\tvar isCube = false;\n\n\t\t\tif (renderTarget) {\n\t\t\t\tvar __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n\t\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\n\t\t\t\t\tframebuffer = __webglFramebuffer[activeCubeFace];\n\t\t\t\t\tisCube = true;\n\t\t\t\t} else if (renderTarget.isWebGLMultisampleRenderTarget) {\n\t\t\t\t\tframebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\n\t\t\t\t} else {\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy(renderTarget.viewport);\n\n\t\t\t\t_currentScissor.copy(renderTarget.scissor);\n\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\t\t\t} else {\n\t\t\t\t_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\n\n\t\t\t\t_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\n\n\t\t\t\t_currentScissorTest = _scissorTest;\n\t\t\t}\n\n\t\t\tif (_currentFramebuffer !== framebuffer) {\n\t\t\t\t_gl.bindFramebuffer(36160, framebuffer);\n\n\t\t\t\t_currentFramebuffer = framebuffer;\n\t\t\t}\n\n\t\t\tstate.viewport(_currentViewport);\n\t\t\tstate.scissor(_currentScissor);\n\t\t\tstate.setScissorTest(_currentScissorTest);\n\n\t\t\tif (isCube) {\n\t\t\t\tvar textureProperties = properties.get(renderTarget.texture);\n\n\t\t\t\t_gl.framebufferTexture2D(36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel);\n\t\t\t}\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer, activeCubeFaceIndex) {\n\t\t\tif (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined) {\n\t\t\t\tframebuffer = framebuffer[activeCubeFaceIndex];\n\t\t\t}\n\n\t\t\tif (framebuffer) {\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif (framebuffer !== _currentFramebuffer) {\n\t\t\t\t\t_gl.bindFramebuffer(36160, framebuffer);\n\n\t\t\t\t\trestore = true;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\t\tif (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(35739)) {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar halfFloatSupportedByExt = textureType === HalfFloatType && (extensions.has('EXT_color_buffer_half_float') || capabilities.isWebGL2 && extensions.has('EXT_color_buffer_float'));\n\n\t\t\t\t\tif (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(35738) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t!(textureType === FloatType && (capabilities.isWebGL2 || extensions.has('OES_texture_float') || extensions.has('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t!halfFloatSupportedByExt) {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_gl.checkFramebufferStatus(36160) === 36053) {\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\t\t\tif (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n\t\t\t\t\t\t\t_gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (restore) {\n\t\t\t\t\t\t_gl.bindFramebuffer(36160, _currentFramebuffer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function (position, texture, level) {\n\t\t\tif (level === void 0) {\n\t\t\t\tlevel = 0;\n\t\t\t}\n\n\t\t\tvar levelScale = Math.pow(2, -level);\n\t\t\tvar width = Math.floor(texture.image.width * levelScale);\n\t\t\tvar height = Math.floor(texture.image.height * levelScale);\n\t\t\tvar glFormat = utils.convert(texture.format);\n\t\t\ttextures.setTexture2D(texture, 0);\n\n\t\t\t_gl.copyTexImage2D(3553, level, glFormat, position.x, position.y, width, height, 0);\n\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.copyTextureToTexture = function (position, srcTexture, dstTexture, level) {\n\t\t\tif (level === void 0) {\n\t\t\t\tlevel = 0;\n\t\t\t}\n\n\t\t\tvar width = srcTexture.image.width;\n\t\t\tvar height = srcTexture.image.height;\n\t\t\tvar glFormat = utils.convert(dstTexture.format);\n\t\t\tvar glType = utils.convert(dstTexture.type);\n\t\t\ttextures.setTexture2D(dstTexture, 0); // As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\n\t\t\t_gl.pixelStorei(37440, dstTexture.flipY);\n\n\t\t\t_gl.pixelStorei(37441, dstTexture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(3317, dstTexture.unpackAlignment);\n\n\t\t\tif (srcTexture.isDataTexture) {\n\t\t\t\t_gl.texSubImage2D(3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n\t\t\t} else {\n\t\t\t\tif (srcTexture.isCompressedTexture) {\n\t\t\t\t\t_gl.compressedTexSubImage2D(3553, level, position.x, position.y, srcTexture.mipmaps[0].width, srcTexture.mipmaps[0].height, glFormat, srcTexture.mipmaps[0].data);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.texSubImage2D(3553, level, position.x, position.y, glFormat, glType, srcTexture.image);\n\t\t\t\t}\n\t\t\t} // Generate mipmaps only when copying level 0\n\n\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(3553);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.initTexture = function (texture) {\n\t\t\ttextures.setTexture2D(texture, 0);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.resetState = function () {\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\t\t};\n\n\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n\t\t\t\tdetail: this\n\t\t\t})); // eslint-disable-line no-undef\n\n\t\t}\n\t}\n\n\tfunction WebGL1Renderer(parameters) {\n\t\tWebGLRenderer.call(this, parameters);\n\t}\n\n\tWebGL1Renderer.prototype = Object.assign(Object.create(WebGLRenderer.prototype), {\n\t\tconstructor: WebGL1Renderer,\n\t\tisWebGL1Renderer: true\n\t});\n\n\tvar FogExp2 = /*#__PURE__*/function () {\n\t\tfunction FogExp2(color, density) {\n\t\t\tObject.defineProperty(this, 'isFogExp2', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\tthis.name = '';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.density = density !== undefined ? density : 0.00025;\n\t\t}\n\n\t\tvar _proto = FogExp2.prototype;\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new FogExp2(this.color, this.density);\n\t\t};\n\n\t\t_proto.toJSON = function toJSON()\n\t\t/* meta */\n\t\t{\n\t\t\treturn {\n\t\t\t\ttype: 'FogExp2',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tdensity: this.density\n\t\t\t};\n\t\t};\n\n\t\treturn FogExp2;\n\t}();\n\n\tvar Fog = /*#__PURE__*/function () {\n\t\tfunction Fog(color, near, far) {\n\t\t\tObject.defineProperty(this, 'isFog', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\tthis.name = '';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.near = near !== undefined ? near : 1;\n\t\t\tthis.far = far !== undefined ? far : 1000;\n\t\t}\n\n\t\tvar _proto = Fog.prototype;\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new Fog(this.color, this.near, this.far);\n\t\t};\n\n\t\t_proto.toJSON = function toJSON()\n\t\t/* meta */\n\t\t{\n\t\t\treturn {\n\t\t\t\ttype: 'Fog',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tnear: this.near,\n\t\t\t\tfar: this.far\n\t\t\t};\n\t\t};\n\n\t\treturn Fog;\n\t}();\n\n\tvar Scene = /*#__PURE__*/function (_Object3D) {\n\t\t_inheritsLoose(Scene, _Object3D);\n\n\t\tfunction Scene() {\n\t\t\tvar _this;\n\n\t\t\t_this = _Object3D.call(this) || this;\n\t\t\tObject.defineProperty(_assertThisInitialized(_this), 'isScene', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\t_this.type = 'Scene';\n\t\t\t_this.background = null;\n\t\t\t_this.environment = null;\n\t\t\t_this.fog = null;\n\t\t\t_this.overrideMaterial = null;\n\t\t\t_this.autoUpdate = true; // checked by the renderer\n\n\t\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n\t\t\t\t\tdetail: _assertThisInitialized(_this)\n\t\t\t\t})); // eslint-disable-line no-undef\n\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = Scene.prototype;\n\n\t\t_proto.copy = function copy(source, recursive) {\n\t\t\t_Object3D.prototype.copy.call(this, source, recursive);\n\n\t\t\tif (source.background !== null) this.background = source.background.clone();\n\t\t\tif (source.environment !== null) this.environment = source.environment.clone();\n\t\t\tif (source.fog !== null) this.fog = source.fog.clone();\n\t\t\tif (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toJSON = function toJSON(meta) {\n\t\t\tvar data = _Object3D.prototype.toJSON.call(this, meta);\n\n\t\t\tif (this.background !== null) data.object.background = this.background.toJSON(meta);\n\t\t\tif (this.environment !== null) data.object.environment = this.environment.toJSON(meta);\n\t\t\tif (this.fog !== null) data.object.fog = this.fog.toJSON();\n\t\t\treturn data;\n\t\t};\n\n\t\treturn Scene;\n\t}(Object3D);\n\n\tfunction InterleavedBuffer(array, stride) {\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = {\n\t\t\toffset: 0,\n\t\t\tcount: -1\n\t\t};\n\t\tthis.version = 0;\n\t\tthis.uuid = MathUtils.generateUUID();\n\t}\n\n\tObject.defineProperty(InterleavedBuffer.prototype, 'needsUpdate', {\n\t\tset: function set(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\t});\n\tObject.assign(InterleavedBuffer.prototype, {\n\t\tisInterleavedBuffer: true,\n\t\tonUploadCallback: function onUploadCallback() {},\n\t\tsetUsage: function setUsage(value) {\n\t\t\tthis.usage = value;\n\t\t\treturn this;\n\t\t},\n\t\tcopy: function copy(source) {\n\t\t\tthis.array = new source.array.constructor(source.array);\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.usage = source.usage;\n\t\t\treturn this;\n\t\t},\n\t\tcopyAt: function copyAt(index1, attribute, index2) {\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor (var i = 0, l = this.stride; i < l; i++) {\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tset: function set(value, offset) {\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tthis.array.set(value, offset);\n\t\t\treturn this;\n\t\t},\n\t\tclone: function clone(data) {\n\t\t\tif (data.arrayBuffers === undefined) {\n\t\t\t\tdata.arrayBuffers = {};\n\t\t\t}\n\n\t\t\tif (this.array.buffer._uuid === undefined) {\n\t\t\t\tthis.array.buffer._uuid = MathUtils.generateUUID();\n\t\t\t}\n\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer;\n\t\t\t}\n\n\t\t\tvar array = new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);\n\t\t\tvar ib = new InterleavedBuffer(array, this.stride);\n\t\t\tib.setUsage(this.usage);\n\t\t\treturn ib;\n\t\t},\n\t\tonUpload: function onUpload(callback) {\n\t\t\tthis.onUploadCallback = callback;\n\t\t\treturn this;\n\t\t},\n\t\ttoJSON: function toJSON(data) {\n\t\t\tif (data.arrayBuffers === undefined) {\n\t\t\t\tdata.arrayBuffers = {};\n\t\t\t} // generate UUID for array buffer if necessary\n\n\n\t\t\tif (this.array.buffer._uuid === undefined) {\n\t\t\t\tthis.array.buffer._uuid = MathUtils.generateUUID();\n\t\t\t}\n\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer));\n\t\t\t} //\n\n\n\t\t\treturn {\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tstride: this.stride\n\t\t\t};\n\t\t}\n\t});\n\n\tvar _vector$6 = new Vector3();\n\n\tfunction InterleavedBufferAttribute(interleavedBuffer, itemSize, offset, normalized) {\n\t\tthis.name = '';\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\t\tthis.normalized = normalized === true;\n\t}\n\n\tObject.defineProperties(InterleavedBufferAttribute.prototype, {\n\t\tcount: {\n\t\t\tget: function get() {\n\t\t\t\treturn this.data.count;\n\t\t\t}\n\t\t},\n\t\tarray: {\n\t\t\tget: function get() {\n\t\t\t\treturn this.data.array;\n\t\t\t}\n\t\t},\n\t\tneedsUpdate: {\n\t\t\tset: function set(value) {\n\t\t\t\tthis.data.needsUpdate = value;\n\t\t\t}\n\t\t}\n\t});\n\tObject.assign(InterleavedBufferAttribute.prototype, {\n\t\tisInterleavedBufferAttribute: true,\n\t\tapplyMatrix4: function applyMatrix4(m) {\n\t\t\tfor (var i = 0, l = this.data.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.applyMatrix4(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tsetX: function setX(index, x) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset] = x;\n\t\t\treturn this;\n\t\t},\n\t\tsetY: function setY(index, y) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 1] = y;\n\t\t\treturn this;\n\t\t},\n\t\tsetZ: function setZ(index, z) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 2] = z;\n\t\t\treturn this;\n\t\t},\n\t\tsetW: function setW(index, w) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 3] = w;\n\t\t\treturn this;\n\t\t},\n\t\tgetX: function getX(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset];\n\t\t},\n\t\tgetY: function getY(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 1];\n\t\t},\n\t\tgetZ: function getZ(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 2];\n\t\t},\n\t\tgetW: function getW(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 3];\n\t\t},\n\t\tsetXY: function setXY(index, x, y) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\treturn this;\n\t\t},\n\t\tsetXYZ: function setXYZ(index, x, y, z) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\tthis.data.array[index + 2] = z;\n\t\t\treturn this;\n\t\t},\n\t\tsetXYZW: function setXYZW(index, x, y, z, w) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\tthis.data.array[index + 2] = z;\n\t\t\tthis.data.array[index + 3] = w;\n\t\t\treturn this;\n\t\t},\n\t\tclone: function clone(data) {\n\t\t\tif (data === undefined) {\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor (var i = 0; i < this.count; i++) {\n\t\t\t\t\tvar index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor (var j = 0; j < this.itemSize; j++) {\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute(new this.array.constructor(array), this.itemSize, this.normalized);\n\t\t\t} else {\n\t\t\t\tif (data.interleavedBuffers === undefined) {\n\t\t\t\t\tdata.interleavedBuffers = {};\n\t\t\t\t}\n\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.clone(data);\n\t\t\t\t}\n\n\t\t\t\treturn new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);\n\t\t\t}\n\t\t},\n\t\ttoJSON: function toJSON(data) {\n\t\t\tif (data === undefined) {\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor (var i = 0; i < this.count; i++) {\n\t\t\t\t\tvar index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor (var j = 0; j < this.itemSize; j++) {\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\n\t\t\t\t\t}\n\t\t\t\t} // deinterleave data and save it as an ordinary buffer attribute for now\n\n\n\t\t\t\treturn {\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// save as true interlaved attribtue\n\t\t\t\tif (data.interleavedBuffers === undefined) {\n\t\t\t\t\tdata.interleavedBuffers = {};\n\t\t\t\t}\n\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.toJSON(data);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\tdata: this.data.uuid,\n\t\t\t\t\toffset: this.offset,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\trotation: <float>,\n\t *\tsizeAttenuation: <bool>\n\t * }\n\t */\n\n\tfunction SpriteMaterial(parameters) {\n\t\tMaterial.call(this);\n\t\tthis.type = 'SpriteMaterial';\n\t\tthis.color = new Color(0xffffff);\n\t\tthis.map = null;\n\t\tthis.alphaMap = null;\n\t\tthis.rotation = 0;\n\t\tthis.sizeAttenuation = true;\n\t\tthis.transparent = true;\n\t\tthis.setValues(parameters);\n\t}\n\n\tSpriteMaterial.prototype = Object.create(Material.prototype);\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tSpriteMaterial.prototype.copy = function (source) {\n\t\tMaterial.prototype.copy.call(this, source);\n\t\tthis.color.copy(source.color);\n\t\tthis.map = source.map;\n\t\tthis.alphaMap = source.alphaMap;\n\t\tthis.rotation = source.rotation;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\t\treturn this;\n\t};\n\n\tvar _geometry;\n\n\tvar _intersectPoint = new Vector3();\n\n\tvar _worldScale = new Vector3();\n\n\tvar _mvPosition = new Vector3();\n\n\tvar _alignedPosition = new Vector2();\n\n\tvar _rotatedPosition = new Vector2();\n\n\tvar _viewWorldMatrix = new Matrix4();\n\n\tvar _vA$1 = new Vector3();\n\n\tvar _vB$1 = new Vector3();\n\n\tvar _vC$1 = new Vector3();\n\n\tvar _uvA$1 = new Vector2();\n\n\tvar _uvB$1 = new Vector2();\n\n\tvar _uvC$1 = new Vector2();\n\n\tfunction Sprite(material) {\n\t\tObject3D.call(this);\n\t\tthis.type = 'Sprite';\n\n\t\tif (_geometry === undefined) {\n\t\t\t_geometry = new BufferGeometry();\n\t\t\tvar float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\n\t\t\tvar interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n\n\t\t\t_geometry.setIndex([0, 1, 2, 0, 2, 3]);\n\n\t\t\t_geometry.setAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n\n\t\t\t_geometry.setAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material !== undefined ? material : new SpriteMaterial();\n\t\tthis.center = new Vector2(0.5, 0.5);\n\t}\n\n\tSprite.prototype = Object.assign(Object.create(Object3D.prototype), {\n\t\tconstructor: Sprite,\n\t\tisSprite: true,\n\t\traycast: function raycast(raycaster, intersects) {\n\t\t\tif (raycaster.camera === null) {\n\t\t\t\tconsole.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');\n\t\t\t}\n\n\t\t\t_worldScale.setFromMatrixScale(this.matrixWorld);\n\n\t\t\t_viewWorldMatrix.copy(raycaster.camera.matrixWorld);\n\n\t\t\tthis.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse, this.matrixWorld);\n\n\t\t\t_mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n\n\t\t\tif (raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false) {\n\t\t\t\t_worldScale.multiplyScalar(-_mvPosition.z);\n\t\t\t}\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\n\t\t\tif (rotation !== 0) {\n\t\t\t\tcos = Math.cos(rotation);\n\t\t\t\tsin = Math.sin(rotation);\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\t\t\ttransformVertex(_vA$1.set(-0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\t\t\ttransformVertex(_vB$1.set(0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\t\t\ttransformVertex(_vC$1.set(0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n\t\t\t_uvA$1.set(0, 0);\n\n\t\t\t_uvB$1.set(1, 0);\n\n\t\t\t_uvC$1.set(1, 1); // check first triangle\n\n\n\t\t\tvar intersect = raycaster.ray.intersectTriangle(_vA$1, _vB$1, _vC$1, false, _intersectPoint);\n\n\t\t\tif (intersect === null) {\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex(_vB$1.set(-0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n\t\t\t\t_uvB$1.set(0, 1);\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle(_vA$1, _vC$1, _vB$1, false, _intersectPoint);\n\n\t\t\t\tif (intersect === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo(_intersectPoint);\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\n\t\t\tintersects.push({\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: _intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV(_intersectPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2()),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\t\t\t});\n\t\t},\n\t\tcopy: function copy(source) {\n\t\t\tObject3D.prototype.copy.call(this, source);\n\t\t\tif (source.center !== undefined) this.center.copy(source.center);\n\t\t\tthis.material = source.material;\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tfunction transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n\t\t// compute position in camera space\n\t\t_alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\n\n\n\t\tif (sin !== undefined) {\n\t\t\t_rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\n\t\t\t_rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\n\t\t} else {\n\t\t\t_rotatedPosition.copy(_alignedPosition);\n\t\t}\n\n\t\tvertexPosition.copy(mvPosition);\n\t\tvertexPosition.x += _rotatedPosition.x;\n\t\tvertexPosition.y += _rotatedPosition.y; // transform to world space\n\n\t\tvertexPosition.applyMatrix4(_viewWorldMatrix);\n\t}\n\n\tvar _v1$4 = new Vector3();\n\n\tvar _v2$2 = new Vector3();\n\n\tfunction LOD() {\n\t\tObject3D.call(this);\n\t\tthis._currentLevel = 0;\n\t\tthis.type = 'LOD';\n\t\tObject.defineProperties(this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t});\n\t\tthis.autoUpdate = true;\n\t}\n\n\tLOD.prototype = Object.assign(Object.create(Object3D.prototype), {\n\t\tconstructor: LOD,\n\t\tisLOD: true,\n\t\tcopy: function copy(source) {\n\t\t\tObject3D.prototype.copy.call(this, source, false);\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor (var i = 0, l = levels.length; i < l; i++) {\n\t\t\t\tvar level = levels[i];\n\t\t\t\tthis.addLevel(level.object.clone(), level.distance);\n\t\t\t}\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\treturn this;\n\t\t},\n\t\taddLevel: function addLevel(object, distance) {\n\t\t\tif (distance === void 0) {\n\t\t\t\tdistance = 0;\n\t\t\t}\n\n\t\t\tdistance = Math.abs(distance);\n\t\t\tvar levels = this.levels;\n\t\t\tvar l;\n\n\t\t\tfor (l = 0; l < levels.length; l++) {\n\t\t\t\tif (distance < levels[l].distance) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels.splice(l, 0, {\n\t\t\t\tdistance: distance,\n\t\t\t\tobject: object\n\t\t\t});\n\t\t\tthis.add(object);\n\t\t\treturn this;\n\t\t},\n\t\tgetCurrentLevel: function getCurrentLevel() {\n\t\t\treturn this._currentLevel;\n\t\t},\n\t\tgetObjectForDistance: function getObjectForDistance(distance) {\n\t\t\tvar levels = this.levels;\n\n\t\t\tif (levels.length > 0) {\n\t\t\t\tvar i, l;\n\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\n\t\t\t\t\tif (distance < levels[i].distance) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn levels[i - 1].object;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\traycast: function raycast(raycaster, intersects) {\n\t\t\tvar levels = this.levels;\n\n\t\t\tif (levels.length > 0) {\n\t\t\t\t_v1$4.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo(_v1$4);\n\t\t\t\tthis.getObjectForDistance(distance).raycast(raycaster, intersects);\n\t\t\t}\n\t\t},\n\t\tupdate: function update(camera) {\n\t\t\tvar levels = this.levels;\n\n\t\t\tif (levels.length > 1) {\n\t\t\t\t_v1$4.setFromMatrixPosition(camera.matrixWorld);\n\n\t\t\t\t_v2$2.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\t\tvar distance = _v1$4.distanceTo(_v2$2) / camera.zoom;\n\t\t\t\tlevels[0].object.visible = true;\n\t\t\t\tvar i, l;\n\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\n\t\t\t\t\tif (distance >= levels[i].distance) {\n\t\t\t\t\t\tlevels[i - 1].object.visible = false;\n\t\t\t\t\t\tlevels[i].object.visible = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._currentLevel = i - 1;\n\n\t\t\t\tfor (; i < l; i++) {\n\t\t\t\t\tlevels[i].object.visible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttoJSON: function toJSON(meta) {\n\t\t\tvar data = Object3D.prototype.toJSON.call(this, meta);\n\t\t\tif (this.autoUpdate === false) data.object.autoUpdate = false;\n\t\t\tdata.object.levels = [];\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor (var i = 0, l = levels.length; i < l; i++) {\n\t\t\t\tvar level = levels[i];\n\t\t\t\tdata.object.levels.push({\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\t});\n\n\tvar _basePosition = new Vector3();\n\n\tvar _skinIndex = new Vector4();\n\n\tvar _skinWeight = new Vector4();\n\n\tvar _vector$7 = new Vector3();\n\n\tvar _matrix$1 = new Matrix4();\n\n\tfunction SkinnedMesh(geometry, material) {\n\t\tif (geometry && geometry.isGeometry) {\n\t\t\tconsole.error('THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t}\n\n\t\tMesh.call(this, geometry, material);\n\t\tthis.type = 'SkinnedMesh';\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\t}\n\n\tSkinnedMesh.prototype = Object.assign(Object.create(Mesh.prototype), {\n\t\tconstructor: SkinnedMesh,\n\t\tisSkinnedMesh: true,\n\t\tcopy: function copy(source) {\n\t\t\tMesh.prototype.copy.call(this, source);\n\t\t\tthis.bindMode = source.bindMode;\n\t\t\tthis.bindMatrix.copy(source.bindMatrix);\n\t\t\tthis.bindMatrixInverse.copy(source.bindMatrixInverse);\n\t\t\tthis.skeleton = source.skeleton;\n\t\t\treturn this;\n\t\t},\n\t\tbind: function bind(skeleton, bindMatrix) {\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif (bindMatrix === undefined) {\n\t\t\t\tthis.updateMatrixWorld(true);\n\t\t\t\tthis.skeleton.calculateInverses();\n\t\t\t\tbindMatrix = this.matrixWorld;\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy(bindMatrix);\n\t\t\tthis.bindMatrixInverse.copy(bindMatrix).invert();\n\t\t},\n\t\tpose: function pose() {\n\t\t\tthis.skeleton.pose();\n\t\t},\n\t\tnormalizeSkinWeights: function normalizeSkinWeights() {\n\t\t\tvar vector = new Vector4();\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor (var i = 0, l = skinWeight.count; i < l; i++) {\n\t\t\t\tvector.x = skinWeight.getX(i);\n\t\t\t\tvector.y = skinWeight.getY(i);\n\t\t\t\tvector.z = skinWeight.getZ(i);\n\t\t\t\tvector.w = skinWeight.getW(i);\n\t\t\t\tvar scale = 1.0 / vector.manhattanLength();\n\n\t\t\t\tif (scale !== Infinity) {\n\t\t\t\t\tvector.multiplyScalar(scale);\n\t\t\t\t} else {\n\t\t\t\t\tvector.set(1, 0, 0, 0); // do something reasonable\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\n\t\t\t}\n\t\t},\n\t\tupdateMatrixWorld: function updateMatrixWorld(force) {\n\t\t\tMesh.prototype.updateMatrixWorld.call(this, force);\n\n\t\t\tif (this.bindMode === 'attached') {\n\t\t\t\tthis.bindMatrixInverse.copy(this.matrixWorld).invert();\n\t\t\t} else if (this.bindMode === 'detached') {\n\t\t\t\tthis.bindMatrixInverse.copy(this.bindMatrix).invert();\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n\t\t\t}\n\t\t},\n\t\tboneTransform: function boneTransform(index, target) {\n\t\t\tvar skeleton = this.skeleton;\n\t\t\tvar geometry = this.geometry;\n\n\t\t\t_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\n\n\t\t\t_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\n\n\t\t\t_basePosition.fromBufferAttribute(geometry.attributes.position, index).applyMatrix4(this.bindMatrix);\n\n\t\t\ttarget.set(0, 0, 0);\n\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar weight = _skinWeight.getComponent(i);\n\n\t\t\t\tif (weight !== 0) {\n\t\t\t\t\tvar boneIndex = _skinIndex.getComponent(i);\n\n\t\t\t\t\t_matrix$1.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld, skeleton.boneInverses[boneIndex]);\n\n\t\t\t\t\ttarget.addScaledVector(_vector$7.copy(_basePosition).applyMatrix4(_matrix$1), weight);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn target.applyMatrix4(this.bindMatrixInverse);\n\t\t}\n\t});\n\n\tfunction Bone() {\n\t\tObject3D.call(this);\n\t\tthis.type = 'Bone';\n\t}\n\n\tBone.prototype = Object.assign(Object.create(Object3D.prototype), {\n\t\tconstructor: Bone,\n\t\tisBone: true\n\t});\n\n\tvar _offsetMatrix = new Matrix4();\n\n\tvar _identityMatrix = new Matrix4();\n\n\tfunction Skeleton(bones, boneInverses) {\n\t\tif (bones === void 0) {\n\t\t\tbones = [];\n\t\t}\n\n\t\tif (boneInverses === void 0) {\n\t\t\tboneInverses = [];\n\t\t}\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\t\tthis.bones = bones.slice(0);\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\t\tthis.frame = -1;\n\t\tthis.init();\n\t}\n\n\tObject.assign(Skeleton.prototype, {\n\t\tinit: function init() {\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tthis.boneMatrices = new Float32Array(bones.length * 16); // calculate inverse bone matrices if necessary\n\n\t\t\tif (boneInverses.length === 0) {\n\t\t\t\tthis.calculateInverses();\n\t\t\t} else {\n\t\t\t\t// handle special case\n\t\t\t\tif (bones.length !== boneInverses.length) {\n\t\t\t\t\tconsole.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');\n\t\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\t\tfor (var i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\t\t\tthis.boneInverses.push(new Matrix4());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcalculateInverses: function calculateInverses() {\n\t\t\tthis.boneInverses.length = 0;\n\n\t\t\tfor (var i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tvar inverse = new Matrix4();\n\n\t\t\t\tif (this.bones[i]) {\n\t\t\t\t\tinverse.copy(this.bones[i].matrixWorld).invert();\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push(inverse);\n\t\t\t}\n\t\t},\n\t\tpose: function pose() {\n\t\t\t// recover the bind-time world matrices\n\t\t\tfor (var i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tvar bone = this.bones[i];\n\n\t\t\t\tif (bone) {\n\t\t\t\t\tbone.matrixWorld.copy(this.boneInverses[i]).invert();\n\t\t\t\t}\n\t\t\t} // compute the local matrices, positions, rotations and scales\n\n\n\t\t\tfor (var _i = 0, _il = this.bones.length; _i < _il; _i++) {\n\t\t\t\tvar _bone = this.bones[_i];\n\n\t\t\t\tif (_bone) {\n\t\t\t\t\tif (_bone.parent && _bone.parent.isBone) {\n\t\t\t\t\t\t_bone.matrix.copy(_bone.parent.matrixWorld).invert();\n\n\t\t\t\t\t\t_bone.matrix.multiply(_bone.matrixWorld);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_bone.matrix.copy(_bone.matrixWorld);\n\t\t\t\t\t}\n\n\t\t\t\t\t_bone.matrix.decompose(_bone.position, _bone.quaternion, _bone.scale);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tupdate: function update() {\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture; // flatten bone matrices to array\n\n\t\t\tfor (var i = 0, il = bones.length; i < il; i++) {\n\t\t\t\t// compute the offset between the current and the original transform\n\t\t\t\tvar matrix = bones[i] ? bones[i].matrixWorld : _identityMatrix;\n\n\t\t\t\t_offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n\n\t\t\t\t_offsetMatrix.toArray(boneMatrices, i * 16);\n\t\t\t}\n\n\t\t\tif (boneTexture !== null) {\n\t\t\t\tboneTexture.needsUpdate = true;\n\t\t\t}\n\t\t},\n\t\tclone: function clone() {\n\t\t\treturn new Skeleton(this.bones, this.boneInverses);\n\t\t},\n\t\tgetBoneByName: function getBoneByName(name) {\n\t\t\tfor (var i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tvar bone = this.bones[i];\n\n\t\t\t\tif (bone.name === name) {\n\t\t\t\t\treturn bone;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t},\n\t\tdispose: function dispose() {\n\t\t\tif (this.boneTexture !== null) {\n\t\t\t\tthis.boneTexture.dispose();\n\t\t\t\tthis.boneTexture = null;\n\t\t\t}\n\t\t},\n\t\tfromJSON: function fromJSON(json, bones) {\n\t\t\tthis.uuid = json.uuid;\n\n\t\t\tfor (var i = 0, l = json.bones.length; i < l; i++) {\n\t\t\t\tvar uuid = json.bones[i];\n\t\t\t\tvar bone = bones[uuid];\n\n\t\t\t\tif (bone === undefined) {\n\t\t\t\t\tconsole.warn('THREE.Skeleton: No bone found with UUID:', uuid);\n\t\t\t\t\tbone = new Bone();\n\t\t\t\t}\n\n\t\t\t\tthis.bones.push(bone);\n\t\t\t\tthis.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));\n\t\t\t}\n\n\t\t\tthis.init();\n\t\t\treturn this;\n\t\t},\n\t\ttoJSON: function toJSON() {\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Skeleton',\n\t\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t\t},\n\t\t\t\tbones: [],\n\t\t\t\tboneInverses: []\n\t\t\t};\n\t\t\tdata.uuid = this.uuid;\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\n\t\t\tfor (var i = 0, l = bones.length; i < l; i++) {\n\t\t\t\tvar bone = bones[i];\n\t\t\t\tdata.bones.push(bone.uuid);\n\t\t\t\tvar boneInverse = boneInverses[i];\n\t\t\t\tdata.boneInverses.push(boneInverse.toArray());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\t});\n\n\tvar _instanceLocalMatrix = new Matrix4();\n\n\tvar _instanceWorldMatrix = new Matrix4();\n\n\tvar _instanceIntersects = [];\n\n\tvar _mesh = new Mesh();\n\n\tfunction InstancedMesh(geometry, material, count) {\n\t\tMesh.call(this, geometry, material);\n\t\tthis.instanceMatrix = new BufferAttribute(new Float32Array(count * 16), 16);\n\t\tthis.instanceColor = null;\n\t\tthis.count = count;\n\t\tthis.frustumCulled = false;\n\t}\n\n\tInstancedMesh.prototype = Object.assign(Object.create(Mesh.prototype), {\n\t\tconstructor: InstancedMesh,\n\t\tisInstancedMesh: true,\n\t\tcopy: function copy(source) {\n\t\t\tMesh.prototype.copy.call(this, source);\n\t\t\tthis.instanceMatrix.copy(source.instanceMatrix);\n\t\t\tif (source.instanceColor !== null) this.instanceColor = source.instanceColor.clone();\n\t\t\tthis.count = source.count;\n\t\t\treturn this;\n\t\t},\n\t\tgetColorAt: function getColorAt(index, color) {\n\t\t\tcolor.fromArray(this.instanceColor.array, index * 3);\n\t\t},\n\t\tgetMatrixAt: function getMatrixAt(index, matrix) {\n\t\t\tmatrix.fromArray(this.instanceMatrix.array, index * 16);\n\t\t},\n\t\traycast: function raycast(raycaster, intersects) {\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar raycastTimes = this.count;\n\t\t\t_mesh.geometry = this.geometry;\n\t\t\t_mesh.material = this.material;\n\t\t\tif (_mesh.material === undefined) return;\n\n\t\t\tfor (var instanceId = 0; instanceId < raycastTimes; instanceId++) {\n\t\t\t\t// calculate the world matrix for each instance\n\t\t\t\tthis.getMatrixAt(instanceId, _instanceLocalMatrix);\n\n\t\t\t\t_instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\n\n\n\t\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t\t_mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\n\n\n\t\t\t\tfor (var i = 0, l = _instanceIntersects.length; i < l; i++) {\n\t\t\t\t\tvar intersect = _instanceIntersects[i];\n\t\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\t\tintersect.object = this;\n\t\t\t\t\tintersects.push(intersect);\n\t\t\t\t}\n\n\t\t\t\t_instanceIntersects.length = 0;\n\t\t\t}\n\t\t},\n\t\tsetColorAt: function setColorAt(index, color) {\n\t\t\tif (this.instanceColor === null) {\n\t\t\t\tthis.instanceColor = new BufferAttribute(new Float32Array(this.count * 3), 3);\n\t\t\t}\n\n\t\t\tcolor.toArray(this.instanceColor.array, index * 3);\n\t\t},\n\t\tsetMatrixAt: function setMatrixAt(index, matrix) {\n\t\t\tmatrix.toArray(this.instanceMatrix.array, index * 16);\n\t\t},\n\t\tupdateMorphTargets: function updateMorphTargets() {},\n\t\tdispose: function dispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\t});\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tlinewidth: <float>,\n\t *\tlinecap: \"round\",\n\t *\tlinejoin: \"round\"\n\t * }\n\t */\n\n\tfunction LineBasicMaterial(parameters) {\n\t\tMaterial.call(this);\n\t\tthis.type = 'LineBasicMaterial';\n\t\tthis.color = new Color(0xffffff);\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\t\tthis.morphTargets = false;\n\t\tthis.setValues(parameters);\n\t}\n\n\tLineBasicMaterial.prototype = Object.create(Material.prototype);\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tLineBasicMaterial.prototype.copy = function (source) {\n\t\tMaterial.prototype.copy.call(this, source);\n\t\tthis.color.copy(source.color);\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\t\tthis.morphTargets = source.morphTargets;\n\t\treturn this;\n\t};\n\n\tvar _start = new Vector3();\n\n\tvar _end = new Vector3();\n\n\tvar _inverseMatrix$1 = new Matrix4();\n\n\tvar _ray$1 = new Ray();\n\n\tvar _sphere$2 = new Sphere();\n\n\tfunction Line(geometry, material) {\n\t\tif (geometry === void 0) {\n\t\t\tgeometry = new BufferGeometry();\n\t\t}\n\n\t\tif (material === void 0) {\n\t\t\tmaterial = new LineBasicMaterial();\n\t\t}\n\n\t\tObject3D.call(this);\n\t\tthis.type = 'Line';\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\t\tthis.updateMorphTargets();\n\t}\n\n\tLine.prototype = Object.assign(Object.create(Object3D.prototype), {\n\t\tconstructor: Line,\n\t\tisLine: true,\n\t\tcopy: function copy(source) {\n\t\t\tObject3D.prototype.copy.call(this, source);\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t},\n\t\tcomputeLineDistances: function computeLineDistances() {\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\t// we assume non-indexed geometry\n\t\t\t\tif (geometry.index === null) {\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [0];\n\n\t\t\t\t\tfor (var i = 1, l = positionAttribute.count; i < l; i++) {\n\t\t\t\t\t\t_start.fromBufferAttribute(positionAttribute, i - 1);\n\n\t\t\t\t\t\t_end.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\tlineDistances[i] = lineDistances[i - 1];\n\t\t\t\t\t\tlineDistances[i] += _start.distanceTo(_end);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\traycast: function raycast(raycaster, intersects) {\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Line.threshold; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$2.copy(geometry.boundingSphere);\n\n\t\t\t_sphere$2.applyMatrix4(matrixWorld);\n\n\t\t\t_sphere$2.radius += threshold;\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$2) === false) return; //\n\n\t\t\t_inverseMatrix$1.copy(matrixWorld).invert();\n\n\t\t\t_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\n\n\t\t\tvar localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = this.isLineSegments ? 2 : 1;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positionAttribute = attributes.position;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor (var i = 0, l = indices.length - 1; i < l; i += step) {\n\t\t\t\t\t\tvar a = indices[i];\n\t\t\t\t\t\tvar b = indices[i + 1];\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, a);\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, b);\n\n\t\t\t\t\t\tvar distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo(interRay);\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\n\t\t\t\t\t\tintersects.push({\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var _i = 0, _l = positionAttribute.count - 1; _i < _l; _i += step) {\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, _i);\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, _i + 1);\n\n\t\t\t\t\t\tvar _distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n\t\t\t\t\t\tif (_distSq > localThresholdSq) continue;\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar _distance = raycaster.ray.origin.distanceTo(interRay);\n\n\t\t\t\t\t\tif (_distance < raycaster.near || _distance > raycaster.far) continue;\n\t\t\t\t\t\tintersects.push({\n\t\t\t\t\t\t\tdistance: _distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\n\t\t\t\t\t\t\tindex: _i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t},\n\t\tupdateMorphTargets: function updateMorphTargets() {\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tvar morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (var m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tvar name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tvar _start$1 = new Vector3();\n\n\tvar _end$1 = new Vector3();\n\n\tfunction LineSegments(geometry, material) {\n\t\tLine.call(this, geometry, material);\n\t\tthis.type = 'LineSegments';\n\t}\n\n\tLineSegments.prototype = Object.assign(Object.create(Line.prototype), {\n\t\tconstructor: LineSegments,\n\t\tisLineSegments: true,\n\t\tcomputeLineDistances: function computeLineDistances() {\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\t// we assume non-indexed geometry\n\t\t\t\tif (geometry.index === null) {\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor (var i = 0, l = positionAttribute.count; i < l; i += 2) {\n\t\t\t\t\t\t_start$1.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\t_end$1.fromBufferAttribute(positionAttribute, i + 1);\n\n\t\t\t\t\t\tlineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n\t\t\t\t\t\tlineDistances[i + 1] = lineDistances[i] + _start$1.distanceTo(_end$1);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tfunction LineLoop(geometry, material) {\n\t\tLine.call(this, geometry, material);\n\t\tthis.type = 'LineLoop';\n\t}\n\n\tLineLoop.prototype = Object.assign(Object.create(Line.prototype), {\n\t\tconstructor: LineLoop,\n\t\tisLineLoop: true\n\t});\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tsize: <float>,\n\t *\tsizeAttenuation: <bool>\n\t *\n\t *\tmorphTargets: <bool>\n\t * }\n\t */\n\n\tfunction PointsMaterial(parameters) {\n\t\tMaterial.call(this);\n\t\tthis.type = 'PointsMaterial';\n\t\tthis.color = new Color(0xffffff);\n\t\tthis.map = null;\n\t\tthis.alphaMap = null;\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\t\tthis.morphTargets = false;\n\t\tthis.setValues(parameters);\n\t}\n\n\tPointsMaterial.prototype = Object.create(Material.prototype);\n\tPointsMaterial.prototype.constructor = PointsMaterial;\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tPointsMaterial.prototype.copy = function (source) {\n\t\tMaterial.prototype.copy.call(this, source);\n\t\tthis.color.copy(source.color);\n\t\tthis.map = source.map;\n\t\tthis.alphaMap = source.alphaMap;\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\t\tthis.morphTargets = source.morphTargets;\n\t\treturn this;\n\t};\n\n\tvar _inverseMatrix$2 = new Matrix4();\n\n\tvar _ray$2 = new Ray();\n\n\tvar _sphere$3 = new Sphere();\n\n\tvar _position$1 = new Vector3();\n\n\tfunction Points(geometry, material) {\n\t\tif (geometry === void 0) {\n\t\t\tgeometry = new BufferGeometry();\n\t\t}\n\n\t\tif (material === void 0) {\n\t\t\tmaterial = new PointsMaterial();\n\t\t}\n\n\t\tObject3D.call(this);\n\t\tthis.type = 'Points';\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\t\tthis.updateMorphTargets();\n\t}\n\n\tPoints.prototype = Object.assign(Object.create(Object3D.prototype), {\n\t\tconstructor: Points,\n\t\tisPoints: true,\n\t\tcopy: function copy(source) {\n\t\t\tObject3D.prototype.copy.call(this, source);\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t},\n\t\traycast: function raycast(raycaster, intersects) {\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy(geometry.boundingSphere);\n\n\t\t\t_sphere$3.applyMatrix4(matrixWorld);\n\n\t\t\t_sphere$3.radius += threshold;\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$3) === false) return; //\n\n\t\t\t_inverseMatrix$2.copy(matrixWorld).invert();\n\n\t\t\t_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2);\n\n\t\t\tvar localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positionAttribute = attributes.position;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor (var i = 0, il = indices.length; i < il; i++) {\n\t\t\t\t\t\tvar a = indices[i];\n\n\t\t\t\t\t\t_position$1.fromBufferAttribute(positionAttribute, a);\n\n\t\t\t\t\t\ttestPoint(_position$1, a, localThresholdSq, matrixWorld, raycaster, intersects, this);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var _i = 0, l = positionAttribute.count; _i < l; _i++) {\n\t\t\t\t\t\t_position$1.fromBufferAttribute(positionAttribute, _i);\n\n\t\t\t\t\t\ttestPoint(_position$1, _i, localThresholdSq, matrixWorld, raycaster, intersects, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t},\n\t\tupdateMorphTargets: function updateMorphTargets() {\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tvar morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (var m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tvar name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\n\t\tvar rayPointDistanceSq = _ray$2.distanceSqToPoint(point);\n\n\t\tif (rayPointDistanceSq < localThresholdSq) {\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\t_ray$2.closestPointToPoint(point, intersectPoint);\n\n\t\t\tintersectPoint.applyMatrix4(matrixWorld);\n\t\t\tvar distance = raycaster.ray.origin.distanceTo(intersectPoint);\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\n\t\t\tintersects.push({\n\t\t\t\tdistance: distance,\n\t\t\t\tdistanceToRay: Math.sqrt(rayPointDistanceSq),\n\t\t\t\tpoint: intersectPoint,\n\t\t\t\tindex: index,\n\t\t\t\tface: null,\n\t\t\t\tobject: object\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction VideoTexture(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n\t\tTexture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\tthis.format = format !== undefined ? format : RGBFormat;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\tthis.generateMipmaps = false;\n\t\tvar scope = this;\n\n\t\tfunction updateVideo() {\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback(updateVideo);\n\t\t}\n\n\t\tif ('requestVideoFrameCallback' in video) {\n\t\t\tvideo.requestVideoFrameCallback(updateVideo);\n\t\t}\n\t}\n\n\tVideoTexture.prototype = Object.assign(Object.create(Texture.prototype), {\n\t\tconstructor: VideoTexture,\n\t\tclone: function clone() {\n\t\t\treturn new this.constructor(this.image).copy(this);\n\t\t},\n\t\tisVideoTexture: true,\n\t\tupdate: function update() {\n\t\t\tvar video = this.image;\n\t\t\tvar hasVideoFrameCallback = ('requestVideoFrameCallback' in video);\n\n\t\t\tif (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\n\t\t\t\tthis.needsUpdate = true;\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction CompressedTexture(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n\t\tTexture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\tthis.image = {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t\tthis.mipmaps = mipmaps; // no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false; // can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\t}\n\n\tCompressedTexture.prototype = Object.create(Texture.prototype);\n\tCompressedTexture.prototype.constructor = CompressedTexture;\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\tfunction CanvasTexture(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n\t\tTexture.call(this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\tthis.needsUpdate = true;\n\t}\n\n\tCanvasTexture.prototype = Object.create(Texture.prototype);\n\tCanvasTexture.prototype.constructor = CanvasTexture;\n\tCanvasTexture.prototype.isCanvasTexture = true;\n\n\tfunction DepthTexture(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif (format !== DepthFormat && format !== DepthStencilFormat) {\n\t\t\tthrow new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n\t\t}\n\n\t\tif (type === undefined && format === DepthFormat) type = UnsignedShortType;\n\t\tif (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n\t\tTexture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\tthis.image = {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\t}\n\n\tDepthTexture.prototype = Object.create(Texture.prototype);\n\tDepthTexture.prototype.constructor = DepthTexture;\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\tvar CircleGeometry = /*#__PURE__*/function (_BufferGeometry) {\n\t\t_inheritsLoose(CircleGeometry, _BufferGeometry);\n\n\t\tfunction CircleGeometry(radius, segments, thetaStart, thetaLength) {\n\t\t\tvar _this;\n\n\t\t\tif (radius === void 0) {\n\t\t\t\tradius = 1;\n\t\t\t}\n\n\t\t\tif (segments === void 0) {\n\t\t\t\tsegments = 8;\n\t\t\t}\n\n\t\t\tif (thetaStart === void 0) {\n\t\t\t\tthetaStart = 0;\n\t\t\t}\n\n\t\t\tif (thetaLength === void 0) {\n\t\t\t\tthetaLength = Math.PI * 2;\n\t\t\t}\n\n\t\t\t_this = _BufferGeometry.call(this) || this;\n\t\t\t_this.type = 'CircleGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tsegments: segments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tsegments = Math.max(3, segments); // buffers\n\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = []; // helper variables\n\n\t\t\tvar vertex = new Vector3();\n\t\t\tvar uv = new Vector2(); // center point\n\n\t\t\tvertices.push(0, 0, 0);\n\t\t\tnormals.push(0, 0, 1);\n\t\t\tuvs.push(0.5, 0.5);\n\n\t\t\tfor (var s = 0, i = 3; s <= segments; s++, i += 3) {\n\t\t\t\tvar segment = thetaStart + s / segments * thetaLength; // vertex\n\n\t\t\t\tvertex.x = radius * Math.cos(segment);\n\t\t\t\tvertex.y = radius * Math.sin(segment);\n\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\tnormals.push(0, 0, 1); // uvs\n\n\t\t\t\tuv.x = (vertices[i] / radius + 1) / 2;\n\t\t\t\tuv.y = (vertices[i + 1] / radius + 1) / 2;\n\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t} // indices\n\n\n\t\t\tfor (var _i = 1; _i <= segments; _i++) {\n\t\t\t\tindices.push(_i, _i + 1, 0);\n\t\t\t} // build geometry\n\n\n\t\t\t_this.setIndex(indices);\n\n\t\t\t_this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n\t\t\t_this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n\t\t\t_this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn CircleGeometry;\n\t}(BufferGeometry);\n\n\tvar CylinderGeometry = /*#__PURE__*/function (_BufferGeometry) {\n\t\t_inheritsLoose(CylinderGeometry, _BufferGeometry);\n\n\t\tfunction CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n\t\t\tvar _this;\n\n\t\t\tif (radiusTop === void 0) {\n\t\t\t\tradiusTop = 1;\n\t\t\t}\n\n\t\t\tif (radiusBottom === void 0) {\n\t\t\t\tradiusBottom = 1;\n\t\t\t}\n\n\t\t\tif (height === void 0) {\n\t\t\t\theight = 1;\n\t\t\t}\n\n\t\t\tif (radialSegments === void 0) {\n\t\t\t\tradialSegments = 8;\n\t\t\t}\n\n\t\t\tif (heightSegments === void 0) {\n\t\t\t\theightSegments = 1;\n\t\t\t}\n\n\t\t\tif (openEnded === void 0) {\n\t\t\t\topenEnded = false;\n\t\t\t}\n\n\t\t\tif (thetaStart === void 0) {\n\t\t\t\tthetaStart = 0;\n\t\t\t}\n\n\t\t\tif (thetaLength === void 0) {\n\t\t\t\tthetaLength = Math.PI * 2;\n\t\t\t}\n\n\t\t\t_this = _BufferGeometry.call(this) || this;\n\t\t\t_this.type = 'CylinderGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tradiusTop: radiusTop,\n\t\t\t\tradiusBottom: radiusBottom,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\n\t\t\tvar scope = _assertThisInitialized(_this);\n\n\t\t\tradialSegments = Math.floor(radialSegments);\n\t\t\theightSegments = Math.floor(heightSegments); // buffers\n\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = []; // helper variables\n\n\t\t\tvar index = 0;\n\t\t\tvar indexArray = [];\n\t\t\tvar halfHeight = height / 2;\n\t\t\tvar groupStart = 0; // generate geometry\n\n\t\t\tgenerateTorso();\n\n\t\t\tif (openEnded === false) {\n\t\t\t\tif (radiusTop > 0) generateCap(true);\n\t\t\t\tif (radiusBottom > 0) generateCap(false);\n\t\t\t} // build geometry\n\n\n\t\t\t_this.setIndex(indices);\n\n\t\t\t_this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n\t\t\t_this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n\t\t\t_this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\tfunction generateTorso() {\n\t\t\t\tvar normal = new Vector3();\n\t\t\t\tvar vertex = new Vector3();\n\t\t\t\tvar groupCount = 0; // this will be used to calculate the normal\n\n\t\t\t\tvar slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n\t\t\t\tfor (var y = 0; y <= heightSegments; y++) {\n\t\t\t\t\tvar indexRow = [];\n\t\t\t\t\tvar v = y / heightSegments; // calculate the radius of the current row\n\n\t\t\t\t\tvar radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n\t\t\t\t\tfor (var x = 0; x <= radialSegments; x++) {\n\t\t\t\t\t\tvar u = x / radialSegments;\n\t\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\t\t\t\t\t\tvar sinTheta = Math.sin(theta);\n\t\t\t\t\t\tvar cosTheta = Math.cos(theta); // vertex\n\n\t\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\t\tvertex.y = -v * height + halfHeight;\n\t\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\t\tnormal.set(sinTheta, slope, cosTheta).normalize();\n\t\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\t\tuvs.push(u, 1 - v); // save index of vertex in respective row\n\n\t\t\t\t\t\tindexRow.push(index++);\n\t\t\t\t\t} // now save vertices of the row in our index array\n\n\n\t\t\t\t\tindexArray.push(indexRow);\n\t\t\t\t} // generate indices\n\n\n\t\t\t\tfor (var _x = 0; _x < radialSegments; _x++) {\n\t\t\t\t\tfor (var _y = 0; _y < heightSegments; _y++) {\n\t\t\t\t\t\t// we use the index array to access the correct indices\n\t\t\t\t\t\tvar a = indexArray[_y][_x];\n\t\t\t\t\t\tvar b = indexArray[_y + 1][_x];\n\t\t\t\t\t\tvar c = indexArray[_y + 1][_x + 1];\n\t\t\t\t\t\tvar d = indexArray[_y][_x + 1]; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d); // update group counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\t\t\t\t\t}\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t}\n\n\t\t\tfunction generateCap(top) {\n\t\t\t\t// save the index of the first center vertex\n\t\t\t\tvar centerIndexStart = index;\n\t\t\t\tvar uv = new Vector2();\n\t\t\t\tvar vertex = new Vector3();\n\t\t\t\tvar groupCount = 0;\n\t\t\t\tvar radius = top === true ? radiusTop : radiusBottom;\n\t\t\t\tvar sign = top === true ? 1 : -1; // first we generate the center vertex data of the cap.\n\t\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\t\tfor (var x = 1; x <= radialSegments; x++) {\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertices.push(0, halfHeight * sign, 0); // normal\n\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\n\n\t\t\t\t\tuvs.push(0.5, 0.5); // increase index\n\n\t\t\t\t\tindex++;\n\t\t\t\t} // save the index of the last center vertex\n\n\n\t\t\t\tvar centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n\t\t\t\tfor (var _x2 = 0; _x2 <= radialSegments; _x2++) {\n\t\t\t\t\tvar u = _x2 / radialSegments;\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\t\t\t\t\tvar cosTheta = Math.cos(theta);\n\t\t\t\t\tvar sinTheta = Math.sin(theta); // vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\n\n\t\t\t\t\tuv.x = cosTheta * 0.5 + 0.5;\n\t\t\t\t\tuv.y = sinTheta * 0.5 * sign + 0.5;\n\t\t\t\t\tuvs.push(uv.x, uv.y); // increase index\n\n\t\t\t\t\tindex++;\n\t\t\t\t} // generate indices\n\n\n\t\t\t\tfor (var _x3 = 0; _x3 < radialSegments; _x3++) {\n\t\t\t\t\tvar c = centerIndexStart + _x3;\n\t\t\t\t\tvar i = centerIndexEnd + _x3;\n\n\t\t\t\t\tif (top === true) {\n\t\t\t\t\t\t// face top\n\t\t\t\t\t\tindices.push(i, i + 1, c);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// face bottom\n\t\t\t\t\t\tindices.push(i + 1, i, c);\n\t\t\t\t\t}\n\n\t\t\t\t\tgroupCount += 3;\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn CylinderGeometry;\n\t}(BufferGeometry);\n\n\tvar ConeGeometry = /*#__PURE__*/function (_CylinderGeometry) {\n\t\t_inheritsLoose(ConeGeometry, _CylinderGeometry);\n\n\t\tfunction ConeGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n\t\t\tvar _this;\n\n\t\t\tif (radius === void 0) {\n\t\t\t\tradius = 1;\n\t\t\t}\n\n\t\t\tif (height === void 0) {\n\t\t\t\theight = 1;\n\t\t\t}\n\n\t\t\tif (radialSegments === void 0) {\n\t\t\t\tradialSegments = 8;\n\t\t\t}\n\n\t\t\tif (heightSegments === void 0) {\n\t\t\t\theightSegments = 1;\n\t\t\t}\n\n\t\t\tif (openEnded === void 0) {\n\t\t\t\topenEnded = false;\n\t\t\t}\n\n\t\t\tif (thetaStart === void 0) {\n\t\t\t\tthetaStart = 0;\n\t\t\t}\n\n\t\t\tif (thetaLength === void 0) {\n\t\t\t\tthetaLength = Math.PI * 2;\n\t\t\t}\n\n\t\t\t_this = _CylinderGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) || this;\n\t\t\t_this.type = 'ConeGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn ConeGeometry;\n\t}(CylinderGeometry);\n\n\tvar PolyhedronGeometry = /*#__PURE__*/function (_BufferGeometry) {\n\t\t_inheritsLoose(PolyhedronGeometry, _BufferGeometry);\n\n\t\tfunction PolyhedronGeometry(vertices, indices, radius, detail) {\n\t\t\tvar _this;\n\n\t\t\tif (radius === void 0) {\n\t\t\t\tradius = 1;\n\t\t\t}\n\n\t\t\tif (detail === void 0) {\n\t\t\t\tdetail = 0;\n\t\t\t}\n\n\t\t\t_this = _BufferGeometry.call(this) || this;\n\t\t\t_this.type = 'PolyhedronGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tvertices: vertices,\n\t\t\t\tindices: indices,\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t}; // default buffer data\n\n\t\t\tvar vertexBuffer = [];\n\t\t\tvar uvBuffer = []; // the subdivision creates the vertex buffer data\n\n\t\t\tsubdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n\t\t\tapplyRadius(radius); // finally, create the uv data\n\n\t\t\tgenerateUVs(); // build non-indexed geometry\n\n\t\t\t_this.setAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n\n\t\t\t_this.setAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n\n\t\t\t_this.setAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n\t\t\tif (detail === 0) {\n\t\t\t\t_this.computeVertexNormals(); // flat normals\n\n\t\t\t} else {\n\t\t\t\t_this.normalizeNormals(); // smooth normals\n\n\t\t\t} // helper functions\n\n\n\t\t\tfunction subdivide(detail) {\n\t\t\t\tvar a = new Vector3();\n\t\t\t\tvar b = new Vector3();\n\t\t\t\tvar c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\t\tfor (var i = 0; i < indices.length; i += 3) {\n\t\t\t\t\t// get the vertices of the face\n\t\t\t\t\tgetVertexByIndex(indices[i + 0], a);\n\t\t\t\t\tgetVertexByIndex(indices[i + 1], b);\n\t\t\t\t\tgetVertexByIndex(indices[i + 2], c); // perform subdivision\n\n\t\t\t\t\tsubdivideFace(a, b, c, detail);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction subdivideFace(a, b, c, detail) {\n\t\t\t\tvar cols = detail + 1; // we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\t\tvar v = []; // construct all of the vertices for this subdivision\n\n\t\t\t\tfor (var i = 0; i <= cols; i++) {\n\t\t\t\t\tv[i] = [];\n\t\t\t\t\tvar aj = a.clone().lerp(c, i / cols);\n\t\t\t\t\tvar bj = b.clone().lerp(c, i / cols);\n\t\t\t\t\tvar rows = cols - i;\n\n\t\t\t\t\tfor (var j = 0; j <= rows; j++) {\n\t\t\t\t\t\tif (j === 0 && i === cols) {\n\t\t\t\t\t\t\tv[i][j] = aj;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tv[i][j] = aj.clone().lerp(bj, j / rows);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // construct all of the faces\n\n\n\t\t\t\tfor (var _i = 0; _i < cols; _i++) {\n\t\t\t\t\tfor (var _j = 0; _j < 2 * (cols - _i) - 1; _j++) {\n\t\t\t\t\t\tvar k = Math.floor(_j / 2);\n\n\t\t\t\t\t\tif (_j % 2 === 0) {\n\t\t\t\t\t\t\tpushVertex(v[_i][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[_i + 1][k]);\n\t\t\t\t\t\t\tpushVertex(v[_i][k]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpushVertex(v[_i][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[_i + 1][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[_i + 1][k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction applyRadius(radius) {\n\t\t\t\tvar vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\t\tfor (var i = 0; i < vertexBuffer.length; i += 3) {\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\n\t\t\t\t\tvertex.normalize().multiplyScalar(radius);\n\t\t\t\t\tvertexBuffer[i + 0] = vertex.x;\n\t\t\t\t\tvertexBuffer[i + 1] = vertex.y;\n\t\t\t\t\tvertexBuffer[i + 2] = vertex.z;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\t\t\t\tvar vertex = new Vector3();\n\n\t\t\t\tfor (var i = 0; i < vertexBuffer.length; i += 3) {\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\n\t\t\t\t\tvar u = azimuth(vertex) / 2 / Math.PI + 0.5;\n\t\t\t\t\tvar v = inclination(vertex) / Math.PI + 0.5;\n\t\t\t\t\tuvBuffer.push(u, 1 - v);\n\t\t\t\t}\n\n\t\t\t\tcorrectUVs();\n\t\t\t\tcorrectSeam();\n\t\t\t}\n\n\t\t\tfunction correctSeam() {\n\t\t\t\t// handle case when face straddles the seam, see #3269\n\t\t\t\tfor (var i = 0; i < uvBuffer.length; i += 6) {\n\t\t\t\t\t// uv data of a single face\n\t\t\t\t\tvar x0 = uvBuffer[i + 0];\n\t\t\t\t\tvar x1 = uvBuffer[i + 2];\n\t\t\t\t\tvar x2 = uvBuffer[i + 4];\n\t\t\t\t\tvar max = Math.max(x0, x1, x2);\n\t\t\t\t\tvar min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n\t\t\t\t\tif (max > 0.9 && min < 0.1) {\n\t\t\t\t\t\tif (x0 < 0.2) uvBuffer[i + 0] += 1;\n\t\t\t\t\t\tif (x1 < 0.2) uvBuffer[i + 2] += 1;\n\t\t\t\t\t\tif (x2 < 0.2) uvBuffer[i + 4] += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction pushVertex(vertex) {\n\t\t\t\tvertexBuffer.push(vertex.x, vertex.y, vertex.z);\n\t\t\t}\n\n\t\t\tfunction getVertexByIndex(index, vertex) {\n\t\t\t\tvar stride = index * 3;\n\t\t\t\tvertex.x = vertices[stride + 0];\n\t\t\t\tvertex.y = vertices[stride + 1];\n\t\t\t\tvertex.z = vertices[stride + 2];\n\t\t\t}\n\n\t\t\tfunction correctUVs() {\n\t\t\t\tvar a = new Vector3();\n\t\t\t\tvar b = new Vector3();\n\t\t\t\tvar c = new Vector3();\n\t\t\t\tvar centroid = new Vector3();\n\t\t\t\tvar uvA = new Vector2();\n\t\t\t\tvar uvB = new Vector2();\n\t\t\t\tvar uvC = new Vector2();\n\n\t\t\t\tfor (var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n\t\t\t\t\ta.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n\t\t\t\t\tb.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n\t\t\t\t\tc.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n\t\t\t\t\tuvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n\t\t\t\t\tuvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n\t\t\t\t\tuvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n\t\t\t\t\tcentroid.copy(a).add(b).add(c).divideScalar(3);\n\t\t\t\t\tvar azi = azimuth(centroid);\n\t\t\t\t\tcorrectUV(uvA, j + 0, a, azi);\n\t\t\t\t\tcorrectUV(uvB, j + 2, b, azi);\n\t\t\t\t\tcorrectUV(uvC, j + 4, c, azi);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction correctUV(uv, stride, vector, azimuth) {\n\t\t\t\tif (azimuth < 0 && uv.x === 1) {\n\t\t\t\t\tuvBuffer[stride] = uv.x - 1;\n\t\t\t\t}\n\n\t\t\t\tif (vector.x === 0 && vector.z === 0) {\n\t\t\t\t\tuvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n\t\t\t\t}\n\t\t\t} // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n\t\t\tfunction azimuth(vector) {\n\t\t\t\treturn Math.atan2(vector.z, -vector.x);\n\t\t\t} // Angle above the XZ plane.\n\n\n\t\t\tfunction inclination(vector) {\n\t\t\t\treturn Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn PolyhedronGeometry;\n\t}(BufferGeometry);\n\n\tvar DodecahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry) {\n\t\t_inheritsLoose(DodecahedronGeometry, _PolyhedronGeometry);\n\n\t\tfunction DodecahedronGeometry(radius, detail) {\n\t\t\tvar _this;\n\n\t\t\tif (radius === void 0) {\n\t\t\t\tradius = 1;\n\t\t\t}\n\n\t\t\tif (detail === void 0) {\n\t\t\t\tdetail = 0;\n\t\t\t}\n\n\t\t\tvar t = (1 + Math.sqrt(5)) / 2;\n\t\t\tvar r = 1 / t;\n\t\t\tvar vertices = [// (±1, ±1, ±1)\n\t\t\t-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n\t\t\t0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n\t\t\t-r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n\t\t\t-t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n\t\t\tvar indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n\t\t\t_this = _PolyhedronGeometry.call(this, vertices, indices, radius, detail) || this;\n\t\t\t_this.type = 'DodecahedronGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn DodecahedronGeometry;\n\t}(PolyhedronGeometry);\n\n\tvar _v0$2 = new Vector3();\n\n\tvar _v1$5 = new Vector3();\n\n\tvar _normal$1 = new Vector3();\n\n\tvar _triangle = new Triangle();\n\n\tvar EdgesGeometry = /*#__PURE__*/function (_BufferGeometry) {\n\t\t_inheritsLoose(EdgesGeometry, _BufferGeometry);\n\n\t\tfunction EdgesGeometry(geometry, thresholdAngle) {\n\t\t\tvar _this;\n\n\t\t\t_this = _BufferGeometry.call(this) || this;\n\t\t\t_this.type = 'EdgesGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tthresholdAngle: thresholdAngle\n\t\t\t};\n\t\t\tthresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1;\n\n\t\t\tif (geometry.isGeometry === true) {\n\t\t\t\tconsole.error('THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\treturn _assertThisInitialized(_this);\n\t\t\t}\n\n\t\t\tvar precisionPoints = 4;\n\t\t\tvar precision = Math.pow(10, precisionPoints);\n\t\t\tvar thresholdDot = Math.cos(MathUtils.DEG2RAD * thresholdAngle);\n\t\t\tvar indexAttr = geometry.getIndex();\n\t\t\tvar positionAttr = geometry.getAttribute('position');\n\t\t\tvar indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\t\t\tvar indexArr = [0, 0, 0];\n\t\t\tvar vertKeys = ['a', 'b', 'c'];\n\t\t\tvar hashes = new Array(3);\n\t\t\tvar edgeData = {};\n\t\t\tvar vertices = [];\n\n\t\t\tfor (var i = 0; i < indexCount; i += 3) {\n\t\t\t\tif (indexAttr) {\n\t\t\t\t\tindexArr[0] = indexAttr.getX(i);\n\t\t\t\t\tindexArr[1] = indexAttr.getX(i + 1);\n\t\t\t\t\tindexArr[2] = indexAttr.getX(i + 2);\n\t\t\t\t} else {\n\t\t\t\t\tindexArr[0] = i;\n\t\t\t\t\tindexArr[1] = i + 1;\n\t\t\t\t\tindexArr[2] = i + 2;\n\t\t\t\t}\n\n\t\t\t\tvar a = _triangle.a,\n\t\t\t\t\t\tb = _triangle.b,\n\t\t\t\t\t\tc = _triangle.c;\n\t\t\t\ta.fromBufferAttribute(positionAttr, indexArr[0]);\n\t\t\t\tb.fromBufferAttribute(positionAttr, indexArr[1]);\n\t\t\t\tc.fromBufferAttribute(positionAttr, indexArr[2]);\n\n\t\t\t\t_triangle.getNormal(_normal$1); // create hashes for the edge from the vertices\n\n\n\t\t\t\thashes[0] = Math.round(a.x * precision) + \",\" + Math.round(a.y * precision) + \",\" + Math.round(a.z * precision);\n\t\t\t\thashes[1] = Math.round(b.x * precision) + \",\" + Math.round(b.y * precision) + \",\" + Math.round(b.z * precision);\n\t\t\t\thashes[2] = Math.round(c.x * precision) + \",\" + Math.round(c.y * precision) + \",\" + Math.round(c.z * precision); // skip degenerate triangles\n\n\t\t\t\tif (hashes[0] === hashes[1] || hashes[1] === hashes[2] || hashes[2] === hashes[0]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} // iterate over every edge\n\n\n\t\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tvar jNext = (j + 1) % 3;\n\t\t\t\t\tvar vecHash0 = hashes[j];\n\t\t\t\t\tvar vecHash1 = hashes[jNext];\n\t\t\t\t\tvar v0 = _triangle[vertKeys[j]];\n\t\t\t\t\tvar v1 = _triangle[vertKeys[jNext]];\n\t\t\t\t\tvar hash = vecHash0 + \"_\" + vecHash1;\n\t\t\t\t\tvar reverseHash = vecHash1 + \"_\" + vecHash0;\n\n\t\t\t\t\tif (reverseHash in edgeData && edgeData[reverseHash]) {\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif (_normal$1.dot(edgeData[reverseHash].normal) <= thresholdDot) {\n\t\t\t\t\t\t\tvertices.push(v0.x, v0.y, v0.z);\n\t\t\t\t\t\t\tvertices.push(v1.x, v1.y, v1.z);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[reverseHash] = null;\n\t\t\t\t\t} else if (!(hash in edgeData)) {\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[hash] = {\n\t\t\t\t\t\t\tindex0: indexArr[j],\n\t\t\t\t\t\t\tindex1: indexArr[jNext],\n\t\t\t\t\t\t\tnormal: _normal$1.clone()\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // iterate over all remaining, unmatched edges and add them to the vertex array\n\n\n\t\t\tfor (var key in edgeData) {\n\t\t\t\tif (edgeData[key]) {\n\t\t\t\t\tvar _edgeData$key = edgeData[key],\n\t\t\t\t\t\t\tindex0 = _edgeData$key.index0,\n\t\t\t\t\t\t\tindex1 = _edgeData$key.index1;\n\n\t\t\t\t\t_v0$2.fromBufferAttribute(positionAttr, index0);\n\n\t\t\t\t\t_v1$5.fromBufferAttribute(positionAttr, index1);\n\n\t\t\t\t\tvertices.push(_v0$2.x, _v0$2.y, _v0$2.z);\n\t\t\t\t\tvertices.push(_v1$5.x, _v1$5.y, _v1$5.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn EdgesGeometry;\n\t}(BufferGeometry);\n\n\t/**\n\t * Port from https://github.com/mapbox/earcut (v2.2.2)\n\t */\n\tvar Earcut = {\n\t\ttriangulate: function triangulate(data, holeIndices, dim) {\n\t\t\tdim = dim || 2;\n\t\t\tvar hasHoles = holeIndices && holeIndices.length;\n\t\t\tvar outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\t\t\tvar outerNode = linkedList(data, 0, outerLen, dim, true);\n\t\t\tvar triangles = [];\n\t\t\tif (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\t\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\t\t\tif (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\t\tif (data.length > 80 * dim) {\n\t\t\t\tminX = maxX = data[0];\n\t\t\t\tminY = maxY = data[1];\n\n\t\t\t\tfor (var i = dim; i < outerLen; i += dim) {\n\t\t\t\t\tx = data[i];\n\t\t\t\t\ty = data[i + 1];\n\t\t\t\t\tif (x < minX) minX = x;\n\t\t\t\t\tif (y < minY) minY = y;\n\t\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\t} // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\n\t\t\t\tinvSize = Math.max(maxX - minX, maxY - minY);\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\t\t\t}\n\n\t\t\tearcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\t\t\treturn triangles;\n\t\t}\n\t}; // create a circular doubly linked list from polygon points in the specified winding order\n\n\tfunction linkedList(data, start, end, dim, clockwise) {\n\t\tvar i, last;\n\n\t\tif (clockwise === signedArea(data, start, end, dim) > 0) {\n\t\t\tfor (i = start; i < end; i += dim) {\n\t\t\t\tlast = insertNode(i, data[i], data[i + 1], last);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = end - dim; i >= start; i -= dim) {\n\t\t\t\tlast = insertNode(i, data[i], data[i + 1], last);\n\t\t\t}\n\t\t}\n\n\t\tif (last && equals(last, last.next)) {\n\t\t\tremoveNode(last);\n\t\t\tlast = last.next;\n\t\t}\n\n\t\treturn last;\n\t} // eliminate colinear or duplicate points\n\n\n\tfunction filterPoints(start, end) {\n\t\tif (!start) return start;\n\t\tif (!end) end = start;\n\t\tvar p = start,\n\t\t\t\tagain;\n\n\t\tdo {\n\t\t\tagain = false;\n\n\t\t\tif (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n\t\t\t\tremoveNode(p);\n\t\t\t\tp = end = p.prev;\n\t\t\t\tif (p === p.next) break;\n\t\t\t\tagain = true;\n\t\t\t} else {\n\t\t\t\tp = p.next;\n\t\t\t}\n\t\t} while (again || p !== end);\n\n\t\treturn end;\n\t} // main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\n\tfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n\t\tif (!ear) return; // interlink polygon nodes in z-order\n\n\t\tif (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\t\tvar stop = ear,\n\t\t\t\tprev,\n\t\t\t\tnext; // iterate through ears, slicing them one by one\n\n\t\twhile (ear.prev !== ear.next) {\n\t\t\tprev = ear.prev;\n\t\t\tnext = ear.next;\n\n\t\t\tif (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n\t\t\t\t// cut off the triangle\n\t\t\t\ttriangles.push(prev.i / dim);\n\t\t\t\ttriangles.push(ear.i / dim);\n\t\t\t\ttriangles.push(next.i / dim);\n\t\t\t\tremoveNode(ear); // skipping the next vertex leads to less sliver triangles\n\n\t\t\t\tear = next.next;\n\t\t\t\tstop = next.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tear = next; // if we looped through the whole remaining polygon and can't find any more ears\n\n\t\t\tif (ear === stop) {\n\t\t\t\t// try filtering points and slicing again\n\t\t\t\tif (!pass) {\n\t\t\t\t\tearcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\n\t\t\t\t} else if (pass === 1) {\n\t\t\t\t\tear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n\t\t\t\t\tearcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\n\t\t\t\t} else if (pass === 2) {\n\t\t\t\t\tsplitEarcut(ear, triangles, dim, minX, minY, invSize);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} // check whether a polygon node forms a valid ear with adjacent nodes\n\n\n\tfunction isEar(ear) {\n\t\tvar a = ear.prev,\n\t\t\t\tb = ear,\n\t\t\t\tc = ear.next;\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\t\t// now make sure we don't have other points inside the potential ear\n\n\t\tvar p = ear.next.next;\n\n\t\twhile (p !== ear.prev) {\n\t\t\tif (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.next;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction isEarHashed(ear, minX, minY, invSize) {\n\t\tvar a = ear.prev,\n\t\t\t\tb = ear,\n\t\t\t\tc = ear.next;\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\t\t// triangle bbox; min & max are calculated like this for speed\n\n\t\tvar minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n\t\t\t\tminTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n\t\t\t\tmaxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n\t\t\t\tmaxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\n\n\t\tvar minZ = zOrder(minTX, minTY, minX, minY, invSize),\n\t\t\t\tmaxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\t\tvar p = ear.prevZ,\n\t\t\t\tn = ear.nextZ; // look for points inside the triangle in both directions\n\n\t\twhile (p && p.z >= minZ && n && n.z <= maxZ) {\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.prevZ;\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n\t\t\tn = n.nextZ;\n\t\t} // look for remaining points in decreasing z-order\n\n\n\t\twhile (p && p.z >= minZ) {\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.prevZ;\n\t\t} // look for remaining points in increasing z-order\n\n\n\t\twhile (n && n.z <= maxZ) {\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n\t\t\tn = n.nextZ;\n\t\t}\n\n\t\treturn true;\n\t} // go through all polygon nodes and cure small local self-intersections\n\n\n\tfunction cureLocalIntersections(start, triangles, dim) {\n\t\tvar p = start;\n\n\t\tdo {\n\t\t\tvar a = p.prev,\n\t\t\t\t\tb = p.next.next;\n\n\t\t\tif (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\t\t\t\ttriangles.push(a.i / dim);\n\t\t\t\ttriangles.push(p.i / dim);\n\t\t\t\ttriangles.push(b.i / dim); // remove two nodes involved\n\n\t\t\t\tremoveNode(p);\n\t\t\t\tremoveNode(p.next);\n\t\t\t\tp = start = b;\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\treturn filterPoints(p);\n\t} // try splitting polygon into two and triangulate them independently\n\n\n\tfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n\t\t// look for a valid diagonal that divides the polygon into two\n\t\tvar a = start;\n\n\t\tdo {\n\t\t\tvar b = a.next.next;\n\n\t\t\twhile (b !== a.prev) {\n\t\t\t\tif (a.i !== b.i && isValidDiagonal(a, b)) {\n\t\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\t\tvar c = splitPolygon(a, b); // filter colinear points around the cuts\n\n\t\t\t\t\ta = filterPoints(a, a.next);\n\t\t\t\t\tc = filterPoints(c, c.next); // run earcut on each half\n\n\t\t\t\t\tearcutLinked(a, triangles, dim, minX, minY, invSize);\n\t\t\t\t\tearcutLinked(c, triangles, dim, minX, minY, invSize);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tb = b.next;\n\t\t\t}\n\n\t\t\ta = a.next;\n\t\t} while (a !== start);\n\t} // link every hole into the outer loop, producing a single-ring polygon without holes\n\n\n\tfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n\t\tvar queue = [];\n\t\tvar i, len, start, end, list;\n\n\t\tfor (i = 0, len = holeIndices.length; i < len; i++) {\n\t\t\tstart = holeIndices[i] * dim;\n\t\t\tend = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n\t\t\tlist = linkedList(data, start, end, dim, false);\n\t\t\tif (list === list.next) list.steiner = true;\n\t\t\tqueue.push(getLeftmost(list));\n\t\t}\n\n\t\tqueue.sort(compareX); // process holes from left to right\n\n\t\tfor (i = 0; i < queue.length; i++) {\n\t\t\teliminateHole(queue[i], outerNode);\n\t\t\touterNode = filterPoints(outerNode, outerNode.next);\n\t\t}\n\n\t\treturn outerNode;\n\t}\n\n\tfunction compareX(a, b) {\n\t\treturn a.x - b.x;\n\t} // find a bridge between vertices that connects hole with an outer ring and and link it\n\n\n\tfunction eliminateHole(hole, outerNode) {\n\t\touterNode = findHoleBridge(hole, outerNode);\n\n\t\tif (outerNode) {\n\t\t\tvar b = splitPolygon(outerNode, hole); // filter collinear points around the cuts\n\n\t\t\tfilterPoints(outerNode, outerNode.next);\n\t\t\tfilterPoints(b, b.next);\n\t\t}\n\t} // David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\n\tfunction findHoleBridge(hole, outerNode) {\n\t\tvar p = outerNode;\n\t\tvar hx = hole.x;\n\t\tvar hy = hole.y;\n\t\tvar qx = -Infinity,\n\t\t\t\tm; // find a segment intersected by a ray from the hole's leftmost point to the left;\n\t\t// segment's endpoint with lesser x will be potential connection point\n\n\t\tdo {\n\t\t\tif (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n\t\t\t\tvar x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n\t\t\t\tif (x <= hx && x > qx) {\n\t\t\t\t\tqx = x;\n\n\t\t\t\t\tif (x === hx) {\n\t\t\t\t\t\tif (hy === p.y) return p;\n\t\t\t\t\t\tif (hy === p.next.y) return p.next;\n\t\t\t\t\t}\n\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== outerNode);\n\n\t\tif (!m) return null;\n\t\tif (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t\t// if there are no points found, we have a valid connection;\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\t\tvar stop = m,\n\t\t\t\tmx = m.x,\n\t\t\t\tmy = m.y;\n\t\tvar tanMin = Infinity,\n\t\t\t\ttan;\n\t\tp = m;\n\n\t\tdo {\n\t\t\tif (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\t\t\t\ttan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n\t\t\t\tif (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\n\t\t\t\t\tm = p;\n\t\t\t\t\ttanMin = tan;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== stop);\n\n\t\treturn m;\n\t} // whether sector in vertex m contains sector in vertex p in the same coordinates\n\n\n\tfunction sectorContainsSector(m, p) {\n\t\treturn area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n\t} // interlink polygon nodes in z-order\n\n\n\tfunction indexCurve(start, minX, minY, invSize) {\n\t\tvar p = start;\n\n\t\tdo {\n\t\t\tif (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n\t\t\tp.prevZ = p.prev;\n\t\t\tp.nextZ = p.next;\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\tp.prevZ.nextZ = null;\n\t\tp.prevZ = null;\n\t\tsortLinked(p);\n\t} // Simon Tatham's linked list merge sort algorithm\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\n\tfunction sortLinked(list) {\n\t\tvar i,\n\t\t\t\tp,\n\t\t\t\tq,\n\t\t\t\te,\n\t\t\t\ttail,\n\t\t\t\tnumMerges,\n\t\t\t\tpSize,\n\t\t\t\tqSize,\n\t\t\t\tinSize = 1;\n\n\t\tdo {\n\t\t\tp = list;\n\t\t\tlist = null;\n\t\t\ttail = null;\n\t\t\tnumMerges = 0;\n\n\t\t\twhile (p) {\n\t\t\t\tnumMerges++;\n\t\t\t\tq = p;\n\t\t\t\tpSize = 0;\n\n\t\t\t\tfor (i = 0; i < inSize; i++) {\n\t\t\t\t\tpSize++;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tif (!q) break;\n\t\t\t\t}\n\n\t\t\t\tqSize = inSize;\n\n\t\t\t\twhile (pSize > 0 || qSize > 0 && q) {\n\t\t\t\t\tif (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n\t\t\t\t\t\te = p;\n\t\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\t\tpSize--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\te = q;\n\t\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\t\tqSize--;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tail) tail.nextZ = e;else list = e;\n\t\t\t\t\te.prevZ = tail;\n\t\t\t\t\ttail = e;\n\t\t\t\t}\n\n\t\t\t\tp = q;\n\t\t\t}\n\n\t\t\ttail.nextZ = null;\n\t\t\tinSize *= 2;\n\t\t} while (numMerges > 1);\n\n\t\treturn list;\n\t} // z-order of a point given coords and inverse of the longer side of data bbox\n\n\n\tfunction zOrder(x, y, minX, minY, invSize) {\n\t\t// coords are transformed into non-negative 15-bit integer range\n\t\tx = 32767 * (x - minX) * invSize;\n\t\ty = 32767 * (y - minY) * invSize;\n\t\tx = (x | x << 8) & 0x00FF00FF;\n\t\tx = (x | x << 4) & 0x0F0F0F0F;\n\t\tx = (x | x << 2) & 0x33333333;\n\t\tx = (x | x << 1) & 0x55555555;\n\t\ty = (y | y << 8) & 0x00FF00FF;\n\t\ty = (y | y << 4) & 0x0F0F0F0F;\n\t\ty = (y | y << 2) & 0x33333333;\n\t\ty = (y | y << 1) & 0x55555555;\n\t\treturn x | y << 1;\n\t} // find the leftmost node of a polygon ring\n\n\n\tfunction getLeftmost(start) {\n\t\tvar p = start,\n\t\t\t\tleftmost = start;\n\n\t\tdo {\n\t\t\tif (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\treturn leftmost;\n\t} // check if a point lies within a convex triangle\n\n\n\tfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n\t\treturn (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n\t} // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\n\tfunction isValidDiagonal(a, b) {\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && ( // dones't intersect other edges\n\t\tlocallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && ( // locally visible\n\t\tarea(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n\t\tequals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n\t} // signed area of a triangle\n\n\n\tfunction area(p, q, r) {\n\t\treturn (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n\t} // check if two points are equal\n\n\n\tfunction equals(p1, p2) {\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\t} // check if two segments intersect\n\n\n\tfunction intersects(p1, q1, p2, q2) {\n\t\tvar o1 = sign(area(p1, q1, p2));\n\t\tvar o2 = sign(area(p1, q1, q2));\n\t\tvar o3 = sign(area(p2, q2, p1));\n\t\tvar o4 = sign(area(p2, q2, q1));\n\t\tif (o1 !== o2 && o3 !== o4) return true; // general case\n\n\t\tif (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\n\t\tif (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\n\t\tif (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\n\t\tif (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\t\treturn false;\n\t} // for collinear points p, q, r, check if point q lies on segment pr\n\n\n\tfunction onSegment(p, q, r) {\n\t\treturn q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n\t}\n\n\tfunction sign(num) {\n\t\treturn num > 0 ? 1 : num < 0 ? -1 : 0;\n\t} // check if a polygon diagonal intersects any polygon segments\n\n\n\tfunction intersectsPolygon(a, b) {\n\t\tvar p = a;\n\n\t\tdo {\n\t\t\tif (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n\t\t\tp = p.next;\n\t\t} while (p !== a);\n\n\t\treturn false;\n\t} // check if a polygon diagonal is locally inside the polygon\n\n\n\tfunction locallyInside(a, b) {\n\t\treturn area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n\t} // check if the middle point of a polygon diagonal is inside the polygon\n\n\n\tfunction middleInside(a, b) {\n\t\tvar p = a,\n\t\t\t\tinside = false;\n\t\tvar px = (a.x + b.x) / 2,\n\t\t\t\tpy = (a.y + b.y) / 2;\n\n\t\tdo {\n\t\t\tif (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n\t\t\tp = p.next;\n\t\t} while (p !== a);\n\n\t\treturn inside;\n\t} // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\n\tfunction splitPolygon(a, b) {\n\t\tvar a2 = new Node(a.i, a.x, a.y),\n\t\t\t\tb2 = new Node(b.i, b.x, b.y),\n\t\t\t\tan = a.next,\n\t\t\t\tbp = b.prev;\n\t\ta.next = b;\n\t\tb.prev = a;\n\t\ta2.next = an;\n\t\tan.prev = a2;\n\t\tb2.next = a2;\n\t\ta2.prev = b2;\n\t\tbp.next = b2;\n\t\tb2.prev = bp;\n\t\treturn b2;\n\t} // create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\n\tfunction insertNode(i, x, y, last) {\n\t\tvar p = new Node(i, x, y);\n\n\t\tif (!last) {\n\t\t\tp.prev = p;\n\t\t\tp.next = p;\n\t\t} else {\n\t\t\tp.next = last.next;\n\t\t\tp.prev = last;\n\t\t\tlast.next.prev = p;\n\t\t\tlast.next = p;\n\t\t}\n\n\t\treturn p;\n\t}\n\n\tfunction removeNode(p) {\n\t\tp.next.prev = p.prev;\n\t\tp.prev.next = p.next;\n\t\tif (p.prevZ) p.prevZ.nextZ = p.nextZ;\n\t\tif (p.nextZ) p.nextZ.prevZ = p.prevZ;\n\t}\n\n\tfunction Node(i, x, y) {\n\t\t// vertex index in coordinates array\n\t\tthis.i = i; // vertex coordinates\n\n\t\tthis.x = x;\n\t\tthis.y = y; // previous and next vertex nodes in a polygon ring\n\n\t\tthis.prev = null;\n\t\tthis.next = null; // z-order curve value\n\n\t\tthis.z = null; // previous and next nodes in z-order\n\n\t\tthis.prevZ = null;\n\t\tthis.nextZ = null; // indicates whether this is a steiner point\n\n\t\tthis.steiner = false;\n\t}\n\n\tfunction signedArea(data, start, end, dim) {\n\t\tvar sum = 0;\n\n\t\tfor (var i = start, j = end - dim; i < end; i += dim) {\n\t\t\tsum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n\t\t\tj = i;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\tvar ShapeUtils = {\n\t\t// calculate area of the contour polygon\n\t\tarea: function area(contour) {\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor (var p = n - 1, q = 0; q < n; p = q++) {\n\t\t\t\ta += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\t\t},\n\t\tisClockWise: function isClockWise(pts) {\n\t\t\treturn ShapeUtils.area(pts) < 0;\n\t\t},\n\t\ttriangulateShape: function triangulateShape(contour, holes) {\n\t\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\n\t\t\tvar holeIndices = []; // array of hole indices\n\n\t\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\t\tremoveDupEndPts(contour);\n\t\t\taddContour(vertices, contour); //\n\n\t\t\tvar holeIndex = contour.length;\n\t\t\tholes.forEach(removeDupEndPts);\n\n\t\t\tfor (var i = 0; i < holes.length; i++) {\n\t\t\t\tholeIndices.push(holeIndex);\n\t\t\t\tholeIndex += holes[i].length;\n\t\t\t\taddContour(vertices, holes[i]);\n\t\t\t} //\n\n\n\t\t\tvar triangles = Earcut.triangulate(vertices, holeIndices); //\n\n\t\t\tfor (var _i = 0; _i < triangles.length; _i += 3) {\n\t\t\t\tfaces.push(triangles.slice(_i, _i + 3));\n\t\t\t}\n\n\t\t\treturn faces;\n\t\t}\n\t};\n\n\tfunction removeDupEndPts(points) {\n\t\tvar l = points.length;\n\n\t\tif (l > 2 && points[l - 1].equals(points[0])) {\n\t\t\tpoints.pop();\n\t\t}\n\t}\n\n\tfunction addContour(vertices, contour) {\n\t\tfor (var i = 0; i < contour.length; i++) {\n\t\t\tvertices.push(contour[i].x);\n\t\t\tvertices.push(contour[i].y);\n\t\t}\n\t}\n\n\tvar ExtrudeGeometry = /*#__PURE__*/function (_BufferGeometry) {\n\t\t_inheritsLoose(ExtrudeGeometry, _BufferGeometry);\n\n\t\tfunction ExtrudeGeometry(shapes, options) {\n\t\t\tvar _this;\n\n\t\t\t_this = _BufferGeometry.call(this) || this;\n\t\t\t_this.type = 'ExtrudeGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\toptions: options\n\t\t\t};\n\t\t\tshapes = Array.isArray(shapes) ? shapes : [shapes];\n\n\t\t\tvar scope = _assertThisInitialized(_this);\n\n\t\t\tvar verticesArray = [];\n\t\t\tvar uvArray = [];\n\n\t\t\tfor (var i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tvar shape = shapes[i];\n\t\t\t\taddShape(shape);\n\t\t\t} // build geometry\n\n\n\t\t\t_this.setAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n\n\t\t\t_this.setAttribute('uv', new Float32BufferAttribute(uvArray, 2));\n\n\t\t\t_this.computeVertexNormals(); // functions\n\n\n\t\t\tfunction addShape(shape) {\n\t\t\t\tvar placeholder = []; // options\n\n\t\t\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\t\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\t\t\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\t\tvar bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\t\t\t\tvar extrudePath = options.extrudePath;\n\t\t\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\n\n\t\t\t\tif (options.amount !== undefined) {\n\t\t\t\t\tconsole.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\n\t\t\t\t\tdepth = options.amount;\n\t\t\t\t} //\n\n\n\t\t\t\tvar extrudePts,\n\t\t\t\t\t\textrudeByPath = false;\n\t\t\t\tvar splineTube, binormal, normal, position2;\n\n\t\t\t\tif (extrudePath) {\n\t\t\t\t\textrudePts = extrudePath.getSpacedPoints(steps);\n\t\t\t\t\textrudeByPath = true;\n\t\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\t\t\t\t\t// SETUP TNB variables\n\t\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\t\tsplineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\t\tbinormal = new Vector3();\n\t\t\t\t\tnormal = new Vector3();\n\t\t\t\t\tposition2 = new Vector3();\n\t\t\t\t} // Safeguards if bevels are not enabled\n\n\n\t\t\t\tif (!bevelEnabled) {\n\t\t\t\t\tbevelSegments = 0;\n\t\t\t\t\tbevelThickness = 0;\n\t\t\t\t\tbevelSize = 0;\n\t\t\t\t\tbevelOffset = 0;\n\t\t\t\t} // Variables initialization\n\n\n\t\t\t\tvar shapePoints = shape.extractPoints(curveSegments);\n\t\t\t\tvar vertices = shapePoints.shape;\n\t\t\t\tvar holes = shapePoints.holes;\n\t\t\t\tvar reverse = !ShapeUtils.isClockWise(vertices);\n\n\t\t\t\tif (reverse) {\n\t\t\t\t\tvertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\t\tfor (var h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tvar ahole = holes[h];\n\n\t\t\t\t\t\tif (ShapeUtils.isClockWise(ahole)) {\n\t\t\t\t\t\t\tholes[h] = ahole.reverse();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar faces = ShapeUtils.triangulateShape(vertices, holes);\n\t\t\t\t/* Vertices */\n\n\t\t\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\t\tfor (var _h = 0, _hl = holes.length; _h < _hl; _h++) {\n\t\t\t\t\tvar _ahole = holes[_h];\n\t\t\t\t\tvertices = vertices.concat(_ahole);\n\t\t\t\t}\n\n\t\t\t\tfunction scalePt2(pt, vec, size) {\n\t\t\t\t\tif (!vec) console.error('THREE.ExtrudeGeometry: vec does not exist');\n\t\t\t\t\treturn vec.clone().multiplyScalar(size).add(pt);\n\t\t\t\t}\n\n\t\t\t\tvar vlen = vertices.length,\n\t\t\t\t\t\tflen = faces.length; // Find directions for point movement\n\n\t\t\t\tfunction getBevelVec(inPt, inPrev, inNext) {\n\t\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t\t//\t shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t\t//\n\t\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t\t//\tadjacent edges of inPt at a distance of 1 unit on the left side.\n\t\t\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\t\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\t\t\t\t\tvar v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n\t\t\t\t\tvar collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n\t\t\t\t\tif (Math.abs(collinear0) > Number.EPSILON) {\n\t\t\t\t\t\t// not collinear\n\t\t\t\t\t\t// length of vectors for normalizing\n\t\t\t\t\t\tvar v_prev_len = Math.sqrt(v_prev_lensq);\n\t\t\t\t\t\tvar v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n\t\t\t\t\t\tvar ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n\t\t\t\t\t\tvar ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n\t\t\t\t\t\tvar ptNextShift_x = inNext.x - v_next_y / v_next_len;\n\t\t\t\t\t\tvar ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n\t\t\t\t\t\tvar sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n\t\t\t\t\t\tv_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n\t\t\t\t\t\tv_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t\t//\tbut prevent crazy spikes\n\n\t\t\t\t\t\tvar v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n\t\t\t\t\t\tif (v_trans_lensq <= 2) {\n\t\t\t\t\t\t\treturn new Vector2(v_trans_x, v_trans_y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_trans_lensq / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// handle special case of collinear edges\n\t\t\t\t\t\tvar direction_eq = false; // assumes: opposite\n\n\t\t\t\t\t\tif (v_prev_x > Number.EPSILON) {\n\t\t\t\t\t\t\tif (v_next_x > Number.EPSILON) {\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (v_prev_x < -Number.EPSILON) {\n\t\t\t\t\t\t\t\tif (v_next_x < -Number.EPSILON) {\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (direction_eq) {\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\t\tv_trans_x = -v_prev_y;\n\t\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n\t\t\t\t}\n\n\t\t\t\tvar contourMovements = [];\n\n\t\t\t\tfor (var _i = 0, il = contour.length, j = il - 1, k = _i + 1; _i < il; _i++, j++, k++) {\n\t\t\t\t\tif (j === il) j = 0;\n\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\n\t\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\t\tcontourMovements[_i] = getBevelVec(contour[_i], contour[j], contour[k]);\n\t\t\t\t}\n\n\t\t\t\tvar holesMovements = [];\n\t\t\t\tvar oneHoleMovements,\n\t\t\t\t\t\tverticesMovements = contourMovements.concat();\n\n\t\t\t\tfor (var _h2 = 0, _hl2 = holes.length; _h2 < _hl2; _h2++) {\n\t\t\t\t\tvar _ahole2 = holes[_h2];\n\t\t\t\t\toneHoleMovements = [];\n\n\t\t\t\t\tfor (var _i2 = 0, _il = _ahole2.length, _j = _il - 1, _k = _i2 + 1; _i2 < _il; _i2++, _j++, _k++) {\n\t\t\t\t\t\tif (_j === _il) _j = 0;\n\t\t\t\t\t\tif (_k === _il) _k = 0; //\t(j)---(i)---(k)\n\n\t\t\t\t\t\toneHoleMovements[_i2] = getBevelVec(_ahole2[_i2], _ahole2[_j], _ahole2[_k]);\n\t\t\t\t\t}\n\n\t\t\t\t\tholesMovements.push(oneHoleMovements);\n\t\t\t\t\tverticesMovements = verticesMovements.concat(oneHoleMovements);\n\t\t\t\t} // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n\t\t\t\tfor (var b = 0; b < bevelSegments; b++) {\n\t\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\t\t\t\t\tvar t = b / bevelSegments;\n\t\t\t\t\tvar z = bevelThickness * Math.cos(t * Math.PI / 2);\n\n\t\t\t\t\tvar _bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\n\t\t\t\t\tfor (var _i3 = 0, _il2 = contour.length; _i3 < _il2; _i3++) {\n\t\t\t\t\t\tvar vert = scalePt2(contour[_i3], contourMovements[_i3], _bs);\n\t\t\t\t\t\tv(vert.x, vert.y, -z);\n\t\t\t\t\t} // expand holes\n\n\n\t\t\t\t\tfor (var _h3 = 0, _hl3 = holes.length; _h3 < _hl3; _h3++) {\n\t\t\t\t\t\tvar _ahole3 = holes[_h3];\n\t\t\t\t\t\toneHoleMovements = holesMovements[_h3];\n\n\t\t\t\t\t\tfor (var _i4 = 0, _il3 = _ahole3.length; _i4 < _il3; _i4++) {\n\t\t\t\t\t\t\tvar _vert = scalePt2(_ahole3[_i4], oneHoleMovements[_i4], _bs);\n\n\t\t\t\t\t\t\tv(_vert.x, _vert.y, -z);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar bs = bevelSize + bevelOffset; // Back facing vertices\n\n\t\t\t\tfor (var _i5 = 0; _i5 < vlen; _i5++) {\n\t\t\t\t\tvar _vert2 = bevelEnabled ? scalePt2(vertices[_i5], verticesMovements[_i5], bs) : vertices[_i5];\n\n\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\tv(_vert2.x, _vert2.y, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\t\t\t\t\t\tnormal.copy(splineTube.normals[0]).multiplyScalar(_vert2.x);\n\t\t\t\t\t\tbinormal.copy(splineTube.binormals[0]).multiplyScalar(_vert2.y);\n\t\t\t\t\t\tposition2.copy(extrudePts[0]).add(normal).add(binormal);\n\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\n\t\t\t\t\t}\n\t\t\t\t} // Add stepped vertices...\n\t\t\t\t// Including front facing vertices\n\n\n\t\t\t\tfor (var s = 1; s <= steps; s++) {\n\t\t\t\t\tfor (var _i6 = 0; _i6 < vlen; _i6++) {\n\t\t\t\t\t\tvar _vert3 = bevelEnabled ? scalePt2(vertices[_i6], verticesMovements[_i6], bs) : vertices[_i6];\n\n\t\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\t\tv(_vert3.x, _vert3.y, depth / steps * s);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\t\t\t\t\t\t\tnormal.copy(splineTube.normals[s]).multiplyScalar(_vert3.x);\n\t\t\t\t\t\t\tbinormal.copy(splineTube.binormals[s]).multiplyScalar(_vert3.y);\n\t\t\t\t\t\t\tposition2.copy(extrudePts[s]).add(normal).add(binormal);\n\t\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // Add bevel segments planes\n\t\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n\t\t\t\tfor (var _b = bevelSegments - 1; _b >= 0; _b--) {\n\t\t\t\t\tvar _t = _b / bevelSegments;\n\n\t\t\t\t\tvar _z = bevelThickness * Math.cos(_t * Math.PI / 2);\n\n\t\t\t\t\tvar _bs2 = bevelSize * Math.sin(_t * Math.PI / 2) + bevelOffset; // contract shape\n\n\n\t\t\t\t\tfor (var _i7 = 0, _il4 = contour.length; _i7 < _il4; _i7++) {\n\t\t\t\t\t\tvar _vert4 = scalePt2(contour[_i7], contourMovements[_i7], _bs2);\n\n\t\t\t\t\t\tv(_vert4.x, _vert4.y, depth + _z);\n\t\t\t\t\t} // expand holes\n\n\n\t\t\t\t\tfor (var _h4 = 0, _hl4 = holes.length; _h4 < _hl4; _h4++) {\n\t\t\t\t\t\tvar _ahole4 = holes[_h4];\n\t\t\t\t\t\toneHoleMovements = holesMovements[_h4];\n\n\t\t\t\t\t\tfor (var _i8 = 0, _il5 = _ahole4.length; _i8 < _il5; _i8++) {\n\t\t\t\t\t\t\tvar _vert5 = scalePt2(_ahole4[_i8], oneHoleMovements[_i8], _bs2);\n\n\t\t\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\t\t\tv(_vert5.x, _vert5.y, depth + _z);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tv(_vert5.x, _vert5.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + _z);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* Faces */\n\t\t\t\t// Top and bottom faces\n\n\n\t\t\t\tbuildLidFaces(); // Sides faces\n\n\t\t\t\tbuildSideFaces(); /////\tInternal functions\n\n\t\t\t\tfunction buildLidFaces() {\n\t\t\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\t\t\tif (bevelEnabled) {\n\t\t\t\t\t\tvar layer = 0; // steps + 1\n\n\t\t\t\t\t\tvar offset = vlen * layer; // Bottom faces\n\n\t\t\t\t\t\tfor (var _i9 = 0; _i9 < flen; _i9++) {\n\t\t\t\t\t\t\tvar face = faces[_i9];\n\t\t\t\t\t\t\tf3(face[2] + offset, face[1] + offset, face[0] + offset);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\t\toffset = vlen * layer; // Top faces\n\n\t\t\t\t\t\tfor (var _i10 = 0; _i10 < flen; _i10++) {\n\t\t\t\t\t\t\tvar _face = faces[_i10];\n\t\t\t\t\t\t\tf3(_face[0] + offset, _face[1] + offset, _face[2] + offset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Bottom faces\n\t\t\t\t\t\tfor (var _i11 = 0; _i11 < flen; _i11++) {\n\t\t\t\t\t\t\tvar _face2 = faces[_i11];\n\t\t\t\t\t\t\tf3(_face2[2], _face2[1], _face2[0]);\n\t\t\t\t\t\t} // Top faces\n\n\n\t\t\t\t\t\tfor (var _i12 = 0; _i12 < flen; _i12++) {\n\t\t\t\t\t\t\tvar _face3 = faces[_i12];\n\t\t\t\t\t\t\tf3(_face3[0] + vlen * steps, _face3[1] + vlen * steps, _face3[2] + vlen * steps);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 0);\n\t\t\t\t} // Create faces for the z-sides of the shape\n\n\n\t\t\t\tfunction buildSideFaces() {\n\t\t\t\t\tvar start = verticesArray.length / 3;\n\t\t\t\t\tvar layeroffset = 0;\n\t\t\t\t\tsidewalls(contour, layeroffset);\n\t\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\t\tfor (var _h5 = 0, _hl5 = holes.length; _h5 < _hl5; _h5++) {\n\t\t\t\t\t\tvar _ahole5 = holes[_h5];\n\t\t\t\t\t\tsidewalls(_ahole5, layeroffset); //, true\n\n\t\t\t\t\t\tlayeroffset += _ahole5.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 1);\n\t\t\t\t}\n\n\t\t\t\tfunction sidewalls(contour, layeroffset) {\n\t\t\t\t\tvar i = contour.length;\n\n\t\t\t\t\twhile (--i >= 0) {\n\t\t\t\t\t\tvar _j2 = i;\n\n\t\t\t\t\t\tvar _k2 = i - 1;\n\n\t\t\t\t\t\tif (_k2 < 0) _k2 = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\t\tfor (var _s = 0, sl = steps + bevelSegments * 2; _s < sl; _s++) {\n\t\t\t\t\t\t\tvar slen1 = vlen * _s;\n\t\t\t\t\t\t\tvar slen2 = vlen * (_s + 1);\n\n\t\t\t\t\t\t\tvar a = layeroffset + _j2 + slen1,\n\t\t\t\t\t\t\t\t\t_b2 = layeroffset + _k2 + slen1,\n\t\t\t\t\t\t\t\t\tc = layeroffset + _k2 + slen2,\n\t\t\t\t\t\t\t\t\td = layeroffset + _j2 + slen2;\n\n\t\t\t\t\t\t\tf4(a, _b2, c, d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction v(x, y, z) {\n\t\t\t\t\tplaceholder.push(x);\n\t\t\t\t\tplaceholder.push(y);\n\t\t\t\t\tplaceholder.push(z);\n\t\t\t\t}\n\n\t\t\t\tfunction f3(a, b, c) {\n\t\t\t\t\taddVertex(a);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(c);\n\t\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\t\tvar uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n\t\t\t\t\taddUV(uvs[0]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[2]);\n\t\t\t\t}\n\n\t\t\t\tfunction f4(a, b, c, d) {\n\t\t\t\t\taddVertex(a);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(d);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(c);\n\t\t\t\t\taddVertex(d);\n\t\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\t\tvar uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n\t\t\t\t\taddUV(uvs[0]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[3]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[2]);\n\t\t\t\t\taddUV(uvs[3]);\n\t\t\t\t}\n\n\t\t\t\tfunction addVertex(index) {\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 0]);\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 1]);\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 2]);\n\t\t\t\t}\n\n\t\t\t\tfunction addUV(vector2) {\n\t\t\t\t\tuvArray.push(vector2.x);\n\t\t\t\t\tuvArray.push(vector2.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ExtrudeGeometry.prototype;\n\n\t\t_proto.toJSON = function toJSON() {\n\t\t\tvar data = BufferGeometry.prototype.toJSON.call(this);\n\t\t\tvar shapes = this.parameters.shapes;\n\t\t\tvar options = this.parameters.options;\n\t\t\treturn _toJSON(shapes, options, data);\n\t\t};\n\n\t\treturn ExtrudeGeometry;\n\t}(BufferGeometry);\n\n\tvar WorldUVGenerator = {\n\t\tgenerateTopUV: function generateTopUV(geometry, vertices, indexA, indexB, indexC) {\n\t\t\tvar a_x = vertices[indexA * 3];\n\t\t\tvar a_y = vertices[indexA * 3 + 1];\n\t\t\tvar b_x = vertices[indexB * 3];\n\t\t\tvar b_y = vertices[indexB * 3 + 1];\n\t\t\tvar c_x = vertices[indexC * 3];\n\t\t\tvar c_y = vertices[indexC * 3 + 1];\n\t\t\treturn [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n\t\t},\n\t\tgenerateSideWallUV: function generateSideWallUV(geometry, vertices, indexA, indexB, indexC, indexD) {\n\t\t\tvar a_x = vertices[indexA * 3];\n\t\t\tvar a_y = vertices[indexA * 3 + 1];\n\t\t\tvar a_z = vertices[indexA * 3 + 2];\n\t\t\tvar b_x = vertices[indexB * 3];\n\t\t\tvar b_y = vertices[indexB * 3 + 1];\n\t\t\tvar b_z = vertices[indexB * 3 + 2];\n\t\t\tvar c_x = vertices[indexC * 3];\n\t\t\tvar c_y = vertices[indexC * 3 + 1];\n\t\t\tvar c_z = vertices[indexC * 3 + 2];\n\t\t\tvar d_x = vertices[indexD * 3];\n\t\t\tvar d_y = vertices[indexD * 3 + 1];\n\t\t\tvar d_z = vertices[indexD * 3 + 2];\n\n\t\t\tif (Math.abs(a_y - b_y) < 0.01) {\n\t\t\t\treturn [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n\t\t\t} else {\n\t\t\t\treturn [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction _toJSON(shapes, options, data) {\n\t\tdata.shapes = [];\n\n\t\tif (Array.isArray(shapes)) {\n\t\t\tfor (var i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tvar shape = shapes[i];\n\t\t\t\tdata.shapes.push(shape.uuid);\n\t\t\t}\n\t\t} else {\n\t\t\tdata.shapes.push(shapes.uuid);\n\t\t}\n\n\t\tif (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\n\t\treturn data;\n\t}\n\n\tvar IcosahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry) {\n\t\t_inheritsLoose(IcosahedronGeometry, _PolyhedronGeometry);\n\n\t\tfunction IcosahedronGeometry(radius, detail) {\n\t\t\tvar _this;\n\n\t\t\tif (radius === void 0) {\n\t\t\t\tradius = 1;\n\t\t\t}\n\n\t\t\tif (detail === void 0) {\n\t\t\t\tdetail = 0;\n\t\t\t}\n\n\t\t\tvar t = (1 + Math.sqrt(5)) / 2;\n\t\t\tvar vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n\t\t\tvar indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n\t\t\t_this = _PolyhedronGeometry.call(this, vertices, indices, radius, detail) || this;\n\t\t\t_this.type = 'IcosahedronGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn IcosahedronGeometry;\n\t}(PolyhedronGeometry);\n\n\tvar LatheGeometry = /*#__PURE__*/function (_BufferGeometry) {\n\t\t_inheritsLoose(LatheGeometry, _BufferGeometry);\n\n\t\tfunction LatheGeometry(points, segments, phiStart, phiLength) {\n\t\t\tvar _this;\n\n\t\t\tif (segments === void 0) {\n\t\t\t\tsegments = 12;\n\t\t\t}\n\n\t\t\tif (phiStart === void 0) {\n\t\t\t\tphiStart = 0;\n\t\t\t}\n\n\t\t\tif (phiLength === void 0) {\n\t\t\t\tphiLength = Math.PI * 2;\n\t\t\t}\n\n\t\t\t_this = _BufferGeometry.call(this) || this;\n\t\t\t_this.type = 'LatheGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tpoints: points,\n\t\t\t\tsegments: segments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength\n\t\t\t};\n\t\t\tsegments = Math.floor(segments); // clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\t\tphiLength = MathUtils.clamp(phiLength, 0, Math.PI * 2); // buffers\n\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar uvs = []; // helper variables\n\n\t\t\tvar inverseSegments = 1.0 / segments;\n\t\t\tvar vertex = new Vector3();\n\t\t\tvar uv = new Vector2(); // generate vertices and uvs\n\n\t\t\tfor (var i = 0; i <= segments; i++) {\n\t\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\t\t\t\tvar sin = Math.sin(phi);\n\t\t\t\tvar cos = Math.cos(phi);\n\n\t\t\t\tfor (var j = 0; j <= points.length - 1; j++) {\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertex.x = points[j].x * sin;\n\t\t\t\t\tvertex.y = points[j].y;\n\t\t\t\t\tvertex.z = points[j].x * cos;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n\t\t\t\t\tuv.x = i / segments;\n\t\t\t\t\tuv.y = j / (points.length - 1);\n\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t}\n\t\t\t} // indices\n\n\n\t\t\tfor (var _i = 0; _i < segments; _i++) {\n\t\t\t\tfor (var _j = 0; _j < points.length - 1; _j++) {\n\t\t\t\t\tvar base = _j + _i * points.length;\n\t\t\t\t\tvar a = base;\n\t\t\t\t\tvar b = base + points.length;\n\t\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\t\tvar d = base + 1; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\t_this.setIndex(indices);\n\n\t\t\t_this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n\t\t\t_this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\n\n\n\t\t\t_this.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n\t\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\n\t\t\tif (phiLength === Math.PI * 2) {\n\t\t\t\tvar normals = _this.attributes.normal.array;\n\t\t\t\tvar n1 = new Vector3();\n\t\t\t\tvar n2 = new Vector3();\n\t\t\t\tvar n = new Vector3(); // this is the buffer offset for the last line of vertices\n\n\t\t\t\tvar _base = segments * points.length * 3;\n\n\t\t\t\tfor (var _i2 = 0, _j2 = 0; _i2 < points.length; _i2++, _j2 += 3) {\n\t\t\t\t\t// select the normal of the vertex in the first line\n\t\t\t\t\tn1.x = normals[_j2 + 0];\n\t\t\t\t\tn1.y = normals[_j2 + 1];\n\t\t\t\t\tn1.z = normals[_j2 + 2]; // select the normal of the vertex in the last line\n\n\t\t\t\t\tn2.x = normals[_base + _j2 + 0];\n\t\t\t\t\tn2.y = normals[_base + _j2 + 1];\n\t\t\t\t\tn2.z = normals[_base + _j2 + 2]; // average normals\n\n\t\t\t\t\tn.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n\t\t\t\t\tnormals[_j2 + 0] = normals[_base + _j2 + 0] = n.x;\n\t\t\t\t\tnormals[_j2 + 1] = normals[_base + _j2 + 1] = n.y;\n\t\t\t\t\tnormals[_j2 + 2] = normals[_base + _j2 + 2] = n.z;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn LatheGeometry;\n\t}(BufferGeometry);\n\n\tvar OctahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry) {\n\t\t_inheritsLoose(OctahedronGeometry, _PolyhedronGeometry);\n\n\t\tfunction OctahedronGeometry(radius, detail) {\n\t\t\tvar _this;\n\n\t\t\tif (radius === void 0) {\n\t\t\t\tradius = 1;\n\t\t\t}\n\n\t\t\tif (detail === void 0) {\n\t\t\t\tdetail = 0;\n\t\t\t}\n\n\t\t\tvar vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n\t\t\tvar indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n\t\t\t_this = _PolyhedronGeometry.call(this, vertices, indices, radius, detail) || this;\n\t\t\t_this.type = 'OctahedronGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn OctahedronGeometry;\n\t}(PolyhedronGeometry);\n\n\t/**\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n\t */\n\n\tfunction ParametricGeometry(func, slices, stacks) {\n\t\tBufferGeometry.call(this);\n\t\tthis.type = 'ParametricGeometry';\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t}; // buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar EPS = 0.00001;\n\t\tvar normal = new Vector3();\n\t\tvar p0 = new Vector3(),\n\t\t\t\tp1 = new Vector3();\n\t\tvar pu = new Vector3(),\n\t\t\t\tpv = new Vector3();\n\n\t\tif (func.length < 3) {\n\t\t\tconsole.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');\n\t\t} // generate vertices, normals and uvs\n\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor (var i = 0; i <= stacks; i++) {\n\t\t\tvar v = i / stacks;\n\n\t\t\tfor (var j = 0; j <= slices; j++) {\n\t\t\t\tvar u = j / slices; // vertex\n\n\t\t\t\tfunc(u, v, p0);\n\t\t\t\tvertices.push(p0.x, p0.y, p0.z); // normal\n\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\tif (u - EPS >= 0) {\n\t\t\t\t\tfunc(u - EPS, v, p1);\n\t\t\t\t\tpu.subVectors(p0, p1);\n\t\t\t\t} else {\n\t\t\t\t\tfunc(u + EPS, v, p1);\n\t\t\t\t\tpu.subVectors(p1, p0);\n\t\t\t\t}\n\n\t\t\t\tif (v - EPS >= 0) {\n\t\t\t\t\tfunc(u, v - EPS, p1);\n\t\t\t\t\tpv.subVectors(p0, p1);\n\t\t\t\t} else {\n\t\t\t\t\tfunc(u, v + EPS, p1);\n\t\t\t\t\tpv.subVectors(p1, p0);\n\t\t\t\t} // cross product of tangent vectors returns surface normal\n\n\n\t\t\t\tnormal.crossVectors(pu, pv).normalize();\n\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\tuvs.push(u, v);\n\t\t\t}\n\t\t} // generate indices\n\n\n\t\tfor (var _i = 0; _i < stacks; _i++) {\n\t\t\tfor (var _j = 0; _j < slices; _j++) {\n\t\t\t\tvar a = _i * sliceCount + _j;\n\t\t\t\tvar b = _i * sliceCount + _j + 1;\n\t\t\t\tvar c = (_i + 1) * sliceCount + _j + 1;\n\t\t\t\tvar d = (_i + 1) * sliceCount + _j; // faces one and two\n\n\t\t\t\tindices.push(a, b, d);\n\t\t\t\tindices.push(b, c, d);\n\t\t\t}\n\t\t} // build geometry\n\n\n\t\tthis.setIndex(indices);\n\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t}\n\n\tParametricGeometry.prototype = Object.create(BufferGeometry.prototype);\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\n\n\tvar RingGeometry = /*#__PURE__*/function (_BufferGeometry) {\n\t\t_inheritsLoose(RingGeometry, _BufferGeometry);\n\n\t\tfunction RingGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n\t\t\tvar _this;\n\n\t\t\tif (innerRadius === void 0) {\n\t\t\t\tinnerRadius = 0.5;\n\t\t\t}\n\n\t\t\tif (outerRadius === void 0) {\n\t\t\t\touterRadius = 1;\n\t\t\t}\n\n\t\t\tif (thetaSegments === void 0) {\n\t\t\t\tthetaSegments = 8;\n\t\t\t}\n\n\t\t\tif (phiSegments === void 0) {\n\t\t\t\tphiSegments = 1;\n\t\t\t}\n\n\t\t\tif (thetaStart === void 0) {\n\t\t\t\tthetaStart = 0;\n\t\t\t}\n\n\t\t\tif (thetaLength === void 0) {\n\t\t\t\tthetaLength = Math.PI * 2;\n\t\t\t}\n\n\t\t\t_this = _BufferGeometry.call(this) || this;\n\t\t\t_this.type = 'RingGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tthetaSegments: thetaSegments,\n\t\t\t\tphiSegments: phiSegments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tthetaSegments = Math.max(3, thetaSegments);\n\t\t\tphiSegments = Math.max(1, phiSegments); // buffers\n\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = []; // some helper variables\n\n\t\t\tvar radius = innerRadius;\n\t\t\tvar radiusStep = (outerRadius - innerRadius) / phiSegments;\n\t\t\tvar vertex = new Vector3();\n\t\t\tvar uv = new Vector2(); // generate vertices, normals and uvs\n\n\t\t\tfor (var j = 0; j <= phiSegments; j++) {\n\t\t\t\tfor (var i = 0; i <= thetaSegments; i++) {\n\t\t\t\t\t// values are generate from the inside of the ring to the outside\n\t\t\t\t\tvar segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n\t\t\t\t\tvertex.x = radius * Math.cos(segment);\n\t\t\t\t\tvertex.y = radius * Math.sin(segment);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormals.push(0, 0, 1); // uv\n\n\t\t\t\t\tuv.x = (vertex.x / outerRadius + 1) / 2;\n\t\t\t\t\tuv.y = (vertex.y / outerRadius + 1) / 2;\n\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t} // increase the radius for next row of vertices\n\n\n\t\t\t\tradius += radiusStep;\n\t\t\t} // indices\n\n\n\t\t\tfor (var _j = 0; _j < phiSegments; _j++) {\n\t\t\t\tvar thetaSegmentLevel = _j * (thetaSegments + 1);\n\n\t\t\t\tfor (var _i = 0; _i < thetaSegments; _i++) {\n\t\t\t\t\tvar _segment = _i + thetaSegmentLevel;\n\n\t\t\t\t\tvar a = _segment;\n\t\t\t\t\tvar b = _segment + thetaSegments + 1;\n\t\t\t\t\tvar c = _segment + thetaSegments + 2;\n\t\t\t\t\tvar d = _segment + 1; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\t_this.setIndex(indices);\n\n\t\t\t_this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n\t\t\t_this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n\t\t\t_this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn RingGeometry;\n\t}(BufferGeometry);\n\n\tvar ShapeGeometry = /*#__PURE__*/function (_BufferGeometry) {\n\t\t_inheritsLoose(ShapeGeometry, _BufferGeometry);\n\n\t\tfunction ShapeGeometry(shapes, curveSegments) {\n\t\t\tvar _this;\n\n\t\t\tif (curveSegments === void 0) {\n\t\t\t\tcurveSegments = 12;\n\t\t\t}\n\n\t\t\t_this = _BufferGeometry.call(this) || this;\n\t\t\t_this.type = 'ShapeGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\tcurveSegments: curveSegments\n\t\t\t}; // buffers\n\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = []; // helper variables\n\n\t\t\tvar groupStart = 0;\n\t\t\tvar groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n\t\t\tif (Array.isArray(shapes) === false) {\n\t\t\t\taddShape(shapes);\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < shapes.length; i++) {\n\t\t\t\t\taddShape(shapes[i]);\n\n\t\t\t\t\t_this.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n\n\t\t\t\t\tgroupStart += groupCount;\n\t\t\t\t\tgroupCount = 0;\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\t_this.setIndex(indices);\n\n\t\t\t_this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n\t\t\t_this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n\t\t\t_this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n\n\t\t\tfunction addShape(shape) {\n\t\t\t\tvar indexOffset = vertices.length / 3;\n\t\t\t\tvar points = shape.extractPoints(curveSegments);\n\t\t\t\tvar shapeVertices = points.shape;\n\t\t\t\tvar shapeHoles = points.holes; // check direction of vertices\n\n\t\t\t\tif (ShapeUtils.isClockWise(shapeVertices) === false) {\n\t\t\t\t\tshapeVertices = shapeVertices.reverse();\n\t\t\t\t}\n\n\t\t\t\tfor (var _i = 0, l = shapeHoles.length; _i < l; _i++) {\n\t\t\t\t\tvar shapeHole = shapeHoles[_i];\n\n\t\t\t\t\tif (ShapeUtils.isClockWise(shapeHole) === true) {\n\t\t\t\t\t\tshapeHoles[_i] = shapeHole.reverse();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n\t\t\t\tfor (var _i2 = 0, _l = shapeHoles.length; _i2 < _l; _i2++) {\n\t\t\t\t\tvar _shapeHole = shapeHoles[_i2];\n\t\t\t\t\tshapeVertices = shapeVertices.concat(_shapeHole);\n\t\t\t\t} // vertices, normals, uvs\n\n\n\t\t\t\tfor (var _i3 = 0, _l2 = shapeVertices.length; _i3 < _l2; _i3++) {\n\t\t\t\t\tvar vertex = shapeVertices[_i3];\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, 0);\n\t\t\t\t\tnormals.push(0, 0, 1);\n\t\t\t\t\tuvs.push(vertex.x, vertex.y); // world uvs\n\t\t\t\t} // incides\n\n\n\t\t\t\tfor (var _i4 = 0, _l3 = faces.length; _i4 < _l3; _i4++) {\n\t\t\t\t\tvar face = faces[_i4];\n\t\t\t\t\tvar a = face[0] + indexOffset;\n\t\t\t\t\tvar b = face[1] + indexOffset;\n\t\t\t\t\tvar c = face[2] + indexOffset;\n\t\t\t\t\tindices.push(a, b, c);\n\t\t\t\t\tgroupCount += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ShapeGeometry.prototype;\n\n\t\t_proto.toJSON = function toJSON() {\n\t\t\tvar data = BufferGeometry.prototype.toJSON.call(this);\n\t\t\tvar shapes = this.parameters.shapes;\n\t\t\treturn _toJSON$1(shapes, data);\n\t\t};\n\n\t\treturn ShapeGeometry;\n\t}(BufferGeometry);\n\n\tfunction _toJSON$1(shapes, data) {\n\t\tdata.shapes = [];\n\n\t\tif (Array.isArray(shapes)) {\n\t\t\tfor (var i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tvar shape = shapes[i];\n\t\t\t\tdata.shapes.push(shape.uuid);\n\t\t\t}\n\t\t} else {\n\t\t\tdata.shapes.push(shapes.uuid);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tvar SphereGeometry = /*#__PURE__*/function (_BufferGeometry) {\n\t\t_inheritsLoose(SphereGeometry, _BufferGeometry);\n\n\t\tfunction SphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n\t\t\tvar _this;\n\n\t\t\tif (radius === void 0) {\n\t\t\t\tradius = 1;\n\t\t\t}\n\n\t\t\tif (widthSegments === void 0) {\n\t\t\t\twidthSegments = 8;\n\t\t\t}\n\n\t\t\tif (heightSegments === void 0) {\n\t\t\t\theightSegments = 6;\n\t\t\t}\n\n\t\t\tif (phiStart === void 0) {\n\t\t\t\tphiStart = 0;\n\t\t\t}\n\n\t\t\tif (phiLength === void 0) {\n\t\t\t\tphiLength = Math.PI * 2;\n\t\t\t}\n\n\t\t\tif (thetaStart === void 0) {\n\t\t\t\tthetaStart = 0;\n\t\t\t}\n\n\t\t\tif (thetaLength === void 0) {\n\t\t\t\tthetaLength = Math.PI;\n\t\t\t}\n\n\t\t\t_this = _BufferGeometry.call(this) || this;\n\t\t\t_this.type = 'SphereGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\twidthSegments = Math.max(3, Math.floor(widthSegments));\n\t\t\theightSegments = Math.max(2, Math.floor(heightSegments));\n\t\t\tvar thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n\t\t\tvar index = 0;\n\t\t\tvar grid = [];\n\t\t\tvar vertex = new Vector3();\n\t\t\tvar normal = new Vector3(); // buffers\n\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = []; // generate vertices, normals and uvs\n\n\t\t\tfor (var iy = 0; iy <= heightSegments; iy++) {\n\t\t\t\tvar verticesRow = [];\n\t\t\t\tvar v = iy / heightSegments; // special case for the poles\n\n\t\t\t\tvar uOffset = 0;\n\n\t\t\t\tif (iy == 0 && thetaStart == 0) {\n\t\t\t\t\tuOffset = 0.5 / widthSegments;\n\t\t\t\t} else if (iy == heightSegments && thetaEnd == Math.PI) {\n\t\t\t\t\tuOffset = -0.5 / widthSegments;\n\t\t\t\t}\n\n\t\t\t\tfor (var ix = 0; ix <= widthSegments; ix++) {\n\t\t\t\t\tvar u = ix / widthSegments; // vertex\n\n\t\t\t\t\tvertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\t\tvertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n\t\t\t\t\tvertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormal.copy(vertex).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(u + uOffset, 1 - v);\n\t\t\t\t\tverticesRow.push(index++);\n\t\t\t\t}\n\n\t\t\t\tgrid.push(verticesRow);\n\t\t\t} // indices\n\n\n\t\t\tfor (var _iy = 0; _iy < heightSegments; _iy++) {\n\t\t\t\tfor (var _ix = 0; _ix < widthSegments; _ix++) {\n\t\t\t\t\tvar a = grid[_iy][_ix + 1];\n\t\t\t\t\tvar b = grid[_iy][_ix];\n\t\t\t\t\tvar c = grid[_iy + 1][_ix];\n\t\t\t\t\tvar d = grid[_iy + 1][_ix + 1];\n\t\t\t\t\tif (_iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n\t\t\t\t\tif (_iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\t_this.setIndex(indices);\n\n\t\t\t_this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n\t\t\t_this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n\t\t\t_this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn SphereGeometry;\n\t}(BufferGeometry);\n\n\tvar TetrahedronGeometry = /*#__PURE__*/function (_PolyhedronGeometry) {\n\t\t_inheritsLoose(TetrahedronGeometry, _PolyhedronGeometry);\n\n\t\tfunction TetrahedronGeometry(radius, detail) {\n\t\t\tvar _this;\n\n\t\t\tif (radius === void 0) {\n\t\t\t\tradius = 1;\n\t\t\t}\n\n\t\t\tif (detail === void 0) {\n\t\t\t\tdetail = 0;\n\t\t\t}\n\n\t\t\tvar vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n\t\t\tvar indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n\t\t\t_this = _PolyhedronGeometry.call(this, vertices, indices, radius, detail) || this;\n\t\t\t_this.type = 'TetrahedronGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn TetrahedronGeometry;\n\t}(PolyhedronGeometry);\n\n\tvar TextGeometry = /*#__PURE__*/function (_ExtrudeGeometry) {\n\t\t_inheritsLoose(TextGeometry, _ExtrudeGeometry);\n\n\t\tfunction TextGeometry(text, parameters) {\n\t\t\tvar _this;\n\n\t\t\tif (parameters === void 0) {\n\t\t\t\tparameters = {};\n\t\t\t}\n\n\t\t\tvar font = parameters.font;\n\n\t\t\tif (!(font && font.isFont)) {\n\t\t\t\tconsole.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n\t\t\t\treturn new BufferGeometry() || _assertThisInitialized(_this);\n\t\t\t}\n\n\t\t\tvar shapes = font.generateShapes(text, parameters.size); // translate parameters to ExtrudeGeometry API\n\n\t\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n\t\t\tif (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n\t\t\tif (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n\t\t\tif (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n\t\t\t_this = _ExtrudeGeometry.call(this, shapes, parameters) || this;\n\t\t\t_this.type = 'TextGeometry';\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn TextGeometry;\n\t}(ExtrudeGeometry);\n\n\tvar TorusGeometry = /*#__PURE__*/function (_BufferGeometry) {\n\t\t_inheritsLoose(TorusGeometry, _BufferGeometry);\n\n\t\tfunction TorusGeometry(radius, tube, radialSegments, tubularSegments, arc) {\n\t\t\tvar _this;\n\n\t\t\tif (radius === void 0) {\n\t\t\t\tradius = 1;\n\t\t\t}\n\n\t\t\tif (tube === void 0) {\n\t\t\t\ttube = 0.4;\n\t\t\t}\n\n\t\t\tif (radialSegments === void 0) {\n\t\t\t\tradialSegments = 8;\n\t\t\t}\n\n\t\t\tif (tubularSegments === void 0) {\n\t\t\t\ttubularSegments = 6;\n\t\t\t}\n\n\t\t\tif (arc === void 0) {\n\t\t\t\tarc = Math.PI * 2;\n\t\t\t}\n\n\t\t\t_this = _BufferGeometry.call(this) || this;\n\t\t\t_this.type = 'TorusGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tarc: arc\n\t\t\t};\n\t\t\tradialSegments = Math.floor(radialSegments);\n\t\t\ttubularSegments = Math.floor(tubularSegments); // buffers\n\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = []; // helper variables\n\n\t\t\tvar center = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\t\t\tvar normal = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\tfor (var j = 0; j <= radialSegments; j++) {\n\t\t\t\tfor (var i = 0; i <= tubularSegments; i++) {\n\t\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\t\tvar v = j / radialSegments * Math.PI * 2; // vertex\n\n\t\t\t\t\tvertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n\t\t\t\t\tvertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n\t\t\t\t\tvertex.z = tube * Math.sin(v);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tcenter.x = radius * Math.cos(u);\n\t\t\t\t\tcenter.y = radius * Math.sin(u);\n\t\t\t\t\tnormal.subVectors(vertex, center).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(i / tubularSegments);\n\t\t\t\t\tuvs.push(j / radialSegments);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (var _j = 1; _j <= radialSegments; _j++) {\n\t\t\t\tfor (var _i = 1; _i <= tubularSegments; _i++) {\n\t\t\t\t\t// indices\n\t\t\t\t\tvar a = (tubularSegments + 1) * _j + _i - 1;\n\t\t\t\t\tvar b = (tubularSegments + 1) * (_j - 1) + _i - 1;\n\t\t\t\t\tvar c = (tubularSegments + 1) * (_j - 1) + _i;\n\t\t\t\t\tvar d = (tubularSegments + 1) * _j + _i; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\t_this.setIndex(indices);\n\n\t\t\t_this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n\t\t\t_this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n\t\t\t_this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn TorusGeometry;\n\t}(BufferGeometry);\n\n\tvar TorusKnotGeometry = /*#__PURE__*/function (_BufferGeometry) {\n\t\t_inheritsLoose(TorusKnotGeometry, _BufferGeometry);\n\n\t\tfunction TorusKnotGeometry(radius, tube, tubularSegments, radialSegments, p, q) {\n\t\t\tvar _this;\n\n\t\t\tif (radius === void 0) {\n\t\t\t\tradius = 1;\n\t\t\t}\n\n\t\t\tif (tube === void 0) {\n\t\t\t\ttube = 0.4;\n\t\t\t}\n\n\t\t\tif (tubularSegments === void 0) {\n\t\t\t\ttubularSegments = 64;\n\t\t\t}\n\n\t\t\tif (radialSegments === void 0) {\n\t\t\t\tradialSegments = 8;\n\t\t\t}\n\n\t\t\tif (p === void 0) {\n\t\t\t\tp = 2;\n\t\t\t}\n\n\t\t\tif (q === void 0) {\n\t\t\t\tq = 3;\n\t\t\t}\n\n\t\t\t_this = _BufferGeometry.call(this) || this;\n\t\t\t_this.type = 'TorusKnotGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tp: p,\n\t\t\t\tq: q\n\t\t\t};\n\t\t\ttubularSegments = Math.floor(tubularSegments);\n\t\t\tradialSegments = Math.floor(radialSegments); // buffers\n\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = []; // helper variables\n\n\t\t\tvar vertex = new Vector3();\n\t\t\tvar normal = new Vector3();\n\t\t\tvar P1 = new Vector3();\n\t\t\tvar P2 = new Vector3();\n\t\t\tvar B = new Vector3();\n\t\t\tvar T = new Vector3();\n\t\t\tvar N = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\tfor (var i = 0; i <= tubularSegments; ++i) {\n\t\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\t\t\t\tvar u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\t\tcalculatePositionOnCurve(u, p, q, radius, P1);\n\t\t\t\tcalculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n\t\t\t\tT.subVectors(P2, P1);\n\t\t\t\tN.addVectors(P2, P1);\n\t\t\t\tB.crossVectors(T, N);\n\t\t\t\tN.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n\t\t\t\tB.normalize();\n\t\t\t\tN.normalize();\n\n\t\t\t\tfor (var j = 0; j <= radialSegments; ++j) {\n\t\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\t\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tvar cx = -tube * Math.cos(v);\n\t\t\t\t\tvar cy = tube * Math.sin(v); // now calculate the final vertex position.\n\t\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\t\tvertex.x = P1.x + (cx * N.x + cy * B.x);\n\t\t\t\t\tvertex.y = P1.y + (cx * N.y + cy * B.y);\n\t\t\t\t\tvertex.z = P1.z + (cx * N.z + cy * B.z);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\t\tnormal.subVectors(vertex, P1).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(i / tubularSegments);\n\t\t\t\t\tuvs.push(j / radialSegments);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (var _j = 1; _j <= tubularSegments; _j++) {\n\t\t\t\tfor (var _i = 1; _i <= radialSegments; _i++) {\n\t\t\t\t\t// indices\n\t\t\t\t\tvar a = (radialSegments + 1) * (_j - 1) + (_i - 1);\n\t\t\t\t\tvar b = (radialSegments + 1) * _j + (_i - 1);\n\t\t\t\t\tvar c = (radialSegments + 1) * _j + _i;\n\t\t\t\t\tvar d = (radialSegments + 1) * (_j - 1) + _i; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\t_this.setIndex(indices);\n\n\t\t\t_this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n\t\t\t_this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n\t\t\t_this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n\n\t\t\tfunction calculatePositionOnCurve(u, p, q, radius, position) {\n\t\t\t\tvar cu = Math.cos(u);\n\t\t\t\tvar su = Math.sin(u);\n\t\t\t\tvar quOverP = q / p * u;\n\t\t\t\tvar cs = Math.cos(quOverP);\n\t\t\t\tposition.x = radius * (2 + cs) * 0.5 * cu;\n\t\t\t\tposition.y = radius * (2 + cs) * su * 0.5;\n\t\t\t\tposition.z = radius * Math.sin(quOverP) * 0.5;\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn TorusKnotGeometry;\n\t}(BufferGeometry);\n\n\tvar TubeGeometry = /*#__PURE__*/function (_BufferGeometry) {\n\t\t_inheritsLoose(TubeGeometry, _BufferGeometry);\n\n\t\tfunction TubeGeometry(path, tubularSegments, radius, radialSegments, closed) {\n\t\t\tvar _this;\n\n\t\t\tif (tubularSegments === void 0) {\n\t\t\t\ttubularSegments = 64;\n\t\t\t}\n\n\t\t\tif (radius === void 0) {\n\t\t\t\tradius = 1;\n\t\t\t}\n\n\t\t\tif (radialSegments === void 0) {\n\t\t\t\tradialSegments = 8;\n\t\t\t}\n\n\t\t\tif (closed === void 0) {\n\t\t\t\tclosed = false;\n\t\t\t}\n\n\t\t\t_this = _BufferGeometry.call(this) || this;\n\t\t\t_this.type = 'TubeGeometry';\n\t\t\t_this.parameters = {\n\t\t\t\tpath: path,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradius: radius,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tclosed: closed\n\t\t\t};\n\t\t\tvar frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n\t\t\t_this.tangents = frames.tangents;\n\t\t\t_this.normals = frames.normals;\n\t\t\t_this.binormals = frames.binormals; // helper variables\n\n\t\t\tvar vertex = new Vector3();\n\t\t\tvar normal = new Vector3();\n\t\t\tvar uv = new Vector2();\n\t\t\tvar P = new Vector3(); // buffer\n\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\t\tvar indices = []; // create buffer data\n\n\t\t\tgenerateBufferData(); // build geometry\n\n\t\t\t_this.setIndex(indices);\n\n\t\t\t_this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n\t\t\t_this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\n\t\t\t_this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n\n\t\t\tfunction generateBufferData() {\n\t\t\t\tfor (var i = 0; i < tubularSegments; i++) {\n\t\t\t\t\tgenerateSegment(i);\n\t\t\t\t} // if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t\t// at the regular position on the given path\n\t\t\t\t//\n\t\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n\t\t\t\tgenerateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n\t\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\t\tgenerateUVs(); // finally create faces\n\n\t\t\t\tgenerateIndices();\n\t\t\t}\n\n\t\t\tfunction generateSegment(i) {\n\t\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\t\t\t\tP = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\n\n\t\t\t\tvar N = frames.normals[i];\n\t\t\t\tvar B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n\t\t\t\tfor (var j = 0; j <= radialSegments; j++) {\n\t\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tvar sin = Math.sin(v);\n\t\t\t\t\tvar cos = -Math.cos(v); // normal\n\n\t\t\t\t\tnormal.x = cos * N.x + sin * B.x;\n\t\t\t\t\tnormal.y = cos * N.y + sin * B.y;\n\t\t\t\t\tnormal.z = cos * N.z + sin * B.z;\n\t\t\t\t\tnormal.normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // vertex\n\n\t\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\t\tvertex.z = P.z + radius * normal.z;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateIndices() {\n\t\t\t\tfor (var j = 1; j <= tubularSegments; j++) {\n\t\t\t\t\tfor (var i = 1; i <= radialSegments; i++) {\n\t\t\t\t\t\tvar a = (radialSegments + 1) * (j - 1) + (i - 1);\n\t\t\t\t\t\tvar b = (radialSegments + 1) * j + (i - 1);\n\t\t\t\t\t\tvar c = (radialSegments + 1) * j + i;\n\t\t\t\t\t\tvar d = (radialSegments + 1) * (j - 1) + i; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\t\t\t\tfor (var i = 0; i <= tubularSegments; i++) {\n\t\t\t\t\tfor (var j = 0; j <= radialSegments; j++) {\n\t\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\t\tuv.y = j / radialSegments;\n\t\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = TubeGeometry.prototype;\n\n\t\t_proto.toJSON = function toJSON() {\n\t\t\tvar data = BufferGeometry.prototype.toJSON.call(this);\n\t\t\tdata.path = this.parameters.path.toJSON();\n\t\t\treturn data;\n\t\t};\n\n\t\treturn TubeGeometry;\n\t}(BufferGeometry);\n\n\tvar WireframeGeometry = /*#__PURE__*/function (_BufferGeometry) {\n\t\t_inheritsLoose(WireframeGeometry, _BufferGeometry);\n\n\t\tfunction WireframeGeometry(geometry) {\n\t\t\tvar _this;\n\n\t\t\t_this = _BufferGeometry.call(this) || this;\n\t\t\t_this.type = 'WireframeGeometry';\n\n\t\t\tif (geometry.isGeometry === true) {\n\t\t\t\tconsole.error('THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\treturn _assertThisInitialized(_this);\n\t\t\t} // buffer\n\n\n\t\t\tvar vertices = []; // helper variables\n\n\t\t\tvar edge = [0, 0],\n\t\t\t\t\tedges = {};\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tif (geometry.index !== null) {\n\t\t\t\t// indexed BufferGeometry\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar indices = geometry.index;\n\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\tif (groups.length === 0) {\n\t\t\t\t\tgroups = [{\n\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\tcount: indices.count,\n\t\t\t\t\t\tmaterialIndex: 0\n\t\t\t\t\t}];\n\t\t\t\t} // create a data structure that contains all eges without duplicates\n\n\n\t\t\t\tfor (var o = 0, ol = groups.length; o < ol; ++o) {\n\t\t\t\t\tvar group = groups[o];\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor (var i = start, l = start + count; i < l; i += 3) {\n\t\t\t\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\t\t\t\tvar edge1 = indices.getX(i + j);\n\t\t\t\t\t\t\tvar edge2 = indices.getX(i + (j + 1) % 3);\n\t\t\t\t\t\t\tedge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n\t\t\t\t\t\t\tedge[1] = Math.max(edge1, edge2);\n\t\t\t\t\t\t\tvar key = edge[0] + ',' + edge[1];\n\n\t\t\t\t\t\t\tif (edges[key] === undefined) {\n\t\t\t\t\t\t\t\tedges[key] = {\n\t\t\t\t\t\t\t\t\tindex1: edge[0],\n\t\t\t\t\t\t\t\t\tindex2: edge[1]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // generate vertices\n\n\n\t\t\t\tfor (var _key in edges) {\n\t\t\t\t\tvar e = edges[_key];\n\t\t\t\t\tvertex.fromBufferAttribute(position, e.index1);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t\tvertex.fromBufferAttribute(position, e.index2);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// non-indexed BufferGeometry\n\t\t\t\tvar _position = geometry.attributes.position;\n\n\t\t\t\tfor (var _i = 0, _l = _position.count / 3; _i < _l; _i++) {\n\t\t\t\t\tfor (var _j = 0; _j < 3; _j++) {\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\t\t\t\t\t\tvar index1 = 3 * _i + _j;\n\t\t\t\t\t\tvertex.fromBufferAttribute(_position, index1);\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t\t\tvar index2 = 3 * _i + (_j + 1) % 3;\n\t\t\t\t\t\tvertex.fromBufferAttribute(_position, index2);\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\t_this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn WireframeGeometry;\n\t}(BufferGeometry);\n\n\tvar Geometries = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tTextBufferGeometry: TextGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeGeometry,\n\t\tWireframeGeometry: WireframeGeometry\n\t});\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <THREE.Color>\n\t * }\n\t */\n\n\tfunction ShadowMaterial(parameters) {\n\t\tMaterial.call(this);\n\t\tthis.type = 'ShadowMaterial';\n\t\tthis.color = new Color(0x000000);\n\t\tthis.transparent = true;\n\t\tthis.setValues(parameters);\n\t}\n\n\tShadowMaterial.prototype = Object.create(Material.prototype);\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\tShadowMaterial.prototype.copy = function (source) {\n\t\tMaterial.prototype.copy.call(this, source);\n\t\tthis.color.copy(source.color);\n\t\treturn this;\n\t};\n\n\tfunction RawShaderMaterial(parameters) {\n\t\tShaderMaterial.call(this, parameters);\n\t\tthis.type = 'RawShaderMaterial';\n\t}\n\n\tRawShaderMaterial.prototype = Object.create(ShaderMaterial.prototype);\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\troughness: <float>,\n\t *\tmetalness: <float>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\troughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmetalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tenvMapIntensity: <float>\n\t *\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tskinning: <bool>,\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshStandardMaterial(parameters) {\n\t\tMaterial.call(this);\n\t\tthis.defines = {\n\t\t\t'STANDARD': ''\n\t\t};\n\t\tthis.type = 'MeshStandardMaterial';\n\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\t\tthis.map = null;\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\t\tthis.emissive = new Color(0x000000);\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2(1, 1);\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\t\tthis.roughnessMap = null;\n\t\tthis.metalnessMap = null;\n\t\tthis.alphaMap = null;\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\t\tthis.refractionRatio = 0.98;\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\t\tthis.vertexTangents = false;\n\t\tthis.setValues(parameters);\n\t}\n\n\tMeshStandardMaterial.prototype = Object.create(Material.prototype);\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\tMeshStandardMaterial.prototype.copy = function (source) {\n\t\tMaterial.prototype.copy.call(this, source);\n\t\tthis.defines = {\n\t\t\t'STANDARD': ''\n\t\t};\n\t\tthis.color.copy(source.color);\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\t\tthis.map = source.map;\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\tthis.emissive.copy(source.emissive);\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy(source.normalScale);\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\t\tthis.roughnessMap = source.roughnessMap;\n\t\tthis.metalnessMap = source.metalnessMap;\n\t\tthis.alphaMap = source.alphaMap;\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\t\tthis.vertexTangents = source.vertexTangents;\n\t\treturn this;\n\t};\n\n\t/**\n\t * parameters = {\n\t *\tclearcoat: <float>,\n\t *\tclearcoatMap: new THREE.Texture( <Image> ),\n\t *\tclearcoatRoughness: <float>,\n\t *\tclearcoatRoughnessMap: new THREE.Texture( <Image> ),\n\t *\tclearcoatNormalScale: <Vector2>,\n\t *\tclearcoatNormalMap: new THREE.Texture( <Image> ),\n\t *\n\t *\treflectivity: <float>,\n\t *\tior: <float>,\n\t *\n\t *\tsheen: <Color>,\n\t *\n\t *\ttransmission: <float>,\n\t *\ttransmissionMap: new THREE.Texture( <Image> )\n\t * }\n\t */\n\n\tfunction MeshPhysicalMaterial(parameters) {\n\t\tMeshStandardMaterial.call(this);\n\t\tthis.defines = {\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\t\t};\n\t\tthis.type = 'MeshPhysicalMaterial';\n\t\tthis.clearcoat = 0.0;\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2(1, 1);\n\t\tthis.clearcoatNormalMap = null;\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tObject.defineProperty(this, 'ior', {\n\t\t\tget: function get() {\n\t\t\t\treturn (1 + 0.4 * this.reflectivity) / (1 - 0.4 * this.reflectivity);\n\t\t\t},\n\t\t\tset: function set(ior) {\n\t\t\t\tthis.reflectivity = MathUtils.clamp(2.5 * (ior - 1) / (ior + 1), 0, 1);\n\t\t\t}\n\t\t});\n\t\tthis.sheen = null; // null will disable sheen bsdf\n\n\t\tthis.transmission = 0.0;\n\t\tthis.transmissionMap = null;\n\t\tthis.setValues(parameters);\n\t}\n\n\tMeshPhysicalMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\tMeshPhysicalMaterial.prototype.copy = function (source) {\n\t\tMeshStandardMaterial.prototype.copy.call(this, source);\n\t\tthis.defines = {\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\t\t};\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy(source.clearcoatNormalScale);\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tif (source.sheen) {\n\t\t\tthis.sheen = (this.sheen || new Color()).copy(source.sheen);\n\t\t} else {\n\t\t\tthis.sheen = null;\n\t\t}\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\t\treturn this;\n\t};\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\tspecular: <hex>,\n\t *\tshininess: <float>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.MultiplyOperation,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tskinning: <bool>,\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshPhongMaterial(parameters) {\n\t\tMaterial.call(this);\n\t\tthis.type = 'MeshPhongMaterial';\n\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\tthis.specular = new Color(0x111111);\n\t\tthis.shininess = 30;\n\t\tthis.map = null;\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\t\tthis.emissive = new Color(0x000000);\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2(1, 1);\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\t\tthis.specularMap = null;\n\t\tthis.alphaMap = null;\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\t\tthis.setValues(parameters);\n\t}\n\n\tMeshPhongMaterial.prototype = Object.create(Material.prototype);\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\tMeshPhongMaterial.prototype.copy = function (source) {\n\t\tMaterial.prototype.copy.call(this, source);\n\t\tthis.color.copy(source.color);\n\t\tthis.specular.copy(source.specular);\n\t\tthis.shininess = source.shininess;\n\t\tthis.map = source.map;\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\tthis.emissive.copy(source.emissive);\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy(source.normalScale);\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\t\tthis.specularMap = source.specularMap;\n\t\tthis.alphaMap = source.alphaMap;\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\t\treturn this;\n\t};\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\tgradientMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tskinning: <bool>,\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshToonMaterial(parameters) {\n\t\tMaterial.call(this);\n\t\tthis.defines = {\n\t\t\t'TOON': ''\n\t\t};\n\t\tthis.type = 'MeshToonMaterial';\n\t\tthis.color = new Color(0xffffff);\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\t\tthis.emissive = new Color(0x000000);\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2(1, 1);\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\t\tthis.alphaMap = null;\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\t\tthis.setValues(parameters);\n\t}\n\n\tMeshToonMaterial.prototype = Object.create(Material.prototype);\n\tMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\tMeshToonMaterial.prototype.copy = function (source) {\n\t\tMaterial.prototype.copy.call(this, source);\n\t\tthis.color.copy(source.color);\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\tthis.emissive.copy(source.emissive);\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy(source.normalScale);\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\t\tthis.alphaMap = source.alphaMap;\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\t\treturn this;\n\t};\n\n\t/**\n\t * parameters = {\n\t *\topacity: <float>,\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>\n\t *\n\t *\tskinning: <bool>,\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshNormalMaterial(parameters) {\n\t\tMaterial.call(this);\n\t\tthis.type = 'MeshNormalMaterial';\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2(1, 1);\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.fog = false;\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\t\tthis.setValues(parameters);\n\t}\n\n\tMeshNormalMaterial.prototype = Object.create(Material.prototype);\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\tMeshNormalMaterial.prototype.copy = function (source) {\n\t\tMaterial.prototype.copy.call(this, source);\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy(source.normalScale);\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\t\treturn this;\n\t};\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.Multiply,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tskinning: <bool>,\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshLambertMaterial(parameters) {\n\t\tMaterial.call(this);\n\t\tthis.type = 'MeshLambertMaterial';\n\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\tthis.map = null;\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\t\tthis.emissive = new Color(0x000000);\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\t\tthis.specularMap = null;\n\t\tthis.alphaMap = null;\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\t\tthis.setValues(parameters);\n\t}\n\n\tMeshLambertMaterial.prototype = Object.create(Material.prototype);\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\tMeshLambertMaterial.prototype.copy = function (source) {\n\t\tMaterial.prototype.copy.call(this, source);\n\t\tthis.color.copy(source.color);\n\t\tthis.map = source.map;\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\tthis.emissive.copy(source.emissive);\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\tthis.specularMap = source.specularMap;\n\t\tthis.alphaMap = source.alphaMap;\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\t\treturn this;\n\t};\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tmatcap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tskinning: <bool>,\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshMatcapMaterial(parameters) {\n\t\tMaterial.call(this);\n\t\tthis.defines = {\n\t\t\t'MATCAP': ''\n\t\t};\n\t\tthis.type = 'MeshMatcapMaterial';\n\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\tthis.matcap = null;\n\t\tthis.map = null;\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2(1, 1);\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\t\tthis.alphaMap = null;\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\t\tthis.setValues(parameters);\n\t}\n\n\tMeshMatcapMaterial.prototype = Object.create(Material.prototype);\n\tMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n\tMeshMatcapMaterial.prototype.copy = function (source) {\n\t\tMaterial.prototype.copy.call(this, source);\n\t\tthis.defines = {\n\t\t\t'MATCAP': ''\n\t\t};\n\t\tthis.color.copy(source.color);\n\t\tthis.matcap = source.matcap;\n\t\tthis.map = source.map;\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy(source.normalScale);\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\t\tthis.alphaMap = source.alphaMap;\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\t\treturn this;\n\t};\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tlinewidth: <float>,\n\t *\n\t *\tscale: <float>,\n\t *\tdashSize: <float>,\n\t *\tgapSize: <float>\n\t * }\n\t */\n\n\tfunction LineDashedMaterial(parameters) {\n\t\tLineBasicMaterial.call(this);\n\t\tthis.type = 'LineDashedMaterial';\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\t\tthis.setValues(parameters);\n\t}\n\n\tLineDashedMaterial.prototype = Object.create(LineBasicMaterial.prototype);\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tLineDashedMaterial.prototype.copy = function (source) {\n\t\tLineBasicMaterial.prototype.copy.call(this, source);\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\t\treturn this;\n\t};\n\n\tvar Materials = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\tvar AnimationUtils = {\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function arraySlice(array, from, to) {\n\t\t\tif (AnimationUtils.isTypedArray(array)) {\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n\t\t\t}\n\n\t\t\treturn array.slice(from, to);\n\t\t},\n\t\t// converts an array to a specific type\n\t\tconvertArray: function convertArray(array, type, forceClone) {\n\t\t\tif (!array || // let 'undefined' and 'null' pass\n\t\t\t!forceClone && array.constructor === type) return array;\n\n\t\t\tif (typeof type.BYTES_PER_ELEMENT === 'number') {\n\t\t\t\treturn new type(array); // create typed array\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call(array); // create Array\n\t\t},\n\t\tisTypedArray: function isTypedArray(object) {\n\t\t\treturn ArrayBuffer.isView(object) && !(object instanceof DataView);\n\t\t},\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function getKeyframeOrder(times) {\n\t\t\tfunction compareTime(i, j) {\n\t\t\t\treturn times[i] - times[j];\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array(n);\n\n\t\t\tfor (var i = 0; i !== n; ++i) {\n\t\t\t\tresult[i] = i;\n\t\t\t}\n\n\t\t\tresult.sort(compareTime);\n\t\t\treturn result;\n\t\t},\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function sortedArray(values, stride, order) {\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor(nValues);\n\n\t\t\tfor (var i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n\t\t\t\tvar srcOffset = order[i] * stride;\n\n\t\t\t\tfor (var j = 0; j !== stride; ++j) {\n\t\t\t\t\tresult[dstOffset++] = values[srcOffset + j];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function flattenJSON(jsonKeys, times, values, valuePropertyName) {\n\t\t\tvar i = 1,\n\t\t\t\t\tkey = jsonKeys[0];\n\n\t\t\twhile (key !== undefined && key[valuePropertyName] === undefined) {\n\t\t\t\tkey = jsonKeys[i++];\n\t\t\t}\n\n\t\t\tif (key === undefined) return; // no data\n\n\t\t\tvar value = key[valuePropertyName];\n\t\t\tif (value === undefined) return; // no data\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalues.push.apply(values, value); // push all elements\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t} else if (value.toArray !== undefined) {\n\t\t\t\t// ...assume THREE.Math-ish\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalue.toArray(values, values.length);\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t} else {\n\t\t\t\t// otherwise push as-is\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t}\n\t\t},\n\t\tsubclip: function subclip(sourceClip, name, startFrame, endFrame, fps) {\n\t\t\tif (fps === void 0) {\n\t\t\t\tfps = 30;\n\t\t\t}\n\n\t\t\tvar clip = sourceClip.clone();\n\t\t\tclip.name = name;\n\t\t\tvar tracks = [];\n\n\t\t\tfor (var i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tvar track = clip.tracks[i];\n\t\t\t\tvar valueSize = track.getValueSize();\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor (var j = 0; j < track.times.length; ++j) {\n\t\t\t\t\tvar frame = track.times[j] * fps;\n\t\t\t\t\tif (frame < startFrame || frame >= endFrame) continue;\n\t\t\t\t\ttimes.push(track.times[j]);\n\n\t\t\t\t\tfor (var k = 0; k < valueSize; ++k) {\n\t\t\t\t\t\tvalues.push(track.values[j * valueSize + k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (times.length === 0) continue;\n\t\t\t\ttrack.times = AnimationUtils.convertArray(times, track.times.constructor);\n\t\t\t\ttrack.values = AnimationUtils.convertArray(values, track.values.constructor);\n\t\t\t\ttracks.push(track);\n\t\t\t}\n\n\t\t\tclip.tracks = tracks; // find minimum .times value across all tracks in the trimmed clip\n\n\t\t\tvar minStartTime = Infinity;\n\n\t\t\tfor (var _i = 0; _i < clip.tracks.length; ++_i) {\n\t\t\t\tif (minStartTime > clip.tracks[_i].times[0]) {\n\t\t\t\t\tminStartTime = clip.tracks[_i].times[0];\n\t\t\t\t}\n\t\t\t} // shift all tracks such that clip begins at t=0\n\n\n\t\t\tfor (var _i2 = 0; _i2 < clip.tracks.length; ++_i2) {\n\t\t\t\tclip.tracks[_i2].shift(-1 * minStartTime);\n\t\t\t}\n\n\t\t\tclip.resetDuration();\n\t\t\treturn clip;\n\t\t},\n\t\tmakeClipAdditive: function makeClipAdditive(targetClip, referenceFrame, referenceClip, fps) {\n\t\t\tif (referenceFrame === void 0) {\n\t\t\t\treferenceFrame = 0;\n\t\t\t}\n\n\t\t\tif (referenceClip === void 0) {\n\t\t\t\treferenceClip = targetClip;\n\t\t\t}\n\n\t\t\tif (fps === void 0) {\n\t\t\t\tfps = 30;\n\t\t\t}\n\n\t\t\tif (fps <= 0) fps = 30;\n\t\t\tvar numTracks = referenceClip.tracks.length;\n\t\t\tvar referenceTime = referenceFrame / fps; // Make each track's values relative to the values at the reference frame\n\n\t\t\tvar _loop = function _loop(i) {\n\t\t\t\tvar referenceTrack = referenceClip.tracks[i];\n\t\t\t\tvar referenceTrackType = referenceTrack.ValueTypeName; // Skip this track if it's non-numeric\n\n\t\t\t\tif (referenceTrackType === 'bool' || referenceTrackType === 'string') return \"continue\"; // Find the track in the target clip whose name and type matches the reference track\n\n\t\t\t\tvar targetTrack = targetClip.tracks.find(function (track) {\n\t\t\t\t\treturn track.name === referenceTrack.name && track.ValueTypeName === referenceTrackType;\n\t\t\t\t});\n\t\t\t\tif (targetTrack === undefined) return \"continue\";\n\t\t\t\tvar referenceOffset = 0;\n\t\t\t\tvar referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\t\tif (referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n\t\t\t\t\treferenceOffset = referenceValueSize / 3;\n\t\t\t\t}\n\n\t\t\t\tvar targetOffset = 0;\n\t\t\t\tvar targetValueSize = targetTrack.getValueSize();\n\n\t\t\t\tif (targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n\t\t\t\t\ttargetOffset = targetValueSize / 3;\n\t\t\t\t}\n\n\t\t\t\tvar lastIndex = referenceTrack.times.length - 1;\n\t\t\t\tvar referenceValue = void 0; // Find the value to subtract out of the track\n\n\t\t\t\tif (referenceTime <= referenceTrack.times[0]) {\n\t\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\t\tvar startIndex = referenceOffset;\n\t\t\t\t\tvar endIndex = referenceValueSize - referenceOffset;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n\t\t\t\t} else if (referenceTime >= referenceTrack.times[lastIndex]) {\n\t\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\t\tvar _startIndex = lastIndex * referenceValueSize + referenceOffset;\n\n\t\t\t\t\tvar _endIndex = _startIndex + referenceValueSize - referenceOffset;\n\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, _startIndex, _endIndex);\n\t\t\t\t} else {\n\t\t\t\t\t// Interpolate to the reference value\n\t\t\t\t\tvar interpolant = referenceTrack.createInterpolant();\n\t\t\t\t\tvar _startIndex2 = referenceOffset;\n\n\t\t\t\t\tvar _endIndex2 = referenceValueSize - referenceOffset;\n\n\t\t\t\t\tinterpolant.evaluate(referenceTime);\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(interpolant.resultBuffer, _startIndex2, _endIndex2);\n\t\t\t\t} // Conjugate the quaternion\n\n\n\t\t\t\tif (referenceTrackType === 'quaternion') {\n\t\t\t\t\tvar referenceQuat = new Quaternion().fromArray(referenceValue).normalize().conjugate();\n\t\t\t\t\treferenceQuat.toArray(referenceValue);\n\t\t\t\t} // Subtract the reference value from all of the track values\n\n\n\t\t\t\tvar numTimes = targetTrack.times.length;\n\n\t\t\t\tfor (var j = 0; j < numTimes; ++j) {\n\t\t\t\t\tvar valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\t\tif (referenceTrackType === 'quaternion') {\n\t\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(targetTrack.values, valueStart, referenceValue, 0, targetTrack.values, valueStart);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar valueEnd = targetValueSize - targetOffset * 2; // Subtract each value for all other numeric track types\n\n\t\t\t\t\t\tfor (var k = 0; k < valueEnd; ++k) {\n\t\t\t\t\t\t\ttargetTrack.values[valueStart + k] -= referenceValue[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor (var i = 0; i < numTracks; ++i) {\n\t\t\t\tvar _ret = _loop(i);\n\n\t\t\t\tif (_ret === \"continue\") continue;\n\t\t\t}\n\n\t\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\t\t\treturn targetClip;\n\t\t}\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t */\n\tfunction Interpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\t\tthis.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\t}\n\n\tObject.assign(Interpolant.prototype, {\n\t\tevaluate: function evaluate(t) {\n\t\t\tvar pp = this.parameterPositions;\n\t\t\tvar i1 = this._cachedIndex,\n\t\t\t\t\tt1 = pp[i1],\n\t\t\t\t\tt0 = pp[i1 - 1];\n\n\t\t\tvalidate_interval: {\n\t\t\t\tseek: {\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if (!(t < t1)) {\n\t\t\t\t\t\t\tfor (var giveUpAt = i1 + 2;;) {\n\t\t\t\t\t\t\t\tif (t1 === undefined) {\n\t\t\t\t\t\t\t\t\tif (t < t0) break forward_scan; // after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t, t0);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[++i1];\n\n\t\t\t\t\t\t\t\tif (t < t1) {\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} // prepare binary search on the right side of the index\n\n\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\t\t\t\t\t\t} //- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n\t\t\t\t\t\tif (!(t >= t0)) {\n\t\t\t\t\t\t\t// looping?\n\t\t\t\t\t\t\tvar t1global = pp[1];\n\n\t\t\t\t\t\t\tif (t < t1global) {\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\n\t\t\t\t\t\t\t\tt0 = t1global;\n\t\t\t\t\t\t\t} // linear reverse scan\n\n\n\t\t\t\t\t\t\tfor (var _giveUpAt = i1 - 2;;) {\n\t\t\t\t\t\t\t\tif (t0 === undefined) {\n\t\t\t\t\t\t\t\t\t// before start\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (i1 === _giveUpAt) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[--i1 - 1];\n\n\t\t\t\t\t\t\t\tif (t >= t0) {\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} // prepare binary search on the left side of the index\n\n\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\t\t\t\t\t\t} // the interval is valid\n\n\n\t\t\t\t\t\tbreak validate_interval;\n\t\t\t\t\t} // linear scan\n\t\t\t\t\t// binary search\n\n\n\t\t\t\t\twhile (i1 < right) {\n\t\t\t\t\t\tvar mid = i1 + right >>> 1;\n\n\t\t\t\t\t\tif (t < pp[mid]) {\n\t\t\t\t\t\t\tright = mid;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ti1 = mid + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[i1];\n\t\t\t\t\tt0 = pp[i1 - 1]; // check boundary cases, again\n\n\t\t\t\t\tif (t0 === undefined) {\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (t1 === undefined) {\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t0, t);\n\t\t\t\t\t}\n\t\t\t\t} // seek\n\n\n\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\tthis.intervalChanged_(i1, t0, t1);\n\t\t\t} // validate_interval\n\n\n\t\t\treturn this.interpolate_(i1, t0, t, t1);\n\t\t},\n\t\tsettings: null,\n\t\t// optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\t\t// --- Protected interface\n\t\tDefaultSettings_: {},\n\t\tgetSettings_: function getSettings_() {\n\t\t\treturn this.settings || this.DefaultSettings_;\n\t\t},\n\t\tcopySampleValue_: function copySampleValue_(index) {\n\t\t\t// copies a sample value to the result buffer\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\toffset = index * stride;\n\n\t\t\tfor (var i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = values[offset + i];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\t// Template methods for derived classes:\n\t\tinterpolate_: function interpolate_()\n\t\t/* i1, t0, t, t1 */\n\t\t{\n\t\t\tthrow new Error('call to abstract method'); // implementations shall return this.resultBuffer\n\t\t},\n\t\tintervalChanged_: function intervalChanged_()\n\t\t/* i1, t0, t1 */\n\t\t{// empty\n\t\t}\n\t}); // DECLARE ALIAS AFTER assign prototype\n\n\tObject.assign(Interpolant.prototype, {\n\t\t//( 0, t, t0 ), returns this.resultBuffer\n\t\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\t\t//( N-1, tN-1, t ), returns this.resultBuffer\n\t\tafterEnd_: Interpolant.prototype.copySampleValue_\n\t});\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t */\n\n\tfunction CubicInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\tInterpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\tthis._weightPrev = -0;\n\t\tthis._offsetPrev = -0;\n\t\tthis._weightNext = -0;\n\t\tthis._offsetNext = -0;\n\t}\n\n\tCubicInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n\t\tconstructor: CubicInterpolant,\n\t\tDefaultSettings_: {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t},\n\t\tintervalChanged_: function intervalChanged_(i1, t0, t1) {\n\t\t\tvar pp = this.parameterPositions;\n\t\t\tvar iPrev = i1 - 2,\n\t\t\t\t\tiNext = i1 + 1,\n\t\t\t\t\ttPrev = pp[iPrev],\n\t\t\t\t\ttNext = pp[iNext];\n\n\t\t\tif (tPrev === undefined) {\n\t\t\t\tswitch (this.getSettings_().endingStart) {\n\t\t\t\t\tcase ZeroSlopeEnding:\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// ZeroCurvatureEnding\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tNext === undefined) {\n\t\t\t\tswitch (this.getSettings_().endingEnd) {\n\t\t\t\t\tcase ZeroSlopeEnding:\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[1] - pp[0];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// ZeroCurvatureEnding\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar halfDt = (t1 - t0) * 0.5,\n\t\t\t\t\tstride = this.valueSize;\n\t\t\tthis._weightPrev = halfDt / (t0 - tPrev);\n\t\t\tthis._weightNext = halfDt / (tNext - t1);\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\t\t},\n\t\tinterpolate_: function interpolate_(i1, t0, t, t1) {\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\to1 = i1 * stride,\n\t\t\t\t\to0 = o1 - stride,\n\t\t\t\t\toP = this._offsetPrev,\n\t\t\t\t\toN = this._offsetNext,\n\t\t\t\t\twP = this._weightPrev,\n\t\t\t\t\twN = this._weightNext,\n\t\t\t\t\tp = (t - t0) / (t1 - t0),\n\t\t\t\t\tpp = p * p,\n\t\t\t\t\tppp = pp * p; // evaluate polynomials\n\n\t\t\tvar sP = -wP * ppp + 2 * wP * pp - wP * p;\n\t\t\tvar s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n\t\t\tvar s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n\t\t\tvar sN = wN * ppp - wN * pp; // combine data linearly\n\n\t\t\tfor (var i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t});\n\n\tfunction LinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\tInterpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t}\n\n\tLinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n\t\tconstructor: LinearInterpolant,\n\t\tinterpolate_: function interpolate_(i1, t0, t, t1) {\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\toffset1 = i1 * stride,\n\t\t\t\t\toffset0 = offset1 - stride,\n\t\t\t\t\tweight1 = (t - t0) / (t1 - t0),\n\t\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor (var i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t});\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t */\n\n\tfunction DiscreteInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\tInterpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t}\n\n\tDiscreteInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n\t\tconstructor: DiscreteInterpolant,\n\t\tinterpolate_: function interpolate_(i1\n\t\t/*, t0, t, t1 */\n\t\t) {\n\t\t\treturn this.copySampleValue_(i1 - 1);\n\t\t}\n\t});\n\n\tfunction KeyframeTrack(name, times, values, interpolation) {\n\t\tif (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\n\t\tif (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\n\t\tthis.name = name;\n\t\tthis.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n\t\tthis.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n\t\tthis.setInterpolation(interpolation || this.DefaultInterpolation);\n\t} // Static methods\n\n\n\tObject.assign(KeyframeTrack, {\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\t\ttoJSON: function toJSON(track) {\n\t\t\tvar trackType = track.constructor;\n\t\t\tvar json; // derived classes can define a static toJSON method\n\n\t\t\tif (trackType.toJSON !== undefined) {\n\t\t\t\tjson = trackType.toJSON(track);\n\t\t\t} else {\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray(track.times, Array),\n\t\t\t\t\t'values': AnimationUtils.convertArray(track.values, Array)\n\t\t\t\t};\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif (interpolation !== track.DefaultInterpolation) {\n\t\t\t\t\tjson.interpolation = interpolation;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\t\t}\n\t});\n\tObject.assign(KeyframeTrack.prototype, {\n\t\tconstructor: KeyframeTrack,\n\t\tTimeBufferType: Float32Array,\n\t\tValueBufferType: Float32Array,\n\t\tDefaultInterpolation: InterpolateLinear,\n\t\tInterpolantFactoryMethodDiscrete: function InterpolantFactoryMethodDiscrete(result) {\n\t\t\treturn new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t},\n\t\tInterpolantFactoryMethodLinear: function InterpolantFactoryMethodLinear(result) {\n\t\t\treturn new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t},\n\t\tInterpolantFactoryMethodSmooth: function InterpolantFactoryMethodSmooth(result) {\n\t\t\treturn new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t},\n\t\tsetInterpolation: function setInterpolation(interpolation) {\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch (interpolation) {\n\t\t\t\tcase InterpolateDiscrete:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (factoryMethod === undefined) {\n\t\t\t\tvar message = 'unsupported interpolation for ' + this.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\t\tif (this.createInterpolant === undefined) {\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif (interpolation !== this.DefaultInterpolation) {\n\t\t\t\t\t\tthis.setInterpolation(this.DefaultInterpolation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(message); // fatal, in this case\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconsole.warn('THREE.KeyframeTrack:', message);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\t\t\treturn this;\n\t\t},\n\t\tgetInterpolation: function getInterpolation() {\n\t\t\tswitch (this.createInterpolant) {\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\t\t\t\t\treturn InterpolateSmooth;\n\t\t\t}\n\t\t},\n\t\tgetValueSize: function getValueSize() {\n\t\t\treturn this.values.length / this.times.length;\n\t\t},\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function shift(timeOffset) {\n\t\t\tif (timeOffset !== 0.0) {\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor (var i = 0, n = times.length; i !== n; ++i) {\n\t\t\t\t\ttimes[i] += timeOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function scale(timeScale) {\n\t\t\tif (timeScale !== 1.0) {\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor (var i = 0, n = times.length; i !== n; ++i) {\n\t\t\t\t\ttimes[i] *= timeScale;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function trim(startTime, endTime) {\n\t\t\tvar times = this.times,\n\t\t\t\t\tnKeys = times.length;\n\t\t\tvar from = 0,\n\t\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile (from !== nKeys && times[from] < startTime) {\n\t\t\t\t++from;\n\t\t\t}\n\n\t\t\twhile (to !== -1 && times[to] > endTime) {\n\t\t\t\t--to;\n\t\t\t}\n\n\t\t\t++to; // inclusive -> exclusive bound\n\n\t\t\tif (from !== 0 || to !== nKeys) {\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif (from >= to) {\n\t\t\t\t\tto = Math.max(to, 1);\n\t\t\t\t\tfrom = to - 1;\n\t\t\t\t}\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, from, to);\n\t\t\t\tthis.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function validate() {\n\t\t\tvar valid = true;\n\t\t\tvar valueSize = this.getValueSize();\n\n\t\t\tif (valueSize - Math.floor(valueSize) !== 0) {\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Invalid value size in track.', this);\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\t\tvalues = this.values,\n\t\t\t\t\tnKeys = times.length;\n\n\t\t\tif (nKeys === 0) {\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Track is empty.', this);\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor (var i = 0; i !== nKeys; i++) {\n\t\t\t\tvar currTime = times[i];\n\n\t\t\t\tif (typeof currTime === 'number' && isNaN(currTime)) {\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (prevTime !== null && prevTime > currTime) {\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\t\t\t}\n\n\t\t\tif (values !== undefined) {\n\t\t\t\tif (AnimationUtils.isTypedArray(values)) {\n\t\t\t\t\tfor (var _i = 0, n = values.length; _i !== n; ++_i) {\n\t\t\t\t\t\tvar value = values[_i];\n\n\t\t\t\t\t\tif (isNaN(value)) {\n\t\t\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Value is not a valid number.', this, _i, value);\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn valid;\n\t\t},\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function optimize() {\n\t\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\t\tvar times = AnimationUtils.arraySlice(this.times),\n\t\t\t\t\tvalues = AnimationUtils.arraySlice(this.values),\n\t\t\t\t\tstride = this.getValueSize(),\n\t\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\t\t\t\t\tlastIndex = times.length - 1;\n\t\t\tvar writeIndex = 1;\n\n\t\t\tfor (var i = 1; i < lastIndex; ++i) {\n\t\t\t\tvar keep = false;\n\t\t\t\tvar time = times[i];\n\t\t\t\tvar timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif (time !== timeNext && (i !== 1 || time !== times[0])) {\n\t\t\t\t\tif (!smoothInterpolation) {\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\t\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor (var j = 0; j !== stride; ++j) {\n\t\t\t\t\t\t\tvar value = values[offset + j];\n\n\t\t\t\t\t\t\tif (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t}\n\t\t\t\t} // in-place compaction\n\n\n\t\t\t\tif (keep) {\n\t\t\t\t\tif (i !== writeIndex) {\n\t\t\t\t\t\ttimes[writeIndex] = times[i];\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor (var _j = 0; _j !== stride; ++_j) {\n\t\t\t\t\t\t\tvalues[writeOffset + _j] = values[readOffset + _j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t++writeIndex;\n\t\t\t\t}\n\t\t\t} // flush last keyframe (compaction looks ahead)\n\n\n\t\t\tif (lastIndex > 0) {\n\t\t\t\ttimes[writeIndex] = times[lastIndex];\n\n\t\t\t\tfor (var _readOffset = lastIndex * stride, _writeOffset = writeIndex * stride, _j2 = 0; _j2 !== stride; ++_j2) {\n\t\t\t\t\tvalues[_writeOffset + _j2] = values[_readOffset + _j2];\n\t\t\t\t}\n\n\t\t\t\t++writeIndex;\n\t\t\t}\n\n\t\t\tif (writeIndex !== times.length) {\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n\t\t\t\tthis.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n\t\t\t} else {\n\t\t\t\tthis.times = times;\n\t\t\t\tthis.values = values;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tclone: function clone() {\n\t\t\tvar times = AnimationUtils.arraySlice(this.times, 0);\n\t\t\tvar values = AnimationUtils.arraySlice(this.values, 0);\n\t\t\tvar TypedKeyframeTrack = this.constructor;\n\t\t\tvar track = new TypedKeyframeTrack(this.name, times, values); // Interpolant argument to constructor is not saved, so copy the factory method directly.\n\n\t\t\ttrack.createInterpolant = this.createInterpolant;\n\t\t\treturn track;\n\t\t}\n\t});\n\n\t/**\n\t * A Track of Boolean keyframe values.\n\t */\n\n\tfunction BooleanKeyframeTrack(name, times, values) {\n\t\tKeyframeTrack.call(this, name, times, values);\n\t}\n\n\tBooleanKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n\t\tconstructor: BooleanKeyframeTrack,\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined // Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t});\n\n\t/**\n\t * A Track of keyframe values that represent color.\n\t */\n\n\tfunction ColorKeyframeTrack(name, times, values, interpolation) {\n\t\tKeyframeTrack.call(this, name, times, values, interpolation);\n\t}\n\n\tColorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n\t\tconstructor: ColorKeyframeTrack,\n\t\tValueTypeName: 'color' // ValueBufferType is inherited\n\t\t// DefaultInterpolation is inherited\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t});\n\n\t/**\n\t * A Track of numeric keyframe values.\n\t */\n\n\tfunction NumberKeyframeTrack(name, times, values, interpolation) {\n\t\tKeyframeTrack.call(this, name, times, values, interpolation);\n\t}\n\n\tNumberKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n\t\tconstructor: NumberKeyframeTrack,\n\t\tValueTypeName: 'number' // ValueBufferType is inherited\n\t\t// DefaultInterpolation is inherited\n\n\t});\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t */\n\n\tfunction QuaternionLinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\tInterpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t}\n\n\tQuaternionLinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n\t\tconstructor: QuaternionLinearInterpolant,\n\t\tinterpolate_: function interpolate_(i1, t0, t, t1) {\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\talpha = (t - t0) / (t1 - t0);\n\t\t\tvar offset = i1 * stride;\n\n\t\t\tfor (var end = offset + stride; offset !== end; offset += 4) {\n\t\t\t\tQuaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t});\n\n\t/**\n\t * A Track of quaternion keyframe values.\n\t */\n\n\tfunction QuaternionKeyframeTrack(name, times, values, interpolation) {\n\t\tKeyframeTrack.call(this, name, times, values, interpolation);\n\t}\n\n\tQuaternionKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n\t\tconstructor: QuaternionKeyframeTrack,\n\t\tValueTypeName: 'quaternion',\n\t\t// ValueBufferType is inherited\n\t\tDefaultInterpolation: InterpolateLinear,\n\t\tInterpolantFactoryMethodLinear: function InterpolantFactoryMethodLinear(result) {\n\t\t\treturn new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t},\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t});\n\n\t/**\n\t * A Track that interpolates Strings\n\t */\n\n\tfunction StringKeyframeTrack(name, times, values, interpolation) {\n\t\tKeyframeTrack.call(this, name, times, values, interpolation);\n\t}\n\n\tStringKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n\t\tconstructor: StringKeyframeTrack,\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\t});\n\n\t/**\n\t * A Track of vectored keyframe values.\n\t */\n\n\tfunction VectorKeyframeTrack(name, times, values, interpolation) {\n\t\tKeyframeTrack.call(this, name, times, values, interpolation);\n\t}\n\n\tVectorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n\t\tconstructor: VectorKeyframeTrack,\n\t\tValueTypeName: 'vector' // ValueBufferType is inherited\n\t\t// DefaultInterpolation is inherited\n\n\t});\n\n\tfunction AnimationClip(name, duration, tracks, blendMode) {\n\t\tif (duration === void 0) {\n\t\t\tduration = -1;\n\t\t}\n\n\t\tif (blendMode === void 0) {\n\t\t\tblendMode = NormalAnimationBlendMode;\n\t\t}\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\t\tthis.uuid = MathUtils.generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n\t\tif (this.duration < 0) {\n\t\t\tthis.resetDuration();\n\t\t}\n\t}\n\n\tfunction getTrackTypeForValueTypeName(typeName) {\n\t\tswitch (typeName.toLowerCase()) {\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\t\t\t\treturn StringKeyframeTrack;\n\t\t}\n\n\t\tthrow new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\n\t}\n\n\tfunction parseKeyframeTrack(json) {\n\t\tif (json.type === undefined) {\n\t\t\tthrow new Error('THREE.KeyframeTrack: track type undefined, can not parse');\n\t\t}\n\n\t\tvar trackType = getTrackTypeForValueTypeName(json.type);\n\n\t\tif (json.times === undefined) {\n\t\t\tvar times = [],\n\t\t\t\t\tvalues = [];\n\t\t\tAnimationUtils.flattenJSON(json.keys, times, values, 'value');\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\t\t} // derived classes can define a static parse method\n\n\n\t\tif (trackType.parse !== undefined) {\n\t\t\treturn trackType.parse(json);\n\t\t} else {\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType(json.name, json.times, json.values, json.interpolation);\n\t\t}\n\t}\n\n\tObject.assign(AnimationClip, {\n\t\tparse: function parse(json) {\n\t\t\tvar tracks = [],\n\t\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\t\tframeTime = 1.0 / (json.fps || 1.0);\n\n\t\t\tfor (var i = 0, n = jsonTracks.length; i !== n; ++i) {\n\t\t\t\ttracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\n\t\t\t}\n\n\t\t\tvar clip = new AnimationClip(json.name, json.duration, tracks, json.blendMode);\n\t\t\tclip.uuid = json.uuid;\n\t\t\treturn clip;\n\t\t},\n\t\ttoJSON: function toJSON(clip) {\n\t\t\tvar tracks = [],\n\t\t\t\t\tclipTracks = clip.tracks;\n\t\t\tvar json = {\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks,\n\t\t\t\t'uuid': clip.uuid,\n\t\t\t\t'blendMode': clip.blendMode\n\t\t\t};\n\n\t\t\tfor (var i = 0, n = clipTracks.length; i !== n; ++i) {\n\t\t\t\ttracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n\t\t\t}\n\n\t\t\treturn json;\n\t\t},\n\t\tCreateFromMorphTargetSequence: function CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor (var i = 0; i < numMorphTargets; i++) {\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\t\t\t\ttimes.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n\t\t\t\tvalues.push(0, 1, 0);\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder(times);\n\t\t\t\ttimes = AnimationUtils.sortedArray(times, 1, order);\n\t\t\t\tvalues = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\n\t\t\t\tif (!noLoop && times[0] === 0) {\n\t\t\t\t\ttimes.push(numMorphTargets);\n\t\t\t\t\tvalues.push(values[0]);\n\t\t\t\t}\n\n\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n\t\t\t}\n\n\t\t\treturn new AnimationClip(name, -1, tracks);\n\t\t},\n\t\tfindByName: function findByName(objectOrClipArray, name) {\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif (!Array.isArray(objectOrClipArray)) {\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < clipArray.length; i++) {\n\t\t\t\tif (clipArray[i].name === name) {\n\t\t\t\t\treturn clipArray[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tCreateClipsFromMorphTargetSequences: function CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\n\t\t\tvar animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\n\t\t\tfor (var i = 0, il = morphTargets.length; i < il; i++) {\n\t\t\t\tvar morphTarget = morphTargets[i];\n\t\t\t\tvar parts = morphTarget.name.match(pattern);\n\n\t\t\t\tif (parts && parts.length > 1) {\n\t\t\t\t\tvar name = parts[1];\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[name];\n\n\t\t\t\t\tif (!animationMorphTargets) {\n\t\t\t\t\t\tanimationToMorphTargets[name] = animationMorphTargets = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push(morphTarget);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor (var _name in animationToMorphTargets) {\n\t\t\t\tclips.push(AnimationClip.CreateFromMorphTargetSequence(_name, animationToMorphTargets[_name], fps, noLoop));\n\t\t\t}\n\n\t\t\treturn clips;\n\t\t},\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function parseAnimation(animation, bones) {\n\t\t\tif (!animation) {\n\t\t\t\tconsole.error('THREE.AnimationClip: No animation in JSONLoader data.');\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function addNonemptyTrack(trackType, trackName, animationKeys, propertyName, destTracks) {\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif (animationKeys.length !== 0) {\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\t\t\t\t\tAnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n\t\t\t\t\tif (times.length !== 0) {\n\t\t\t\t\t\tdestTracks.push(new trackType(trackName, times, values));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\tvar fps = animation.fps || 30;\n\t\t\tvar blendMode = animation.blendMode; // automatic length determination in AnimationClip.\n\n\t\t\tvar duration = animation.length || -1;\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor (var h = 0; h < hierarchyTracks.length; h++) {\n\t\t\t\tvar animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n\t\t\t\tif (!animationKeys || animationKeys.length === 0) continue; // process morph targets\n\n\t\t\t\tif (animationKeys[0].morphTargets) {\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\t\t\t\t\tvar k = void 0;\n\n\t\t\t\t\tfor (k = 0; k < animationKeys.length; k++) {\n\t\t\t\t\t\tif (animationKeys[k].morphTargets) {\n\t\t\t\t\t\t\tfor (var m = 0; m < animationKeys[k].morphTargets.length; m++) {\n\t\t\t\t\t\t\t\tmorphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} // create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\n\n\t\t\t\t\tfor (var morphTargetName in morphTargetNames) {\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor (var _m = 0; _m !== animationKeys[k].morphTargets.length; ++_m) {\n\t\t\t\t\t\t\tvar animationKey = animationKeys[k];\n\t\t\t\t\t\t\ttimes.push(animationKey.time);\n\t\t\t\t\t\t\tvalues.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * (fps || 1.0);\n\t\t\t\t} else {\n\t\t\t\t\t// ...assume skeletal animation\n\t\t\t\t\tvar boneName = '.bones[' + bones[h].name + ']';\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n\t\t\t\t\taddNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tracks.length === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar clip = new AnimationClip(clipName, duration, tracks, blendMode);\n\t\t\treturn clip;\n\t\t}\n\t});\n\tObject.assign(AnimationClip.prototype, {\n\t\tresetDuration: function resetDuration() {\n\t\t\tvar tracks = this.tracks;\n\t\t\tvar duration = 0;\n\n\t\t\tfor (var i = 0, n = tracks.length; i !== n; ++i) {\n\t\t\t\tvar track = this.tracks[i];\n\t\t\t\tduration = Math.max(duration, track.times[track.times.length - 1]);\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\t\t\treturn this;\n\t\t},\n\t\ttrim: function trim() {\n\t\t\tfor (var i = 0; i < this.tracks.length; i++) {\n\t\t\t\tthis.tracks[i].trim(0, this.duration);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tvalidate: function validate() {\n\t\t\tvar valid = true;\n\n\t\t\tfor (var i = 0; i < this.tracks.length; i++) {\n\t\t\t\tvalid = valid && this.tracks[i].validate();\n\t\t\t}\n\n\t\t\treturn valid;\n\t\t},\n\t\toptimize: function optimize() {\n\t\t\tfor (var i = 0; i < this.tracks.length; i++) {\n\t\t\t\tthis.tracks[i].optimize();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tclone: function clone() {\n\t\t\tvar tracks = [];\n\n\t\t\tfor (var i = 0; i < this.tracks.length; i++) {\n\t\t\t\ttracks.push(this.tracks[i].clone());\n\t\t\t}\n\n\t\t\treturn new AnimationClip(this.name, this.duration, tracks, this.blendMode);\n\t\t},\n\t\ttoJSON: function toJSON() {\n\t\t\treturn AnimationClip.toJSON(this);\n\t\t}\n\t});\n\n\tvar Cache = {\n\t\tenabled: false,\n\t\tfiles: {},\n\t\tadd: function add(key, file) {\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[key] = file;\n\t\t},\n\t\tget: function get(key) {\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[key];\n\t\t},\n\t\tremove: function remove(key) {\n\t\t\tdelete this.files[key];\n\t\t},\n\t\tclear: function clear() {\n\t\t\tthis.files = {};\n\t\t}\n\t};\n\n\tfunction LoadingManager(onLoad, onProgress, onError) {\n\t\tvar scope = this;\n\t\tvar isLoading = false;\n\t\tvar itemsLoaded = 0;\n\t\tvar itemsTotal = 0;\n\t\tvar urlModifier = undefined;\n\t\tvar handlers = []; // Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function (url) {\n\t\t\titemsTotal++;\n\n\t\t\tif (isLoading === false) {\n\t\t\t\tif (scope.onStart !== undefined) {\n\t\t\t\t\tscope.onStart(url, itemsLoaded, itemsTotal);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tisLoading = true;\n\t\t};\n\n\t\tthis.itemEnd = function (url) {\n\t\t\titemsLoaded++;\n\n\t\t\tif (scope.onProgress !== undefined) {\n\t\t\t\tscope.onProgress(url, itemsLoaded, itemsTotal);\n\t\t\t}\n\n\t\t\tif (itemsLoaded === itemsTotal) {\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif (scope.onLoad !== undefined) {\n\t\t\t\t\tscope.onLoad();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.itemError = function (url) {\n\t\t\tif (scope.onError !== undefined) {\n\t\t\t\tscope.onError(url);\n\t\t\t}\n\t\t};\n\n\t\tthis.resolveURL = function (url) {\n\t\t\tif (urlModifier) {\n\t\t\t\treturn urlModifier(url);\n\t\t\t}\n\n\t\t\treturn url;\n\t\t};\n\n\t\tthis.setURLModifier = function (transform) {\n\t\t\turlModifier = transform;\n\t\t\treturn this;\n\t\t};\n\n\t\tthis.addHandler = function (regex, loader) {\n\t\t\thandlers.push(regex, loader);\n\t\t\treturn this;\n\t\t};\n\n\t\tthis.removeHandler = function (regex) {\n\t\t\tvar index = handlers.indexOf(regex);\n\n\t\t\tif (index !== -1) {\n\t\t\t\thandlers.splice(index, 2);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\tthis.getHandler = function (file) {\n\t\t\tfor (var i = 0, l = handlers.length; i < l; i += 2) {\n\t\t\t\tvar regex = handlers[i];\n\t\t\t\tvar loader = handlers[i + 1];\n\t\t\t\tif (regex.global) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif (regex.test(file)) {\n\t\t\t\t\treturn loader;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\t}\n\n\tvar DefaultLoadingManager = new LoadingManager();\n\n\tfunction Loader(manager) {\n\t\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\t}\n\n\tObject.assign(Loader.prototype, {\n\t\tload: function load()\n\t\t/* url, onLoad, onProgress, onError */\n\t\t{},\n\t\tloadAsync: function loadAsync(url, onProgress) {\n\t\t\tvar scope = this;\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tscope.load(url, resolve, onProgress, reject);\n\t\t\t});\n\t\t},\n\t\tparse: function parse()\n\t\t/* data */\n\t\t{},\n\t\tsetCrossOrigin: function setCrossOrigin(crossOrigin) {\n\t\t\tthis.crossOrigin = crossOrigin;\n\t\t\treturn this;\n\t\t},\n\t\tsetWithCredentials: function setWithCredentials(value) {\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\t\t},\n\t\tsetPath: function setPath(path) {\n\t\t\tthis.path = path;\n\t\t\treturn this;\n\t\t},\n\t\tsetResourcePath: function setResourcePath(resourcePath) {\n\t\t\tthis.resourcePath = resourcePath;\n\t\t\treturn this;\n\t\t},\n\t\tsetRequestHeader: function setRequestHeader(requestHeader) {\n\t\t\tthis.requestHeader = requestHeader;\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tvar loading = {};\n\n\tfunction FileLoader(manager) {\n\t\tLoader.call(this, manager);\n\t}\n\n\tFileLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\t\tconstructor: FileLoader,\n\t\tload: function load(url, onLoad, onProgress, onError) {\n\t\t\tif (url === undefined) url = '';\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tvar scope = this;\n\t\t\tvar cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t} // Check if request is duplicate\n\n\n\t\t\tif (loading[url] !== undefined) {\n\t\t\t\tloading[url].push({\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} // Check for data: URI\n\n\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tvar dataUriRegexResult = url.match(dataUriRegex);\n\t\t\tvar request; // Safari can not handle Data URIs through XMLHttpRequest so process manually\n\n\t\t\tif (dataUriRegexResult) {\n\t\t\t\tvar mimeType = dataUriRegexResult[1];\n\t\t\t\tvar isBase64 = !!dataUriRegexResult[2];\n\t\t\t\tvar data = dataUriRegexResult[3];\n\t\t\t\tdata = decodeURIComponent(data);\n\t\t\t\tif (isBase64) data = atob(data);\n\n\t\t\t\ttry {\n\t\t\t\t\tvar response;\n\t\t\t\t\tvar responseType = (this.responseType || '').toLowerCase();\n\n\t\t\t\t\tswitch (responseType) {\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\t\t\t\t\t\t\tvar view = new Uint8Array(data.length);\n\n\t\t\t\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\t\t\t\tview[i] = data.charCodeAt(i);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (responseType === 'blob') {\n\t\t\t\t\t\t\t\tresponse = new Blob([view.buffer], {\n\t\t\t\t\t\t\t\t\ttype: mimeType\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresponse = view.buffer;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\t\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString(data, mimeType);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\t\t\t\t\t\t\tresponse = JSON.parse(data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// 'text' or other\n\t\t\t\t\t\t\tresponse = data;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\n\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tif (onLoad) onLoad(response);\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t}, 0);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tif (onError) onError(error);\n\t\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Initialise array for duplicate requests\n\t\t\t\tloading[url] = [];\n\t\t\t\tloading[url].push({\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\t\t\t\t});\n\t\t\t\trequest = new XMLHttpRequest();\n\t\t\t\trequest.open('GET', url, true);\n\t\t\t\trequest.addEventListener('load', function (event) {\n\t\t\t\t\tvar response = this.response;\n\t\t\t\t\tvar callbacks = loading[url];\n\t\t\t\t\tdelete loading[url];\n\n\t\t\t\t\tif (this.status === 200 || this.status === 0) {\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\t\t\t\t\t\tif (this.status === 0) console.warn('THREE.FileLoader: HTTP Status 0 received.'); // Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t\t// error response bodies as proper responses to requests.\n\n\t\t\t\t\t\tCache.add(url, response);\n\n\t\t\t\t\t\tfor (var _i = 0, il = callbacks.length; _i < il; _i++) {\n\t\t\t\t\t\t\tvar callback = callbacks[_i];\n\t\t\t\t\t\t\tif (callback.onLoad) callback.onLoad(response);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (var _i2 = 0, _il = callbacks.length; _i2 < _il; _i2++) {\n\t\t\t\t\t\t\tvar _callback = callbacks[_i2];\n\t\t\t\t\t\t\tif (_callback.onError) _callback.onError(event);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t\trequest.addEventListener('progress', function (event) {\n\t\t\t\t\tvar callbacks = loading[url];\n\n\t\t\t\t\tfor (var _i3 = 0, il = callbacks.length; _i3 < il; _i3++) {\n\t\t\t\t\t\tvar callback = callbacks[_i3];\n\t\t\t\t\t\tif (callback.onProgress) callback.onProgress(event);\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t\trequest.addEventListener('error', function (event) {\n\t\t\t\t\tvar callbacks = loading[url];\n\t\t\t\t\tdelete loading[url];\n\n\t\t\t\t\tfor (var _i4 = 0, il = callbacks.length; _i4 < il; _i4++) {\n\t\t\t\t\t\tvar callback = callbacks[_i4];\n\t\t\t\t\t\tif (callback.onError) callback.onError(event);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, false);\n\t\t\t\trequest.addEventListener('abort', function (event) {\n\t\t\t\t\tvar callbacks = loading[url];\n\t\t\t\t\tdelete loading[url];\n\n\t\t\t\t\tfor (var _i5 = 0, il = callbacks.length; _i5 < il; _i5++) {\n\t\t\t\t\t\tvar callback = callbacks[_i5];\n\t\t\t\t\t\tif (callback.onError) callback.onError(event);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, false);\n\t\t\t\tif (this.responseType !== undefined) request.responseType = this.responseType;\n\t\t\t\tif (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\n\t\t\t\tif (request.overrideMimeType) request.overrideMimeType(this.mimeType !== undefined ? this.mimeType : 'text/plain');\n\n\t\t\t\tfor (var header in this.requestHeader) {\n\t\t\t\t\trequest.setRequestHeader(header, this.requestHeader[header]);\n\t\t\t\t}\n\n\t\t\t\trequest.send(null);\n\t\t\t}\n\n\t\t\tscope.manager.itemStart(url);\n\t\t\treturn request;\n\t\t},\n\t\tsetResponseType: function setResponseType(value) {\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\t\t},\n\t\tsetMimeType: function setMimeType(value) {\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tfunction AnimationLoader(manager) {\n\t\tLoader.call(this, manager);\n\t}\n\n\tAnimationLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\t\tconstructor: AnimationLoader,\n\t\tload: function load(url, onLoad, onProgress, onError) {\n\t\t\tvar scope = this;\n\t\t\tvar loader = new FileLoader(scope.manager);\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t},\n\t\tparse: function parse(json) {\n\t\t\tvar animations = [];\n\n\t\t\tfor (var i = 0; i < json.length; i++) {\n\t\t\t\tvar clip = AnimationClip.parse(json[i]);\n\t\t\t\tanimations.push(clip);\n\t\t\t}\n\n\t\t\treturn animations;\n\t\t}\n\t});\n\n\t/**\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tfunction CompressedTextureLoader(manager) {\n\t\tLoader.call(this, manager);\n\t}\n\n\tCompressedTextureLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\t\tconstructor: CompressedTextureLoader,\n\t\tload: function load(url, onLoad, onProgress, onError) {\n\t\t\tvar scope = this;\n\t\t\tvar images = [];\n\t\t\tvar texture = new CompressedTexture();\n\t\t\tvar loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture(i) {\n\t\t\t\tloader.load(url[i], function (buffer) {\n\t\t\t\t\tvar texDatas = scope.parse(buffer, true);\n\t\t\t\t\timages[i] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif (loaded === 6) {\n\t\t\t\t\t\tif (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.image = images;\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t\t}\n\t\t\t\t}, onProgress, onError);\n\t\t\t}\n\n\t\t\tif (Array.isArray(url)) {\n\t\t\t\tfor (var i = 0, il = url.length; i < il; ++i) {\n\t\t\t\t\tloadTexture(i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\t\t\t\tloader.load(url, function (buffer) {\n\t\t\t\t\tvar texDatas = scope.parse(buffer, true);\n\n\t\t\t\t\tif (texDatas.isCubemap) {\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor (var f = 0; f < faces; f++) {\n\t\t\t\t\t\t\timages[f] = {\n\t\t\t\t\t\t\t\tmipmaps: []\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tfor (var _i = 0; _i < texDatas.mipmapCount; _i++) {\n\t\t\t\t\t\t\t\timages[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + _i]);\n\t\t\t\t\t\t\t\timages[f].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[f].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[f].height = texDatas.height;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttexture.image = images;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (texDatas.mipmapCount === 1) {\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t}, onProgress, onError);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\t});\n\n\tfunction ImageLoader(manager) {\n\t\tLoader.call(this, manager);\n\t}\n\n\tImageLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\t\tconstructor: ImageLoader,\n\t\tload: function load(url, onLoad, onProgress, onError) {\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tvar scope = this;\n\t\t\tvar cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tvar image = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\n\n\t\t\tfunction onImageLoad() {\n\t\t\t\timage.removeEventListener('load', onImageLoad, false);\n\t\t\t\timage.removeEventListener('error', onImageError, false);\n\t\t\t\tCache.add(url, this);\n\t\t\t\tif (onLoad) onLoad(this);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}\n\n\t\t\tfunction onImageError(event) {\n\t\t\t\timage.removeEventListener('load', onImageLoad, false);\n\t\t\t\timage.removeEventListener('error', onImageError, false);\n\t\t\t\tif (onError) onError(event);\n\t\t\t\tscope.manager.itemError(url);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}\n\n\t\t\timage.addEventListener('load', onImageLoad, false);\n\t\t\timage.addEventListener('error', onImageError, false);\n\n\t\t\tif (url.substr(0, 5) !== 'data:') {\n\t\t\t\tif (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n\t\t\t}\n\n\t\t\tscope.manager.itemStart(url);\n\t\t\timage.src = url;\n\t\t\treturn image;\n\t\t}\n\t});\n\n\tfunction CubeTextureLoader(manager) {\n\t\tLoader.call(this, manager);\n\t}\n\n\tCubeTextureLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\t\tconstructor: CubeTextureLoader,\n\t\tload: function load(urls, onLoad, onProgress, onError) {\n\t\t\tvar texture = new CubeTexture();\n\t\t\tvar loader = new ImageLoader(this.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setPath(this.path);\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture(i) {\n\t\t\t\tloader.load(urls[i], function (image) {\n\t\t\t\t\ttexture.images[i] = image;\n\t\t\t\t\tloaded++;\n\n\t\t\t\t\tif (loaded === 6) {\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t\t}\n\t\t\t\t}, undefined, onError);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < urls.length; ++i) {\n\t\t\t\tloadTexture(i);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\t});\n\n\t/**\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tfunction DataTextureLoader(manager) {\n\t\tLoader.call(this, manager);\n\t}\n\n\tDataTextureLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\t\tconstructor: DataTextureLoader,\n\t\tload: function load(url, onLoad, onProgress, onError) {\n\t\t\tvar scope = this;\n\t\t\tvar texture = new DataTexture();\n\t\t\tvar loader = new FileLoader(this.manager);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (buffer) {\n\t\t\t\tvar texData = scope.parse(buffer);\n\t\t\t\tif (!texData) return;\n\n\t\t\t\tif (texData.image !== undefined) {\n\t\t\t\t\ttexture.image = texData.image;\n\t\t\t\t} else if (texData.data !== undefined) {\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\t\tif (texData.encoding !== undefined) {\n\t\t\t\t\ttexture.encoding = texData.encoding;\n\t\t\t\t}\n\n\t\t\t\tif (texData.flipY !== undefined) {\n\t\t\t\t\ttexture.flipY = texData.flipY;\n\t\t\t\t}\n\n\t\t\t\tif (texData.format !== undefined) {\n\t\t\t\t\ttexture.format = texData.format;\n\t\t\t\t}\n\n\t\t\t\tif (texData.type !== undefined) {\n\t\t\t\t\ttexture.type = texData.type;\n\t\t\t\t}\n\n\t\t\t\tif (texData.mipmaps !== undefined) {\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\t\t\t\t}\n\n\t\t\t\tif (texData.mipmapCount === 1) {\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\tif (onLoad) onLoad(texture, texData);\n\t\t\t}, onProgress, onError);\n\t\t\treturn texture;\n\t\t}\n\t});\n\n\tfunction TextureLoader(manager) {\n\t\tLoader.call(this, manager);\n\t}\n\n\tTextureLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\t\tconstructor: TextureLoader,\n\t\tload: function load(url, onLoad, onProgress, onError) {\n\t\t\tvar texture = new Texture();\n\t\t\tvar loader = new ImageLoader(this.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.load(url, function (image) {\n\t\t\t\ttexture.image = image; // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\n\t\t\t\tvar isJPEG = url.search(/\\.jpe?g($|\\?)/i) > 0 || url.search(/^data\\:image\\/jpeg/) === 0;\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif (onLoad !== undefined) {\n\t\t\t\t\tonLoad(texture);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t\treturn texture;\n\t\t}\n\t});\n\n\t/**\n\t * Extensible curve object.\n\t *\n\t * Some common of curve methods:\n\t * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\tfunction Curve() {\n\t\tthis.type = 'Curve';\n\t\tthis.arcLengthDivisions = 200;\n\t}\n\n\tObject.assign(Curve.prototype, {\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\t\tgetPoint: function getPoint()\n\t\t/* t, optionalTarget */\n\t\t{\n\t\t\tconsole.warn('THREE.Curve: .getPoint() not implemented.');\n\t\t\treturn null;\n\t\t},\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\t\tgetPointAt: function getPointAt(u, optionalTarget) {\n\t\t\tvar t = this.getUtoTmapping(u);\n\t\t\treturn this.getPoint(t, optionalTarget);\n\t\t},\n\t\t// Get sequence of points using getPoint( t )\n\t\tgetPoints: function getPoints(divisions) {\n\t\t\tif (divisions === void 0) {\n\t\t\t\tdivisions = 5;\n\t\t\t}\n\n\t\t\tvar points = [];\n\n\t\t\tfor (var d = 0; d <= divisions; d++) {\n\t\t\t\tpoints.push(this.getPoint(d / divisions));\n\t\t\t}\n\n\t\t\treturn points;\n\t\t},\n\t\t// Get sequence of points using getPointAt( u )\n\t\tgetSpacedPoints: function getSpacedPoints(divisions) {\n\t\t\tif (divisions === void 0) {\n\t\t\t\tdivisions = 5;\n\t\t\t}\n\n\t\t\tvar points = [];\n\n\t\t\tfor (var d = 0; d <= divisions; d++) {\n\t\t\t\tpoints.push(this.getPointAt(d / divisions));\n\t\t\t}\n\n\t\t\treturn points;\n\t\t},\n\t\t// Get total curve arc length\n\t\tgetLength: function getLength() {\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[lengths.length - 1];\n\t\t},\n\t\t// Get list of cumulative segment lengths\n\t\tgetLengths: function getLengths(divisions) {\n\t\t\tif (divisions === undefined) divisions = this.arcLengthDivisions;\n\n\t\t\tif (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n\t\t\t\treturn this.cacheArcLengths;\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\t\t\tvar cache = [];\n\t\t\tvar current,\n\t\t\t\t\tlast = this.getPoint(0);\n\t\t\tvar sum = 0;\n\t\t\tcache.push(0);\n\n\t\t\tfor (var p = 1; p <= divisions; p++) {\n\t\t\t\tcurrent = this.getPoint(p / divisions);\n\t\t\t\tsum += current.distanceTo(last);\n\t\t\t\tcache.push(sum);\n\t\t\t\tlast = current;\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\t\t},\n\t\tupdateArcLengths: function updateArcLengths() {\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\t\t},\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\t\tgetUtoTmapping: function getUtoTmapping(u, distance) {\n\t\t\tvar arcLengths = this.getLengths();\n\t\t\tvar i = 0;\n\t\t\tvar il = arcLengths.length;\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif (distance) {\n\t\t\t\ttargetArcLength = distance;\n\t\t\t} else {\n\t\t\t\ttargetArcLength = u * arcLengths[il - 1];\n\t\t\t} // binary search for the index with largest value smaller than target u distance\n\n\n\t\t\tvar low = 0,\n\t\t\t\t\thigh = il - 1,\n\t\t\t\t\tcomparison;\n\n\t\t\twhile (low <= high) {\n\t\t\t\ti = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[i] - targetArcLength;\n\n\t\t\t\tif (comparison < 0) {\n\t\t\t\t\tlow = i + 1;\n\t\t\t\t} else if (comparison > 0) {\n\t\t\t\t\thigh = i - 1;\n\t\t\t\t} else {\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak; // DONE\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif (arcLengths[i] === targetArcLength) {\n\t\t\t\treturn i / (il - 1);\n\t\t\t} // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n\t\t\tvar lengthBefore = arcLengths[i];\n\t\t\tvar lengthAfter = arcLengths[i + 1];\n\t\t\tvar segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n\t\t\tvar t = (i + segmentFraction) / (il - 1);\n\t\t\treturn t;\n\t\t},\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\t\tgetTangent: function getTangent(t, optionalTarget) {\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta; // Capping in case of danger\n\n\t\t\tif (t1 < 0) t1 = 0;\n\t\t\tif (t2 > 1) t2 = 1;\n\t\t\tvar pt1 = this.getPoint(t1);\n\t\t\tvar pt2 = this.getPoint(t2);\n\t\t\tvar tangent = optionalTarget || (pt1.isVector2 ? new Vector2() : new Vector3());\n\t\t\ttangent.copy(pt2).sub(pt1).normalize();\n\t\t\treturn tangent;\n\t\t},\n\t\tgetTangentAt: function getTangentAt(u, optionalTarget) {\n\t\t\tvar t = this.getUtoTmapping(u);\n\t\t\treturn this.getTangent(t, optionalTarget);\n\t\t},\n\t\tcomputeFrenetFrames: function computeFrenetFrames(segments, closed) {\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\t\t\tvar normal = new Vector3();\n\t\t\tvar tangents = [];\n\t\t\tvar normals = [];\n\t\t\tvar binormals = [];\n\t\t\tvar vec = new Vector3();\n\t\t\tvar mat = new Matrix4(); // compute the tangent vectors for each segment on the curve\n\n\t\t\tfor (var i = 0; i <= segments; i++) {\n\t\t\t\tvar u = i / segments;\n\t\t\t\ttangents[i] = this.getTangentAt(u, new Vector3());\n\t\t\t\ttangents[i].normalize();\n\t\t\t} // select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\n\t\t\tnormals[0] = new Vector3();\n\t\t\tbinormals[0] = new Vector3();\n\t\t\tvar min = Number.MAX_VALUE;\n\t\t\tvar tx = Math.abs(tangents[0].x);\n\t\t\tvar ty = Math.abs(tangents[0].y);\n\t\t\tvar tz = Math.abs(tangents[0].z);\n\n\t\t\tif (tx <= min) {\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set(1, 0, 0);\n\t\t\t}\n\n\t\t\tif (ty <= min) {\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set(0, 1, 0);\n\t\t\t}\n\n\t\t\tif (tz <= min) {\n\t\t\t\tnormal.set(0, 0, 1);\n\t\t\t}\n\n\t\t\tvec.crossVectors(tangents[0], normal).normalize();\n\t\t\tnormals[0].crossVectors(tangents[0], vec);\n\t\t\tbinormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor (var _i = 1; _i <= segments; _i++) {\n\t\t\t\tnormals[_i] = normals[_i - 1].clone();\n\t\t\t\tbinormals[_i] = binormals[_i - 1].clone();\n\t\t\t\tvec.crossVectors(tangents[_i - 1], tangents[_i]);\n\n\t\t\t\tif (vec.length() > Number.EPSILON) {\n\t\t\t\t\tvec.normalize();\n\t\t\t\t\tvar theta = Math.acos(MathUtils.clamp(tangents[_i - 1].dot(tangents[_i]), -1, 1)); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[_i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n\t\t\t\t}\n\n\t\t\t\tbinormals[_i].crossVectors(tangents[_i], normals[_i]);\n\t\t\t} // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n\t\t\tif (closed === true) {\n\t\t\t\tvar _theta = Math.acos(MathUtils.clamp(normals[0].dot(normals[segments]), -1, 1));\n\n\t\t\t\t_theta /= segments;\n\n\t\t\t\tif (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n\t\t\t\t\t_theta = -_theta;\n\t\t\t\t}\n\n\t\t\t\tfor (var _i2 = 1; _i2 <= segments; _i2++) {\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[_i2].applyMatrix4(mat.makeRotationAxis(tangents[_i2], _theta * _i2));\n\n\t\t\t\t\tbinormals[_i2].crossVectors(tangents[_i2], normals[_i2]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\t\t},\n\t\tclone: function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t},\n\t\tcopy: function copy(source) {\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\t\t\treturn this;\n\t\t},\n\t\ttoJSON: function toJSON() {\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Curve',\n\t\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t\t}\n\t\t\t};\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\t\tdata.type = this.type;\n\t\t\treturn data;\n\t\t},\n\t\tfromJSON: function fromJSON(json) {\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tfunction EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n\t\tCurve.call(this);\n\t\tthis.type = 'EllipseCurve';\n\t\tthis.aX = aX || 0;\n\t\tthis.aY = aY || 0;\n\t\tthis.xRadius = xRadius || 1;\n\t\tthis.yRadius = yRadius || 1;\n\t\tthis.aStartAngle = aStartAngle || 0;\n\t\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\t\tthis.aClockwise = aClockwise || false;\n\t\tthis.aRotation = aRotation || 0;\n\t}\n\n\tEllipseCurve.prototype = Object.create(Curve.prototype);\n\tEllipseCurve.prototype.constructor = EllipseCurve;\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tEllipseCurve.prototype.getPoint = function (t, optionalTarget) {\n\t\tvar point = optionalTarget || new Vector2();\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n\t\twhile (deltaAngle < 0) {\n\t\t\tdeltaAngle += twoPi;\n\t\t}\n\n\t\twhile (deltaAngle > twoPi) {\n\t\t\tdeltaAngle -= twoPi;\n\t\t}\n\n\t\tif (deltaAngle < Number.EPSILON) {\n\t\t\tif (samePoints) {\n\t\t\t\tdeltaAngle = 0;\n\t\t\t} else {\n\t\t\t\tdeltaAngle = twoPi;\n\t\t\t}\n\t\t}\n\n\t\tif (this.aClockwise === true && !samePoints) {\n\t\t\tif (deltaAngle === twoPi) {\n\t\t\t\tdeltaAngle = -twoPi;\n\t\t\t} else {\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\t\t\t}\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos(angle);\n\t\tvar y = this.aY + this.yRadius * Math.sin(angle);\n\n\t\tif (this.aRotation !== 0) {\n\t\t\tvar cos = Math.cos(this.aRotation);\n\t\t\tvar sin = Math.sin(this.aRotation);\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\t\t}\n\n\t\treturn point.set(x, y);\n\t};\n\n\tEllipseCurve.prototype.copy = function (source) {\n\t\tCurve.prototype.copy.call(this, source);\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\t\tthis.aClockwise = source.aClockwise;\n\t\tthis.aRotation = source.aRotation;\n\t\treturn this;\n\t};\n\n\tEllipseCurve.prototype.toJSON = function () {\n\t\tvar data = Curve.prototype.toJSON.call(this);\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\t\tdata.aClockwise = this.aClockwise;\n\t\tdata.aRotation = this.aRotation;\n\t\treturn data;\n\t};\n\n\tEllipseCurve.prototype.fromJSON = function (json) {\n\t\tCurve.prototype.fromJSON.call(this, json);\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\t\tthis.aClockwise = json.aClockwise;\n\t\tthis.aRotation = json.aRotation;\n\t\treturn this;\n\t};\n\n\tfunction ArcCurve(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\tEllipseCurve.call(this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\tthis.type = 'ArcCurve';\n\t}\n\n\tArcCurve.prototype = Object.create(EllipseCurve.prototype);\n\tArcCurve.prototype.constructor = ArcCurve;\n\tArcCurve.prototype.isArcCurve = true;\n\n\t/**\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\t\tvar c0 = 0,\n\t\t\t\tc1 = 0,\n\t\t\t\tc2 = 0,\n\t\t\t\tc3 = 0;\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *\t p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *\t p(0) = x0, p(1) = x1\n\t\t *\tand\n\t\t *\t p'(0) = t0, p'(1) = t1.\n\t\t */\n\n\t\tfunction init(x0, x1, t0, t1) {\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\t\t}\n\n\t\treturn {\n\t\t\tinitCatmullRom: function initCatmullRom(x0, x1, x2, x3, tension) {\n\t\t\t\tinit(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n\t\t\t},\n\t\t\tinitNonuniformCatmullRom: function initNonuniformCatmullRom(x0, x1, x2, x3, dt0, dt1, dt2) {\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tvar t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n\t\t\t\tvar t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\t\t\t\tinit(x1, x2, t1, t2);\n\t\t\t},\n\t\t\tcalc: function calc(t) {\n\t\t\t\tvar t2 = t * t;\n\t\t\t\tvar t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\t\t\t}\n\t\t};\n\t} //\n\n\n\tvar tmp = new Vector3();\n\tvar px = new CubicPoly(),\n\t\t\tpy = new CubicPoly(),\n\t\t\tpz = new CubicPoly();\n\n\tfunction CatmullRomCurve3(points, closed, curveType, tension) {\n\t\tif (points === void 0) {\n\t\t\tpoints = [];\n\t\t}\n\n\t\tif (closed === void 0) {\n\t\t\tclosed = false;\n\t\t}\n\n\t\tif (curveType === void 0) {\n\t\t\tcurveType = 'centripetal';\n\t\t}\n\n\t\tif (tension === void 0) {\n\t\t\ttension = 0.5;\n\t\t}\n\n\t\tCurve.call(this);\n\t\tthis.type = 'CatmullRomCurve3';\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\t}\n\n\tCatmullRomCurve3.prototype = Object.create(Curve.prototype);\n\tCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n\tCatmullRomCurve3.prototype.getPoint = function (t, optionalTarget) {\n\t\tif (optionalTarget === void 0) {\n\t\t\toptionalTarget = new Vector3();\n\t\t}\n\n\t\tvar point = optionalTarget;\n\t\tvar points = this.points;\n\t\tvar l = points.length;\n\t\tvar p = (l - (this.closed ? 0 : 1)) * t;\n\t\tvar intPoint = Math.floor(p);\n\t\tvar weight = p - intPoint;\n\n\t\tif (this.closed) {\n\t\t\tintPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n\t\t} else if (weight === 0 && intPoint === l - 1) {\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\t\t}\n\n\t\tvar p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif (this.closed || intPoint > 0) {\n\t\t\tp0 = points[(intPoint - 1) % l];\n\t\t} else {\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors(points[0], points[1]).add(points[0]);\n\t\t\tp0 = tmp;\n\t\t}\n\n\t\tvar p1 = points[intPoint % l];\n\t\tvar p2 = points[(intPoint + 1) % l];\n\n\t\tif (this.closed || intPoint + 2 < l) {\n\t\t\tp3 = points[(intPoint + 2) % l];\n\t\t} else {\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n\t\t\tp3 = tmp;\n\t\t}\n\n\t\tif (this.curveType === 'centripetal' || this.curveType === 'chordal') {\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tvar dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n\t\t\tvar dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n\t\t\tvar dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n\t\t\tif (dt1 < 1e-4) dt1 = 1.0;\n\t\t\tif (dt0 < 1e-4) dt0 = dt1;\n\t\t\tif (dt2 < 1e-4) dt2 = dt1;\n\t\t\tpx.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n\t\t\tpy.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n\t\t\tpz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n\t\t} else if (this.curveType === 'catmullrom') {\n\t\t\tpx.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n\t\t\tpy.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n\t\t\tpz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n\t\t}\n\n\t\tpoint.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n\t\treturn point;\n\t};\n\n\tCatmullRomCurve3.prototype.copy = function (source) {\n\t\tCurve.prototype.copy.call(this, source);\n\t\tthis.points = [];\n\n\t\tfor (var i = 0, l = source.points.length; i < l; i++) {\n\t\t\tvar point = source.points[i];\n\t\t\tthis.points.push(point.clone());\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\t\treturn this;\n\t};\n\n\tCatmullRomCurve3.prototype.toJSON = function () {\n\t\tvar data = Curve.prototype.toJSON.call(this);\n\t\tdata.points = [];\n\n\t\tfor (var i = 0, l = this.points.length; i < l; i++) {\n\t\t\tvar point = this.points[i];\n\t\t\tdata.points.push(point.toArray());\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\t\treturn data;\n\t};\n\n\tCatmullRomCurve3.prototype.fromJSON = function (json) {\n\t\tCurve.prototype.fromJSON.call(this, json);\n\t\tthis.points = [];\n\n\t\tfor (var i = 0, l = json.points.length; i < l; i++) {\n\t\t\tvar point = json.points[i];\n\t\t\tthis.points.push(new Vector3().fromArray(point));\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */\n\tfunction CatmullRom(t, p0, p1, p2, p3) {\n\t\tvar v0 = (p2 - p0) * 0.5;\n\t\tvar v1 = (p3 - p1) * 0.5;\n\t\tvar t2 = t * t;\n\t\tvar t3 = t * t2;\n\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\t} //\n\n\n\tfunction QuadraticBezierP0(t, p) {\n\t\tvar k = 1 - t;\n\t\treturn k * k * p;\n\t}\n\n\tfunction QuadraticBezierP1(t, p) {\n\t\treturn 2 * (1 - t) * t * p;\n\t}\n\n\tfunction QuadraticBezierP2(t, p) {\n\t\treturn t * t * p;\n\t}\n\n\tfunction QuadraticBezier(t, p0, p1, p2) {\n\t\treturn QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n\t} //\n\n\n\tfunction CubicBezierP0(t, p) {\n\t\tvar k = 1 - t;\n\t\treturn k * k * k * p;\n\t}\n\n\tfunction CubicBezierP1(t, p) {\n\t\tvar k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\t}\n\n\tfunction CubicBezierP2(t, p) {\n\t\treturn 3 * (1 - t) * t * t * p;\n\t}\n\n\tfunction CubicBezierP3(t, p) {\n\t\treturn t * t * t * p;\n\t}\n\n\tfunction CubicBezier(t, p0, p1, p2, p3) {\n\t\treturn CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n\t}\n\n\tfunction CubicBezierCurve(v0, v1, v2, v3) {\n\t\tif (v0 === void 0) {\n\t\t\tv0 = new Vector2();\n\t\t}\n\n\t\tif (v1 === void 0) {\n\t\t\tv1 = new Vector2();\n\t\t}\n\n\t\tif (v2 === void 0) {\n\t\t\tv2 = new Vector2();\n\t\t}\n\n\t\tif (v3 === void 0) {\n\t\t\tv3 = new Vector2();\n\t\t}\n\n\t\tCurve.call(this);\n\t\tthis.type = 'CubicBezierCurve';\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\t}\n\n\tCubicBezierCurve.prototype = Object.create(Curve.prototype);\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n\tCubicBezierCurve.prototype.getPoint = function (t, optionalTarget) {\n\t\tif (optionalTarget === void 0) {\n\t\t\toptionalTarget = new Vector2();\n\t\t}\n\n\t\tvar point = optionalTarget;\n\t\tvar v0 = this.v0,\n\t\t\t\tv1 = this.v1,\n\t\t\t\tv2 = this.v2,\n\t\t\t\tv3 = this.v3;\n\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n\t\treturn point;\n\t};\n\n\tCubicBezierCurve.prototype.copy = function (source) {\n\t\tCurve.prototype.copy.call(this, source);\n\t\tthis.v0.copy(source.v0);\n\t\tthis.v1.copy(source.v1);\n\t\tthis.v2.copy(source.v2);\n\t\tthis.v3.copy(source.v3);\n\t\treturn this;\n\t};\n\n\tCubicBezierCurve.prototype.toJSON = function () {\n\t\tvar data = Curve.prototype.toJSON.call(this);\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\t\treturn data;\n\t};\n\n\tCubicBezierCurve.prototype.fromJSON = function (json) {\n\t\tCurve.prototype.fromJSON.call(this, json);\n\t\tthis.v0.fromArray(json.v0);\n\t\tthis.v1.fromArray(json.v1);\n\t\tthis.v2.fromArray(json.v2);\n\t\tthis.v3.fromArray(json.v3);\n\t\treturn this;\n\t};\n\n\tfunction CubicBezierCurve3(v0, v1, v2, v3) {\n\t\tif (v0 === void 0) {\n\t\t\tv0 = new Vector3();\n\t\t}\n\n\t\tif (v1 === void 0) {\n\t\t\tv1 = new Vector3();\n\t\t}\n\n\t\tif (v2 === void 0) {\n\t\t\tv2 = new Vector3();\n\t\t}\n\n\t\tif (v3 === void 0) {\n\t\t\tv3 = new Vector3();\n\t\t}\n\n\t\tCurve.call(this);\n\t\tthis.type = 'CubicBezierCurve3';\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\t}\n\n\tCubicBezierCurve3.prototype = Object.create(Curve.prototype);\n\tCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n\tCubicBezierCurve3.prototype.getPoint = function (t, optionalTarget) {\n\t\tif (optionalTarget === void 0) {\n\t\t\toptionalTarget = new Vector3();\n\t\t}\n\n\t\tvar point = optionalTarget;\n\t\tvar v0 = this.v0,\n\t\t\t\tv1 = this.v1,\n\t\t\t\tv2 = this.v2,\n\t\t\t\tv3 = this.v3;\n\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n\t\treturn point;\n\t};\n\n\tCubicBezierCurve3.prototype.copy = function (source) {\n\t\tCurve.prototype.copy.call(this, source);\n\t\tthis.v0.copy(source.v0);\n\t\tthis.v1.copy(source.v1);\n\t\tthis.v2.copy(source.v2);\n\t\tthis.v3.copy(source.v3);\n\t\treturn this;\n\t};\n\n\tCubicBezierCurve3.prototype.toJSON = function () {\n\t\tvar data = Curve.prototype.toJSON.call(this);\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\t\treturn data;\n\t};\n\n\tCubicBezierCurve3.prototype.fromJSON = function (json) {\n\t\tCurve.prototype.fromJSON.call(this, json);\n\t\tthis.v0.fromArray(json.v0);\n\t\tthis.v1.fromArray(json.v1);\n\t\tthis.v2.fromArray(json.v2);\n\t\tthis.v3.fromArray(json.v3);\n\t\treturn this;\n\t};\n\n\tfunction LineCurve(v1, v2) {\n\t\tif (v1 === void 0) {\n\t\t\tv1 = new Vector2();\n\t\t}\n\n\t\tif (v2 === void 0) {\n\t\t\tv2 = new Vector2();\n\t\t}\n\n\t\tCurve.call(this);\n\t\tthis.type = 'LineCurve';\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t}\n\n\tLineCurve.prototype = Object.create(Curve.prototype);\n\tLineCurve.prototype.constructor = LineCurve;\n\tLineCurve.prototype.isLineCurve = true;\n\n\tLineCurve.prototype.getPoint = function (t, optionalTarget) {\n\t\tif (optionalTarget === void 0) {\n\t\t\toptionalTarget = new Vector2();\n\t\t}\n\n\t\tvar point = optionalTarget;\n\n\t\tif (t === 1) {\n\t\t\tpoint.copy(this.v2);\n\t\t} else {\n\t\t\tpoint.copy(this.v2).sub(this.v1);\n\t\t\tpoint.multiplyScalar(t).add(this.v1);\n\t\t}\n\n\t\treturn point;\n\t}; // Line curve is linear, so we can overwrite default getPointAt\n\n\n\tLineCurve.prototype.getPointAt = function (u, optionalTarget) {\n\t\treturn this.getPoint(u, optionalTarget);\n\t};\n\n\tLineCurve.prototype.getTangent = function (t, optionalTarget) {\n\t\tvar tangent = optionalTarget || new Vector2();\n\t\ttangent.copy(this.v2).sub(this.v1).normalize();\n\t\treturn tangent;\n\t};\n\n\tLineCurve.prototype.copy = function (source) {\n\t\tCurve.prototype.copy.call(this, source);\n\t\tthis.v1.copy(source.v1);\n\t\tthis.v2.copy(source.v2);\n\t\treturn this;\n\t};\n\n\tLineCurve.prototype.toJSON = function () {\n\t\tvar data = Curve.prototype.toJSON.call(this);\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\treturn data;\n\t};\n\n\tLineCurve.prototype.fromJSON = function (json) {\n\t\tCurve.prototype.fromJSON.call(this, json);\n\t\tthis.v1.fromArray(json.v1);\n\t\tthis.v2.fromArray(json.v2);\n\t\treturn this;\n\t};\n\n\tfunction LineCurve3(v1, v2) {\n\t\tif (v1 === void 0) {\n\t\t\tv1 = new Vector3();\n\t\t}\n\n\t\tif (v2 === void 0) {\n\t\t\tv2 = new Vector3();\n\t\t}\n\n\t\tCurve.call(this);\n\t\tthis.type = 'LineCurve3';\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t}\n\n\tLineCurve3.prototype = Object.create(Curve.prototype);\n\tLineCurve3.prototype.constructor = LineCurve3;\n\tLineCurve3.prototype.isLineCurve3 = true;\n\n\tLineCurve3.prototype.getPoint = function (t, optionalTarget) {\n\t\tif (optionalTarget === void 0) {\n\t\t\toptionalTarget = new Vector3();\n\t\t}\n\n\t\tvar point = optionalTarget;\n\n\t\tif (t === 1) {\n\t\t\tpoint.copy(this.v2);\n\t\t} else {\n\t\t\tpoint.copy(this.v2).sub(this.v1);\n\t\t\tpoint.multiplyScalar(t).add(this.v1);\n\t\t}\n\n\t\treturn point;\n\t}; // Line curve is linear, so we can overwrite default getPointAt\n\n\n\tLineCurve3.prototype.getPointAt = function (u, optionalTarget) {\n\t\treturn this.getPoint(u, optionalTarget);\n\t};\n\n\tLineCurve3.prototype.copy = function (source) {\n\t\tCurve.prototype.copy.call(this, source);\n\t\tthis.v1.copy(source.v1);\n\t\tthis.v2.copy(source.v2);\n\t\treturn this;\n\t};\n\n\tLineCurve3.prototype.toJSON = function () {\n\t\tvar data = Curve.prototype.toJSON.call(this);\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\treturn data;\n\t};\n\n\tLineCurve3.prototype.fromJSON = function (json) {\n\t\tCurve.prototype.fromJSON.call(this, json);\n\t\tthis.v1.fromArray(json.v1);\n\t\tthis.v2.fromArray(json.v2);\n\t\treturn this;\n\t};\n\n\tfunction QuadraticBezierCurve(v0, v1, v2) {\n\t\tif (v0 === void 0) {\n\t\t\tv0 = new Vector2();\n\t\t}\n\n\t\tif (v1 === void 0) {\n\t\t\tv1 = new Vector2();\n\t\t}\n\n\t\tif (v2 === void 0) {\n\t\t\tv2 = new Vector2();\n\t\t}\n\n\t\tCurve.call(this);\n\t\tthis.type = 'QuadraticBezierCurve';\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t}\n\n\tQuadraticBezierCurve.prototype = Object.create(Curve.prototype);\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n\tQuadraticBezierCurve.prototype.getPoint = function (t, optionalTarget) {\n\t\tif (optionalTarget === void 0) {\n\t\t\toptionalTarget = new Vector2();\n\t\t}\n\n\t\tvar point = optionalTarget;\n\t\tvar v0 = this.v0,\n\t\t\t\tv1 = this.v1,\n\t\t\t\tv2 = this.v2;\n\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n\t\treturn point;\n\t};\n\n\tQuadraticBezierCurve.prototype.copy = function (source) {\n\t\tCurve.prototype.copy.call(this, source);\n\t\tthis.v0.copy(source.v0);\n\t\tthis.v1.copy(source.v1);\n\t\tthis.v2.copy(source.v2);\n\t\treturn this;\n\t};\n\n\tQuadraticBezierCurve.prototype.toJSON = function () {\n\t\tvar data = Curve.prototype.toJSON.call(this);\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\treturn data;\n\t};\n\n\tQuadraticBezierCurve.prototype.fromJSON = function (json) {\n\t\tCurve.prototype.fromJSON.call(this, json);\n\t\tthis.v0.fromArray(json.v0);\n\t\tthis.v1.fromArray(json.v1);\n\t\tthis.v2.fromArray(json.v2);\n\t\treturn this;\n\t};\n\n\tfunction QuadraticBezierCurve3(v0, v1, v2) {\n\t\tif (v0 === void 0) {\n\t\t\tv0 = new Vector3();\n\t\t}\n\n\t\tif (v1 === void 0) {\n\t\t\tv1 = new Vector3();\n\t\t}\n\n\t\tif (v2 === void 0) {\n\t\t\tv2 = new Vector3();\n\t\t}\n\n\t\tCurve.call(this);\n\t\tthis.type = 'QuadraticBezierCurve3';\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t}\n\n\tQuadraticBezierCurve3.prototype = Object.create(Curve.prototype);\n\tQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n\tQuadraticBezierCurve3.prototype.getPoint = function (t, optionalTarget) {\n\t\tif (optionalTarget === void 0) {\n\t\t\toptionalTarget = new Vector3();\n\t\t}\n\n\t\tvar point = optionalTarget;\n\t\tvar v0 = this.v0,\n\t\t\t\tv1 = this.v1,\n\t\t\t\tv2 = this.v2;\n\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n\t\treturn point;\n\t};\n\n\tQuadraticBezierCurve3.prototype.copy = function (source) {\n\t\tCurve.prototype.copy.call(this, source);\n\t\tthis.v0.copy(source.v0);\n\t\tthis.v1.copy(source.v1);\n\t\tthis.v2.copy(source.v2);\n\t\treturn this;\n\t};\n\n\tQuadraticBezierCurve3.prototype.toJSON = function () {\n\t\tvar data = Curve.prototype.toJSON.call(this);\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\treturn data;\n\t};\n\n\tQuadraticBezierCurve3.prototype.fromJSON = function (json) {\n\t\tCurve.prototype.fromJSON.call(this, json);\n\t\tthis.v0.fromArray(json.v0);\n\t\tthis.v1.fromArray(json.v1);\n\t\tthis.v2.fromArray(json.v2);\n\t\treturn this;\n\t};\n\n\tfunction SplineCurve(points) {\n\t\tif (points === void 0) {\n\t\t\tpoints = [];\n\t\t}\n\n\t\tCurve.call(this);\n\t\tthis.type = 'SplineCurve';\n\t\tthis.points = points;\n\t}\n\n\tSplineCurve.prototype = Object.create(Curve.prototype);\n\tSplineCurve.prototype.constructor = SplineCurve;\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tSplineCurve.prototype.getPoint = function (t, optionalTarget) {\n\t\tif (optionalTarget === void 0) {\n\t\t\toptionalTarget = new Vector2();\n\t\t}\n\n\t\tvar point = optionalTarget;\n\t\tvar points = this.points;\n\t\tvar p = (points.length - 1) * t;\n\t\tvar intPoint = Math.floor(p);\n\t\tvar weight = p - intPoint;\n\t\tvar p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n\t\tvar p1 = points[intPoint];\n\t\tvar p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n\t\tvar p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n\t\tpoint.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n\t\treturn point;\n\t};\n\n\tSplineCurve.prototype.copy = function (source) {\n\t\tCurve.prototype.copy.call(this, source);\n\t\tthis.points = [];\n\n\t\tfor (var i = 0, l = source.points.length; i < l; i++) {\n\t\t\tvar point = source.points[i];\n\t\t\tthis.points.push(point.clone());\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tSplineCurve.prototype.toJSON = function () {\n\t\tvar data = Curve.prototype.toJSON.call(this);\n\t\tdata.points = [];\n\n\t\tfor (var i = 0, l = this.points.length; i < l; i++) {\n\t\t\tvar point = this.points[i];\n\t\t\tdata.points.push(point.toArray());\n\t\t}\n\n\t\treturn data;\n\t};\n\n\tSplineCurve.prototype.fromJSON = function (json) {\n\t\tCurve.prototype.fromJSON.call(this, json);\n\t\tthis.points = [];\n\n\t\tfor (var i = 0, l = json.points.length; i < l; i++) {\n\t\t\tvar point = json.points[i];\n\t\t\tthis.points.push(new Vector2().fromArray(point));\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tvar Curves = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tArcCurve: ArcCurve,\n\t\tCatmullRomCurve3: CatmullRomCurve3,\n\t\tCubicBezierCurve: CubicBezierCurve,\n\t\tCubicBezierCurve3: CubicBezierCurve3,\n\t\tEllipseCurve: EllipseCurve,\n\t\tLineCurve: LineCurve,\n\t\tLineCurve3: LineCurve3,\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\t\tSplineCurve: SplineCurve\n\t});\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *\tcurves, but retains the api of a curve\n\t **************************************************************/\n\n\tfunction CurvePath() {\n\t\tCurve.call(this);\n\t\tthis.type = 'CurvePath';\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\t}\n\n\tCurvePath.prototype = Object.assign(Object.create(Curve.prototype), {\n\t\tconstructor: CurvePath,\n\t\tadd: function add(curve) {\n\t\t\tthis.curves.push(curve);\n\t\t},\n\t\tclosePath: function closePath() {\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[0].getPoint(0);\n\t\t\tvar endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n\t\t\tif (!startPoint.equals(endPoint)) {\n\t\t\t\tthis.curves.push(new LineCurve(endPoint, startPoint));\n\t\t\t}\n\t\t},\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\t\tgetPoint: function getPoint(t) {\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0; // To think about boundaries points.\n\n\t\t\twhile (i < curveLengths.length) {\n\t\t\t\tif (curveLengths[i] >= d) {\n\t\t\t\t\tvar diff = curveLengths[i] - d;\n\t\t\t\t\tvar curve = this.curves[i];\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\t\t\t\t\treturn curve.getPointAt(u);\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\treturn null; // loop where sum != 0, sum > d , sum+1 <d\n\t\t},\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\t\tgetLength: function getLength() {\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[lens.length - 1];\n\t\t},\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function updateArcLengths() {\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\t\t},\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\t\tgetCurveLengths: function getCurveLengths() {\n\t\t\t// We use cache values if curves and cache array are same length\n\t\t\tif (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n\t\t\t\treturn this.cacheLengths;\n\t\t\t} // Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\n\t\t\tvar lengths = [];\n\t\t\tvar sums = 0;\n\n\t\t\tfor (var i = 0, l = this.curves.length; i < l; i++) {\n\t\t\t\tsums += this.curves[i].getLength();\n\t\t\t\tlengths.push(sums);\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\t\t\treturn lengths;\n\t\t},\n\t\tgetSpacedPoints: function getSpacedPoints(divisions) {\n\t\t\tif (divisions === void 0) {\n\t\t\t\tdivisions = 40;\n\t\t\t}\n\n\t\t\tvar points = [];\n\n\t\t\tfor (var i = 0; i <= divisions; i++) {\n\t\t\t\tpoints.push(this.getPoint(i / divisions));\n\t\t\t}\n\n\t\t\tif (this.autoClose) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\treturn points;\n\t\t},\n\t\tgetPoints: function getPoints(divisions) {\n\t\t\tif (divisions === void 0) {\n\t\t\t\tdivisions = 12;\n\t\t\t}\n\n\t\t\tvar points = [];\n\t\t\tvar last;\n\n\t\t\tfor (var i = 0, curves = this.curves; i < curves.length; i++) {\n\t\t\t\tvar curve = curves[i];\n\t\t\t\tvar resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && (curve.isLineCurve || curve.isLineCurve3) ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\n\t\t\t\tvar pts = curve.getPoints(resolution);\n\n\t\t\t\tfor (var j = 0; j < pts.length; j++) {\n\t\t\t\t\tvar point = pts[j];\n\t\t\t\t\tif (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tlast = point;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\treturn points;\n\t\t},\n\t\tcopy: function copy(source) {\n\t\t\tCurve.prototype.copy.call(this, source);\n\t\t\tthis.curves = [];\n\n\t\t\tfor (var i = 0, l = source.curves.length; i < l; i++) {\n\t\t\t\tvar curve = source.curves[i];\n\t\t\t\tthis.curves.push(curve.clone());\n\t\t\t}\n\n\t\t\tthis.autoClose = source.autoClose;\n\t\t\treturn this;\n\t\t},\n\t\ttoJSON: function toJSON() {\n\t\t\tvar data = Curve.prototype.toJSON.call(this);\n\t\t\tdata.autoClose = this.autoClose;\n\t\t\tdata.curves = [];\n\n\t\t\tfor (var i = 0, l = this.curves.length; i < l; i++) {\n\t\t\t\tvar curve = this.curves[i];\n\t\t\t\tdata.curves.push(curve.toJSON());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\t\tfromJSON: function fromJSON(json) {\n\t\t\tCurve.prototype.fromJSON.call(this, json);\n\t\t\tthis.autoClose = json.autoClose;\n\t\t\tthis.curves = [];\n\n\t\t\tfor (var i = 0, l = json.curves.length; i < l; i++) {\n\t\t\t\tvar curve = json.curves[i];\n\t\t\t\tthis.curves.push(new Curves[curve.type]().fromJSON(curve));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tfunction Path(points) {\n\t\tCurvePath.call(this);\n\t\tthis.type = 'Path';\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif (points) {\n\t\t\tthis.setFromPoints(points);\n\t\t}\n\t}\n\n\tPath.prototype = Object.assign(Object.create(CurvePath.prototype), {\n\t\tconstructor: Path,\n\t\tsetFromPoints: function setFromPoints(points) {\n\t\t\tthis.moveTo(points[0].x, points[0].y);\n\n\t\t\tfor (var i = 1, l = points.length; i < l; i++) {\n\t\t\t\tthis.lineTo(points[i].x, points[i].y);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tmoveTo: function moveTo(x, y) {\n\t\t\tthis.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n\n\t\t\treturn this;\n\t\t},\n\t\tlineTo: function lineTo(x, y) {\n\t\t\tvar curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(x, y);\n\t\t\treturn this;\n\t\t},\n\t\tquadraticCurveTo: function quadraticCurveTo(aCPx, aCPy, aX, aY) {\n\t\t\tvar curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(aX, aY);\n\t\t\treturn this;\n\t\t},\n\t\tbezierCurveTo: function bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n\t\t\tvar curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(aX, aY);\n\t\t\treturn this;\n\t\t},\n\t\tsplineThru: function splineThru(pts\n\t\t/*Array of Vector*/\n\t\t) {\n\t\t\tvar npts = [this.currentPoint.clone()].concat(pts);\n\t\t\tvar curve = new SplineCurve(npts);\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.copy(pts[pts.length - 1]);\n\t\t\treturn this;\n\t\t},\n\t\tarc: function arc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\t\t\tthis.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\treturn this;\n\t\t},\n\t\tabsarc: function absarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tthis.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\treturn this;\n\t\t},\n\t\tellipse: function ellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\t\t\tthis.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\t\t\treturn this;\n\t\t},\n\t\tabsellipse: function absellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n\t\t\tvar curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n\t\t\tif (this.curves.length > 0) {\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint(0);\n\n\t\t\t\tif (!firstPoint.equals(this.currentPoint)) {\n\t\t\t\t\tthis.lineTo(firstPoint.x, firstPoint.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.curves.push(curve);\n\t\t\tvar lastPoint = curve.getPoint(1);\n\t\t\tthis.currentPoint.copy(lastPoint);\n\t\t\treturn this;\n\t\t},\n\t\tcopy: function copy(source) {\n\t\t\tCurvePath.prototype.copy.call(this, source);\n\t\t\tthis.currentPoint.copy(source.currentPoint);\n\t\t\treturn this;\n\t\t},\n\t\ttoJSON: function toJSON() {\n\t\t\tvar data = CurvePath.prototype.toJSON.call(this);\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\n\t\t\treturn data;\n\t\t},\n\t\tfromJSON: function fromJSON(json) {\n\t\t\tCurvePath.prototype.fromJSON.call(this, json);\n\t\t\tthis.currentPoint.fromArray(json.currentPoint);\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tfunction Shape(points) {\n\t\tPath.call(this, points);\n\t\tthis.uuid = MathUtils.generateUUID();\n\t\tthis.type = 'Shape';\n\t\tthis.holes = [];\n\t}\n\n\tShape.prototype = Object.assign(Object.create(Path.prototype), {\n\t\tconstructor: Shape,\n\t\tgetPointsHoles: function getPointsHoles(divisions) {\n\t\t\tvar holesPts = [];\n\n\t\t\tfor (var i = 0, l = this.holes.length; i < l; i++) {\n\t\t\t\tholesPts[i] = this.holes[i].getPoints(divisions);\n\t\t\t}\n\n\t\t\treturn holesPts;\n\t\t},\n\t\t// get points of shape and holes (keypoints based on segments parameter)\n\t\textractPoints: function extractPoints(divisions) {\n\t\t\treturn {\n\t\t\t\tshape: this.getPoints(divisions),\n\t\t\t\tholes: this.getPointsHoles(divisions)\n\t\t\t};\n\t\t},\n\t\tcopy: function copy(source) {\n\t\t\tPath.prototype.copy.call(this, source);\n\t\t\tthis.holes = [];\n\n\t\t\tfor (var i = 0, l = source.holes.length; i < l; i++) {\n\t\t\t\tvar hole = source.holes[i];\n\t\t\t\tthis.holes.push(hole.clone());\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\ttoJSON: function toJSON() {\n\t\t\tvar data = Path.prototype.toJSON.call(this);\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.holes = [];\n\n\t\t\tfor (var i = 0, l = this.holes.length; i < l; i++) {\n\t\t\t\tvar hole = this.holes[i];\n\t\t\t\tdata.holes.push(hole.toJSON());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\t\tfromJSON: function fromJSON(json) {\n\t\t\tPath.prototype.fromJSON.call(this, json);\n\t\t\tthis.uuid = json.uuid;\n\t\t\tthis.holes = [];\n\n\t\t\tfor (var i = 0, l = json.holes.length; i < l; i++) {\n\t\t\t\tvar hole = json.holes[i];\n\t\t\t\tthis.holes.push(new Path().fromJSON(hole));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tfunction Light(color, intensity) {\n\t\tif (intensity === void 0) {\n\t\t\tintensity = 1;\n\t\t}\n\n\t\tObject3D.call(this);\n\t\tthis.type = 'Light';\n\t\tthis.color = new Color(color);\n\t\tthis.intensity = intensity;\n\t}\n\n\tLight.prototype = Object.assign(Object.create(Object3D.prototype), {\n\t\tconstructor: Light,\n\t\tisLight: true,\n\t\tcopy: function copy(source) {\n\t\t\tObject3D.prototype.copy.call(this, source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.intensity = source.intensity;\n\t\t\treturn this;\n\t\t},\n\t\ttoJSON: function toJSON(meta) {\n\t\t\tvar data = Object3D.prototype.toJSON.call(this, meta);\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\t\t\tif (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n\t\t\tif (this.distance !== undefined) data.object.distance = this.distance;\n\t\t\tif (this.angle !== undefined) data.object.angle = this.angle;\n\t\t\tif (this.decay !== undefined) data.object.decay = this.decay;\n\t\t\tif (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n\t\t\tif (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n\t\t\treturn data;\n\t\t}\n\t});\n\n\tfunction HemisphereLight(skyColor, groundColor, intensity) {\n\t\tLight.call(this, skyColor, intensity);\n\t\tthis.type = 'HemisphereLight';\n\t\tthis.position.copy(Object3D.DefaultUp);\n\t\tthis.updateMatrix();\n\t\tthis.groundColor = new Color(groundColor);\n\t}\n\n\tHemisphereLight.prototype = Object.assign(Object.create(Light.prototype), {\n\t\tconstructor: HemisphereLight,\n\t\tisHemisphereLight: true,\n\t\tcopy: function copy(source) {\n\t\t\tLight.prototype.copy.call(this, source);\n\t\t\tthis.groundColor.copy(source.groundColor);\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tfunction LightShadow(camera) {\n\t\tthis.camera = camera;\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.mapSize = new Vector2(512, 512);\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2(1, 1);\n\t\tthis._viewportCount = 1;\n\t\tthis._viewports = [new Vector4(0, 0, 1, 1)];\n\t}\n\n\tObject.assign(LightShadow.prototype, {\n\t\t_projScreenMatrix: new Matrix4(),\n\t\t_lightPositionWorld: new Vector3(),\n\t\t_lookTarget: new Vector3(),\n\t\tgetViewportCount: function getViewportCount() {\n\t\t\treturn this._viewportCount;\n\t\t},\n\t\tgetFrustum: function getFrustum() {\n\t\t\treturn this._frustum;\n\t\t},\n\t\tupdateMatrices: function updateMatrices(light) {\n\t\t\tvar shadowCamera = this.camera,\n\t\t\t\t\tshadowMatrix = this.matrix,\n\t\t\t\t\tprojScreenMatrix = this._projScreenMatrix,\n\t\t\t\t\tlookTarget = this._lookTarget,\n\t\t\t\t\tlightPositionWorld = this._lightPositionWorld;\n\t\t\tlightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\t\t\tshadowCamera.position.copy(lightPositionWorld);\n\t\t\tlookTarget.setFromMatrixPosition(light.target.matrixWorld);\n\t\t\tshadowCamera.lookAt(lookTarget);\n\t\t\tshadowCamera.updateMatrixWorld();\n\t\t\tprojScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n\t\t\tthis._frustum.setFromProjectionMatrix(projScreenMatrix);\n\n\t\t\tshadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n\t\t\tshadowMatrix.multiply(shadowCamera.projectionMatrix);\n\t\t\tshadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n\t\t},\n\t\tgetViewport: function getViewport(viewportIndex) {\n\t\t\treturn this._viewports[viewportIndex];\n\t\t},\n\t\tgetFrameExtents: function getFrameExtents() {\n\t\t\treturn this._frameExtents;\n\t\t},\n\t\tcopy: function copy(source) {\n\t\t\tthis.camera = source.camera.clone();\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\t\t\tthis.mapSize.copy(source.mapSize);\n\t\t\treturn this;\n\t\t},\n\t\tclone: function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t},\n\t\ttoJSON: function toJSON() {\n\t\t\tvar object = {};\n\t\t\tif (this.bias !== 0) object.bias = this.bias;\n\t\t\tif (this.normalBias !== 0) object.normalBias = this.normalBias;\n\t\t\tif (this.radius !== 1) object.radius = this.radius;\n\t\t\tif (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n\t\t\tobject.camera = this.camera.toJSON(false).object;\n\t\t\tdelete object.camera.matrix;\n\t\t\treturn object;\n\t\t}\n\t});\n\n\tfunction SpotLightShadow() {\n\t\tLightShadow.call(this, new PerspectiveCamera(50, 1, 0.5, 500));\n\t\tthis.focus = 1;\n\t}\n\n\tSpotLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n\t\tconstructor: SpotLightShadow,\n\t\tisSpotLightShadow: true,\n\t\tupdateMatrices: function updateMatrices(light) {\n\t\t\tvar camera = this.camera;\n\t\t\tvar fov = MathUtils.RAD2DEG * 2 * light.angle * this.focus;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || camera.far;\n\n\t\t\tif (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t}\n\n\t\t\tLightShadow.prototype.updateMatrices.call(this, light);\n\t\t}\n\t});\n\n\tfunction SpotLight(color, intensity, distance, angle, penumbra, decay) {\n\t\tLight.call(this, color, intensity);\n\t\tthis.type = 'SpotLight';\n\t\tthis.position.copy(Object3D.DefaultUp);\n\t\tthis.updateMatrix();\n\t\tthis.target = new Object3D();\n\t\tObject.defineProperty(this, 'power', {\n\t\t\tget: function get() {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\t\t\t},\n\t\t\tset: function set(power) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\t\t\t}\n\t\t});\n\t\tthis.distance = distance !== undefined ? distance : 0;\n\t\tthis.angle = angle !== undefined ? angle : Math.PI / 3;\n\t\tthis.penumbra = penumbra !== undefined ? penumbra : 0;\n\t\tthis.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\t}\n\n\tSpotLight.prototype = Object.assign(Object.create(Light.prototype), {\n\t\tconstructor: SpotLight,\n\t\tisSpotLight: true,\n\t\tcopy: function copy(source) {\n\t\t\tLight.prototype.copy.call(this, source);\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\t\t\tthis.target = source.target.clone();\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tfunction PointLightShadow() {\n\t\tLightShadow.call(this, new PerspectiveCamera(90, 1, 0.5, 500));\n\t\tthis._frameExtents = new Vector2(4, 2);\n\t\tthis._viewportCount = 6;\n\t\tthis._viewports = [// These viewports map a cube-map onto a 2D texture with the\n\t\t// following orientation:\n\t\t//\n\t\t//\txzXZ\n\t\t//\t y Y\n\t\t//\n\t\t// X - Positive x direction\n\t\t// x - Negative x direction\n\t\t// Y - Positive y direction\n\t\t// y - Negative y direction\n\t\t// Z - Positive z direction\n\t\t// z - Negative z direction\n\t\t// positive X\n\t\tnew Vector4(2, 1, 1, 1), // negative X\n\t\tnew Vector4(0, 1, 1, 1), // positive Z\n\t\tnew Vector4(3, 1, 1, 1), // negative Z\n\t\tnew Vector4(1, 1, 1, 1), // positive Y\n\t\tnew Vector4(3, 0, 1, 1), // negative Y\n\t\tnew Vector4(1, 0, 1, 1)];\n\t\tthis._cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n\t\tthis._cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n\t}\n\n\tPointLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n\t\tconstructor: PointLightShadow,\n\t\tisPointLightShadow: true,\n\t\tupdateMatrices: function updateMatrices(light, viewportIndex) {\n\t\t\tif (viewportIndex === void 0) {\n\t\t\t\tviewportIndex = 0;\n\t\t\t}\n\n\t\t\tvar camera = this.camera,\n\t\t\t\t\tshadowMatrix = this.matrix,\n\t\t\t\t\tlightPositionWorld = this._lightPositionWorld,\n\t\t\t\t\tlookTarget = this._lookTarget,\n\t\t\t\t\tprojScreenMatrix = this._projScreenMatrix;\n\t\t\tlightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\t\t\tcamera.position.copy(lightPositionWorld);\n\t\t\tlookTarget.copy(camera.position);\n\t\t\tlookTarget.add(this._cubeDirections[viewportIndex]);\n\t\t\tcamera.up.copy(this._cubeUps[viewportIndex]);\n\t\t\tcamera.lookAt(lookTarget);\n\t\t\tcamera.updateMatrixWorld();\n\t\t\tshadowMatrix.makeTranslation(-lightPositionWorld.x, -lightPositionWorld.y, -lightPositionWorld.z);\n\t\t\tprojScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n\t\t\tthis._frustum.setFromProjectionMatrix(projScreenMatrix);\n\t\t}\n\t});\n\n\tfunction PointLight(color, intensity, distance, decay) {\n\t\tLight.call(this, color, intensity);\n\t\tthis.type = 'PointLight';\n\t\tObject.defineProperty(this, 'power', {\n\t\t\tget: function get() {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\t\t\t},\n\t\t\tset: function set(power) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\tthis.intensity = power / (4 * Math.PI);\n\t\t\t}\n\t\t});\n\t\tthis.distance = distance !== undefined ? distance : 0;\n\t\tthis.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\t}\n\n\tPointLight.prototype = Object.assign(Object.create(Light.prototype), {\n\t\tconstructor: PointLight,\n\t\tisPointLight: true,\n\t\tcopy: function copy(source) {\n\t\t\tLight.prototype.copy.call(this, source);\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tfunction OrthographicCamera(left, right, top, bottom, near, far) {\n\t\tif (left === void 0) {\n\t\t\tleft = -1;\n\t\t}\n\n\t\tif (right === void 0) {\n\t\t\tright = 1;\n\t\t}\n\n\t\tif (top === void 0) {\n\t\t\ttop = 1;\n\t\t}\n\n\t\tif (bottom === void 0) {\n\t\t\tbottom = -1;\n\t\t}\n\n\t\tif (near === void 0) {\n\t\t\tnear = 0.1;\n\t\t}\n\n\t\tif (far === void 0) {\n\t\t\tfar = 2000;\n\t\t}\n\n\t\tCamera.call(this);\n\t\tthis.type = 'OrthographicCamera';\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.updateProjectionMatrix();\n\t}\n\n\tOrthographicCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n\t\tconstructor: OrthographicCamera,\n\t\tisOrthographicCamera: true,\n\t\tcopy: function copy(source, recursive) {\n\t\t\tCamera.prototype.copy.call(this, source, recursive);\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\n\t\t\treturn this;\n\t\t},\n\t\tsetViewOffset: function setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n\t\t\tif (this.view === null) {\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\t\t\tthis.updateProjectionMatrix();\n\t\t},\n\t\tclearViewOffset: function clearViewOffset() {\n\t\t\tif (this.view !== null) {\n\t\t\t\tthis.view.enabled = false;\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t},\n\t\tupdateProjectionMatrix: function updateProjectionMatrix() {\n\t\t\tvar dx = (this.right - this.left) / (2 * this.zoom);\n\t\t\tvar dy = (this.top - this.bottom) / (2 * this.zoom);\n\t\t\tvar cx = (this.right + this.left) / 2;\n\t\t\tvar cy = (this.top + this.bottom) / 2;\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif (this.view !== null && this.view.enabled) {\n\t\t\t\tvar scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\n\t\t\t\tvar scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n\t\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\t\tright = left + scaleW * this.view.width;\n\t\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\t\tbottom = top - scaleH * this.view.height;\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n\t\t},\n\t\ttoJSON: function toJSON(meta) {\n\t\t\tvar data = Object3D.prototype.toJSON.call(this, meta);\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\n\t\t\treturn data;\n\t\t}\n\t});\n\n\tfunction DirectionalLightShadow() {\n\t\tLightShadow.call(this, new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n\t}\n\n\tDirectionalLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n\t\tconstructor: DirectionalLightShadow,\n\t\tisDirectionalLightShadow: true,\n\t\tupdateMatrices: function updateMatrices(light) {\n\t\t\tLightShadow.prototype.updateMatrices.call(this, light);\n\t\t}\n\t});\n\n\tfunction DirectionalLight(color, intensity) {\n\t\tLight.call(this, color, intensity);\n\t\tthis.type = 'DirectionalLight';\n\t\tthis.position.copy(Object3D.DefaultUp);\n\t\tthis.updateMatrix();\n\t\tthis.target = new Object3D();\n\t\tthis.shadow = new DirectionalLightShadow();\n\t}\n\n\tDirectionalLight.prototype = Object.assign(Object.create(Light.prototype), {\n\t\tconstructor: DirectionalLight,\n\t\tisDirectionalLight: true,\n\t\tcopy: function copy(source) {\n\t\t\tLight.prototype.copy.call(this, source);\n\t\t\tthis.target = source.target.clone();\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tfunction AmbientLight(color, intensity) {\n\t\tLight.call(this, color, intensity);\n\t\tthis.type = 'AmbientLight';\n\t}\n\n\tAmbientLight.prototype = Object.assign(Object.create(Light.prototype), {\n\t\tconstructor: AmbientLight,\n\t\tisAmbientLight: true\n\t});\n\n\tfunction RectAreaLight(color, intensity, width, height) {\n\t\tLight.call(this, color, intensity);\n\t\tthis.type = 'RectAreaLight';\n\t\tthis.width = width !== undefined ? width : 10;\n\t\tthis.height = height !== undefined ? height : 10;\n\t}\n\n\tRectAreaLight.prototype = Object.assign(Object.create(Light.prototype), {\n\t\tconstructor: RectAreaLight,\n\t\tisRectAreaLight: true,\n\t\tcopy: function copy(source) {\n\t\t\tLight.prototype.copy.call(this, source);\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\treturn this;\n\t\t},\n\t\ttoJSON: function toJSON(meta) {\n\t\t\tvar data = Light.prototype.toJSON.call(this, meta);\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\t\t\treturn data;\n\t\t}\n\t});\n\n\t/**\n\t * Primary reference:\n\t *\t https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t *\n\t * Secondary reference:\n\t *\t https://www.ppsloan.org/publications/StupidSH36.pdf\n\t */\n\t// 3-band SH defined by 9 coefficients\n\n\tvar SphericalHarmonics3 = /*#__PURE__*/function () {\n\t\tfunction SphericalHarmonics3() {\n\t\t\tObject.defineProperty(this, 'isSphericalHarmonics3', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\tthis.coefficients = [];\n\n\t\t\tfor (var i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients.push(new Vector3());\n\t\t\t}\n\t\t}\n\n\t\tvar _proto = SphericalHarmonics3.prototype;\n\n\t\t_proto.set = function set(coefficients) {\n\t\t\tfor (var i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].copy(coefficients[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.zero = function zero() {\n\t\t\tfor (var i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].set(0, 0, 0);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // get the radiance in the direction of the normal\n\t\t// target is a Vector3\n\t\t;\n\n\t\t_proto.getAt = function getAt(normal, target) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tvar x = normal.x,\n\t\t\t\t\ty = normal.y,\n\t\t\t\t\tz = normal.z;\n\t\t\tvar coeff = this.coefficients; // band 0\n\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.282095); // band 1\n\n\t\t\ttarget.addScaledVector(coeff[1], 0.488603 * y);\n\t\t\ttarget.addScaledVector(coeff[2], 0.488603 * z);\n\t\t\ttarget.addScaledVector(coeff[3], 0.488603 * x); // band 2\n\n\t\t\ttarget.addScaledVector(coeff[4], 1.092548 * (x * y));\n\t\t\ttarget.addScaledVector(coeff[5], 1.092548 * (y * z));\n\t\t\ttarget.addScaledVector(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\n\t\t\ttarget.addScaledVector(coeff[7], 1.092548 * (x * z));\n\t\t\ttarget.addScaledVector(coeff[8], 0.546274 * (x * x - y * y));\n\t\t\treturn target;\n\t\t} // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t\t// target is a Vector3\n\t\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t\t;\n\n\t\t_proto.getIrradianceAt = function getIrradianceAt(normal, target) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tvar x = normal.x,\n\t\t\t\t\ty = normal.y,\n\t\t\t\t\tz = normal.z;\n\t\t\tvar coeff = this.coefficients; // band 0\n\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.886227); // π * 0.282095\n\t\t\t// band 1\n\n\t\t\ttarget.addScaledVector(coeff[1], 2.0 * 0.511664 * y); // ( 2 * π / 3 ) * 0.488603\n\n\t\t\ttarget.addScaledVector(coeff[2], 2.0 * 0.511664 * z);\n\t\t\ttarget.addScaledVector(coeff[3], 2.0 * 0.511664 * x); // band 2\n\n\t\t\ttarget.addScaledVector(coeff[4], 2.0 * 0.429043 * x * y); // ( π / 4 ) * 1.092548\n\n\t\t\ttarget.addScaledVector(coeff[5], 2.0 * 0.429043 * y * z);\n\t\t\ttarget.addScaledVector(coeff[6], 0.743125 * z * z - 0.247708); // ( π / 4 ) * 0.315392 * 3\n\n\t\t\ttarget.addScaledVector(coeff[7], 2.0 * 0.429043 * x * z);\n\t\t\ttarget.addScaledVector(coeff[8], 0.429043 * (x * x - y * y)); // ( π / 4 ) * 0.546274\n\n\t\t\treturn target;\n\t\t};\n\n\t\t_proto.add = function add(sh) {\n\t\t\tfor (var i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].add(sh.coefficients[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.addScaledSH = function addScaledSH(sh, s) {\n\t\t\tfor (var i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].addScaledVector(sh.coefficients[i], s);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.scale = function scale(s) {\n\t\t\tfor (var i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].multiplyScalar(s);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.lerp = function lerp(sh, alpha) {\n\t\t\tfor (var i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].lerp(sh.coefficients[i], alpha);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(sh) {\n\t\t\tfor (var i = 0; i < 9; i++) {\n\t\t\t\tif (!this.coefficients[i].equals(sh.coefficients[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t_proto.copy = function copy(sh) {\n\t\t\treturn this.set(sh.coefficients);\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t};\n\n\t\t_proto.fromArray = function fromArray(array, offset) {\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tvar coefficients = this.coefficients;\n\n\t\t\tfor (var i = 0; i < 9; i++) {\n\t\t\t\tcoefficients[i].fromArray(array, offset + i * 3);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.toArray = function toArray(array, offset) {\n\t\t\tif (array === void 0) {\n\t\t\t\tarray = [];\n\t\t\t}\n\n\t\t\tif (offset === void 0) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\tvar coefficients = this.coefficients;\n\n\t\t\tfor (var i = 0; i < 9; i++) {\n\t\t\t\tcoefficients[i].toArray(array, offset + i * 3);\n\t\t\t}\n\n\t\t\treturn array;\n\t\t} // evaluate the basis functions\n\t\t// shBasis is an Array[ 9 ]\n\t\t;\n\n\t\tSphericalHarmonics3.getBasisAt = function getBasisAt(normal, shBasis) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tvar x = normal.x,\n\t\t\t\t\ty = normal.y,\n\t\t\t\t\tz = normal.z; // band 0\n\n\t\t\tshBasis[0] = 0.282095; // band 1\n\n\t\t\tshBasis[1] = 0.488603 * y;\n\t\t\tshBasis[2] = 0.488603 * z;\n\t\t\tshBasis[3] = 0.488603 * x; // band 2\n\n\t\t\tshBasis[4] = 1.092548 * x * y;\n\t\t\tshBasis[5] = 1.092548 * y * z;\n\t\t\tshBasis[6] = 0.315392 * (3 * z * z - 1);\n\t\t\tshBasis[7] = 1.092548 * x * z;\n\t\t\tshBasis[8] = 0.546274 * (x * x - y * y);\n\t\t};\n\n\t\treturn SphericalHarmonics3;\n\t}();\n\n\tfunction LightProbe(sh, intensity) {\n\t\tLight.call(this, undefined, intensity);\n\t\tthis.type = 'LightProbe';\n\t\tthis.sh = sh !== undefined ? sh : new SphericalHarmonics3();\n\t}\n\n\tLightProbe.prototype = Object.assign(Object.create(Light.prototype), {\n\t\tconstructor: LightProbe,\n\t\tisLightProbe: true,\n\t\tcopy: function copy(source) {\n\t\t\tLight.prototype.copy.call(this, source);\n\t\t\tthis.sh.copy(source.sh);\n\t\t\treturn this;\n\t\t},\n\t\tfromJSON: function fromJSON(json) {\n\t\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\n\t\t\tthis.sh.fromArray(json.sh);\n\t\t\treturn this;\n\t\t},\n\t\ttoJSON: function toJSON(meta) {\n\t\t\tvar data = Light.prototype.toJSON.call(this, meta);\n\t\t\tdata.object.sh = this.sh.toArray();\n\t\t\treturn data;\n\t\t}\n\t});\n\n\tfunction MaterialLoader(manager) {\n\t\tLoader.call(this, manager);\n\t\tthis.textures = {};\n\t}\n\n\tMaterialLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\t\tconstructor: MaterialLoader,\n\t\tload: function load(url, onLoad, onProgress, onError) {\n\t\t\tvar scope = this;\n\t\t\tvar loader = new FileLoader(scope.manager);\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t},\n\t\tparse: function parse(json) {\n\t\t\tvar textures = this.textures;\n\n\t\t\tfunction getTexture(name) {\n\t\t\t\tif (textures[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.MaterialLoader: Undefined texture', name);\n\t\t\t\t}\n\n\t\t\t\treturn textures[name];\n\t\t\t}\n\n\t\t\tvar material = new Materials[json.type]();\n\t\t\tif (json.uuid !== undefined) material.uuid = json.uuid;\n\t\t\tif (json.name !== undefined) material.name = json.name;\n\t\t\tif (json.color !== undefined && material.color !== undefined) material.color.setHex(json.color);\n\t\t\tif (json.roughness !== undefined) material.roughness = json.roughness;\n\t\t\tif (json.metalness !== undefined) material.metalness = json.metalness;\n\t\t\tif (json.sheen !== undefined) material.sheen = new Color().setHex(json.sheen);\n\t\t\tif (json.emissive !== undefined && material.emissive !== undefined) material.emissive.setHex(json.emissive);\n\t\t\tif (json.specular !== undefined && material.specular !== undefined) material.specular.setHex(json.specular);\n\t\t\tif (json.shininess !== undefined) material.shininess = json.shininess;\n\t\t\tif (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\n\t\t\tif (json.clearcoatRoughness !== undefined) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\t\tif (json.fog !== undefined) material.fog = json.fog;\n\t\t\tif (json.flatShading !== undefined) material.flatShading = json.flatShading;\n\t\t\tif (json.blending !== undefined) material.blending = json.blending;\n\t\t\tif (json.combine !== undefined) material.combine = json.combine;\n\t\t\tif (json.side !== undefined) material.side = json.side;\n\t\t\tif (json.opacity !== undefined) material.opacity = json.opacity;\n\t\t\tif (json.transparent !== undefined) material.transparent = json.transparent;\n\t\t\tif (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n\t\t\tif (json.depthTest !== undefined) material.depthTest = json.depthTest;\n\t\t\tif (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n\t\t\tif (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n\t\t\tif (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\n\t\t\tif (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\n\t\t\tif (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\n\t\t\tif (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\n\t\t\tif (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\n\t\t\tif (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\n\t\t\tif (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\n\t\t\tif (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\n\t\t\tif (json.wireframe !== undefined) material.wireframe = json.wireframe;\n\t\t\tif (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n\t\t\tif (json.rotation !== undefined) material.rotation = json.rotation;\n\t\t\tif (json.linewidth !== 1) material.linewidth = json.linewidth;\n\t\t\tif (json.dashSize !== undefined) material.dashSize = json.dashSize;\n\t\t\tif (json.gapSize !== undefined) material.gapSize = json.gapSize;\n\t\t\tif (json.scale !== undefined) material.scale = json.scale;\n\t\t\tif (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n\t\t\tif (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\t\tif (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\t\t\tif (json.skinning !== undefined) material.skinning = json.skinning;\n\t\t\tif (json.morphTargets !== undefined) material.morphTargets = json.morphTargets;\n\t\t\tif (json.morphNormals !== undefined) material.morphNormals = json.morphNormals;\n\t\t\tif (json.dithering !== undefined) material.dithering = json.dithering;\n\t\t\tif (json.vertexTangents !== undefined) material.vertexTangents = json.vertexTangents;\n\t\t\tif (json.visible !== undefined) material.visible = json.visible;\n\t\t\tif (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\n\t\t\tif (json.userData !== undefined) material.userData = json.userData;\n\n\t\t\tif (json.vertexColors !== undefined) {\n\t\t\t\tif (typeof json.vertexColors === 'number') {\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors > 0 ? true : false;\n\t\t\t\t} else {\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\t\t\t\t}\n\t\t\t} // Shader Material\n\n\n\t\t\tif (json.uniforms !== undefined) {\n\t\t\t\tfor (var name in json.uniforms) {\n\t\t\t\t\tvar uniform = json.uniforms[name];\n\t\t\t\t\tmaterial.uniforms[name] = {};\n\n\t\t\t\t\tswitch (uniform.type) {\n\t\t\t\t\t\tcase 't':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = getTexture(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Color().setHex(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector2().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector3().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector4().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix3().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = uniform.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json.defines !== undefined) material.defines = json.defines;\n\t\t\tif (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n\t\t\tif (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n\n\t\t\tif (json.extensions !== undefined) {\n\t\t\t\tfor (var key in json.extensions) {\n\t\t\t\t\tmaterial.extensions[key] = json.extensions[key];\n\t\t\t\t}\n\t\t\t} // Deprecated\n\n\n\t\t\tif (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n\t\t\t// for PointsMaterial\n\n\t\t\tif (json.size !== undefined) material.size = json.size;\n\t\t\tif (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n\t\t\tif (json.map !== undefined) material.map = getTexture(json.map);\n\t\t\tif (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\n\t\t\tif (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\n\t\t\tif (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n\t\t\tif (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n\t\t\tif (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n\t\t\tif (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n\n\t\t\tif (json.normalScale !== undefined) {\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif (Array.isArray(normalScale) === false) {\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\t\t\t\t\tnormalScale = [normalScale, normalScale];\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray(normalScale);\n\t\t\t}\n\n\t\t\tif (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n\t\t\tif (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n\t\t\tif (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n\t\t\tif (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n\t\t\tif (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n\t\t\tif (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n\t\t\tif (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n\t\t\tif (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n\t\t\tif (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n\t\t\tif (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\n\t\t\tif (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n\t\t\tif (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\n\t\t\tif (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n\t\t\tif (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n\t\t\tif (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n\t\t\tif (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n\t\t\tif (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n\t\t\tif (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\n\t\t\tif (json.clearcoatRoughnessMap !== undefined) material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\n\t\t\tif (json.clearcoatNormalMap !== undefined) material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\n\t\t\tif (json.clearcoatNormalScale !== undefined) material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\n\t\t\tif (json.transmission !== undefined) material.transmission = json.transmission;\n\t\t\tif (json.transmissionMap !== undefined) material.transmissionMap = getTexture(json.transmissionMap);\n\t\t\treturn material;\n\t\t},\n\t\tsetTextures: function setTextures(value) {\n\t\t\tthis.textures = value;\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tvar LoaderUtils = {\n\t\tdecodeText: function decodeText(array) {\n\t\t\tif (typeof TextDecoder !== 'undefined') {\n\t\t\t\treturn new TextDecoder().decode(array);\n\t\t\t} // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\n\t\t\tvar s = '';\n\n\t\t\tfor (var i = 0, il = array.length; i < il; i++) {\n\t\t\t\t// Implicitly assumes little-endian.\n\t\t\t\ts += String.fromCharCode(array[i]);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// merges multi-byte utf-8 characters.\n\t\t\t\treturn decodeURIComponent(escape(s));\n\t\t\t} catch (e) {\n\t\t\t\t// see #16358\n\t\t\t\treturn s;\n\t\t\t}\n\t\t},\n\t\textractUrlBase: function extractUrlBase(url) {\n\t\t\tvar index = url.lastIndexOf('/');\n\t\t\tif (index === -1) return './';\n\t\t\treturn url.substr(0, index + 1);\n\t\t}\n\t};\n\n\tfunction InstancedBufferGeometry() {\n\t\tBufferGeometry.call(this);\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\t}\n\n\tInstancedBufferGeometry.prototype = Object.assign(Object.create(BufferGeometry.prototype), {\n\t\tconstructor: InstancedBufferGeometry,\n\t\tisInstancedBufferGeometry: true,\n\t\tcopy: function copy(source) {\n\t\t\tBufferGeometry.prototype.copy.call(this, source);\n\t\t\tthis.instanceCount = source.instanceCount;\n\t\t\treturn this;\n\t\t},\n\t\tclone: function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t},\n\t\ttoJSON: function toJSON() {\n\t\t\tvar data = BufferGeometry.prototype.toJSON.call(this);\n\t\t\tdata.instanceCount = this.instanceCount;\n\t\t\tdata.isInstancedBufferGeometry = true;\n\t\t\treturn data;\n\t\t}\n\t});\n\n\tfunction InstancedBufferAttribute(array, itemSize, normalized, meshPerAttribute) {\n\t\tif (typeof normalized === 'number') {\n\t\t\tmeshPerAttribute = normalized;\n\t\t\tnormalized = false;\n\t\t\tconsole.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');\n\t\t}\n\n\t\tBufferAttribute.call(this, array, itemSize, normalized);\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\t}\n\n\tInstancedBufferAttribute.prototype = Object.assign(Object.create(BufferAttribute.prototype), {\n\t\tconstructor: InstancedBufferAttribute,\n\t\tisInstancedBufferAttribute: true,\n\t\tcopy: function copy(source) {\n\t\t\tBufferAttribute.prototype.copy.call(this, source);\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\t\treturn this;\n\t\t},\n\t\ttoJSON: function toJSON() {\n\t\t\tvar data = BufferAttribute.prototype.toJSON.call(this);\n\t\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\t\t\tdata.isInstancedBufferAttribute = true;\n\t\t\treturn data;\n\t\t}\n\t});\n\n\tfunction BufferGeometryLoader(manager) {\n\t\tLoader.call(this, manager);\n\t}\n\n\tBufferGeometryLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\t\tconstructor: BufferGeometryLoader,\n\t\tload: function load(url, onLoad, onProgress, onError) {\n\t\t\tvar scope = this;\n\t\t\tvar loader = new FileLoader(scope.manager);\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t},\n\t\tparse: function parse(json) {\n\t\t\tvar interleavedBufferMap = {};\n\t\t\tvar arrayBufferMap = {};\n\n\t\t\tfunction getInterleavedBuffer(json, uuid) {\n\t\t\t\tif (interleavedBufferMap[uuid] !== undefined) return interleavedBufferMap[uuid];\n\t\t\t\tvar interleavedBuffers = json.interleavedBuffers;\n\t\t\t\tvar interleavedBuffer = interleavedBuffers[uuid];\n\t\t\t\tvar buffer = getArrayBuffer(json, interleavedBuffer.buffer);\n\t\t\t\tvar array = getTypedArray(interleavedBuffer.type, buffer);\n\t\t\t\tvar ib = new InterleavedBuffer(array, interleavedBuffer.stride);\n\t\t\t\tib.uuid = interleavedBuffer.uuid;\n\t\t\t\tinterleavedBufferMap[uuid] = ib;\n\t\t\t\treturn ib;\n\t\t\t}\n\n\t\t\tfunction getArrayBuffer(json, uuid) {\n\t\t\t\tif (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\n\t\t\t\tvar arrayBuffers = json.arrayBuffers;\n\t\t\t\tvar arrayBuffer = arrayBuffers[uuid];\n\t\t\t\tvar ab = new Uint32Array(arrayBuffer).buffer;\n\t\t\t\tarrayBufferMap[uuid] = ab;\n\t\t\t\treturn ab;\n\t\t\t}\n\n\t\t\tvar geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\t\t\tvar index = json.data.index;\n\n\t\t\tif (index !== undefined) {\n\t\t\t\tvar typedArray = getTypedArray(index.type, index.array);\n\t\t\t\tgeometry.setIndex(new BufferAttribute(typedArray, 1));\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor (var key in attributes) {\n\t\t\t\tvar attribute = attributes[key];\n\t\t\t\tvar bufferAttribute = void 0;\n\n\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\tvar interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n\t\t\t\t} else {\n\t\t\t\t\tvar _typedArray = getTypedArray(attribute.type, attribute.array);\n\n\t\t\t\t\tvar bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\t\tbufferAttribute = new bufferAttributeConstr(_typedArray, attribute.itemSize, attribute.normalized);\n\t\t\t\t}\n\n\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n\t\t\t\tgeometry.setAttribute(key, bufferAttribute);\n\t\t\t}\n\n\t\t\tvar morphAttributes = json.data.morphAttributes;\n\n\t\t\tif (morphAttributes) {\n\t\t\t\tfor (var _key in morphAttributes) {\n\t\t\t\t\tvar attributeArray = morphAttributes[_key];\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor (var i = 0, il = attributeArray.length; i < il; i++) {\n\t\t\t\t\t\tvar _attribute = attributeArray[i];\n\n\t\t\t\t\t\tvar _bufferAttribute = void 0;\n\n\t\t\t\t\t\tif (_attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\t\tvar _interleavedBuffer = getInterleavedBuffer(json.data, _attribute.data);\n\n\t\t\t\t\t\t\t_bufferAttribute = new InterleavedBufferAttribute(_interleavedBuffer, _attribute.itemSize, _attribute.offset, _attribute.normalized);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _typedArray2 = getTypedArray(_attribute.type, _attribute.array);\n\n\t\t\t\t\t\t\t_bufferAttribute = new BufferAttribute(_typedArray2, _attribute.itemSize, _attribute.normalized);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (_attribute.name !== undefined) _bufferAttribute.name = _attribute.name;\n\t\t\t\t\t\tarray.push(_bufferAttribute);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.morphAttributes[_key] = array;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\t\tif (morphTargetsRelative) {\n\t\t\t\tgeometry.morphTargetsRelative = true;\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif (groups !== undefined) {\n\t\t\t\tfor (var _i = 0, n = groups.length; _i !== n; ++_i) {\n\t\t\t\t\tvar group = groups[_i];\n\t\t\t\t\tgeometry.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif (boundingSphere !== undefined) {\n\t\t\t\tvar center = new Vector3();\n\n\t\t\t\tif (boundingSphere.center !== undefined) {\n\t\t\t\t\tcenter.fromArray(boundingSphere.center);\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n\t\t\t}\n\n\t\t\tif (json.name) geometry.name = json.name;\n\t\t\tif (json.userData) geometry.userData = json.userData;\n\t\t\treturn geometry;\n\t\t}\n\t});\n\n\tvar ObjectLoader = /*#__PURE__*/function (_Loader) {\n\t\t_inheritsLoose(ObjectLoader, _Loader);\n\n\t\tfunction ObjectLoader(manager) {\n\t\t\treturn _Loader.call(this, manager) || this;\n\t\t}\n\n\t\tvar _proto = ObjectLoader.prototype;\n\n\t\t_proto.load = function load(url, onLoad, onProgress, onError) {\n\t\t\tvar scope = this;\n\t\t\tvar path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\t\t\tvar loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\tvar json = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(text);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (onError !== undefined) onError(error);\n\t\t\t\t\tconsole.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n\t\t\t\t\tconsole.error('THREE.ObjectLoader: Can\\'t load ' + url);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tscope.parse(json, onLoad);\n\t\t\t}, onProgress, onError);\n\t\t};\n\n\t\t_proto.parse = function parse(json, onLoad) {\n\t\t\tvar animations = this.parseAnimations(json.animations);\n\t\t\tvar shapes = this.parseShapes(json.shapes);\n\t\t\tvar geometries = this.parseGeometries(json.geometries, shapes);\n\t\t\tvar images = this.parseImages(json.images, function () {\n\t\t\t\tif (onLoad !== undefined) onLoad(object);\n\t\t\t});\n\t\t\tvar textures = this.parseTextures(json.textures, images);\n\t\t\tvar materials = this.parseMaterials(json.materials, textures);\n\t\t\tvar object = this.parseObject(json.object, geometries, materials, animations);\n\t\t\tvar skeletons = this.parseSkeletons(json.skeletons, object);\n\t\t\tthis.bindSkeletons(object, skeletons); //\n\n\t\t\tif (onLoad !== undefined) {\n\t\t\t\tvar hasImages = false;\n\n\t\t\t\tfor (var uuid in images) {\n\t\t\t\t\tif (images[uuid] instanceof HTMLImageElement) {\n\t\t\t\t\t\thasImages = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hasImages === false) onLoad(object);\n\t\t\t}\n\n\t\t\treturn object;\n\t\t};\n\n\t\t_proto.parseShapes = function parseShapes(json) {\n\t\t\tvar shapes = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (var i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tvar shape = new Shape().fromJSON(json[i]);\n\t\t\t\t\tshapes[shape.uuid] = shape;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn shapes;\n\t\t};\n\n\t\t_proto.parseSkeletons = function parseSkeletons(json, object) {\n\t\t\tvar skeletons = {};\n\t\t\tvar bones = {}; // generate bone lookup table\n\n\t\t\tobject.traverse(function (child) {\n\t\t\t\tif (child.isBone) bones[child.uuid] = child;\n\t\t\t}); // create skeletons\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (var i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tvar skeleton = new Skeleton().fromJSON(json[i], bones);\n\t\t\t\t\tskeletons[skeleton.uuid] = skeleton;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn skeletons;\n\t\t};\n\n\t\t_proto.parseGeometries = function parseGeometries(json, shapes) {\n\t\t\tvar geometries = {};\n\t\t\tvar geometryShapes;\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor (var i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tvar geometry = void 0;\n\t\t\t\t\tvar data = json[i];\n\n\t\t\t\t\tswitch (data.type) {\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.width, data.height, data.widthSegments, data.heightSegments);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.radius, data.segments, data.thetaStart, data.thetaLength);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.radius, data.detail);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\t\tcase 'TubeBufferGeometry':\n\t\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.points, data.segments, data.phiStart, data.phiLength);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.vertices, data.indices, data.radius, data.details);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\t\tcase 'ShapeBufferGeometry':\n\t\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\t\tfor (var j = 0, jl = data.shapes.length; j < jl; j++) {\n\t\t\t\t\t\t\t\tvar shape = shapes[data.shapes[j]];\n\t\t\t\t\t\t\t\tgeometryShapes.push(shape);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](geometryShapes, data.curveSegments);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\t\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\t\tfor (var _j = 0, _jl = data.shapes.length; _j < _jl; _j++) {\n\t\t\t\t\t\t\t\tvar _shape = shapes[data.shapes[_j]];\n\t\t\t\t\t\t\t\tgeometryShapes.push(_shape);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\t\tif (extrudePath !== undefined) {\n\t\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](geometryShapes, data.options);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\t\tcase 'InstancedBufferGeometry':\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse(data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\t\t\t\t\t\t\tconsole.error('THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\t\t\t\t\tif (data.name !== undefined) geometry.name = data.name;\n\t\t\t\t\tif (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\n\t\t\t\t\tgeometries[data.uuid] = geometry;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn geometries;\n\t\t};\n\n\t\t_proto.parseMaterials = function parseMaterials(json, textures) {\n\t\t\tvar cache = {}; // MultiMaterial\n\n\t\t\tvar materials = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tvar loader = new MaterialLoader();\n\t\t\t\tloader.setTextures(textures);\n\n\t\t\t\tfor (var i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tvar data = json[i];\n\n\t\t\t\t\tif (data.type === 'MultiMaterial') {\n\t\t\t\t\t\t// Deprecated\n\t\t\t\t\t\tvar array = [];\n\n\t\t\t\t\t\tfor (var j = 0; j < data.materials.length; j++) {\n\t\t\t\t\t\t\tvar material = data.materials[j];\n\n\t\t\t\t\t\t\tif (cache[material.uuid] === undefined) {\n\t\t\t\t\t\t\t\tcache[material.uuid] = loader.parse(material);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push(cache[material.uuid]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[data.uuid] = array;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (cache[data.uuid] === undefined) {\n\t\t\t\t\t\t\tcache[data.uuid] = loader.parse(data);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[data.uuid] = cache[data.uuid];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn materials;\n\t\t};\n\n\t\t_proto.parseAnimations = function parseAnimations(json) {\n\t\t\tvar animations = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (var i = 0; i < json.length; i++) {\n\t\t\t\t\tvar data = json[i];\n\t\t\t\t\tvar clip = AnimationClip.parse(data);\n\t\t\t\t\tanimations[clip.uuid] = clip;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn animations;\n\t\t};\n\n\t\t_proto.parseImages = function parseImages(json, onLoad) {\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\t\t\tvar loader;\n\n\t\t\tfunction loadImage(url) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\treturn loader.load(url, function () {\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, undefined, function () {\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction deserializeImage(image) {\n\t\t\t\tif (typeof image === 'string') {\n\t\t\t\t\tvar url = image;\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n\t\t\t\t\treturn loadImage(path);\n\t\t\t\t} else {\n\t\t\t\t\tif (image.data) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\n\t\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\t\theight: image.height\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json !== undefined && json.length > 0) {\n\t\t\t\tvar manager = new LoadingManager(onLoad);\n\t\t\t\tloader = new ImageLoader(manager);\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\n\t\t\t\tfor (var i = 0, il = json.length; i < il; i++) {\n\t\t\t\t\tvar image = json[i];\n\t\t\t\t\tvar url = image.url;\n\n\t\t\t\t\tif (Array.isArray(url)) {\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\t\t\t\t\t\timages[image.uuid] = [];\n\n\t\t\t\t\t\tfor (var j = 0, jl = url.length; j < jl; j++) {\n\t\t\t\t\t\t\tvar currentUrl = url[j];\n\t\t\t\t\t\t\tvar deserializedImage = deserializeImage(currentUrl);\n\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// load single image\n\t\t\t\t\t\tvar _deserializedImage = deserializeImage(image.url);\n\n\t\t\t\t\t\tif (_deserializedImage !== null) {\n\t\t\t\t\t\t\timages[image.uuid] = _deserializedImage;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn images;\n\t\t};\n\n\t\t_proto.parseTextures = function parseTextures(json, images) {\n\t\t\tfunction parseConstant(value, type) {\n\t\t\t\tif (typeof value === 'number') return value;\n\t\t\t\tconsole.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n\t\t\t\treturn type[value];\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (var i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tvar data = json[i];\n\n\t\t\t\t\tif (data.image === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (images[data.image] === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined image', data.image);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture = void 0;\n\t\t\t\t\tvar image = images[data.image];\n\n\t\t\t\t\tif (Array.isArray(image)) {\n\t\t\t\t\t\ttexture = new CubeTexture(image);\n\t\t\t\t\t\tif (image.length === 6) texture.needsUpdate = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (image && image.data) {\n\t\t\t\t\t\t\ttexture = new DataTexture(image.data, image.width, image.height);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexture = new Texture(image);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (image) texture.needsUpdate = true; // textures can have undefined image data\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\t\t\t\t\tif (data.name !== undefined) texture.name = data.name;\n\t\t\t\t\tif (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n\t\t\t\t\tif (data.offset !== undefined) texture.offset.fromArray(data.offset);\n\t\t\t\t\tif (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n\t\t\t\t\tif (data.center !== undefined) texture.center.fromArray(data.center);\n\t\t\t\t\tif (data.rotation !== undefined) texture.rotation = data.rotation;\n\n\t\t\t\t\tif (data.wrap !== undefined) {\n\t\t\t\t\t\ttexture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n\t\t\t\t\t\ttexture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.format !== undefined) texture.format = data.format;\n\t\t\t\t\tif (data.type !== undefined) texture.type = data.type;\n\t\t\t\t\tif (data.encoding !== undefined) texture.encoding = data.encoding;\n\t\t\t\t\tif (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n\t\t\t\t\tif (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n\t\t\t\t\tif (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n\t\t\t\t\tif (data.flipY !== undefined) texture.flipY = data.flipY;\n\t\t\t\t\tif (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\t\tif (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\t\ttextures[data.uuid] = texture;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn textures;\n\t\t};\n\n\t\t_proto.parseObject = function parseObject(data, geometries, materials, animations) {\n\t\t\tvar object;\n\n\t\t\tfunction getGeometry(name) {\n\t\t\t\tif (geometries[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined geometry', name);\n\t\t\t\t}\n\n\t\t\t\treturn geometries[name];\n\t\t\t}\n\n\t\t\tfunction getMaterial(name) {\n\t\t\t\tif (name === undefined) return undefined;\n\n\t\t\t\tif (Array.isArray(name)) {\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor (var i = 0, l = name.length; i < l; i++) {\n\t\t\t\t\t\tvar uuid = name[i];\n\n\t\t\t\t\t\tif (materials[uuid] === undefined) {\n\t\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', uuid);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push(materials[uuid]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\t\t\t\t}\n\n\t\t\t\tif (materials[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', name);\n\t\t\t\t}\n\n\t\t\t\treturn materials[name];\n\t\t\t}\n\n\t\t\tvar geometry, material;\n\n\t\t\tswitch (data.type) {\n\t\t\t\tcase 'Scene':\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif (data.background !== undefined) {\n\t\t\t\t\t\tif (Number.isInteger(data.background)) {\n\t\t\t\t\t\t\tobject.background = new Color(data.background);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.fog !== undefined) {\n\t\t\t\t\t\tif (data.fog.type === 'Fog') {\n\t\t\t\t\t\t\tobject.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n\t\t\t\t\t\t} else if (data.fog.type === 'FogExp2') {\n\t\t\t\t\t\t\tobject.fog = new FogExp2(data.fog.color, data.fog.density);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\t\t\t\t\tobject = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n\t\t\t\t\tif (data.focus !== undefined) object.focus = data.focus;\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\n\t\t\t\t\tif (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n\t\t\t\t\tif (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\t\t\t\t\tobject = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\t\t\t\t\tobject = new AmbientLight(data.color, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tobject = new DirectionalLight(data.color, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tobject = new PointLight(data.color, data.intensity, data.distance, data.decay);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tobject = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tobject = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tobject = new HemisphereLight(data.color, data.groundColor, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LightProbe':\n\t\t\t\t\tobject = new LightProbe().fromJSON(data);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tobject = new SkinnedMesh(geometry, material);\n\t\t\t\t\tif (data.bindMode !== undefined) object.bindMode = data.bindMode;\n\t\t\t\t\tif (data.bindMatrix !== undefined) object.bindMatrix.fromArray(data.bindMatrix);\n\t\t\t\t\tif (data.skeleton !== undefined) object.skeleton = data.skeleton;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tobject = new Mesh(geometry, material);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'InstancedMesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tvar count = data.count;\n\t\t\t\t\tvar instanceMatrix = data.instanceMatrix;\n\t\t\t\t\tobject = new InstancedMesh(geometry, material, count);\n\t\t\t\t\tobject.instanceMatrix = new BufferAttribute(new Float32Array(instanceMatrix.array), 16);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\t\t\t\t\tobject = new LOD();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\t\t\t\t\tobject = new Line(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\t\t\t\t\tobject = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\t\t\t\t\tobject = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\t\t\t\t\tobject = new Points(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\t\t\t\t\tobject = new Sprite(getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\t\t\t\t\tobject = new Group();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Bone':\n\t\t\t\t\tobject = new Bone();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tobject = new Object3D();\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\t\t\tif (data.name !== undefined) object.name = data.name;\n\n\t\t\tif (data.matrix !== undefined) {\n\t\t\t\tobject.matrix.fromArray(data.matrix);\n\t\t\t\tif (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\t\tif (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n\t\t\t} else {\n\t\t\t\tif (data.position !== undefined) object.position.fromArray(data.position);\n\t\t\t\tif (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n\t\t\t\tif (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n\t\t\t\tif (data.scale !== undefined) object.scale.fromArray(data.scale);\n\t\t\t}\n\n\t\t\tif (data.castShadow !== undefined) object.castShadow = data.castShadow;\n\t\t\tif (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n\t\t\tif (data.shadow) {\n\t\t\t\tif (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n\t\t\t\tif (data.shadow.normalBias !== undefined) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\t\tif (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n\t\t\t\tif (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n\t\t\t\tif (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n\t\t\t}\n\n\t\t\tif (data.visible !== undefined) object.visible = data.visible;\n\t\t\tif (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n\t\t\tif (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n\t\t\tif (data.userData !== undefined) object.userData = data.userData;\n\t\t\tif (data.layers !== undefined) object.layers.mask = data.layers;\n\n\t\t\tif (data.children !== undefined) {\n\t\t\t\tvar children = data.children;\n\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\tobject.add(this.parseObject(children[i], geometries, materials, animations));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.animations !== undefined) {\n\t\t\t\tvar objectAnimations = data.animations;\n\n\t\t\t\tfor (var _i = 0; _i < objectAnimations.length; _i++) {\n\t\t\t\t\tvar uuid = objectAnimations[_i];\n\t\t\t\t\tobject.animations.push(animations[uuid]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.type === 'LOD') {\n\t\t\t\tif (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\n\t\t\t\tvar levels = data.levels;\n\n\t\t\t\tfor (var l = 0; l < levels.length; l++) {\n\t\t\t\t\tvar level = levels[l];\n\t\t\t\t\tvar child = object.getObjectByProperty('uuid', level.object);\n\n\t\t\t\t\tif (child !== undefined) {\n\t\t\t\t\t\tobject.addLevel(child, level.distance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn object;\n\t\t};\n\n\t\t_proto.bindSkeletons = function bindSkeletons(object, skeletons) {\n\t\t\tif (Object.keys(skeletons).length === 0) return;\n\t\t\tobject.traverse(function (child) {\n\t\t\t\tif (child.isSkinnedMesh === true && child.skeleton !== undefined) {\n\t\t\t\t\tvar skeleton = skeletons[child.skeleton];\n\n\t\t\t\t\tif (skeleton === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchild.bind(skeleton, child.bindMatrix);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/* DEPRECATED */\n\t\t;\n\n\t\t_proto.setTexturePath = function setTexturePath(value) {\n\t\t\tconsole.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\n\t\t\treturn this.setResourcePath(value);\n\t\t};\n\n\t\treturn ObjectLoader;\n\t}(Loader);\n\n\tvar TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\tvar TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\tvar TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\t\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\t\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n\t};\n\n\tfunction ImageBitmapLoader(manager) {\n\t\tif (typeof createImageBitmap === 'undefined') {\n\t\t\tconsole.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n\t\t}\n\n\t\tif (typeof fetch === 'undefined') {\n\t\t\tconsole.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n\t\t}\n\n\t\tLoader.call(this, manager);\n\t\tthis.options = {\n\t\t\tpremultiplyAlpha: 'none'\n\t\t};\n\t}\n\n\tImageBitmapLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\t\tconstructor: ImageBitmapLoader,\n\t\tisImageBitmapLoader: true,\n\t\tsetOptions: function setOptions(options) {\n\t\t\tthis.options = options;\n\t\t\treturn this;\n\t\t},\n\t\tload: function load(url, onLoad, onProgress, onError) {\n\t\t\tif (url === undefined) url = '';\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tvar scope = this;\n\t\t\tvar cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tvar fetchOptions = {};\n\t\t\tfetchOptions.credentials = this.crossOrigin === 'anonymous' ? 'same-origin' : 'include';\n\t\t\tfetch(url, fetchOptions).then(function (res) {\n\t\t\t\treturn res.blob();\n\t\t\t}).then(function (blob) {\n\t\t\t\treturn createImageBitmap(blob, scope.options);\n\t\t\t}).then(function (imageBitmap) {\n\t\t\t\tCache.add(url, imageBitmap);\n\t\t\t\tif (onLoad) onLoad(imageBitmap);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}).catch(function (e) {\n\t\t\t\tif (onError) onError(e);\n\t\t\t\tscope.manager.itemError(url);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t});\n\t\t\tscope.manager.itemStart(url);\n\t\t}\n\t});\n\n\tfunction ShapePath() {\n\t\tthis.type = 'ShapePath';\n\t\tthis.color = new Color();\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\t}\n\n\tObject.assign(ShapePath.prototype, {\n\t\tmoveTo: function moveTo(x, y) {\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push(this.currentPath);\n\t\t\tthis.currentPath.moveTo(x, y);\n\t\t\treturn this;\n\t\t},\n\t\tlineTo: function lineTo(x, y) {\n\t\t\tthis.currentPath.lineTo(x, y);\n\t\t\treturn this;\n\t\t},\n\t\tquadraticCurveTo: function quadraticCurveTo(aCPx, aCPy, aX, aY) {\n\t\t\tthis.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n\t\t\treturn this;\n\t\t},\n\t\tbezierCurveTo: function bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n\t\t\tthis.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n\t\t\treturn this;\n\t\t},\n\t\tsplineThru: function splineThru(pts) {\n\t\t\tthis.currentPath.splineThru(pts);\n\t\t\treturn this;\n\t\t},\n\t\ttoShapes: function toShapes(isCCW, noHoles) {\n\t\t\tfunction toShapesNoHoles(inSubpaths) {\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor (var i = 0, l = inSubpaths.length; i < l; i++) {\n\t\t\t\t\tvar _tmpPath = inSubpaths[i];\n\n\t\t\t\t\tvar _tmpShape = new Shape();\n\n\t\t\t\t\t_tmpShape.curves = _tmpPath.curves;\n\t\t\t\t\tshapes.push(_tmpShape);\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon(inPt, inPolygon) {\n\t\t\t\tvar polyLen = inPolygon.length; // inPt on polygon contour => immediate success\t\tor\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//\twith the horizontal line through inPt, left of inPt\n\t\t\t\t//\tnot counting lowerY endpoints of edges and whole edges on that line\n\n\t\t\t\tvar inside = false;\n\n\t\t\t\tfor (var p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n\t\t\t\t\tvar edgeLowPt = inPolygon[p];\n\t\t\t\t\tvar edgeHighPt = inPolygon[q];\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif (Math.abs(edgeDy) > Number.EPSILON) {\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif (edgeDy < 0) {\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[q];\n\t\t\t\t\t\t\tedgeDx = -edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[p];\n\t\t\t\t\t\t\tedgeDy = -edgeDy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n\t\t\t\t\t\tif (inPt.y === edgeLowPt.y) {\n\t\t\t\t\t\t\tif (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n\t\t\t\t\t\t\tif (perpEdge === 0) return true; // inPt is on contour ?\n\n\t\t\t\t\t\t\tif (perpEdge < 0) continue;\n\t\t\t\t\t\t\tinside = !inside; // true intersection left of inPt\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif (inPt.y !== edgeLowPt.y) continue; // parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\n\t\t\t\t\t\tif (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn inside;\n\t\t\t}\n\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif (subPaths.length === 0) return [];\n\t\t\tif (noHoles === true) return toShapesNoHoles(subPaths);\n\t\t\tvar solid, tmpPath, tmpShape;\n\t\t\tvar shapes = [];\n\n\t\t\tif (subPaths.length === 1) {\n\t\t\t\ttmpPath = subPaths[0];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push(tmpShape);\n\t\t\t\treturn shapes;\n\t\t\t}\n\n\t\t\tvar holesFirst = !isClockWise(subPaths[0].getPoints());\n\t\t\tholesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\t\t\tnewShapes[mainIdx] = undefined;\n\t\t\tnewShapeHoles[mainIdx] = [];\n\n\t\t\tfor (var i = 0, l = subPaths.length; i < l; i++) {\n\t\t\t\ttmpPath = subPaths[i];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise(tmpPoints);\n\t\t\t\tsolid = isCCW ? !solid : solid;\n\n\t\t\t\tif (solid) {\n\t\t\t\t\tif (!holesFirst && newShapes[mainIdx]) mainIdx++;\n\t\t\t\t\tnewShapes[mainIdx] = {\n\t\t\t\t\t\ts: new Shape(),\n\t\t\t\t\t\tp: tmpPoints\n\t\t\t\t\t};\n\t\t\t\t\tnewShapes[mainIdx].s.curves = tmpPath.curves;\n\t\t\t\t\tif (holesFirst) mainIdx++;\n\t\t\t\t\tnewShapeHoles[mainIdx] = []; //console.log('cw', i);\n\t\t\t\t} else {\n\t\t\t\t\tnewShapeHoles[mainIdx].push({\n\t\t\t\t\t\th: tmpPath,\n\t\t\t\t\t\tp: tmpPoints[0]\n\t\t\t\t\t}); //console.log('ccw', i);\n\t\t\t\t}\n\t\t\t} // only Holes? -> probably all Shapes with wrong orientation\n\n\n\t\t\tif (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n\t\t\tif (newShapes.length > 1) {\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n\t\t\t\t\tbetterShapeHoles[sIdx] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (var _sIdx = 0, _sLen = newShapes.length; _sIdx < _sLen; _sIdx++) {\n\t\t\t\t\tvar sho = newShapeHoles[_sIdx];\n\n\t\t\t\t\tfor (var hIdx = 0; hIdx < sho.length; hIdx++) {\n\t\t\t\t\t\tvar ho = sho[hIdx];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n\t\t\t\t\t\t\tif (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n\t\t\t\t\t\t\t\tif (_sIdx !== s2Idx) toChange.push({\n\t\t\t\t\t\t\t\t\tfroms: _sIdx,\n\t\t\t\t\t\t\t\t\ttos: s2Idx,\n\t\t\t\t\t\t\t\t\thole: hIdx\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (hole_unassigned) {\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[s2Idx].push(ho);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (hole_unassigned) {\n\t\t\t\t\t\t\tbetterShapeHoles[_sIdx].push(ho);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // console.log(\"ambiguous: \", ambiguous);\n\n\n\t\t\t\tif (toChange.length > 0) {\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif (!ambiguous) newShapeHoles = betterShapeHoles;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor (var _i = 0, il = newShapes.length; _i < il; _i++) {\n\t\t\t\ttmpShape = newShapes[_i].s;\n\t\t\t\tshapes.push(tmpShape);\n\t\t\t\ttmpHoles = newShapeHoles[_i];\n\n\t\t\t\tfor (var j = 0, jl = tmpHoles.length; j < jl; j++) {\n\t\t\t\t\ttmpShape.holes.push(tmpHoles[j].h);\n\t\t\t\t}\n\t\t\t} //console.log(\"shape\", shapes);\n\n\n\t\t\treturn shapes;\n\t\t}\n\t});\n\n\tvar Font = /*#__PURE__*/function () {\n\t\tfunction Font(data) {\n\t\t\tObject.defineProperty(this, 'isFont', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\tthis.type = 'Font';\n\t\t\tthis.data = data;\n\t\t}\n\n\t\tvar _proto = Font.prototype;\n\n\t\t_proto.generateShapes = function generateShapes(text, size) {\n\t\t\tif (size === void 0) {\n\t\t\t\tsize = 100;\n\t\t\t}\n\n\t\t\tvar shapes = [];\n\t\t\tvar paths = createPaths(text, size, this.data);\n\n\t\t\tfor (var p = 0, pl = paths.length; p < pl; p++) {\n\t\t\t\tArray.prototype.push.apply(shapes, paths[p].toShapes());\n\t\t\t}\n\n\t\t\treturn shapes;\n\t\t};\n\n\t\treturn Font;\n\t}();\n\n\tfunction createPaths(text, size, data) {\n\t\tvar chars = Array.from ? Array.from(text) : String(text).split(''); // workaround for IE11, see #13988\n\n\t\tvar scale = size / data.resolution;\n\t\tvar line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n\t\tvar paths = [];\n\t\tvar offsetX = 0,\n\t\t\t\toffsetY = 0;\n\n\t\tfor (var i = 0; i < chars.length; i++) {\n\t\t\tvar char = chars[i];\n\n\t\t\tif (char === '\\n') {\n\t\t\t\toffsetX = 0;\n\t\t\t\toffsetY -= line_height;\n\t\t\t} else {\n\t\t\t\tvar ret = createPath(char, scale, offsetX, offsetY, data);\n\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\tpaths.push(ret.path);\n\t\t\t}\n\t\t}\n\n\t\treturn paths;\n\t}\n\n\tfunction createPath(char, scale, offsetX, offsetY, data) {\n\t\tvar glyph = data.glyphs[char] || data.glyphs['?'];\n\n\t\tif (!glyph) {\n\t\t\tconsole.error('THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.');\n\t\t\treturn;\n\t\t}\n\n\t\tvar path = new ShapePath();\n\t\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\t\tif (glyph.o) {\n\t\t\tvar outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n\n\t\t\tfor (var i = 0, l = outline.length; i < l;) {\n\t\t\t\tvar action = outline[i++];\n\n\t\t\t\tswitch (action) {\n\t\t\t\t\tcase 'm':\n\t\t\t\t\t\t// moveTo\n\t\t\t\t\t\tx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\ty = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.moveTo(x, y);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t// lineTo\n\t\t\t\t\t\tx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\ty = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.lineTo(x, y);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\t// quadraticCurveTo\n\t\t\t\t\t\tcpx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t// bezierCurveTo\n\t\t\t\t\t\tcpx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tcpx2 = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy2 = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\toffsetX: glyph.ha * scale,\n\t\t\tpath: path\n\t\t};\n\t}\n\n\tfunction FontLoader(manager) {\n\t\tLoader.call(this, manager);\n\t}\n\n\tFontLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\t\tconstructor: FontLoader,\n\t\tload: function load(url, onLoad, onProgress, onError) {\n\t\t\tvar scope = this;\n\t\t\tvar loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(text);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n\t\t\t\t\tjson = JSON.parse(text.substring(65, text.length - 2));\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse(json);\n\t\t\t\tif (onLoad) onLoad(font);\n\t\t\t}, onProgress, onError);\n\t\t},\n\t\tparse: function parse(json) {\n\t\t\treturn new Font(json);\n\t\t}\n\t});\n\n\tvar _context;\n\n\tvar AudioContext = {\n\t\tgetContext: function getContext() {\n\t\t\tif (_context === undefined) {\n\t\t\t\t_context = new (window.AudioContext || window.webkitAudioContext)();\n\t\t\t}\n\n\t\t\treturn _context;\n\t\t},\n\t\tsetContext: function setContext(value) {\n\t\t\t_context = value;\n\t\t}\n\t};\n\n\tfunction AudioLoader(manager) {\n\t\tLoader.call(this, manager);\n\t}\n\n\tAudioLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\t\tconstructor: AudioLoader,\n\t\tload: function load(url, onLoad, onProgress, onError) {\n\t\t\tvar scope = this;\n\t\t\tvar loader = new FileLoader(scope.manager);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (buffer) {\n\t\t\t\ttry {\n\t\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\t\tvar bufferCopy = buffer.slice(0);\n\t\t\t\t\tvar context = AudioContext.getContext();\n\t\t\t\t\tcontext.decodeAudioData(bufferCopy, function (audioBuffer) {\n\t\t\t\t\t\tonLoad(audioBuffer);\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\t});\n\n\tfunction HemisphereLightProbe(skyColor, groundColor, intensity) {\n\t\tLightProbe.call(this, undefined, intensity);\n\t\tvar color1 = new Color().set(skyColor);\n\t\tvar color2 = new Color().set(groundColor);\n\t\tvar sky = new Vector3(color1.r, color1.g, color1.b);\n\t\tvar ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\n\t\tvar c0 = Math.sqrt(Math.PI);\n\t\tvar c1 = c0 * Math.sqrt(0.75);\n\t\tthis.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n\t\tthis.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n\t}\n\n\tHemisphereLightProbe.prototype = Object.assign(Object.create(LightProbe.prototype), {\n\t\tconstructor: HemisphereLightProbe,\n\t\tisHemisphereLightProbe: true,\n\t\tcopy: function copy(source) {\n\t\t\t// modifying colors not currently supported\n\t\t\tLightProbe.prototype.copy.call(this, source);\n\t\t\treturn this;\n\t\t},\n\t\ttoJSON: function toJSON(meta) {\n\t\t\tvar data = LightProbe.prototype.toJSON.call(this, meta); // data.sh = this.sh.toArray(); // todo\n\n\t\t\treturn data;\n\t\t}\n\t});\n\n\tfunction AmbientLightProbe(color, intensity) {\n\t\tLightProbe.call(this, undefined, intensity);\n\t\tvar color1 = new Color().set(color); // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\n\t\tthis.sh.coefficients[0].set(color1.r, color1.g, color1.b).multiplyScalar(2 * Math.sqrt(Math.PI));\n\t}\n\n\tAmbientLightProbe.prototype = Object.assign(Object.create(LightProbe.prototype), {\n\t\tconstructor: AmbientLightProbe,\n\t\tisAmbientLightProbe: true,\n\t\tcopy: function copy(source) {\n\t\t\t// modifying color not currently supported\n\t\t\tLightProbe.prototype.copy.call(this, source);\n\t\t\treturn this;\n\t\t},\n\t\ttoJSON: function toJSON(meta) {\n\t\t\tvar data = LightProbe.prototype.toJSON.call(this, meta); // data.sh = this.sh.toArray(); // todo\n\n\t\t\treturn data;\n\t\t}\n\t});\n\n\tvar _eyeRight = new Matrix4();\n\n\tvar _eyeLeft = new Matrix4();\n\n\tfunction StereoCamera() {\n\t\tthis.type = 'StereoCamera';\n\t\tthis.aspect = 1;\n\t\tthis.eyeSep = 0.064;\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable(1);\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable(2);\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\t}\n\n\tObject.assign(StereoCamera.prototype, {\n\t\tupdate: function update(camera) {\n\t\t\tvar cache = this._cache;\n\t\t\tvar needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\t\tif (needsUpdate) {\n\t\t\t\tcache.focus = camera.focus;\n\t\t\t\tcache.fov = camera.fov;\n\t\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\t\tcache.near = camera.near;\n\t\t\t\tcache.far = camera.far;\n\t\t\t\tcache.zoom = camera.zoom;\n\t\t\t\tcache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\tvar eyeSepHalf = cache.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\t\tvar ymax = cache.near * Math.tan(MathUtils.DEG2RAD * cache.fov * 0.5) / cache.zoom;\n\t\t\t\tvar xmin, xmax; // translate xOffset\n\n\t\t\t\t_eyeLeft.elements[12] = -eyeSepHalf;\n\t\t\t\t_eyeRight.elements[12] = eyeSepHalf; // for left eye\n\n\t\t\t\txmin = -ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\t\t\t\tthis.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n\t\t\t\txmin = -ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\t\t\t\tthis.cameraR.projectionMatrix.copy(projectionMatrix);\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n\t\t\tthis.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n\t\t}\n\t});\n\n\tvar Clock = /*#__PURE__*/function () {\n\t\tfunction Clock(autoStart) {\n\t\t\tthis.autoStart = autoStart !== undefined ? autoStart : true;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.oldTime = 0;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = false;\n\t\t}\n\n\t\tvar _proto = Clock.prototype;\n\n\t\t_proto.start = function start() {\n\t\t\tthis.startTime = now();\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\t\t};\n\n\t\t_proto.stop = function stop() {\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\t\t};\n\n\t\t_proto.getElapsedTime = function getElapsedTime() {\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\t\t};\n\n\t\t_proto.getDelta = function getDelta() {\n\t\t\tvar diff = 0;\n\n\t\t\tif (this.autoStart && !this.running) {\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (this.running) {\n\t\t\t\tvar newTime = now();\n\t\t\t\tdiff = (newTime - this.oldTime) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\t\t\t\tthis.elapsedTime += diff;\n\t\t\t}\n\n\t\t\treturn diff;\n\t\t};\n\n\t\treturn Clock;\n\t}();\n\n\tfunction now() {\n\t\treturn (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n\t}\n\n\tvar _position$2 = /*@__PURE__*/new Vector3();\n\n\tvar _quaternion$3 = /*@__PURE__*/new Quaternion();\n\n\tvar _scale$1 = /*@__PURE__*/new Vector3();\n\n\tvar _orientation = /*@__PURE__*/new Vector3();\n\n\tvar AudioListener = /*#__PURE__*/function (_Object3D) {\n\t\t_inheritsLoose(AudioListener, _Object3D);\n\n\t\tfunction AudioListener() {\n\t\t\tvar _this;\n\n\t\t\t_this = _Object3D.call(this) || this;\n\t\t\t_this.type = 'AudioListener';\n\t\t\t_this.context = AudioContext.getContext();\n\t\t\t_this.gain = _this.context.createGain();\n\n\t\t\t_this.gain.connect(_this.context.destination);\n\n\t\t\t_this.filter = null;\n\t\t\t_this.timeDelta = 0; // private\n\n\t\t\t_this._clock = new Clock();\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = AudioListener.prototype;\n\n\t\t_proto.getInput = function getInput() {\n\t\t\treturn this.gain;\n\t\t};\n\n\t\t_proto.removeFilter = function removeFilter() {\n\t\t\tif (this.filter !== null) {\n\t\t\t\tthis.gain.disconnect(this.filter);\n\t\t\t\tthis.filter.disconnect(this.context.destination);\n\t\t\t\tthis.gain.connect(this.context.destination);\n\t\t\t\tthis.filter = null;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getFilter = function getFilter() {\n\t\t\treturn this.filter;\n\t\t};\n\n\t\t_proto.setFilter = function setFilter(value) {\n\t\t\tif (this.filter !== null) {\n\t\t\t\tthis.gain.disconnect(this.filter);\n\t\t\t\tthis.filter.disconnect(this.context.destination);\n\t\t\t} else {\n\t\t\t\tthis.gain.disconnect(this.context.destination);\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect(this.filter);\n\t\t\tthis.filter.connect(this.context.destination);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getMasterVolume = function getMasterVolume() {\n\t\t\treturn this.gain.gain.value;\n\t\t};\n\n\t\t_proto.setMasterVolume = function setMasterVolume(value) {\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.updateMatrixWorld = function updateMatrixWorld(force) {\n\t\t\t_Object3D.prototype.updateMatrixWorld.call(this, force);\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\t\t\tthis.timeDelta = this._clock.getDelta();\n\t\t\tthis.matrixWorld.decompose(_position$2, _quaternion$3, _scale$1);\n\n\t\t\t_orientation.set(0, 0, -1).applyQuaternion(_quaternion$3);\n\n\t\t\tif (listener.positionX) {\n\t\t\t\t// code path for Chrome (see #14393)\n\t\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\t\t\t\tlistener.positionX.linearRampToValueAtTime(_position$2.x, endTime);\n\t\t\t\tlistener.positionY.linearRampToValueAtTime(_position$2.y, endTime);\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime(_position$2.z, endTime);\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime(_orientation.x, endTime);\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime(_orientation.y, endTime);\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime(_orientation.z, endTime);\n\t\t\t\tlistener.upX.linearRampToValueAtTime(up.x, endTime);\n\t\t\t\tlistener.upY.linearRampToValueAtTime(up.y, endTime);\n\t\t\t\tlistener.upZ.linearRampToValueAtTime(up.z, endTime);\n\t\t\t} else {\n\t\t\t\tlistener.setPosition(_position$2.x, _position$2.y, _position$2.z);\n\t\t\t\tlistener.setOrientation(_orientation.x, _orientation.y, _orientation.z, up.x, up.y, up.z);\n\t\t\t}\n\t\t};\n\n\t\treturn AudioListener;\n\t}(Object3D);\n\n\tvar Audio = /*#__PURE__*/function (_Object3D) {\n\t\t_inheritsLoose(Audio, _Object3D);\n\n\t\tfunction Audio(listener) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Object3D.call(this) || this;\n\t\t\t_this.type = 'Audio';\n\t\t\t_this.listener = listener;\n\t\t\t_this.context = listener.context;\n\t\t\t_this.gain = _this.context.createGain();\n\n\t\t\t_this.gain.connect(listener.getInput());\n\n\t\t\t_this.autoplay = false;\n\t\t\t_this.buffer = null;\n\t\t\t_this.detune = 0;\n\t\t\t_this.loop = false;\n\t\t\t_this.loopStart = 0;\n\t\t\t_this.loopEnd = 0;\n\t\t\t_this.offset = 0;\n\t\t\t_this.duration = undefined;\n\t\t\t_this.playbackRate = 1;\n\t\t\t_this.isPlaying = false;\n\t\t\t_this.hasPlaybackControl = true;\n\t\t\t_this.source = null;\n\t\t\t_this.sourceType = 'empty';\n\t\t\t_this._startedAt = 0;\n\t\t\t_this._progress = 0;\n\t\t\t_this._connected = false;\n\t\t\t_this.filters = [];\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = Audio.prototype;\n\n\t\t_proto.getOutput = function getOutput() {\n\t\t\treturn this.gain;\n\t\t};\n\n\t\t_proto.setNodeSource = function setNodeSource(audioNode) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setMediaElementSource = function setMediaElementSource(mediaElement) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaNode';\n\t\t\tthis.source = this.context.createMediaElementSource(mediaElement);\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setMediaStreamSource = function setMediaStreamSource(mediaStream) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaStreamNode';\n\t\t\tthis.source = this.context.createMediaStreamSource(mediaStream);\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setBuffer = function setBuffer(audioBuffer) {\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\t\t\tif (this.autoplay) this.play();\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.play = function play(delay) {\n\t\t\tif (delay === void 0) {\n\t\t\t\tdelay = 0;\n\t\t\t}\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tconsole.warn('THREE.Audio: Audio is already playing.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._startedAt = this.context.currentTime + delay;\n\t\t\tvar source = this.context.createBufferSource();\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.loopStart = this.loopStart;\n\t\t\tsource.loopEnd = this.loopEnd;\n\t\t\tsource.onended = this.onEnded.bind(this);\n\t\t\tsource.start(this._startedAt, this._progress + this.offset, this.duration);\n\t\t\tthis.isPlaying = true;\n\t\t\tthis.source = source;\n\t\t\tthis.setDetune(this.detune);\n\t\t\tthis.setPlaybackRate(this.playbackRate);\n\t\t\treturn this.connect();\n\t\t};\n\n\t\t_proto.pause = function pause() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\t// update current progress\n\t\t\t\tthis._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate;\n\n\t\t\t\tif (this.loop === true) {\n\t\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\t\t\t\t\tthis._progress = this._progress % (this.duration || this.buffer.duration);\n\t\t\t\t}\n\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.source.onended = null;\n\t\t\t\tthis.isPlaying = false;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.stop = function stop() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._progress = 0;\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.isPlaying = false;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.connect = function connect() {\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\tthis.source.connect(this.filters[0]);\n\n\t\t\t\tfor (var i = 1, l = this.filters.length; i < l; i++) {\n\t\t\t\t\tthis.filters[i - 1].connect(this.filters[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.filters[this.filters.length - 1].connect(this.getOutput());\n\t\t\t} else {\n\t\t\t\tthis.source.connect(this.getOutput());\n\t\t\t}\n\n\t\t\tthis._connected = true;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.disconnect = function disconnect() {\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\tthis.source.disconnect(this.filters[0]);\n\n\t\t\t\tfor (var i = 1, l = this.filters.length; i < l; i++) {\n\t\t\t\t\tthis.filters[i - 1].disconnect(this.filters[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.filters[this.filters.length - 1].disconnect(this.getOutput());\n\t\t\t} else {\n\t\t\t\tthis.source.disconnect(this.getOutput());\n\t\t\t}\n\n\t\t\tthis._connected = false;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getFilters = function getFilters() {\n\t\t\treturn this.filters;\n\t\t};\n\n\t\t_proto.setFilters = function setFilters(value) {\n\t\t\tif (!value) value = [];\n\n\t\t\tif (this._connected === true) {\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value.slice();\n\t\t\t\tthis.connect();\n\t\t\t} else {\n\t\t\t\tthis.filters = value.slice();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setDetune = function setDetune(value) {\n\t\t\tthis.detune = value;\n\t\t\tif (this.source.detune === undefined) return; // only set detune when available\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getDetune = function getDetune() {\n\t\t\treturn this.detune;\n\t\t};\n\n\t\t_proto.getFilter = function getFilter() {\n\t\t\treturn this.getFilters()[0];\n\t\t};\n\n\t\t_proto.setFilter = function setFilter(filter) {\n\t\t\treturn this.setFilters(filter ? [filter] : []);\n\t\t};\n\n\t\t_proto.setPlaybackRate = function setPlaybackRate(value) {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getPlaybackRate = function getPlaybackRate() {\n\t\t\treturn this.playbackRate;\n\t\t};\n\n\t\t_proto.onEnded = function onEnded() {\n\t\t\tthis.isPlaying = false;\n\t\t};\n\n\t\t_proto.getLoop = function getLoop() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.loop;\n\t\t};\n\n\t\t_proto.setLoop = function setLoop(value) {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.loop = this.loop;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setLoopStart = function setLoopStart(value) {\n\t\t\tthis.loopStart = value;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setLoopEnd = function setLoopEnd(value) {\n\t\t\tthis.loopEnd = value;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getVolume = function getVolume() {\n\t\t\treturn this.gain.gain.value;\n\t\t};\n\n\t\t_proto.setVolume = function setVolume(value) {\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Audio;\n\t}(Object3D);\n\n\tvar _position$3 = /*@__PURE__*/new Vector3();\n\n\tvar _quaternion$4 = /*@__PURE__*/new Quaternion();\n\n\tvar _scale$2 = /*@__PURE__*/new Vector3();\n\n\tvar _orientation$1 = /*@__PURE__*/new Vector3();\n\n\tvar PositionalAudio = /*#__PURE__*/function (_Audio) {\n\t\t_inheritsLoose(PositionalAudio, _Audio);\n\n\t\tfunction PositionalAudio(listener) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Audio.call(this, listener) || this;\n\t\t\t_this.panner = _this.context.createPanner();\n\t\t\t_this.panner.panningModel = 'HRTF';\n\n\t\t\t_this.panner.connect(_this.gain);\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = PositionalAudio.prototype;\n\n\t\t_proto.getOutput = function getOutput() {\n\t\t\treturn this.panner;\n\t\t};\n\n\t\t_proto.getRefDistance = function getRefDistance() {\n\t\t\treturn this.panner.refDistance;\n\t\t};\n\n\t\t_proto.setRefDistance = function setRefDistance(value) {\n\t\t\tthis.panner.refDistance = value;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getRolloffFactor = function getRolloffFactor() {\n\t\t\treturn this.panner.rolloffFactor;\n\t\t};\n\n\t\t_proto.setRolloffFactor = function setRolloffFactor(value) {\n\t\t\tthis.panner.rolloffFactor = value;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getDistanceModel = function getDistanceModel() {\n\t\t\treturn this.panner.distanceModel;\n\t\t};\n\n\t\t_proto.setDistanceModel = function setDistanceModel(value) {\n\t\t\tthis.panner.distanceModel = value;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getMaxDistance = function getMaxDistance() {\n\t\t\treturn this.panner.maxDistance;\n\t\t};\n\n\t\t_proto.setMaxDistance = function setMaxDistance(value) {\n\t\t\tthis.panner.maxDistance = value;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setDirectionalCone = function setDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.updateMatrixWorld = function updateMatrixWorld(force) {\n\t\t\t_Audio.prototype.updateMatrixWorld.call(this, force);\n\n\t\t\tif (this.hasPlaybackControl === true && this.isPlaying === false) return;\n\t\t\tthis.matrixWorld.decompose(_position$3, _quaternion$4, _scale$2);\n\n\t\t\t_orientation$1.set(0, 0, 1).applyQuaternion(_quaternion$4);\n\n\t\t\tvar panner = this.panner;\n\n\t\t\tif (panner.positionX) {\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\t\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\t\t\t\tpanner.positionX.linearRampToValueAtTime(_position$3.x, endTime);\n\t\t\t\tpanner.positionY.linearRampToValueAtTime(_position$3.y, endTime);\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime(_position$3.z, endTime);\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime(_orientation$1.x, endTime);\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime(_orientation$1.y, endTime);\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime(_orientation$1.z, endTime);\n\t\t\t} else {\n\t\t\t\tpanner.setPosition(_position$3.x, _position$3.y, _position$3.z);\n\t\t\t\tpanner.setOrientation(_orientation$1.x, _orientation$1.y, _orientation$1.z);\n\t\t\t}\n\t\t};\n\n\t\treturn PositionalAudio;\n\t}(Audio);\n\n\tvar AudioAnalyser = /*#__PURE__*/function () {\n\t\tfunction AudioAnalyser(audio, fftSize) {\n\t\t\tif (fftSize === void 0) {\n\t\t\t\tfftSize = 2048;\n\t\t\t}\n\n\t\t\tthis.analyser = audio.context.createAnalyser();\n\t\t\tthis.analyser.fftSize = fftSize;\n\t\t\tthis.data = new Uint8Array(this.analyser.frequencyBinCount);\n\t\t\taudio.getOutput().connect(this.analyser);\n\t\t}\n\n\t\tvar _proto = AudioAnalyser.prototype;\n\n\t\t_proto.getFrequencyData = function getFrequencyData() {\n\t\t\tthis.analyser.getByteFrequencyData(this.data);\n\t\t\treturn this.data;\n\t\t};\n\n\t\t_proto.getAverageFrequency = function getAverageFrequency() {\n\t\t\tvar value = 0;\n\t\t\tvar data = this.getFrequencyData();\n\n\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\tvalue += data[i];\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\t\t};\n\n\t\treturn AudioAnalyser;\n\t}();\n\n\tfunction PropertyMixer(binding, typeName, valueSize) {\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\t\tvar mixFunction, mixFunctionAdditive, setIdentity; // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch (typeName) {\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\t\t\t\tthis.buffer = new Float64Array(valueSize * 6);\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select; // Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\n\t\t\t\tmixFunctionAdditive = this._select;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\t\t\t\tthis.buffer = new Array(valueSize * 5);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\t\t\t\tthis.buffer = new Float64Array(valueSize * 5);\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\t}\n\n\tObject.assign(PropertyMixer.prototype, {\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function accumulate(accuIndex, weight) {\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\t\t\tvar buffer = this.buffer,\n\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\toffset = accuIndex * stride + stride;\n\t\t\tvar currentWeight = this.cumulativeWeight;\n\n\t\t\tif (currentWeight === 0) {\n\t\t\t\t// accuN := incoming * weight\n\t\t\t\tfor (var i = 0; i !== stride; ++i) {\n\t\t\t\t\tbuffer[offset + i] = buffer[i];\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\t\t\t} else {\n\t\t\t\t// accuN := accuN + incoming * weight\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\n\t\t\t\tthis._mixBufferRegion(buffer, offset, 0, mix, stride);\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\t\t},\n\t\t// accumulate data in the 'incoming' region into 'add'\n\t\taccumulateAdditive: function accumulateAdditive(weight) {\n\t\t\tvar buffer = this.buffer,\n\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\toffset = stride * this._addIndex;\n\n\t\t\tif (this.cumulativeWeightAdditive === 0) {\n\t\t\t\t// add = identity\n\t\t\t\tthis._setIdentity();\n\t\t\t} // add := add + incoming * weight\n\n\n\t\t\tthis._mixBufferRegionAdditive(buffer, offset, 0, weight, stride);\n\n\t\t\tthis.cumulativeWeightAdditive += weight;\n\t\t},\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function apply(accuIndex) {\n\t\t\tvar stride = this.valueSize,\n\t\t\t\t\tbuffer = this.buffer,\n\t\t\t\t\toffset = accuIndex * stride + stride,\n\t\t\t\t\tweight = this.cumulativeWeight,\n\t\t\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\t\t\t\t\tbinding = this.binding;\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t\tif (weight < 1) {\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\t\t\t\tvar originalValueOffset = stride * this._origIndex;\n\n\t\t\t\tthis._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n\t\t\t}\n\n\t\t\tif (weightAdditive > 0) {\n\t\t\t\t// accuN := accuN + additive accuN\n\t\t\t\tthis._mixBufferRegionAdditive(buffer, offset, this._addIndex * stride, 1, stride);\n\t\t\t}\n\n\t\t\tfor (var i = stride, e = stride + stride; i !== e; ++i) {\n\t\t\t\tif (buffer[i] !== buffer[i + stride]) {\n\t\t\t\t\t// value has changed -> update scene graph\n\t\t\t\t\tbinding.setValue(buffer, offset);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function saveOriginalState() {\n\t\t\tvar binding = this.binding;\n\t\t\tvar buffer = this.buffer,\n\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\toriginalValueOffset = stride * this._origIndex;\n\t\t\tbinding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n\t\t\tfor (var i = stride, e = originalValueOffset; i !== e; ++i) {\n\t\t\t\tbuffer[i] = buffer[originalValueOffset + i % stride];\n\t\t\t} // Add to identity for additive\n\n\n\t\t\tthis._setIdentity();\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\t\t},\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function restoreOriginalState() {\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue(this.buffer, originalValueOffset);\n\t\t},\n\t\t_setAdditiveIdentityNumeric: function _setAdditiveIdentityNumeric() {\n\t\t\tvar startIndex = this._addIndex * this.valueSize;\n\t\t\tvar endIndex = startIndex + this.valueSize;\n\n\t\t\tfor (var i = startIndex; i < endIndex; i++) {\n\t\t\t\tthis.buffer[i] = 0;\n\t\t\t}\n\t\t},\n\t\t_setAdditiveIdentityQuaternion: function _setAdditiveIdentityQuaternion() {\n\t\t\tthis._setAdditiveIdentityNumeric();\n\n\t\t\tthis.buffer[this._addIndex * this.valueSize + 3] = 1;\n\t\t},\n\t\t_setAdditiveIdentityOther: function _setAdditiveIdentityOther() {\n\t\t\tvar startIndex = this._origIndex * this.valueSize;\n\t\t\tvar targetIndex = this._addIndex * this.valueSize;\n\n\t\t\tfor (var i = 0; i < this.valueSize; i++) {\n\t\t\t\tthis.buffer[targetIndex + i] = this.buffer[startIndex + i];\n\t\t\t}\n\t\t},\n\t\t// mix functions\n\t\t_select: function _select(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tif (t >= 0.5) {\n\t\t\t\tfor (var i = 0; i !== stride; ++i) {\n\t\t\t\t\tbuffer[dstOffset + i] = buffer[srcOffset + i];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_slerp: function _slerp(buffer, dstOffset, srcOffset, t) {\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n\t\t},\n\t\t_slerpAdditive: function _slerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tvar workOffset = this._workIndex * stride; // Store result in intermediate buffer offset\n\n\t\t\tQuaternion.multiplyQuaternionsFlat(buffer, workOffset, buffer, dstOffset, buffer, srcOffset); // Slerp to the intermediate result\n\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t);\n\t\t},\n\t\t_lerp: function _lerp(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor (var i = 0; i !== stride; ++i) {\n\t\t\t\tvar j = dstOffset + i;\n\t\t\t\tbuffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n\t\t\t}\n\t\t},\n\t\t_lerpAdditive: function _lerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tfor (var i = 0; i !== stride; ++i) {\n\t\t\t\tvar j = dstOffset + i;\n\t\t\t\tbuffer[j] = buffer[j] + buffer[srcOffset + i] * t;\n\t\t\t}\n\t\t}\n\t});\n\n\t// Characters [].:/ are reserved for track binding syntax.\n\tvar _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\n\tvar _reservedRe = new RegExp('[' + _RESERVED_CHARS_RE + ']', 'g'); // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t// instead, we exclude reserved characters and match everything else.\n\n\n\tvar _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\n\tvar _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t// be matched to parse the rest of the track name.\n\n\n\tvar _directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', _wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n\n\tvar _nodeRe = /(WCOD+)?/.source.replace('WCOD', _wordCharOrDot); // Object on target node, and accessor. May not contain reserved\n\t// characters. Accessor may contain any character except closing bracket.\n\n\n\tvar _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', _wordChar); // Property and accessor. May not contain reserved characters. Accessor may\n\t// contain any non-bracket characters.\n\n\n\tvar _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', _wordChar);\n\n\tvar _trackRe = new RegExp('' + '^' + _directoryRe + _nodeRe + _objectRe + _propertyRe + '$');\n\n\tvar _supportedObjectNames = ['material', 'materials', 'bones'];\n\n\tfunction Composite(targetGroup, path, optionalParsedPath) {\n\t\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_(path, parsedPath);\n\t}\n\n\tObject.assign(Composite.prototype, {\n\t\tgetValue: function getValue(array, offset) {\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tbinding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n\t\t\tif (binding !== undefined) binding.getValue(array, offset);\n\t\t},\n\t\tsetValue: function setValue(array, offset) {\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].setValue(array, offset);\n\t\t\t}\n\t\t},\n\t\tbind: function bind() {\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].bind();\n\t\t\t}\n\t\t},\n\t\tunbind: function unbind() {\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].unbind();\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction PropertyBinding(rootNode, path, parsedPath) {\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n\t\tthis.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n\t\tthis.rootNode = rootNode;\n\t}\n\n\tObject.assign(PropertyBinding, {\n\t\tComposite: Composite,\n\t\tcreate: function create(root, path, parsedPath) {\n\t\t\tif (!(root && root.isAnimationObjectGroup)) {\n\t\t\t\treturn new PropertyBinding(root, path, parsedPath);\n\t\t\t} else {\n\t\t\t\treturn new PropertyBinding.Composite(root, path, parsedPath);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\t\tsanitizeNodeName: function sanitizeNodeName(name) {\n\t\t\treturn name.replace(/\\s/g, '_').replace(_reservedRe, '');\n\t\t},\n\t\tparseTrackName: function parseTrackName(trackName) {\n\t\t\tvar matches = _trackRe.exec(trackName);\n\n\t\t\tif (!matches) {\n\t\t\t\tthrow new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[2],\n\t\t\t\tobjectName: matches[3],\n\t\t\t\tobjectIndex: matches[4],\n\t\t\t\tpropertyName: matches[5],\n\t\t\t\t// required\n\t\t\t\tpropertyIndex: matches[6]\n\t\t\t};\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n\t\t\tif (lastDot !== undefined && lastDot !== -1) {\n\t\t\t\tvar objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against an allowlist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\n\t\t\t\tif (_supportedObjectNames.indexOf(objectName) !== -1) {\n\t\t\t\t\tresults.nodeName = results.nodeName.substring(0, lastDot);\n\t\t\t\t\tresults.objectName = objectName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (results.propertyName === null || results.propertyName.length === 0) {\n\t\t\t\tthrow new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n\t\t\t}\n\n\t\t\treturn results;\n\t\t},\n\t\tfindNode: function findNode(root, nodeName) {\n\t\t\tif (!nodeName || nodeName === '' || nodeName === '.' || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n\t\t\t\treturn root;\n\t\t\t} // search into skeleton bones.\n\n\n\t\t\tif (root.skeleton) {\n\t\t\t\tvar bone = root.skeleton.getBoneByName(nodeName);\n\n\t\t\t\tif (bone !== undefined) {\n\t\t\t\t\treturn bone;\n\t\t\t\t}\n\t\t\t} // search into node subtree.\n\n\n\t\t\tif (root.children) {\n\t\t\t\tvar searchNodeSubtree = function searchNodeSubtree(children) {\n\t\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\t\tvar childNode = children[i];\n\n\t\t\t\t\t\tif (childNode.name === nodeName || childNode.uuid === nodeName) {\n\t\t\t\t\t\t\treturn childNode;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar result = searchNodeSubtree(childNode.children);\n\t\t\t\t\t\tif (result) return result;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t};\n\n\t\t\t\tvar subTreeNode = searchNodeSubtree(root.children);\n\n\t\t\t\tif (subTreeNode) {\n\t\t\t\t\treturn subTreeNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t});\n\tObject.assign(PropertyBinding.prototype, {\n\t\t// prototype, continued\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function _getValue_unavailable() {},\n\t\t_setValue_unavailable: function _setValue_unavailable() {},\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\t\tGetterByBindingType: [function getValue_direct(buffer, offset) {\n\t\t\tbuffer[offset] = this.node[this.propertyName];\n\t\t}, function getValue_array(buffer, offset) {\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor (var i = 0, n = source.length; i !== n; ++i) {\n\t\t\t\tbuffer[offset++] = source[i];\n\t\t\t}\n\t\t}, function getValue_arrayElement(buffer, offset) {\n\t\t\tbuffer[offset] = this.resolvedProperty[this.propertyIndex];\n\t\t}, function getValue_toArray(buffer, offset) {\n\t\t\tthis.resolvedProperty.toArray(buffer, offset);\n\t\t}],\n\t\tSetterByBindingTypeAndVersioning: [[// Direct\n\t\tfunction setValue_direct(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t}, function setValue_direct_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}, function setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t}], [// EntireArray\n\t\tfunction setValue_array(buffer, offset) {\n\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\tfor (var i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\t\t}, function setValue_array_setNeedsUpdate(buffer, offset) {\n\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\tfor (var i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}, function setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\tfor (var i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t}], [// ArrayElement\n\t\tfunction setValue_arrayElement(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t}, function setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}, function setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t}], [// HasToFromArray\n\t\tfunction setValue_fromArray(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t}, function setValue_fromArray_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}, function setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t}]],\n\t\tgetValue: function getValue_unbound(targetArray, offset) {\n\t\t\tthis.bind();\n\t\t\tthis.getValue(targetArray, offset); // Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\t\t},\n\t\tsetValue: function getValue_unbound(sourceArray, offset) {\n\t\t\tthis.bind();\n\t\t\tthis.setValue(sourceArray, offset);\n\t\t},\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function bind() {\n\t\t\tvar targetObject = this.node;\n\t\t\tvar parsedPath = this.parsedPath;\n\t\t\tvar objectName = parsedPath.objectName;\n\t\t\tvar propertyName = parsedPath.propertyName;\n\t\t\tvar propertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif (!targetObject) {\n\t\t\t\ttargetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n\t\t\t\tthis.node = targetObject;\n\t\t\t} // set fail state so we can just 'return' on error\n\n\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable; // ensure there is a value node\n\n\t\t\tif (!targetObject) {\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (objectName) {\n\t\t\t\tvar objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n\t\t\t\tswitch (objectName) {\n\t\t\t\t\tcase 'materials':\n\t\t\t\t\t\tif (!targetObject.material) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!targetObject.material.materials) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\t\t\t\t\t\tif (!targetObject.skeleton) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} // potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n\t\t\t\t\t\tfor (var i = 0; i < targetObject.length; i++) {\n\t\t\t\t\t\t\tif (targetObject[i].name === objectIndex) {\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (targetObject[objectName] === undefined) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[objectName];\n\t\t\t\t}\n\n\t\t\t\tif (objectIndex !== undefined) {\n\t\t\t\t\tif (targetObject[objectIndex] === undefined) {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[objectIndex];\n\t\t\t\t}\n\t\t\t} // resolve property\n\n\n\t\t\tvar nodeProperty = targetObject[propertyName];\n\n\t\t\tif (nodeProperty === undefined) {\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n\t\t\t\treturn;\n\t\t\t} // determine versioning scheme\n\n\n\t\t\tvar versioning = this.Versioning.None;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t\tif (targetObject.needsUpdate !== undefined) {\n\t\t\t\t// material\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t} else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n\t\t\t\t// node transform\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t} // determine how the property gets bound\n\n\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif (propertyIndex !== undefined) {\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\t\t\t\tif (propertyName === 'morphTargetInfluences') {\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif (!targetObject.geometry) {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (targetObject.geometry.isBufferGeometry) {\n\t\t\t\t\t\tif (!targetObject.geometry.morphAttributes) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (targetObject.morphTargetDictionary[propertyIndex] !== undefined) {\n\t\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[propertyIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\t\t\t} else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t} else if (Array.isArray(nodeProperty)) {\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t} else {\n\t\t\t\tthis.propertyName = propertyName;\n\t\t\t} // select getter / setter\n\n\n\t\t\tthis.getValue = this.GetterByBindingType[bindingType];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n\t\t},\n\t\tunbind: function unbind() {\n\t\t\tthis.node = null; // back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\t\t}\n\t}); // DECLARE ALIAS AFTER assign prototype\n\n\tObject.assign(PropertyBinding.prototype, {\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue\n\t});\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t *\t- Add objects you would otherwise pass as 'root' to the\n\t *\t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t *\t- Instead pass this object as 'root'.\n\t *\n\t *\t- You can also add and remove objects later when the mixer\n\t *\t\tis running.\n\t *\n\t * Note:\n\t *\n\t *\t\tObjects of this class appear as one object to the mixer,\n\t *\t\tso cache control of the individual objects must be done\n\t *\t\ton the group.\n\t *\n\t * Limitation:\n\t *\n\t *\t- The animated properties must be compatible among the\n\t *\t\tall objects in the group.\n\t *\n\t *\t- A single property can either be controlled through a\n\t *\t\ttarget group or directly, but not both.\n\t */\n\n\tfunction AnimationObjectGroup() {\n\t\tthis.uuid = MathUtils.generateUUID(); // cached objects followed by the active ones\n\n\t\tthis._objects = Array.prototype.slice.call(arguments);\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor (var i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\tindices[arguments[i].uuid] = i;\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tvar scope = this;\n\t\tthis.stats = {\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\t\t\t\t\treturn scope._objects.length;\n\t\t\t\t},\n\n\t\t\t\tget inUse() {\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tget bindingsPerObject() {\n\t\t\t\treturn scope._bindings.length;\n\t\t\t}\n\n\t\t};\n\t}\n\n\tObject.assign(AnimationObjectGroup.prototype, {\n\t\tisAnimationObjectGroup: true,\n\t\tadd: function add() {\n\t\t\tvar objects = this._objects,\n\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\tpaths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tnBindings = bindings.length;\n\t\t\tvar knownObject = undefined,\n\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor (var i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tvar object = arguments[i],\n\t\t\t\t\t\tuuid = object.uuid;\n\t\t\t\tvar index = indicesByUUID[uuid];\n\n\t\t\t\tif (index === undefined) {\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\t\t\t\t\tindex = nObjects++;\n\t\t\t\t\tindicesByUUID[uuid] = index;\n\t\t\t\t\tobjects.push(object); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (var j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tbindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n\t\t\t\t\t}\n\t\t\t\t} else if (index < nCachedObjects) {\n\t\t\t\t\tknownObject = objects[index]; // move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = --nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex];\n\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\n\t\t\t\t\tobjects[index] = lastCachedObject;\n\t\t\t\t\tindicesByUUID[uuid] = firstActiveIndex;\n\t\t\t\t\tobjects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (var _j = 0, _m = nBindings; _j !== _m; ++_j) {\n\t\t\t\t\t\tvar bindingsForPath = bindings[_j],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex];\n\t\t\t\t\t\tvar binding = bindingsForPath[index];\n\t\t\t\t\t\tbindingsForPath[index] = lastCached;\n\n\t\t\t\t\t\tif (binding === undefined) {\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\t\t\t\t\t\t\tbinding = new PropertyBinding(object, paths[_j], parsedPaths[_j]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = binding;\n\t\t\t\t\t}\n\t\t\t\t} else if (objects[index] !== knownObject) {\n\t\t\t\t\tconsole.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t},\n\t\tremove: function remove() {\n\t\t\tvar objects = this._objects,\n\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tnBindings = bindings.length;\n\t\t\tvar nCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor (var i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tvar object = arguments[i],\n\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\tindex = indicesByUUID[uuid];\n\n\t\t\t\tif (index !== undefined && index >= nCachedObjects) {\n\t\t\t\t\t// move existing object into the CACHED region\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects++,\n\t\t\t\t\t\t\tfirstActiveObject = objects[lastCachedIndex];\n\t\t\t\t\tindicesByUUID[firstActiveObject.uuid] = index;\n\t\t\t\t\tobjects[index] = firstActiveObject;\n\t\t\t\t\tindicesByUUID[uuid] = lastCachedIndex;\n\t\t\t\t\tobjects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (var j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tvar bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\tfirstActive = bindingsForPath[lastCachedIndex],\n\t\t\t\t\t\t\t\tbinding = bindingsForPath[index];\n\t\t\t\t\t\tbindingsForPath[index] = firstActive;\n\t\t\t\t\t\tbindingsForPath[lastCachedIndex] = binding;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t},\n\t\t// remove & forget\n\t\tuncache: function uncache() {\n\t\t\tvar objects = this._objects,\n\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tnBindings = bindings.length;\n\t\t\tvar nCachedObjects = this.nCachedObjects_,\n\t\t\t\t\tnObjects = objects.length;\n\n\t\t\tfor (var i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tvar object = arguments[i],\n\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\tindex = indicesByUUID[uuid];\n\n\t\t\t\tif (index !== undefined) {\n\t\t\t\t\tdelete indicesByUUID[uuid];\n\n\t\t\t\t\tif (index < nCachedObjects) {\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\t\t\t\t\t\tvar firstActiveIndex = --nCachedObjects,\n\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex],\n\t\t\t\t\t\t\t\tlastIndex = --nObjects,\n\t\t\t\t\t\t\t\tlastObject = objects[lastIndex]; // last cached object takes this object's place\n\n\t\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\n\t\t\t\t\t\tobjects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = firstActiveIndex;\n\t\t\t\t\t\tobjects[firstActiveIndex] = lastObject;\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor (var j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex],\n\t\t\t\t\t\t\t\t\tlast = bindingsForPath[lastIndex];\n\t\t\t\t\t\t\tbindingsForPath[index] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\t\t\t\t\t\tvar _lastIndex = --nObjects,\n\t\t\t\t\t\t\t\t_lastObject = objects[_lastIndex];\n\n\t\t\t\t\t\tif (_lastIndex > 0) {\n\t\t\t\t\t\t\tindicesByUUID[_lastObject.uuid] = index;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobjects[index] = _lastObject;\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor (var _j2 = 0, _m2 = nBindings; _j2 !== _m2; ++_j2) {\n\t\t\t\t\t\t\tvar _bindingsForPath = bindings[_j2];\n\t\t\t\t\t\t\t_bindingsForPath[index] = _bindingsForPath[_lastIndex];\n\n\t\t\t\t\t\t\t_bindingsForPath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t},\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\t\tsubscribe_: function subscribe_(path, parsedPath) {\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath;\n\t\t\tvar index = indicesByPath[path];\n\t\t\tvar bindings = this._bindings;\n\t\t\tif (index !== undefined) return bindings[index];\n\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tobjects = this._objects,\n\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\t\tbindingsForPath = new Array(nObjects);\n\t\t\tindex = bindings.length;\n\t\t\tindicesByPath[path] = index;\n\t\t\tpaths.push(path);\n\t\t\tparsedPaths.push(parsedPath);\n\t\t\tbindings.push(bindingsForPath);\n\n\t\t\tfor (var i = nCachedObjects, n = objects.length; i !== n; ++i) {\n\t\t\t\tvar object = objects[i];\n\t\t\t\tbindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\t\t},\n\t\tunsubscribe_: function unsubscribe_(path) {\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\t\tindex = indicesByPath[path];\n\n\t\t\tif (index !== undefined) {\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\t\tlastBindings = bindings[lastBindingsIndex],\n\t\t\t\t\t\tlastBindingsPath = path[lastBindingsIndex];\n\t\t\t\tindicesByPath[lastBindingsPath] = index;\n\t\t\t\tbindings[index] = lastBindings;\n\t\t\t\tbindings.pop();\n\t\t\t\tparsedPaths[index] = parsedPaths[lastBindingsIndex];\n\t\t\t\tparsedPaths.pop();\n\t\t\t\tpaths[index] = paths[lastBindingsIndex];\n\t\t\t\tpaths.pop();\n\t\t\t}\n\t\t}\n\t});\n\n\tvar AnimationAction = /*#__PURE__*/function () {\n\t\tfunction AnimationAction(mixer, clip, localRoot, blendMode) {\n\t\t\tif (localRoot === void 0) {\n\t\t\t\tlocalRoot = null;\n\t\t\t}\n\n\t\t\tif (blendMode === void 0) {\n\t\t\t\tblendMode = clip.blendMode;\n\t\t\t}\n\n\t\t\tthis._mixer = mixer;\n\t\t\tthis._clip = clip;\n\t\t\tthis._localRoot = localRoot;\n\t\t\tthis.blendMode = blendMode;\n\t\t\tvar tracks = clip.tracks,\n\t\t\t\t\tnTracks = tracks.length,\n\t\t\t\t\tinterpolants = new Array(nTracks);\n\t\t\tvar interpolantSettings = {\n\t\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t\t};\n\n\t\t\tfor (var i = 0; i !== nTracks; ++i) {\n\t\t\t\tvar interpolant = tracks[i].createInterpolant(null);\n\t\t\t\tinterpolants[i] = interpolant;\n\t\t\t\tinterpolant.settings = interpolantSettings;\n\t\t\t}\n\n\t\t\tthis._interpolantSettings = interpolantSettings;\n\t\t\tthis._interpolants = interpolants; // bound by the mixer\n\t\t\t// inside: PropertyMixer (managed by the mixer)\n\n\t\t\tthis._propertyBindings = new Array(nTracks);\n\t\t\tthis._cacheIndex = null; // for the memory manager\n\n\t\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis.loop = LoopRepeat;\n\t\t\tthis._loopCount = -1; // global mixer time when the action is to be started\n\t\t\t// it's set back to 'null' upon start of the action\n\n\t\t\tthis._startTime = null; // scaled local time of the action\n\t\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\n\t\t\tthis.time = 0;\n\t\t\tthis.timeScale = 1;\n\t\t\tthis._effectiveTimeScale = 1;\n\t\t\tthis.weight = 1;\n\t\t\tthis._effectiveWeight = 1;\n\t\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\t\tthis.paused = false; // true -> zero effective time scale\n\n\t\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\t\tthis.clampWhenFinished = false; // keep feeding the last frame?\n\n\t\t\tthis.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n\t\t\tthis.zeroSlopeAtEnd = true; // clips for start, loop and end\n\t\t} // State & Scheduling\n\n\n\t\tvar _proto = AnimationAction.prototype;\n\n\t\t_proto.play = function play() {\n\t\t\tthis._mixer._activateAction(this);\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.stop = function stop() {\n\t\t\tthis._mixer._deactivateAction(this);\n\n\t\t\treturn this.reset();\n\t\t};\n\n\t\t_proto.reset = function reset() {\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\t\t\tthis.time = 0; // restart clip\n\n\t\t\tthis._loopCount = -1; // forget previous loops\n\n\t\t\tthis._startTime = null; // forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\t\t};\n\n\t\t_proto.isRunning = function isRunning() {\n\t\t\treturn this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n\t\t} // return true when play has been called\n\t\t;\n\n\t\t_proto.isScheduled = function isScheduled() {\n\t\t\treturn this._mixer._isActiveAction(this);\n\t\t};\n\n\t\t_proto.startAt = function startAt(time) {\n\t\t\tthis._startTime = time;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setLoop = function setLoop(mode, repetitions) {\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\t\t\treturn this;\n\t\t} // Weight\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\t;\n\n\t\t_proto.setEffectiveWeight = function setEffectiveWeight(weight) {\n\t\t\tthis.weight = weight; // note: same logic as when updated at runtime\n\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\t\t\treturn this.stopFading();\n\t\t} // return the weight considering fading and .enabled\n\t\t;\n\n\t\t_proto.getEffectiveWeight = function getEffectiveWeight() {\n\t\t\treturn this._effectiveWeight;\n\t\t};\n\n\t\t_proto.fadeIn = function fadeIn(duration) {\n\t\t\treturn this._scheduleFading(duration, 0, 1);\n\t\t};\n\n\t\t_proto.fadeOut = function fadeOut(duration) {\n\t\t\treturn this._scheduleFading(duration, 1, 0);\n\t\t};\n\n\t\t_proto.crossFadeFrom = function crossFadeFrom(fadeOutAction, duration, warp) {\n\t\t\tfadeOutAction.fadeOut(duration);\n\t\t\tthis.fadeIn(duration);\n\n\t\t\tif (warp) {\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\t\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\t\t\t\tfadeOutAction.warp(1.0, startEndRatio, duration);\n\t\t\t\tthis.warp(endStartRatio, 1.0, duration);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.crossFadeTo = function crossFadeTo(fadeInAction, duration, warp) {\n\t\t\treturn fadeInAction.crossFadeFrom(this, duration, warp);\n\t\t};\n\n\t\t_proto.stopFading = function stopFading() {\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif (weightInterpolant !== null) {\n\t\t\t\tthis._weightInterpolant = null;\n\n\t\t\t\tthis._mixer._takeBackControlInterpolant(weightInterpolant);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Time Scale Control\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\t;\n\n\t\t_proto.setEffectiveTimeScale = function setEffectiveTimeScale(timeScale) {\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\t\t\treturn this.stopWarping();\n\t\t} // return the time scale considering warping and .paused\n\t\t;\n\n\t\t_proto.getEffectiveTimeScale = function getEffectiveTimeScale() {\n\t\t\treturn this._effectiveTimeScale;\n\t\t};\n\n\t\t_proto.setDuration = function setDuration(duration) {\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\t\t\treturn this.stopWarping();\n\t\t};\n\n\t\t_proto.syncWith = function syncWith(action) {\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\t\t\treturn this.stopWarping();\n\t\t};\n\n\t\t_proto.halt = function halt(duration) {\n\t\t\treturn this.warp(this._effectiveTimeScale, 0, duration);\n\t\t};\n\n\t\t_proto.warp = function warp(startTimeScale, endTimeScale, duration) {\n\t\t\tvar mixer = this._mixer,\n\t\t\t\t\tnow = mixer.time,\n\t\t\t\t\ttimeScale = this.timeScale;\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif (interpolant === null) {\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\t\ttimes[0] = now;\n\t\t\ttimes[1] = now + duration;\n\t\t\tvalues[0] = startTimeScale / timeScale;\n\t\t\tvalues[1] = endTimeScale / timeScale;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.stopWarping = function stopWarping() {\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif (timeScaleInterpolant !== null) {\n\t\t\t\tthis._timeScaleInterpolant = null;\n\n\t\t\t\tthis._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Object Accessors\n\t\t;\n\n\t\t_proto.getMixer = function getMixer() {\n\t\t\treturn this._mixer;\n\t\t};\n\n\t\t_proto.getClip = function getClip() {\n\t\t\treturn this._clip;\n\t\t};\n\n\t\t_proto.getRoot = function getRoot() {\n\t\t\treturn this._localRoot || this._mixer._root;\n\t\t} // Interna\n\t\t;\n\n\t\t_proto._update = function _update(time, deltaTime, timeDirection, accuIndex) {\n\t\t\t// called by the mixer\n\t\t\tif (!this.enabled) {\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\t\t\t\tthis._updateWeight(time);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif (startTime !== null) {\n\t\t\t\t// check for scheduled start of action\n\t\t\t\tvar timeRunning = (time - startTime) * timeDirection;\n\n\t\t\t\tif (timeRunning < 0 || timeDirection === 0) {\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\t\t\t\t} // start\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\t\t\t} // apply time scale and advance time\n\n\n\t\t\tdeltaTime *= this._updateTimeScale(time);\n\n\t\t\tvar clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\n\t\t\tvar weight = this._updateWeight(time);\n\n\t\t\tif (weight > 0) {\n\t\t\t\tvar _interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tswitch (this.blendMode) {\n\t\t\t\t\tcase AdditiveAnimationBlendMode:\n\t\t\t\t\t\tfor (var j = 0, m = _interpolants.length; j !== m; ++j) {\n\t\t\t\t\t\t\t_interpolants[j].evaluate(clipTime);\n\n\t\t\t\t\t\t\tpropertyMixers[j].accumulateAdditive(weight);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tfor (var _j = 0, _m = _interpolants.length; _j !== _m; ++_j) {\n\t\t\t\t\t\t\t_interpolants[_j].evaluate(clipTime);\n\n\t\t\t\t\t\t\tpropertyMixers[_j].accumulate(accuIndex, weight);\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._updateWeight = function _updateWeight(time) {\n\t\t\tvar weight = 0;\n\n\t\t\tif (this.enabled) {\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif (interpolant !== null) {\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate(time)[0];\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif (interpolantValue === 0) {\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\t\t};\n\n\t\t_proto._updateTimeScale = function _updateTimeScale(time) {\n\t\t\tvar timeScale = 0;\n\n\t\t\tif (!this.paused) {\n\t\t\t\ttimeScale = this.timeScale;\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif (interpolant !== null) {\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate(time)[0];\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif (timeScale === 0) {\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\t\t};\n\n\t\t_proto._updateTime = function _updateTime(deltaTime) {\n\t\t\tvar duration = this._clip.duration;\n\t\t\tvar loop = this.loop;\n\t\t\tvar time = this.time + deltaTime;\n\t\t\tvar loopCount = this._loopCount;\n\t\t\tvar pingPong = loop === LoopPingPong;\n\n\t\t\tif (deltaTime === 0) {\n\t\t\t\tif (loopCount === -1) return time;\n\t\t\t\treturn pingPong && (loopCount & 1) === 1 ? duration - time : time;\n\t\t\t}\n\n\t\t\tif (loop === LoopOnce) {\n\t\t\t\tif (loopCount === -1) {\n\t\t\t\t\t// just started\n\t\t\t\t\tthis._loopCount = 0;\n\n\t\t\t\t\tthis._setEndings(true, true, false);\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\t\t\t\t\tif (time >= duration) {\n\t\t\t\t\t\ttime = duration;\n\t\t\t\t\t} else if (time < 0) {\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.time = time;\n\t\t\t\t\t\tbreak handle_stop;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\ttype: 'finished',\n\t\t\t\t\t\taction: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// repetitive Repeat or PingPong\n\t\t\t\tif (loopCount === -1) {\n\t\t\t\t\t// just started\n\t\t\t\t\tif (deltaTime >= 0) {\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(true, this.repetitions === 0, pingPong);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\t\t\t\t\t\tthis._setEndings(this.repetitions === 0, true, pingPong);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (time >= duration || time < 0) {\n\t\t\t\t\t// wrap around\n\t\t\t\t\tvar loopDelta = Math.floor(time / duration); // signed\n\n\t\t\t\t\ttime -= duration * loopDelta;\n\t\t\t\t\tloopCount += Math.abs(loopDelta);\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif (pending <= 0) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\t\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'finished',\n\t\t\t\t\t\t\taction: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\t\t\t\t\t\tif (pending === 1) {\n\t\t\t\t\t\t\t// entering the last round\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\n\t\t\t\t\t\t\tthis._setEndings(atStart, !atStart, pingPong);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._setEndings(false, false, pingPong);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'loop',\n\t\t\t\t\t\t\taction: this,\n\t\t\t\t\t\t\tloopDelta: loopDelta\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.time = time;\n\t\t\t\t}\n\n\t\t\t\tif (pingPong && (loopCount & 1) === 1) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\t\t\t\t\treturn duration - time;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn time;\n\t\t};\n\n\t\t_proto._setEndings = function _setEndings(atStart, atEnd, pingPong) {\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif (pingPong) {\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\t\t\t} else {\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\t\t\t\tif (atStart) {\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\t\t\t\t} else {\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\t\t\t\t}\n\n\t\t\t\tif (atEnd) {\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\t\t\t\t} else {\n\t\t\t\t\tsettings.endingEnd = WrapAroundEnding;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_proto._scheduleFading = function _scheduleFading(duration, weightNow, weightThen) {\n\t\t\tvar mixer = this._mixer,\n\t\t\t\t\tnow = mixer.time;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif (interpolant === null) {\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\t\ttimes[0] = now;\n\t\t\tvalues[0] = weightNow;\n\t\t\ttimes[1] = now + duration;\n\t\t\tvalues[1] = weightThen;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn AnimationAction;\n\t}();\n\n\tfunction AnimationMixer(root) {\n\t\tthis._root = root;\n\n\t\tthis._initMemoryManager();\n\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\t}\n\n\tAnimationMixer.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n\t\tconstructor: AnimationMixer,\n\t\t_bindAction: function _bindAction(action, prototypeAction) {\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\t\tnTracks = tracks.length,\n\t\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\t\trootUuid = root.uuid,\n\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\t\t\tvar bindingsByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingsByName === undefined) {\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[rootUuid] = bindingsByName;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i !== nTracks; ++i) {\n\t\t\t\tvar track = tracks[i],\n\t\t\t\t\t\ttrackName = track.name;\n\t\t\t\tvar binding = bindingsByName[trackName];\n\n\t\t\t\tif (binding !== undefined) {\n\t\t\t\t\tbindings[i] = binding;\n\t\t\t\t} else {\n\t\t\t\t\tbinding = bindings[i];\n\n\t\t\t\t\tif (binding !== undefined) {\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\t\t\t\t\t\tif (binding._cacheIndex === null) {\n\t\t\t\t\t\t\t++binding.referenceCount;\n\n\t\t\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n\t\t\t\t\tbinding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n\t\t\t\t\t++binding.referenceCount;\n\n\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\n\n\t\t\t\t\tbindings[i] = binding;\n\t\t\t\t}\n\n\t\t\t\tinterpolants[i].resultBuffer = binding.buffer;\n\t\t\t}\n\t\t},\n\t\t_activateAction: function _activateAction(action) {\n\t\t\tif (!this._isActiveAction(action)) {\n\t\t\t\tif (action._cacheIndex === null) {\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\t\t\t\t\tvar rootUuid = (action._localRoot || this._root).uuid,\n\t\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\n\n\t\t\t\t\tthis._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n\t\t\t\t\tthis._addInactiveAction(action, clipUuid, rootUuid);\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings; // increment reference counts / sort out state\n\n\t\t\t\tfor (var i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\t\tvar binding = bindings[i];\n\n\t\t\t\t\tif (binding.useCount++ === 0) {\n\t\t\t\t\t\tthis._lendBinding(binding);\n\n\t\t\t\t\t\tbinding.saveOriginalState();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction(action);\n\t\t\t}\n\t\t},\n\t\t_deactivateAction: function _deactivateAction(action) {\n\t\t\tif (this._isActiveAction(action)) {\n\t\t\t\tvar bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n\t\t\t\tfor (var i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\t\tvar binding = bindings[i];\n\n\t\t\t\t\tif (--binding.useCount === 0) {\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\n\t\t\t\t\t\tthis._takeBackBinding(binding);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction(action);\n\t\t\t}\n\t\t},\n\t\t// Memory manager\n\t\t_initMemoryManager: function _initMemoryManager() {\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._actionsByClip = {}; // inside:\n\t\t\t// {\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t\t// }\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n\t\t\tthis._nActiveBindings = 0;\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\n\t\t\tthis._nActiveControlInterpolants = 0;\n\t\t\tvar scope = this;\n\t\t\tthis.stats = {\n\t\t\t\tactions: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._actions.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveActions;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._bindings.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveBindings;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\t// Memory management for AnimationAction objects\n\t\t_isActiveAction: function _isActiveAction(action) {\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\t\t},\n\t\t_addInactiveAction: function _addInactiveAction(action, clipUuid, rootUuid) {\n\t\t\tvar actions = this._actions,\n\t\t\t\t\tactionsByClip = this._actionsByClip;\n\t\t\tvar actionsForClip = actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip === undefined) {\n\t\t\t\tactionsForClip = {\n\t\t\t\t\tknownActions: [action],\n\t\t\t\t\tactionByRoot: {}\n\t\t\t\t};\n\t\t\t\taction._byClipCacheIndex = 0;\n\t\t\t\tactionsByClip[clipUuid] = actionsForClip;\n\t\t\t} else {\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push(action);\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push(action);\n\t\t\tactionsForClip.actionByRoot[rootUuid] = action;\n\t\t},\n\t\t_removeInactiveAction: function _removeInactiveAction(action) {\n\t\t\tvar actions = this._actions,\n\t\t\t\t\tlastInactiveAction = actions[actions.length - 1],\n\t\t\t\t\tcacheIndex = action._cacheIndex;\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[cacheIndex] = lastInactiveAction;\n\t\t\tactions.pop();\n\t\t\taction._cacheIndex = null;\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\tactionsForClip = actionsByClip[clipUuid],\n\t\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\t\t\t\t\tlastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n\t\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[byClipCacheIndex] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\t\t\taction._byClipCacheIndex = null;\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\t\trootUuid = (action._localRoot || this._root).uuid;\n\t\t\tdelete actionByRoot[rootUuid];\n\n\t\t\tif (knownActionsForClip.length === 0) {\n\t\t\t\tdelete actionsByClip[clipUuid];\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction(action);\n\t\t},\n\t\t_removeInactiveBindingsForAction: function _removeInactiveBindingsForAction(action) {\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\tfor (var i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\tvar binding = bindings[i];\n\n\t\t\t\tif (--binding.referenceCount === 0) {\n\t\t\t\t\tthis._removeInactiveBinding(binding);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_lendAction: function _lendAction(action) {\n\t\t\t// [ active actions |\tinactive actions\t]\n\t\t\t// [\tactive actions >| inactive actions ]\n\t\t\t//\t\t\t\t\t\t\t\t s\t\t\t\ta\n\t\t\t//\t\t\t\t\t\t\t\t\t<-swap->\n\t\t\t//\t\t\t\t\t\t\t\t a\t\t\t\ts\n\t\t\tvar actions = this._actions,\n\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\t\t\t\tlastActiveIndex = this._nActiveActions++,\n\t\t\t\t\tfirstInactiveAction = actions[lastActiveIndex];\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[lastActiveIndex] = action;\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[prevIndex] = firstInactiveAction;\n\t\t},\n\t\t_takeBackAction: function _takeBackAction(action) {\n\t\t\t// [\tactive actions\t| inactive actions ]\n\t\t\t// [ active actions |< inactive actions\t]\n\t\t\t//\t\t\t\ta\t\t\t\ts\n\t\t\t//\t\t\t\t <-swap->\n\t\t\t//\t\t\t\ts\t\t\t\ta\n\t\t\tvar actions = this._actions,\n\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\t\t\t\tfirstInactiveIndex = --this._nActiveActions,\n\t\t\t\t\tlastActiveAction = actions[firstInactiveIndex];\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[firstInactiveIndex] = action;\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[prevIndex] = lastActiveAction;\n\t\t},\n\t\t// Memory management for PropertyMixer objects\n\t\t_addInactiveBinding: function _addInactiveBinding(binding, rootUuid, trackName) {\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\tbindings = this._bindings;\n\t\t\tvar bindingByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingByName === undefined) {\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[rootUuid] = bindingByName;\n\t\t\t}\n\n\t\t\tbindingByName[trackName] = binding;\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push(binding);\n\t\t},\n\t\t_removeInactiveBinding: function _removeInactiveBinding(binding) {\n\t\t\tvar bindings = this._bindings,\n\t\t\t\t\tpropBinding = binding.binding,\n\t\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\t\ttrackName = propBinding.path,\n\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid],\n\t\t\t\t\tlastInactiveBinding = bindings[bindings.length - 1],\n\t\t\t\t\tcacheIndex = binding._cacheIndex;\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[cacheIndex] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\t\t\tdelete bindingByName[trackName];\n\n\t\t\tif (Object.keys(bindingByName).length === 0) {\n\t\t\t\tdelete bindingsByRoot[rootUuid];\n\t\t\t}\n\t\t},\n\t\t_lendBinding: function _lendBinding(binding) {\n\t\t\tvar bindings = this._bindings,\n\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\t\t\t\tlastActiveIndex = this._nActiveBindings++,\n\t\t\t\t\tfirstInactiveBinding = bindings[lastActiveIndex];\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[lastActiveIndex] = binding;\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[prevIndex] = firstInactiveBinding;\n\t\t},\n\t\t_takeBackBinding: function _takeBackBinding(binding) {\n\t\t\tvar bindings = this._bindings,\n\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\t\t\t\tfirstInactiveIndex = --this._nActiveBindings,\n\t\t\t\t\tlastActiveBinding = bindings[firstInactiveIndex];\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[firstInactiveIndex] = binding;\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[prevIndex] = lastActiveBinding;\n\t\t},\n\t\t// Memory management of Interpolants for weight and time scale\n\t\t_lendControlInterpolant: function _lendControlInterpolant() {\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants++;\n\t\t\tvar interpolant = interpolants[lastActiveIndex];\n\n\t\t\tif (interpolant === undefined) {\n\t\t\t\tinterpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[lastActiveIndex] = interpolant;\n\t\t\t}\n\n\t\t\treturn interpolant;\n\t\t},\n\t\t_takeBackControlInterpolant: function _takeBackControlInterpolant(interpolant) {\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\t\t\t\t\tfirstInactiveIndex = --this._nActiveControlInterpolants,\n\t\t\t\t\tlastActiveInterpolant = interpolants[firstInactiveIndex];\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[firstInactiveIndex] = interpolant;\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[prevIndex] = lastActiveInterpolant;\n\t\t},\n\t\t_controlInterpolantsResultBuffer: new Float32Array(1),\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function clipAction(clip, optionalRoot, blendMode) {\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\t\trootUuid = root.uuid;\n\t\t\tvar clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip;\n\t\t\tvar clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\t\t\tvar actionsForClip = this._actionsByClip[clipUuid];\n\t\t\tvar prototypeAction = null;\n\n\t\t\tif (blendMode === undefined) {\n\t\t\t\tif (clipObject !== null) {\n\t\t\t\t\tblendMode = clipObject.blendMode;\n\t\t\t\t} else {\n\t\t\t\t\tblendMode = NormalAnimationBlendMode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\tvar existingAction = actionsForClip.actionByRoot[rootUuid];\n\n\t\t\t\tif (existingAction !== undefined && existingAction.blendMode === blendMode) {\n\t\t\t\t\treturn existingAction;\n\t\t\t\t} // we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\n\n\t\t\t\tprototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n\t\t\t\tif (clipObject === null) clipObject = prototypeAction._clip;\n\t\t\t} // clip must be known when specified via string\n\n\n\t\t\tif (clipObject === null) return null; // allocate all resources required to run it\n\n\t\t\tvar newAction = new AnimationAction(this, clipObject, optionalRoot, blendMode);\n\n\t\t\tthis._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n\t\t\tthis._addInactiveAction(newAction, clipUuid, rootUuid);\n\n\t\t\treturn newAction;\n\t\t},\n\t\t// get an existing action\n\t\texistingAction: function existingAction(clip, optionalRoot) {\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\t\trootUuid = root.uuid,\n\t\t\t\t\tclipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n\t\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\treturn actionsForClip.actionByRoot[rootUuid] || null;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function stopAllAction() {\n\t\t\tvar actions = this._actions,\n\t\t\t\t\tnActions = this._nActiveActions;\n\n\t\t\tfor (var i = nActions - 1; i >= 0; --i) {\n\t\t\t\tactions[i].stop();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\t// advance the time and update apply the animation\n\t\tupdate: function update(deltaTime) {\n\t\t\tdeltaTime *= this.timeScale;\n\t\t\tvar actions = this._actions,\n\t\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\t\ttimeDirection = Math.sign(deltaTime),\n\t\t\t\t\taccuIndex = this._accuIndex ^= 1; // run active actions\n\n\t\t\tfor (var i = 0; i !== nActions; ++i) {\n\t\t\t\tvar action = actions[i];\n\n\t\t\t\taction._update(time, deltaTime, timeDirection, accuIndex);\n\t\t\t} // update scene graph\n\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor (var _i = 0; _i !== nBindings; ++_i) {\n\t\t\t\tbindings[_i].apply(accuIndex);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\t// Allows you to seek to a specific time in an animation.\n\t\tsetTime: function setTime(timeInSeconds) {\n\t\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\n\t\t\tfor (var i = 0; i < this._actions.length; i++) {\n\t\t\t\tthis._actions[i].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\t\t\t}\n\n\t\t\treturn this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\t\t},\n\t\t// return this mixer's root target object\n\t\tgetRoot: function getRoot() {\n\t\t\treturn this._root;\n\t\t},\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function uncacheClip(clip) {\n\t\t\tvar actions = this._actions,\n\t\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\tactionsForClip = actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor (var i = 0, n = actionsToRemove.length; i !== n; ++i) {\n\t\t\t\t\tvar action = actionsToRemove[i];\n\n\t\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1];\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[cacheIndex] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction(action);\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[clipUuid];\n\t\t\t}\n\t\t},\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function uncacheRoot(root) {\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor (var clipUuid in actionsByClip) {\n\t\t\t\tvar actionByRoot = actionsByClip[clipUuid].actionByRoot,\n\t\t\t\t\t\taction = actionByRoot[rootUuid];\n\n\t\t\t\tif (action !== undefined) {\n\t\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\t\tthis._removeInactiveAction(action);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingByName !== undefined) {\n\t\t\t\tfor (var trackName in bindingByName) {\n\t\t\t\t\tvar binding = bindingByName[trackName];\n\t\t\t\t\tbinding.restoreOriginalState();\n\n\t\t\t\t\tthis._removeInactiveBinding(binding);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function uncacheAction(clip, optionalRoot) {\n\t\t\tvar action = this.existingAction(clip, optionalRoot);\n\n\t\t\tif (action !== null) {\n\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\tthis._removeInactiveAction(action);\n\t\t\t}\n\t\t}\n\t});\n\n\tvar Uniform = /*#__PURE__*/function () {\n\t\tfunction Uniform(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tconsole.warn('THREE.Uniform: Type parameter is no longer needed.');\n\t\t\t\tvalue = arguments[1];\n\t\t\t}\n\n\t\t\tthis.value = value;\n\t\t}\n\n\t\tvar _proto = Uniform.prototype;\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n\t\t};\n\n\t\treturn Uniform;\n\t}();\n\n\tfunction InstancedInterleavedBuffer(array, stride, meshPerAttribute) {\n\t\tInterleavedBuffer.call(this, array, stride);\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\t}\n\n\tInstancedInterleavedBuffer.prototype = Object.assign(Object.create(InterleavedBuffer.prototype), {\n\t\tconstructor: InstancedInterleavedBuffer,\n\t\tisInstancedInterleavedBuffer: true,\n\t\tcopy: function copy(source) {\n\t\t\tInterleavedBuffer.prototype.copy.call(this, source);\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\t\treturn this;\n\t\t},\n\t\tclone: function clone(data) {\n\t\t\tvar ib = InterleavedBuffer.prototype.clone.call(this, data);\n\t\t\tib.meshPerAttribute = this.meshPerAttribute;\n\t\t\treturn ib;\n\t\t},\n\t\ttoJSON: function toJSON(data) {\n\t\t\tvar json = InterleavedBuffer.prototype.toJSON.call(this, data);\n\t\t\tjson.isInstancedInterleavedBuffer = true;\n\t\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\t\t\treturn json;\n\t\t}\n\t});\n\n\tfunction GLBufferAttribute(buffer, type, itemSize, elementSize, count) {\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\t\tthis.version = 0;\n\t}\n\n\tObject.defineProperty(GLBufferAttribute.prototype, 'needsUpdate', {\n\t\tset: function set(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\t});\n\tObject.assign(GLBufferAttribute.prototype, {\n\t\tisGLBufferAttribute: true,\n\t\tsetBuffer: function setBuffer(buffer) {\n\t\t\tthis.buffer = buffer;\n\t\t\treturn this;\n\t\t},\n\t\tsetType: function setType(type, elementSize) {\n\t\t\tthis.type = type;\n\t\t\tthis.elementSize = elementSize;\n\t\t\treturn this;\n\t\t},\n\t\tsetItemSize: function setItemSize(itemSize) {\n\t\t\tthis.itemSize = itemSize;\n\t\t\treturn this;\n\t\t},\n\t\tsetCount: function setCount(count) {\n\t\t\tthis.count = count;\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tfunction Raycaster(origin, direction, near, far) {\n\t\tthis.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: {\n\t\t\t\tthreshold: 1\n\t\t\t},\n\t\t\tLOD: {},\n\t\t\tPoints: {\n\t\t\t\tthreshold: 1\n\t\t\t},\n\t\t\tSprite: {}\n\t\t};\n\t\tObject.defineProperties(this.params, {\n\t\t\tPointCloud: {\n\t\t\t\tget: function get() {\n\t\t\t\t\tconsole.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');\n\t\t\t\t\treturn this.Points;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction ascSort(a, b) {\n\t\treturn a.distance - b.distance;\n\t}\n\n\tfunction _intersectObject(object, raycaster, intersects, recursive) {\n\t\tif (object.layers.test(raycaster.layers)) {\n\t\t\tobject.raycast(raycaster, intersects);\n\t\t}\n\n\t\tif (recursive === true) {\n\t\t\tvar children = object.children;\n\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\t_intersectObject(children[i], raycaster, intersects, true);\n\t\t\t}\n\t\t}\n\t}\n\n\tObject.assign(Raycaster.prototype, {\n\t\tset: function set(origin, direction) {\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\t\t\tthis.ray.set(origin, direction);\n\t\t},\n\t\tsetFromCamera: function setFromCamera(coords, camera) {\n\t\t\tif (camera && camera.isPerspectiveCamera) {\n\t\t\t\tthis.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n\t\t\t\tthis.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n\t\t\t\tthis.camera = camera;\n\t\t\t} else if (camera && camera.isOrthographicCamera) {\n\t\t\t\tthis.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n\t\t\t\tthis.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n\t\t\t\tthis.camera = camera;\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Raycaster: Unsupported camera type: ' + camera.type);\n\t\t\t}\n\t\t},\n\t\tintersectObject: function intersectObject(object, recursive, optionalTarget) {\n\t\t\tvar intersects = optionalTarget || [];\n\n\t\t\t_intersectObject(object, this, intersects, recursive);\n\n\t\t\tintersects.sort(ascSort);\n\t\t\treturn intersects;\n\t\t},\n\t\tintersectObjects: function intersectObjects(objects, recursive, optionalTarget) {\n\t\t\tvar intersects = optionalTarget || [];\n\n\t\t\tif (Array.isArray(objects) === false) {\n\t\t\t\tconsole.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');\n\t\t\t\treturn intersects;\n\t\t\t}\n\n\t\t\tfor (var i = 0, l = objects.length; i < l; i++) {\n\t\t\t\t_intersectObject(objects[i], this, intersects, recursive);\n\t\t\t}\n\n\t\t\tintersects.sort(ascSort);\n\t\t\treturn intersects;\n\t\t}\n\t});\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n\t * The azimuthal angle (theta) is measured from the positive z-axis.\n\t */\n\n\tvar Spherical = /*#__PURE__*/function () {\n\t\tfunction Spherical(radius, phi, theta) {\n\t\t\tif (radius === void 0) {\n\t\t\t\tradius = 1;\n\t\t\t}\n\n\t\t\tif (phi === void 0) {\n\t\t\t\tphi = 0;\n\t\t\t}\n\n\t\t\tif (theta === void 0) {\n\t\t\t\ttheta = 0;\n\t\t\t}\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi; // polar angle\n\n\t\t\tthis.theta = theta; // azimuthal angle\n\n\t\t\treturn this;\n\t\t}\n\n\t\tvar _proto = Spherical.prototype;\n\n\t\t_proto.set = function set(radius, phi, theta) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t};\n\n\t\t_proto.copy = function copy(other) {\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\t\t\treturn this;\n\t\t} // restrict phi to be betwee EPS and PI-EPS\n\t\t;\n\n\t\t_proto.makeSafe = function makeSafe() {\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromVector3 = function setFromVector3(v) {\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\n\t\t};\n\n\t\t_proto.setFromCartesianCoords = function setFromCartesianCoords(x, y, z) {\n\t\t\tthis.radius = Math.sqrt(x * x + y * y + z * z);\n\n\t\t\tif (this.radius === 0) {\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\t\t\t} else {\n\t\t\t\tthis.theta = Math.atan2(x, z);\n\t\t\t\tthis.phi = Math.acos(MathUtils.clamp(y / this.radius, -1, 1));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Spherical;\n\t}();\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t */\n\tvar Cylindrical = /*#__PURE__*/function () {\n\t\tfunction Cylindrical(radius, theta, y) {\n\t\t\tthis.radius = radius !== undefined ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\n\t\t\tthis.theta = theta !== undefined ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n\t\t\tthis.y = y !== undefined ? y : 0; // height above the x-z plane\n\n\t\t\treturn this;\n\t\t}\n\n\t\tvar _proto = Cylindrical.prototype;\n\n\t\t_proto.set = function set(radius, theta, y) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t};\n\n\t\t_proto.copy = function copy(other) {\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromVector3 = function setFromVector3(v) {\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\n\t\t};\n\n\t\t_proto.setFromCartesianCoords = function setFromCartesianCoords(x, y, z) {\n\t\t\tthis.radius = Math.sqrt(x * x + z * z);\n\t\t\tthis.theta = Math.atan2(x, z);\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Cylindrical;\n\t}();\n\n\tvar _vector$8 = /*@__PURE__*/new Vector2();\n\n\tvar Box2 = /*#__PURE__*/function () {\n\t\tfunction Box2(min, max) {\n\t\t\tObject.defineProperty(this, 'isBox2', {\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t\tthis.min = min !== undefined ? min : new Vector2(+Infinity, +Infinity);\n\t\t\tthis.max = max !== undefined ? max : new Vector2(-Infinity, -Infinity);\n\t\t}\n\n\t\tvar _proto = Box2.prototype;\n\n\t\t_proto.set = function set(min, max) {\n\t\t\tthis.min.copy(min);\n\t\t\tthis.max.copy(max);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromPoints = function setFromPoints(points) {\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor (var i = 0, il = points.length; i < il; i++) {\n\t\t\t\tthis.expandByPoint(points[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.setFromCenterAndSize = function setFromCenterAndSize(center, size) {\n\t\t\tvar halfSize = _vector$8.copy(size).multiplyScalar(0.5);\n\n\t\t\tthis.min.copy(center).sub(halfSize);\n\t\t\tthis.max.copy(center).add(halfSize);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t};\n\n\t\t_proto.copy = function copy(box) {\n\t\t\tthis.min.copy(box.min);\n\t\t\tthis.max.copy(box.max);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.makeEmpty = function makeEmpty() {\n\t\t\tthis.min.x = this.min.y = +Infinity;\n\t\t\tthis.max.x = this.max.y = -Infinity;\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.isEmpty = function isEmpty() {\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y;\n\t\t};\n\n\t\t_proto.getCenter = function getCenter(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box2: .getCenter() target is now required');\n\t\t\t\ttarget = new Vector2();\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n\t\t};\n\n\t\t_proto.getSize = function getSize(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box2: .getSize() target is now required');\n\t\t\t\ttarget = new Vector2();\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n\t\t};\n\n\t\t_proto.expandByPoint = function expandByPoint(point) {\n\t\t\tthis.min.min(point);\n\t\t\tthis.max.max(point);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.expandByVector = function expandByVector(vector) {\n\t\t\tthis.min.sub(vector);\n\t\t\tthis.max.add(vector);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.expandByScalar = function expandByScalar(scalar) {\n\t\t\tthis.min.addScalar(-scalar);\n\t\t\tthis.max.addScalar(scalar);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.containsPoint = function containsPoint(point) {\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n\t\t};\n\n\t\t_proto.containsBox = function containsBox(box) {\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n\t\t};\n\n\t\t_proto.getParameter = function getParameter(point, target) {\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box2: .getParameter() target is now required');\n\t\t\t\ttarget = new Vector2();\n\t\t\t}\n\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n\t\t};\n\n\t\t_proto.intersectsBox = function intersectsBox(box) {\n\t\t\t// using 4 splitting planes to rule out intersections\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\t\t};\n\n\t\t_proto.clampPoint = function clampPoint(point, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box2: .clampPoint() target is now required');\n\t\t\t\ttarget = new Vector2();\n\t\t\t}\n\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\n\t\t};\n\n\t\t_proto.distanceToPoint = function distanceToPoint(point) {\n\t\t\tvar clampedPoint = _vector$8.copy(point).clamp(this.min, this.max);\n\n\t\t\treturn clampedPoint.sub(point).length();\n\t\t};\n\n\t\t_proto.intersect = function intersect(box) {\n\t\t\tthis.min.max(box.min);\n\t\t\tthis.max.min(box.max);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.union = function union(box) {\n\t\t\tthis.min.min(box.min);\n\t\t\tthis.max.max(box.max);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.translate = function translate(offset) {\n\t\t\tthis.min.add(offset);\n\t\t\tthis.max.add(offset);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(box) {\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\n\t\t};\n\n\t\treturn Box2;\n\t}();\n\n\tvar _startP = /*@__PURE__*/new Vector3();\n\n\tvar _startEnd = /*@__PURE__*/new Vector3();\n\n\tvar Line3 = /*#__PURE__*/function () {\n\t\tfunction Line3(start, end) {\n\t\t\tthis.start = start !== undefined ? start : new Vector3();\n\t\t\tthis.end = end !== undefined ? end : new Vector3();\n\t\t}\n\n\t\tvar _proto = Line3.prototype;\n\n\t\t_proto.set = function set(start, end) {\n\t\t\tthis.start.copy(start);\n\t\t\tthis.end.copy(end);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.clone = function clone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t};\n\n\t\t_proto.copy = function copy(line) {\n\t\t\tthis.start.copy(line.start);\n\t\t\tthis.end.copy(line.end);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.getCenter = function getCenter(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Line3: .getCenter() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.addVectors(this.start, this.end).multiplyScalar(0.5);\n\t\t};\n\n\t\t_proto.delta = function delta(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Line3: .delta() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.subVectors(this.end, this.start);\n\t\t};\n\n\t\t_proto.distanceSq = function distanceSq() {\n\t\t\treturn this.start.distanceToSquared(this.end);\n\t\t};\n\n\t\t_proto.distance = function distance() {\n\t\t\treturn this.start.distanceTo(this.end);\n\t\t};\n\n\t\t_proto.at = function at(t, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Line3: .at() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\n\t\t};\n\n\t\t_proto.closestPointToPointParameter = function closestPointToPointParameter(point, clampToLine) {\n\t\t\t_startP.subVectors(point, this.start);\n\n\t\t\t_startEnd.subVectors(this.end, this.start);\n\n\t\t\tvar startEnd2 = _startEnd.dot(_startEnd);\n\n\t\t\tvar startEnd_startP = _startEnd.dot(_startP);\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif (clampToLine) {\n\t\t\t\tt = MathUtils.clamp(t, 0, 1);\n\t\t\t}\n\n\t\t\treturn t;\n\t\t};\n\n\t\t_proto.closestPointToPoint = function closestPointToPoint(point, clampToLine, target) {\n\t\t\tvar t = this.closestPointToPointParameter(point, clampToLine);\n\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Line3: .closestPointToPoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\n\t\t};\n\n\t\t_proto.applyMatrix4 = function applyMatrix4(matrix) {\n\t\t\tthis.start.applyMatrix4(matrix);\n\t\t\tthis.end.applyMatrix4(matrix);\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.equals = function equals(line) {\n\t\t\treturn line.start.equals(this.start) && line.end.equals(this.end);\n\t\t};\n\n\t\treturn Line3;\n\t}();\n\n\tfunction ImmediateRenderObject(material) {\n\t\tObject3D.call(this);\n\t\tthis.material = material;\n\n\t\tthis.render = function ()\n\t\t/* renderCallback */\n\t\t{};\n\n\t\tthis.hasPositions = false;\n\t\tthis.hasNormals = false;\n\t\tthis.hasColors = false;\n\t\tthis.hasUvs = false;\n\t\tthis.positionArray = null;\n\t\tthis.normalArray = null;\n\t\tthis.colorArray = null;\n\t\tthis.uvArray = null;\n\t\tthis.count = 0;\n\t}\n\n\tImmediateRenderObject.prototype = Object.create(Object3D.prototype);\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\tvar _vector$9 = /*@__PURE__*/new Vector3();\n\n\tvar SpotLightHelper = /*#__PURE__*/function (_Object3D) {\n\t\t_inheritsLoose(SpotLightHelper, _Object3D);\n\n\t\tfunction SpotLightHelper(light, color) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Object3D.call(this) || this;\n\t\t\t_this.light = light;\n\n\t\t\t_this.light.updateMatrixWorld();\n\n\t\t\t_this.matrix = light.matrixWorld;\n\t\t\t_this.matrixAutoUpdate = false;\n\t\t\t_this.color = color;\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tvar positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n\t\t\tfor (var i = 0, j = 1, l = 32; i < l; i++, j++) {\n\t\t\t\tvar p1 = i / l * Math.PI * 2;\n\t\t\t\tvar p2 = j / l * Math.PI * 2;\n\t\t\t\tpositions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tvar material = new LineBasicMaterial({\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\t_this.cone = new LineSegments(geometry, material);\n\n\t\t\t_this.add(_this.cone);\n\n\t\t\t_this.update();\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = SpotLightHelper.prototype;\n\n\t\t_proto.dispose = function dispose() {\n\t\t\tthis.cone.geometry.dispose();\n\t\t\tthis.cone.material.dispose();\n\t\t};\n\n\t\t_proto.update = function update() {\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tvar coneWidth = coneLength * Math.tan(this.light.angle);\n\t\t\tthis.cone.scale.set(coneWidth, coneWidth, coneLength);\n\n\t\t\t_vector$9.setFromMatrixPosition(this.light.target.matrixWorld);\n\n\t\t\tthis.cone.lookAt(_vector$9);\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.cone.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.cone.material.color.copy(this.light.color);\n\t\t\t}\n\t\t};\n\n\t\treturn SpotLightHelper;\n\t}(Object3D);\n\n\tvar _vector$a = /*@__PURE__*/new Vector3();\n\n\tvar _boneMatrix = /*@__PURE__*/new Matrix4();\n\n\tvar _matrixWorldInv = /*@__PURE__*/new Matrix4();\n\n\tvar SkeletonHelper = /*#__PURE__*/function (_LineSegments) {\n\t\t_inheritsLoose(SkeletonHelper, _LineSegments);\n\n\t\tfunction SkeletonHelper(object) {\n\t\t\tvar _this;\n\n\t\t\tvar bones = getBoneList(object);\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tvar vertices = [];\n\t\t\tvar colors = [];\n\t\t\tvar color1 = new Color(0, 0, 1);\n\t\t\tvar color2 = new Color(0, 1, 0);\n\n\t\t\tfor (var i = 0; i < bones.length; i++) {\n\t\t\t\tvar bone = bones[i];\n\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\t\tcolors.push(color1.r, color1.g, color1.b);\n\t\t\t\t\tcolors.push(color2.r, color2.g, color2.b);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tvar material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\tdepthTest: false,\n\t\t\t\tdepthWrite: false,\n\t\t\t\ttoneMapped: false,\n\t\t\t\ttransparent: true\n\t\t\t});\n\t\t\t_this = _LineSegments.call(this, geometry, material) || this;\n\t\t\t_this.type = 'SkeletonHelper';\n\t\t\t_this.isSkeletonHelper = true;\n\t\t\t_this.root = object;\n\t\t\t_this.bones = bones;\n\t\t\t_this.matrix = object.matrixWorld;\n\t\t\t_this.matrixAutoUpdate = false;\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = SkeletonHelper.prototype;\n\n\t\t_proto.updateMatrixWorld = function updateMatrixWorld(force) {\n\t\t\tvar bones = this.bones;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar position = geometry.getAttribute('position');\n\n\t\t\t_matrixWorldInv.copy(this.root.matrixWorld).invert();\n\n\t\t\tfor (var i = 0, j = 0; i < bones.length; i++) {\n\t\t\t\tvar bone = bones[i];\n\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n\n\t\t\t\t\t_vector$a.setFromMatrixPosition(_boneMatrix);\n\n\t\t\t\t\tposition.setXYZ(j, _vector$a.x, _vector$a.y, _vector$a.z);\n\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n\n\t\t\t\t\t_vector$a.setFromMatrixPosition(_boneMatrix);\n\n\t\t\t\t\tposition.setXYZ(j + 1, _vector$a.x, _vector$a.y, _vector$a.z);\n\t\t\t\t\tj += 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\n\n\t\t\t_LineSegments.prototype.updateMatrixWorld.call(this, force);\n\t\t};\n\n\t\treturn SkeletonHelper;\n\t}(LineSegments);\n\n\tfunction getBoneList(object) {\n\t\tvar boneList = [];\n\n\t\tif (object && object.isBone) {\n\t\t\tboneList.push(object);\n\t\t}\n\n\t\tfor (var i = 0; i < object.children.length; i++) {\n\t\t\tboneList.push.apply(boneList, getBoneList(object.children[i]));\n\t\t}\n\n\t\treturn boneList;\n\t}\n\n\tvar PointLightHelper = /*#__PURE__*/function (_Mesh) {\n\t\t_inheritsLoose(PointLightHelper, _Mesh);\n\n\t\tfunction PointLightHelper(light, sphereSize, color) {\n\t\t\tvar _this;\n\n\t\t\tvar geometry = new SphereGeometry(sphereSize, 4, 2);\n\t\t\tvar material = new MeshBasicMaterial({\n\t\t\t\twireframe: true,\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\t_this = _Mesh.call(this, geometry, material) || this;\n\t\t\t_this.light = light;\n\n\t\t\t_this.light.updateMatrixWorld();\n\n\t\t\t_this.color = color;\n\t\t\t_this.type = 'PointLightHelper';\n\t\t\t_this.matrix = _this.light.matrixWorld;\n\t\t\t_this.matrixAutoUpdate = false;\n\n\t\t\t_this.update();\n\t\t\t/*\n\t\t\t// TODO: delete this comment?\n\t\t\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\t\t\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\t\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\t\t\tconst d = light.distance;\n\t\t\tif ( d === 0.0 ) {\n\t\t\t\tthis.lightDistance.visible = false;\n\t\t\t} else {\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\t\t}\n\t\t\tthis.add( this.lightDistance );\n\t\t\t*/\n\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = PointLightHelper.prototype;\n\n\t\t_proto.dispose = function dispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t};\n\n\t\t_proto.update = function update() {\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.material.color.copy(this.light.color);\n\t\t\t}\n\t\t\t/*\n\t\t\tconst d = this.light.distance;\n\t\t\t\tif ( d === 0.0 ) {\n\t\t\t\t\tthis.lightDistance.visible = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.lightDistance.visible = true;\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\t\t\t}\n\t\t\t*/\n\n\t\t};\n\n\t\treturn PointLightHelper;\n\t}(Mesh);\n\n\tvar _vector$b = /*@__PURE__*/new Vector3();\n\n\tvar _color1 = /*@__PURE__*/new Color();\n\n\tvar _color2 = /*@__PURE__*/new Color();\n\n\tvar HemisphereLightHelper = /*#__PURE__*/function (_Object3D) {\n\t\t_inheritsLoose(HemisphereLightHelper, _Object3D);\n\n\t\tfunction HemisphereLightHelper(light, size, color) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Object3D.call(this) || this;\n\t\t\t_this.light = light;\n\n\t\t\t_this.light.updateMatrixWorld();\n\n\t\t\t_this.matrix = light.matrixWorld;\n\t\t\t_this.matrixAutoUpdate = false;\n\t\t\t_this.color = color;\n\t\t\tvar geometry = new OctahedronGeometry(size);\n\t\t\tgeometry.rotateY(Math.PI * 0.5);\n\t\t\t_this.material = new MeshBasicMaterial({\n\t\t\t\twireframe: true,\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tif (_this.color === undefined) _this.material.vertexColors = true;\n\t\t\tvar position = geometry.getAttribute('position');\n\t\t\tvar colors = new Float32Array(position.count * 3);\n\t\t\tgeometry.setAttribute('color', new BufferAttribute(colors, 3));\n\n\t\t\t_this.add(new Mesh(geometry, _this.material));\n\n\t\t\t_this.update();\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = HemisphereLightHelper.prototype;\n\n\t\t_proto.dispose = function dispose() {\n\t\t\tthis.children[0].geometry.dispose();\n\t\t\tthis.children[0].material.dispose();\n\t\t};\n\n\t\t_proto.update = function update() {\n\t\t\tvar mesh = this.children[0];\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tvar colors = mesh.geometry.getAttribute('color');\n\n\t\t\t\t_color1.copy(this.light.color);\n\n\t\t\t\t_color2.copy(this.light.groundColor);\n\n\t\t\t\tfor (var i = 0, l = colors.count; i < l; i++) {\n\t\t\t\t\tvar color = i < l / 2 ? _color1 : _color2;\n\t\t\t\t\tcolors.setXYZ(i, color.r, color.g, color.b);\n\t\t\t\t}\n\n\t\t\t\tcolors.needsUpdate = true;\n\t\t\t}\n\n\t\t\tmesh.lookAt(_vector$b.setFromMatrixPosition(this.light.matrixWorld).negate());\n\t\t};\n\n\t\treturn HemisphereLightHelper;\n\t}(Object3D);\n\n\tvar GridHelper = /*#__PURE__*/function (_LineSegments) {\n\t\t_inheritsLoose(GridHelper, _LineSegments);\n\n\t\tfunction GridHelper(size, divisions, color1, color2) {\n\t\t\tvar _this;\n\n\t\t\tif (size === void 0) {\n\t\t\t\tsize = 10;\n\t\t\t}\n\n\t\t\tif (divisions === void 0) {\n\t\t\t\tdivisions = 10;\n\t\t\t}\n\n\t\t\tif (color1 === void 0) {\n\t\t\t\tcolor1 = 0x444444;\n\t\t\t}\n\n\t\t\tif (color2 === void 0) {\n\t\t\t\tcolor2 = 0x888888;\n\t\t\t}\n\n\t\t\tcolor1 = new Color(color1);\n\t\t\tcolor2 = new Color(color2);\n\t\t\tvar center = divisions / 2;\n\t\t\tvar step = size / divisions;\n\t\t\tvar halfSize = size / 2;\n\t\t\tvar vertices = [],\n\t\t\t\t\tcolors = [];\n\n\t\t\tfor (var i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n\t\t\t\tvertices.push(-halfSize, 0, k, halfSize, 0, k);\n\t\t\t\tvertices.push(k, 0, -halfSize, k, 0, halfSize);\n\t\t\t\tvar color = i === center ? color1 : color2;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t}\n\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tvar material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\t_this = _LineSegments.call(this, geometry, material) || this;\n\t\t\t_this.type = 'GridHelper';\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn GridHelper;\n\t}(LineSegments);\n\n\tvar PolarGridHelper = /*#__PURE__*/function (_LineSegments) {\n\t\t_inheritsLoose(PolarGridHelper, _LineSegments);\n\n\t\tfunction PolarGridHelper(radius, radials, circles, divisions, color1, color2) {\n\t\t\tvar _this;\n\n\t\t\tif (radius === void 0) {\n\t\t\t\tradius = 10;\n\t\t\t}\n\n\t\t\tif (radials === void 0) {\n\t\t\t\tradials = 16;\n\t\t\t}\n\n\t\t\tif (circles === void 0) {\n\t\t\t\tcircles = 8;\n\t\t\t}\n\n\t\t\tif (divisions === void 0) {\n\t\t\t\tdivisions = 64;\n\t\t\t}\n\n\t\t\tif (color1 === void 0) {\n\t\t\t\tcolor1 = 0x444444;\n\t\t\t}\n\n\t\t\tif (color2 === void 0) {\n\t\t\t\tcolor2 = 0x888888;\n\t\t\t}\n\n\t\t\tcolor1 = new Color(color1);\n\t\t\tcolor2 = new Color(color2);\n\t\t\tvar vertices = [];\n\t\t\tvar colors = []; // create the radials\n\n\t\t\tfor (var i = 0; i <= radials; i++) {\n\t\t\t\tvar v = i / radials * (Math.PI * 2);\n\t\t\t\tvar x = Math.sin(v) * radius;\n\t\t\t\tvar z = Math.cos(v) * radius;\n\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\tvar color = i & 1 ? color1 : color2;\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t} // create the circles\n\n\n\t\t\tfor (var _i = 0; _i <= circles; _i++) {\n\t\t\t\tvar _color = _i & 1 ? color1 : color2;\n\n\t\t\t\tvar r = radius - radius / circles * _i;\n\n\t\t\t\tfor (var j = 0; j < divisions; j++) {\n\t\t\t\t\t// first vertex\n\t\t\t\t\tvar _v = j / divisions * (Math.PI * 2);\n\n\t\t\t\t\tvar _x = Math.sin(_v) * r;\n\n\t\t\t\t\tvar _z = Math.cos(_v) * r;\n\n\t\t\t\t\tvertices.push(_x, 0, _z);\n\t\t\t\t\tcolors.push(_color.r, _color.g, _color.b); // second vertex\n\n\t\t\t\t\t_v = (j + 1) / divisions * (Math.PI * 2);\n\t\t\t\t\t_x = Math.sin(_v) * r;\n\t\t\t\t\t_z = Math.cos(_v) * r;\n\t\t\t\t\tvertices.push(_x, 0, _z);\n\t\t\t\t\tcolors.push(_color.r, _color.g, _color.b);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tvar material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\t_this = _LineSegments.call(this, geometry, material) || this;\n\t\t\t_this.type = 'PolarGridHelper';\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn PolarGridHelper;\n\t}(LineSegments);\n\n\tvar _v1$6 = /*@__PURE__*/new Vector3();\n\n\tvar _v2$3 = /*@__PURE__*/new Vector3();\n\n\tvar _v3$1 = /*@__PURE__*/new Vector3();\n\n\tvar DirectionalLightHelper = /*#__PURE__*/function (_Object3D) {\n\t\t_inheritsLoose(DirectionalLightHelper, _Object3D);\n\n\t\tfunction DirectionalLightHelper(light, size, color) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Object3D.call(this) || this;\n\t\t\t_this.light = light;\n\n\t\t\t_this.light.updateMatrixWorld();\n\n\t\t\t_this.matrix = light.matrixWorld;\n\t\t\t_this.matrixAutoUpdate = false;\n\t\t\t_this.color = color;\n\t\t\tif (size === undefined) size = 1;\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n\t\t\tvar material = new LineBasicMaterial({\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\t_this.lightPlane = new Line(geometry, material);\n\n\t\t\t_this.add(_this.lightPlane);\n\n\t\t\tgeometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n\t\t\t_this.targetLine = new Line(geometry, material);\n\n\t\t\t_this.add(_this.targetLine);\n\n\t\t\t_this.update();\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = DirectionalLightHelper.prototype;\n\n\t\t_proto.dispose = function dispose() {\n\t\t\tthis.lightPlane.geometry.dispose();\n\t\t\tthis.lightPlane.material.dispose();\n\t\t\tthis.targetLine.geometry.dispose();\n\t\t\tthis.targetLine.material.dispose();\n\t\t};\n\n\t\t_proto.update = function update() {\n\t\t\t_v1$6.setFromMatrixPosition(this.light.matrixWorld);\n\n\t\t\t_v2$3.setFromMatrixPosition(this.light.target.matrixWorld);\n\n\t\t\t_v3$1.subVectors(_v2$3, _v1$6);\n\n\t\t\tthis.lightPlane.lookAt(_v2$3);\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.lightPlane.material.color.set(this.color);\n\t\t\t\tthis.targetLine.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.lightPlane.material.color.copy(this.light.color);\n\t\t\t\tthis.targetLine.material.color.copy(this.light.color);\n\t\t\t}\n\n\t\t\tthis.targetLine.lookAt(_v2$3);\n\t\t\tthis.targetLine.scale.z = _v3$1.length();\n\t\t};\n\n\t\treturn DirectionalLightHelper;\n\t}(Object3D);\n\n\tvar _vector$c = /*@__PURE__*/new Vector3();\n\n\tvar _camera = /*@__PURE__*/new Camera();\n\t/**\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\n\tvar CameraHelper = /*#__PURE__*/function (_LineSegments) {\n\t\t_inheritsLoose(CameraHelper, _LineSegments);\n\n\t\tfunction CameraHelper(camera) {\n\t\t\tvar _this;\n\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tvar material = new LineBasicMaterial({\n\t\t\t\tcolor: 0xffffff,\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tvar vertices = [];\n\t\t\tvar colors = [];\n\t\t\tvar pointMap = {}; // colors\n\n\t\t\tvar colorFrustum = new Color(0xffaa00);\n\t\t\tvar colorCone = new Color(0xff0000);\n\t\t\tvar colorUp = new Color(0x00aaff);\n\t\t\tvar colorTarget = new Color(0xffffff);\n\t\t\tvar colorCross = new Color(0x333333); // near\n\n\t\t\taddLine('n1', 'n2', colorFrustum);\n\t\t\taddLine('n2', 'n4', colorFrustum);\n\t\t\taddLine('n4', 'n3', colorFrustum);\n\t\t\taddLine('n3', 'n1', colorFrustum); // far\n\n\t\t\taddLine('f1', 'f2', colorFrustum);\n\t\t\taddLine('f2', 'f4', colorFrustum);\n\t\t\taddLine('f4', 'f3', colorFrustum);\n\t\t\taddLine('f3', 'f1', colorFrustum); // sides\n\n\t\t\taddLine('n1', 'f1', colorFrustum);\n\t\t\taddLine('n2', 'f2', colorFrustum);\n\t\t\taddLine('n3', 'f3', colorFrustum);\n\t\t\taddLine('n4', 'f4', colorFrustum); // cone\n\n\t\t\taddLine('p', 'n1', colorCone);\n\t\t\taddLine('p', 'n2', colorCone);\n\t\t\taddLine('p', 'n3', colorCone);\n\t\t\taddLine('p', 'n4', colorCone); // up\n\n\t\t\taddLine('u1', 'u2', colorUp);\n\t\t\taddLine('u2', 'u3', colorUp);\n\t\t\taddLine('u3', 'u1', colorUp); // target\n\n\t\t\taddLine('c', 't', colorTarget);\n\t\t\taddLine('p', 'c', colorCross); // cross\n\n\t\t\taddLine('cn1', 'cn2', colorCross);\n\t\t\taddLine('cn3', 'cn4', colorCross);\n\t\t\taddLine('cf1', 'cf2', colorCross);\n\t\t\taddLine('cf3', 'cf4', colorCross);\n\n\t\t\tfunction addLine(a, b, color) {\n\t\t\t\taddPoint(a, color);\n\t\t\t\taddPoint(b, color);\n\t\t\t}\n\n\t\t\tfunction addPoint(id, color) {\n\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\n\t\t\t\tif (pointMap[id] === undefined) {\n\t\t\t\t\tpointMap[id] = [];\n\t\t\t\t}\n\n\t\t\t\tpointMap[id].push(vertices.length / 3 - 1);\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\t_this = _LineSegments.call(this, geometry, material) || this;\n\t\t\t_this.type = 'CameraHelper';\n\t\t\t_this.camera = camera;\n\t\t\tif (_this.camera.updateProjectionMatrix) _this.camera.updateProjectionMatrix();\n\t\t\t_this.matrix = camera.matrixWorld;\n\t\t\t_this.matrixAutoUpdate = false;\n\t\t\t_this.pointMap = pointMap;\n\n\t\t\t_this.update();\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = CameraHelper.prototype;\n\n\t\t_proto.update = function update() {\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar pointMap = this.pointMap;\n\t\t\tvar w = 1,\n\t\t\t\t\th = 1; // we need just camera projection matrix inverse\n\t\t\t// world matrix must be identity\n\n\t\t\t_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\n\n\n\t\t\tsetPoint('c', pointMap, geometry, _camera, 0, 0, -1);\n\t\t\tsetPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\n\n\t\t\tsetPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\n\t\t\tsetPoint('n2', pointMap, geometry, _camera, w, -h, -1);\n\t\t\tsetPoint('n3', pointMap, geometry, _camera, -w, h, -1);\n\t\t\tsetPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\n\n\t\t\tsetPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\n\t\t\tsetPoint('f2', pointMap, geometry, _camera, w, -h, 1);\n\t\t\tsetPoint('f3', pointMap, geometry, _camera, -w, h, 1);\n\t\t\tsetPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\n\n\t\t\tsetPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n\t\t\tsetPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n\t\t\tsetPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\n\n\t\t\tsetPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\n\t\t\tsetPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\n\t\t\tsetPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\n\t\t\tsetPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\n\t\t\tsetPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\n\t\t\tsetPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\n\t\t\tsetPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\n\t\t\tsetPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\n\t\t};\n\n\t\treturn CameraHelper;\n\t}(LineSegments);\n\n\tfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\n\t\t_vector$c.set(x, y, z).unproject(camera);\n\n\t\tvar points = pointMap[point];\n\n\t\tif (points !== undefined) {\n\t\t\tvar position = geometry.getAttribute('position');\n\n\t\t\tfor (var i = 0, l = points.length; i < l; i++) {\n\t\t\t\tposition.setXYZ(points[i], _vector$c.x, _vector$c.y, _vector$c.z);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar _box$3 = /*@__PURE__*/new Box3();\n\n\tvar BoxHelper = /*#__PURE__*/function (_LineSegments) {\n\t\t_inheritsLoose(BoxHelper, _LineSegments);\n\n\t\tfunction BoxHelper(object, color) {\n\t\t\tvar _this;\n\n\t\t\tif (color === void 0) {\n\t\t\t\tcolor = 0xffff00;\n\t\t\t}\n\n\t\t\tvar indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n\t\t\tvar positions = new Float32Array(8 * 3);\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\n\t\t\tgeometry.setAttribute('position', new BufferAttribute(positions, 3));\n\t\t\t_this = _LineSegments.call(this, geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t})) || this;\n\t\t\t_this.object = object;\n\t\t\t_this.type = 'BoxHelper';\n\t\t\t_this.matrixAutoUpdate = false;\n\n\t\t\t_this.update();\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = BoxHelper.prototype;\n\n\t\t_proto.update = function update(object) {\n\t\t\tif (object !== undefined) {\n\t\t\t\tconsole.warn('THREE.BoxHelper: .update() has no longer arguments.');\n\t\t\t}\n\n\t\t\tif (this.object !== undefined) {\n\t\t\t\t_box$3.setFromObject(this.object);\n\t\t\t}\n\n\t\t\tif (_box$3.isEmpty()) return;\n\t\t\tvar min = _box$3.min;\n\t\t\tvar max = _box$3.max;\n\t\t\t/*\n\t\t\t\t5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\t\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tvar position = this.geometry.attributes.position;\n\t\t\tvar array = position.array;\n\t\t\tarray[0] = max.x;\n\t\t\tarray[1] = max.y;\n\t\t\tarray[2] = max.z;\n\t\t\tarray[3] = min.x;\n\t\t\tarray[4] = max.y;\n\t\t\tarray[5] = max.z;\n\t\t\tarray[6] = min.x;\n\t\t\tarray[7] = min.y;\n\t\t\tarray[8] = max.z;\n\t\t\tarray[9] = max.x;\n\t\t\tarray[10] = min.y;\n\t\t\tarray[11] = max.z;\n\t\t\tarray[12] = max.x;\n\t\t\tarray[13] = max.y;\n\t\t\tarray[14] = min.z;\n\t\t\tarray[15] = min.x;\n\t\t\tarray[16] = max.y;\n\t\t\tarray[17] = min.z;\n\t\t\tarray[18] = min.x;\n\t\t\tarray[19] = min.y;\n\t\t\tarray[20] = min.z;\n\t\t\tarray[21] = max.x;\n\t\t\tarray[22] = min.y;\n\t\t\tarray[23] = min.z;\n\t\t\tposition.needsUpdate = true;\n\t\t\tthis.geometry.computeBoundingSphere();\n\t\t};\n\n\t\t_proto.setFromObject = function setFromObject(object) {\n\t\t\tthis.object = object;\n\t\t\tthis.update();\n\t\t\treturn this;\n\t\t};\n\n\t\t_proto.copy = function copy(source) {\n\t\t\tLineSegments.prototype.copy.call(this, source);\n\t\t\tthis.object = source.object;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn BoxHelper;\n\t}(LineSegments);\n\n\tvar Box3Helper = /*#__PURE__*/function (_LineSegments) {\n\t\t_inheritsLoose(Box3Helper, _LineSegments);\n\n\t\tfunction Box3Helper(box, color) {\n\t\t\tvar _this;\n\n\t\t\tif (color === void 0) {\n\t\t\t\tcolor = 0xffff00;\n\t\t\t}\n\n\t\t\tvar indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n\t\t\tvar positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\t_this = _LineSegments.call(this, geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t})) || this;\n\t\t\t_this.box = box;\n\t\t\t_this.type = 'Box3Helper';\n\n\t\t\t_this.geometry.computeBoundingSphere();\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = Box3Helper.prototype;\n\n\t\t_proto.updateMatrixWorld = function updateMatrixWorld(force) {\n\t\t\tvar box = this.box;\n\t\t\tif (box.isEmpty()) return;\n\t\t\tbox.getCenter(this.position);\n\t\t\tbox.getSize(this.scale);\n\t\t\tthis.scale.multiplyScalar(0.5);\n\n\t\t\t_LineSegments.prototype.updateMatrixWorld.call(this, force);\n\t\t};\n\n\t\treturn Box3Helper;\n\t}(LineSegments);\n\n\tvar PlaneHelper = /*#__PURE__*/function (_Line) {\n\t\t_inheritsLoose(PlaneHelper, _Line);\n\n\t\tfunction PlaneHelper(plane, size, hex) {\n\t\t\tvar _this;\n\n\t\t\tif (size === void 0) {\n\t\t\t\tsize = 1;\n\t\t\t}\n\n\t\t\tif (hex === void 0) {\n\t\t\t\thex = 0xffff00;\n\t\t\t}\n\n\t\t\tvar color = hex;\n\t\t\tvar positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tgeometry.computeBoundingSphere();\n\t\t\t_this = _Line.call(this, geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t})) || this;\n\t\t\t_this.type = 'PlaneHelper';\n\t\t\t_this.plane = plane;\n\t\t\t_this.size = size;\n\t\t\tvar positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n\t\t\tvar geometry2 = new BufferGeometry();\n\t\t\tgeometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n\t\t\tgeometry2.computeBoundingSphere();\n\n\t\t\t_this.add(new Mesh(geometry2, new MeshBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\topacity: 0.2,\n\t\t\t\ttransparent: true,\n\t\t\t\tdepthWrite: false,\n\t\t\t\ttoneMapped: false\n\t\t\t})));\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = PlaneHelper.prototype;\n\n\t\t_proto.updateMatrixWorld = function updateMatrixWorld(force) {\n\t\t\tvar scale = -this.plane.constant;\n\t\t\tif (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n\t\t\tthis.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n\t\t\tthis.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\t\tthis.lookAt(this.plane.normal);\n\n\t\t\t_Line.prototype.updateMatrixWorld.call(this, force);\n\t\t};\n\n\t\treturn PlaneHelper;\n\t}(Line);\n\n\tvar _axis = /*@__PURE__*/new Vector3();\n\n\tvar _lineGeometry, _coneGeometry;\n\n\tvar ArrowHelper = /*#__PURE__*/function (_Object3D) {\n\t\t_inheritsLoose(ArrowHelper, _Object3D);\n\n\t\tfunction ArrowHelper(dir, origin, length, color, headLength, headWidth) {\n\t\t\tvar _this;\n\n\t\t\t_this = _Object3D.call(this) || this; // dir is assumed to be normalized\n\n\t\t\t_this.type = 'ArrowHelper';\n\t\t\tif (dir === undefined) dir = new Vector3(0, 0, 1);\n\t\t\tif (origin === undefined) origin = new Vector3(0, 0, 0);\n\t\t\tif (length === undefined) length = 1;\n\t\t\tif (color === undefined) color = 0xffff00;\n\t\t\tif (headLength === undefined) headLength = 0.2 * length;\n\t\t\tif (headWidth === undefined) headWidth = 0.2 * headLength;\n\n\t\t\tif (_lineGeometry === undefined) {\n\t\t\t\t_lineGeometry = new BufferGeometry();\n\n\t\t\t\t_lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n\t\t\t\t_coneGeometry = new CylinderGeometry(0, 0.5, 1, 5, 1);\n\n\t\t\t\t_coneGeometry.translate(0, -0.5, 0);\n\t\t\t}\n\n\t\t\t_this.position.copy(origin);\n\n\t\t\t_this.line = new Line(_lineGeometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\t_this.line.matrixAutoUpdate = false;\n\n\t\t\t_this.add(_this.line);\n\n\t\t\t_this.cone = new Mesh(_coneGeometry, new MeshBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\t_this.cone.matrixAutoUpdate = false;\n\n\t\t\t_this.add(_this.cone);\n\n\t\t\t_this.setDirection(dir);\n\n\t\t\t_this.setLength(length, headLength, headWidth);\n\n\t\t\treturn _this;\n\t\t}\n\n\t\tvar _proto = ArrowHelper.prototype;\n\n\t\t_proto.setDirection = function setDirection(dir) {\n\t\t\t// dir is assumed to be normalized\n\t\t\tif (dir.y > 0.99999) {\n\t\t\t\tthis.quaternion.set(0, 0, 0, 1);\n\t\t\t} else if (dir.y < -0.99999) {\n\t\t\t\tthis.quaternion.set(1, 0, 0, 0);\n\t\t\t} else {\n\t\t\t\t_axis.set(dir.z, 0, -dir.x).normalize();\n\n\t\t\t\tvar radians = Math.acos(dir.y);\n\t\t\t\tthis.quaternion.setFromAxisAngle(_axis, radians);\n\t\t\t}\n\t\t};\n\n\t\t_proto.setLength = function setLength(length, headLength, headWidth) {\n\t\t\tif (headLength === undefined) headLength = 0.2 * length;\n\t\t\tif (headWidth === undefined) headWidth = 0.2 * headLength;\n\t\t\tthis.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\n\n\t\t\tthis.line.updateMatrix();\n\t\t\tthis.cone.scale.set(headWidth, headLength, headWidth);\n\t\t\tthis.cone.position.y = length;\n\t\t\tthis.cone.updateMatrix();\n\t\t};\n\n\t\t_proto.setColor = function setColor(color) {\n\t\t\tthis.line.material.color.set(color);\n\t\t\tthis.cone.material.color.set(color);\n\t\t};\n\n\t\t_proto.copy = function copy(source) {\n\t\t\t_Object3D.prototype.copy.call(this, source, false);\n\n\t\t\tthis.line.copy(source.line);\n\t\t\tthis.cone.copy(source.cone);\n\t\t\treturn this;\n\t\t};\n\n\t\treturn ArrowHelper;\n\t}(Object3D);\n\n\tvar AxesHelper = /*#__PURE__*/function (_LineSegments) {\n\t\t_inheritsLoose(AxesHelper, _LineSegments);\n\n\t\tfunction AxesHelper(size) {\n\t\t\tvar _this;\n\n\t\t\tif (size === void 0) {\n\t\t\t\tsize = 1;\n\t\t\t}\n\n\t\t\tvar vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n\t\t\tvar colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tvar material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\t_this = _LineSegments.call(this, geometry, material) || this;\n\t\t\t_this.type = 'AxesHelper';\n\t\t\treturn _this;\n\t\t}\n\n\t\treturn AxesHelper;\n\t}(LineSegments);\n\n\tvar _floatView = new Float32Array(1);\n\n\tvar _int32View = new Int32Array(_floatView.buffer);\n\n\tvar DataUtils = {\n\t\t// Converts float32 to float16 (stored as uint16 value).\n\t\ttoHalfFloat: function toHalfFloat(val) {\n\t\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t\t* by James Tursa?s half-precision code. */\n\t\t\t_floatView[0] = val;\n\t\t\tvar x = _int32View[0];\n\t\t\tvar bits = x >> 16 & 0x8000;\n\t\t\t/* Get the sign */\n\n\t\t\tvar m = x >> 12 & 0x07ff;\n\t\t\t/* Keep one extra bit for rounding */\n\n\t\t\tvar e = x >> 23 & 0xff;\n\t\t\t/* Using int is faster here */\n\n\t\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t\t* half, return signed zero. */\n\n\t\t\tif (e < 103) return bits;\n\t\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\n\t\t\tif (e > 142) {\n\t\t\t\tbits |= 0x7c00;\n\t\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */\n\n\t\t\t\tbits |= (e == 255 ? 0 : 1) && x & 0x007fffff;\n\t\t\t\treturn bits;\n\t\t\t}\n\t\t\t/* If exponent underflows but not too much, return a denormal */\n\n\n\t\t\tif (e < 113) {\n\t\t\t\tm |= 0x0800;\n\t\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t\t* to 1, which is OK. */\n\n\t\t\t\tbits |= (m >> 114 - e) + (m >> 113 - e & 1);\n\t\t\t\treturn bits;\n\t\t\t}\n\n\t\t\tbits |= e - 112 << 10 | m >> 1;\n\t\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t\t* the exponent, which is OK. */\n\n\t\t\tbits += m & 1;\n\t\t\treturn bits;\n\t\t}\n\t};\n\n\tvar _ENCODINGS;\n\tvar LOD_MIN = 4;\n\tvar LOD_MAX = 8;\n\tvar SIZE_MAX = Math.pow(2, LOD_MAX); // The standard deviations (radians) associated with the extra mips. These are\n\t// chosen to approximate a Trowbridge-Reitz distribution function times the\n\t// geometric shadowing function. These sigma values squared must match the\n\t// variance #defines in cube_uv_reflection_fragment.glsl.js.\n\n\tvar EXTRA_LOD_SIGMA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582];\n\tvar TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length; // The maximum length of the blur for loop. Smaller sigmas will use fewer\n\t// samples and exit early, but not recompile the shader.\n\n\tvar MAX_SAMPLES = 20;\n\tvar ENCODINGS = (_ENCODINGS = {}, _ENCODINGS[LinearEncoding] = 0, _ENCODINGS[sRGBEncoding] = 1, _ENCODINGS[RGBEEncoding] = 2, _ENCODINGS[RGBM7Encoding] = 3, _ENCODINGS[RGBM16Encoding] = 4, _ENCODINGS[RGBDEncoding] = 5, _ENCODINGS[GammaEncoding] = 6, _ENCODINGS);\n\tvar backgroundMaterial = new MeshBasicMaterial({\n\t\tside: BackSide,\n\t\tdepthWrite: false,\n\t\tdepthTest: false\n\t});\n\tvar backgroundBox = new Mesh(new BoxGeometry(), backgroundMaterial);\n\n\tvar _flatCamera = /*@__PURE__*/new OrthographicCamera();\n\n\tvar _createPlanes2 = /*@__PURE__*/_createPlanes(),\n\t\t\t_lodPlanes = _createPlanes2._lodPlanes,\n\t\t\t_sizeLods = _createPlanes2._sizeLods,\n\t\t\t_sigmas = _createPlanes2._sigmas;\n\n\tvar _clearColor = /*@__PURE__*/new Color();\n\n\tvar _oldTarget = null; // Golden Ratio\n\n\tvar PHI = (1 + Math.sqrt(5)) / 2;\n\tvar INV_PHI = 1 / PHI; // Vertices of a dodecahedron (except the opposites, which represent the\n\t// same axis), used as axis directions evenly spread on a sphere.\n\n\tvar _axisDirections = [/*@__PURE__*/new Vector3(1, 1, 1), /*@__PURE__*/new Vector3(-1, 1, 1), /*@__PURE__*/new Vector3(1, 1, -1), /*@__PURE__*/new Vector3(-1, 1, -1), /*@__PURE__*/new Vector3(0, PHI, INV_PHI), /*@__PURE__*/new Vector3(0, PHI, -INV_PHI), /*@__PURE__*/new Vector3(INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(-INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(PHI, INV_PHI, 0), /*@__PURE__*/new Vector3(-PHI, INV_PHI, 0)];\n\t/**\n\t * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n\t * (PMREM) from a cubeMap environment texture. This allows different levels of\n\t * blur to be quickly accessed based on material roughness. It is packed into a\n\t * special CubeUV format that allows us to perform custom interpolation so that\n\t * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n\t * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n\t * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n\t * higher roughness levels. In this way we maintain resolution to smoothly\n\t * interpolate diffuse lighting while limiting sampling computation.\n\t */\n\n\tfunction convertLinearToRGBE(color) {\n\t\tvar maxComponent = Math.max(color.r, color.g, color.b);\n\t\tvar fExp = Math.min(Math.max(Math.ceil(Math.log2(maxComponent)), -128.0), 127.0);\n\t\tcolor.multiplyScalar(Math.pow(2.0, -fExp));\n\t\tvar alpha = (fExp + 128.0) / 255.0;\n\t\treturn alpha;\n\t}\n\n\tvar PMREMGenerator = /*#__PURE__*/function () {\n\t\tfunction PMREMGenerator(renderer) {\n\t\t\tthis._renderer = renderer;\n\t\t\tthis._pingPongRenderTarget = null;\n\t\t\tthis._blurMaterial = _getBlurShader(MAX_SAMPLES);\n\t\t\tthis._equirectShader = null;\n\t\t\tthis._cubemapShader = null;\n\n\t\t\tthis._compileMaterial(this._blurMaterial);\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t\t * is placed at the origin).\n\t\t */\n\n\n\t\tvar _proto = PMREMGenerator.prototype;\n\n\t\t_proto.fromScene = function fromScene(scene, sigma, near, far) {\n\t\t\tif (sigma === void 0) {\n\t\t\t\tsigma = 0;\n\t\t\t}\n\n\t\t\tif (near === void 0) {\n\t\t\t\tnear = 0.1;\n\t\t\t}\n\n\t\t\tif (far === void 0) {\n\t\t\t\tfar = 100;\n\t\t\t}\n\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tvar cubeUVRenderTarget = this._allocateTargets();\n\n\t\t\tthis._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);\n\n\t\t\tif (sigma > 0) {\n\t\t\t\tthis._blur(cubeUVRenderTarget, 0, 0, sigma);\n\t\t\t}\n\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\n\n\t\t\tthis._cleanup(cubeUVRenderTarget);\n\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\t\t;\n\n\t\t_proto.fromEquirectangular = function fromEquirectangular(equirectangular) {\n\t\t\treturn this._fromTexture(equirectangular);\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\t\t;\n\n\t\t_proto.fromCubemap = function fromCubemap(cubemap) {\n\t\t\treturn this._fromTexture(cubemap);\n\t\t}\n\t\t/**\n\t\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\t\t;\n\n\t\t_proto.compileCubemapShader = function compileCubemapShader() {\n\t\t\tif (this._cubemapShader === null) {\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t\tthis._compileMaterial(this._cubemapShader);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\t\t;\n\n\t\t_proto.compileEquirectangularShader = function compileEquirectangularShader() {\n\t\t\tif (this._equirectShader === null) {\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t\tthis._compileMaterial(this._equirectShader);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t\t * one of them will cause any others to also become unusable.\n\t\t */\n\t\t;\n\n\t\t_proto.dispose = function dispose() {\n\t\t\tthis._blurMaterial.dispose();\n\n\t\t\tif (this._cubemapShader !== null) this._cubemapShader.dispose();\n\t\t\tif (this._equirectShader !== null) this._equirectShader.dispose();\n\n\t\t\tfor (var i = 0; i < _lodPlanes.length; i++) {\n\t\t\t\t_lodPlanes[i].dispose();\n\t\t\t}\n\t\t} // private interface\n\t\t;\n\n\t\t_proto._cleanup = function _cleanup(outputTarget) {\n\t\t\tthis._pingPongRenderTarget.dispose();\n\n\t\t\tthis._renderer.setRenderTarget(_oldTarget);\n\n\t\t\toutputTarget.scissorTest = false;\n\n\t\t\t_setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);\n\t\t};\n\n\t\t_proto._fromTexture = function _fromTexture(texture) {\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tvar cubeUVRenderTarget = this._allocateTargets(texture);\n\n\t\t\tthis._textureToCubeUV(texture, cubeUVRenderTarget);\n\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\n\n\t\t\tthis._cleanup(cubeUVRenderTarget);\n\n\t\t\treturn cubeUVRenderTarget;\n\t\t};\n\n\t\t_proto._allocateTargets = function _allocateTargets(texture) {\n\t\t\t// warning: null texture is valid\n\t\t\tvar params = {\n\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\tminFilter: NearestFilter,\n\t\t\t\tgenerateMipmaps: false,\n\t\t\t\ttype: UnsignedByteType,\n\t\t\t\tformat: RGBEFormat,\n\t\t\t\tencoding: _isLDR(texture) ? texture.encoding : RGBEEncoding,\n\t\t\t\tdepthBuffer: false\n\t\t\t};\n\n\t\t\tvar cubeUVRenderTarget = _createRenderTarget(params);\n\n\t\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget(params);\n\t\t\treturn cubeUVRenderTarget;\n\t\t};\n\n\t\t_proto._compileMaterial = function _compileMaterial(material) {\n\t\t\tvar tmpMesh = new Mesh(_lodPlanes[0], material);\n\n\t\t\tthis._renderer.compile(tmpMesh, _flatCamera);\n\t\t};\n\n\t\t_proto._sceneToCubeUV = function _sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {\n\t\t\tvar fov = 90;\n\t\t\tvar aspect = 1;\n\t\t\tvar cubeCamera = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tvar upSign = [1, -1, 1, 1, 1, 1];\n\t\t\tvar forwardSign = [1, 1, 1, -1, -1, -1];\n\t\t\tvar renderer = this._renderer;\n\t\t\tvar originalAutoClear = renderer.autoClear;\n\t\t\tvar outputEncoding = renderer.outputEncoding;\n\t\t\tvar toneMapping = renderer.toneMapping;\n\t\t\trenderer.getClearColor(_clearColor);\n\t\t\trenderer.toneMapping = NoToneMapping;\n\t\t\trenderer.outputEncoding = LinearEncoding;\n\t\t\trenderer.autoClear = false;\n\t\t\tvar useSolidColor = false;\n\t\t\tvar background = scene.background;\n\n\t\t\tif (background) {\n\t\t\t\tif (background.isColor) {\n\t\t\t\t\tbackgroundMaterial.color.copy(background).convertSRGBToLinear();\n\t\t\t\t\tscene.background = null;\n\t\t\t\t\tvar alpha = convertLinearToRGBE(backgroundMaterial.color);\n\t\t\t\t\tbackgroundMaterial.opacity = alpha;\n\t\t\t\t\tuseSolidColor = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbackgroundMaterial.color.copy(_clearColor).convertSRGBToLinear();\n\n\t\t\t\tvar _alpha = convertLinearToRGBE(backgroundMaterial.color);\n\n\t\t\t\tbackgroundMaterial.opacity = _alpha;\n\t\t\t\tuseSolidColor = true;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\tvar col = i % 3;\n\n\t\t\t\tif (col == 0) {\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\n\t\t\t\t\tcubeCamera.lookAt(forwardSign[i], 0, 0);\n\t\t\t\t} else if (col == 1) {\n\t\t\t\t\tcubeCamera.up.set(0, 0, upSign[i]);\n\t\t\t\t\tcubeCamera.lookAt(0, forwardSign[i], 0);\n\t\t\t\t} else {\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\n\t\t\t\t\tcubeCamera.lookAt(0, 0, forwardSign[i]);\n\t\t\t\t}\n\n\t\t\t\t_setViewport(cubeUVRenderTarget, col * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX);\n\n\t\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\n\n\t\t\t\tif (useSolidColor) {\n\t\t\t\t\trenderer.render(backgroundBox, cubeCamera);\n\t\t\t\t}\n\n\t\t\t\trenderer.render(scene, cubeCamera);\n\t\t\t}\n\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.outputEncoding = outputEncoding;\n\t\t\trenderer.autoClear = originalAutoClear;\n\t\t};\n\n\t\t_proto._textureToCubeUV = function _textureToCubeUV(texture, cubeUVRenderTarget) {\n\t\t\tvar renderer = this._renderer;\n\n\t\t\tif (texture.isCubeTexture) {\n\t\t\t\tif (this._cubemapShader == null) {\n\t\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._equirectShader == null) {\n\t\t\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\t\tvar mesh = new Mesh(_lodPlanes[0], material);\n\t\t\tvar uniforms = material.uniforms;\n\t\t\tuniforms['envMap'].value = texture;\n\n\t\t\tif (!texture.isCubeTexture) {\n\t\t\t\tuniforms['texelSize'].value.set(1.0 / texture.image.width, 1.0 / texture.image.height);\n\t\t\t}\n\n\t\t\tuniforms['inputEncoding'].value = ENCODINGS[texture.encoding];\n\t\t\tuniforms['outputEncoding'].value = ENCODINGS[cubeUVRenderTarget.texture.encoding];\n\n\t\t\t_setViewport(cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX);\n\n\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\n\t\t\trenderer.render(mesh, _flatCamera);\n\t\t};\n\n\t\t_proto._applyPMREM = function _applyPMREM(cubeUVRenderTarget) {\n\t\t\tvar renderer = this._renderer;\n\t\t\tvar autoClear = renderer.autoClear;\n\t\t\trenderer.autoClear = false;\n\n\t\t\tfor (var i = 1; i < TOTAL_LODS; i++) {\n\t\t\t\tvar sigma = Math.sqrt(_sigmas[i] * _sigmas[i] - _sigmas[i - 1] * _sigmas[i - 1]);\n\t\t\t\tvar poleAxis = _axisDirections[(i - 1) % _axisDirections.length];\n\n\t\t\t\tthis._blur(cubeUVRenderTarget, i - 1, i, sigma, poleAxis);\n\t\t\t}\n\n\t\t\trenderer.autoClear = autoClear;\n\t\t}\n\t\t/**\n\t\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t\t * accurate at the poles, but still does a decent job.\n\t\t */\n\t\t;\n\n\t\t_proto._blur = function _blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {\n\t\t\tvar pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\t\tthis._halfBlur(cubeUVRenderTarget, pingPongRenderTarget, lodIn, lodOut, sigma, 'latitudinal', poleAxis);\n\n\t\t\tthis._halfBlur(pingPongRenderTarget, cubeUVRenderTarget, lodOut, lodOut, sigma, 'longitudinal', poleAxis);\n\t\t};\n\n\t\t_proto._halfBlur = function _halfBlur(targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis) {\n\t\t\tvar renderer = this._renderer;\n\t\t\tvar blurMaterial = this._blurMaterial;\n\n\t\t\tif (direction !== 'latitudinal' && direction !== 'longitudinal') {\n\t\t\t\tconsole.error('blur direction must be either latitudinal or longitudinal!');\n\t\t\t} // Number of standard deviations at which to cut off the discrete approximation.\n\n\n\t\t\tvar STANDARD_DEVIATIONS = 3;\n\t\t\tvar blurMesh = new Mesh(_lodPlanes[lodOut], blurMaterial);\n\t\t\tvar blurUniforms = blurMaterial.uniforms;\n\t\t\tvar pixels = _sizeLods[lodIn] - 1;\n\t\t\tvar radiansPerPixel = isFinite(sigmaRadians) ? Math.PI / (2 * pixels) : 2 * Math.PI / (2 * MAX_SAMPLES - 1);\n\t\t\tvar sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\t\tvar samples = isFinite(sigmaRadians) ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels) : MAX_SAMPLES;\n\n\t\t\tif (samples > MAX_SAMPLES) {\n\t\t\t\tconsole.warn(\"sigmaRadians, \" + sigmaRadians + \", is too large and will clip, as it requested \" + samples + \" samples when the maximum is set to \" + MAX_SAMPLES);\n\t\t\t}\n\n\t\t\tvar weights = [];\n\t\t\tvar sum = 0;\n\n\t\t\tfor (var i = 0; i < MAX_SAMPLES; ++i) {\n\t\t\t\tvar _x = i / sigmaPixels;\n\n\t\t\t\tvar weight = Math.exp(-_x * _x / 2);\n\t\t\t\tweights.push(weight);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tsum += weight;\n\t\t\t\t} else if (i < samples) {\n\t\t\t\t\tsum += 2 * weight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var _i = 0; _i < weights.length; _i++) {\n\t\t\t\tweights[_i] = weights[_i] / sum;\n\t\t\t}\n\n\t\t\tblurUniforms['envMap'].value = targetIn.texture;\n\t\t\tblurUniforms['samples'].value = samples;\n\t\t\tblurUniforms['weights'].value = weights;\n\t\t\tblurUniforms['latitudinal'].value = direction === 'latitudinal';\n\n\t\t\tif (poleAxis) {\n\t\t\t\tblurUniforms['poleAxis'].value = poleAxis;\n\t\t\t}\n\n\t\t\tblurUniforms['dTheta'].value = radiansPerPixel;\n\t\t\tblurUniforms['mipInt'].value = LOD_MAX - lodIn;\n\t\t\tblurUniforms['inputEncoding'].value = ENCODINGS[targetIn.texture.encoding];\n\t\t\tblurUniforms['outputEncoding'].value = ENCODINGS[targetIn.texture.encoding];\n\t\t\tvar outputSize = _sizeLods[lodOut];\n\t\t\tvar x = 3 * Math.max(0, SIZE_MAX - 2 * outputSize);\n\t\t\tvar y = (lodOut === 0 ? 0 : 2 * SIZE_MAX) + 2 * outputSize * (lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0);\n\n\t\t\t_setViewport(targetOut, x, y, 3 * outputSize, 2 * outputSize);\n\n\t\t\trenderer.setRenderTarget(targetOut);\n\t\t\trenderer.render(blurMesh, _flatCamera);\n\t\t};\n\n\t\treturn PMREMGenerator;\n\t}();\n\n\tfunction _isLDR(texture) {\n\t\tif (texture === undefined || texture.type !== UnsignedByteType) return false;\n\t\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n\t}\n\n\tfunction _createPlanes() {\n\t\tvar _lodPlanes = [];\n\t\tvar _sizeLods = [];\n\t\tvar _sigmas = [];\n\t\tvar lod = LOD_MAX;\n\n\t\tfor (var i = 0; i < TOTAL_LODS; i++) {\n\t\t\tvar sizeLod = Math.pow(2, lod);\n\n\t\t\t_sizeLods.push(sizeLod);\n\n\t\t\tvar sigma = 1.0 / sizeLod;\n\n\t\t\tif (i > LOD_MAX - LOD_MIN) {\n\t\t\t\tsigma = EXTRA_LOD_SIGMA[i - LOD_MAX + LOD_MIN - 1];\n\t\t\t} else if (i == 0) {\n\t\t\t\tsigma = 0;\n\t\t\t}\n\n\t\t\t_sigmas.push(sigma);\n\n\t\t\tvar texelSize = 1.0 / (sizeLod - 1);\n\t\t\tvar min = -texelSize / 2;\n\t\t\tvar max = 1 + texelSize / 2;\n\t\t\tvar uv1 = [min, min, max, min, max, max, min, min, max, max, min, max];\n\t\t\tvar cubeFaces = 6;\n\t\t\tvar vertices = 6;\n\t\t\tvar positionSize = 3;\n\t\t\tvar uvSize = 2;\n\t\t\tvar faceIndexSize = 1;\n\t\t\tvar position = new Float32Array(positionSize * vertices * cubeFaces);\n\t\t\tvar uv = new Float32Array(uvSize * vertices * cubeFaces);\n\t\t\tvar faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);\n\n\t\t\tfor (var face = 0; face < cubeFaces; face++) {\n\t\t\t\tvar x = face % 3 * 2 / 3 - 1;\n\t\t\t\tvar y = face > 2 ? 0 : -1;\n\t\t\t\tvar coordinates = [x, y, 0, x + 2 / 3, y, 0, x + 2 / 3, y + 1, 0, x, y, 0, x + 2 / 3, y + 1, 0, x, y + 1, 0];\n\t\t\t\tposition.set(coordinates, positionSize * vertices * face);\n\t\t\t\tuv.set(uv1, uvSize * vertices * face);\n\t\t\t\tvar fill = [face, face, face, face, face, face];\n\t\t\t\tfaceIndex.set(fill, faceIndexSize * vertices * face);\n\t\t\t}\n\n\t\t\tvar planes = new BufferGeometry();\n\t\t\tplanes.setAttribute('position', new BufferAttribute(position, positionSize));\n\t\t\tplanes.setAttribute('uv', new BufferAttribute(uv, uvSize));\n\t\t\tplanes.setAttribute('faceIndex', new BufferAttribute(faceIndex, faceIndexSize));\n\n\t\t\t_lodPlanes.push(planes);\n\n\t\t\tif (lod > LOD_MIN) {\n\t\t\t\tlod--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t_lodPlanes: _lodPlanes,\n\t\t\t_sizeLods: _sizeLods,\n\t\t\t_sigmas: _sigmas\n\t\t};\n\t}\n\n\tfunction _createRenderTarget(params) {\n\t\tvar cubeUVRenderTarget = new WebGLRenderTarget(3 * SIZE_MAX, 3 * SIZE_MAX, params);\n\t\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\t\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\t\tcubeUVRenderTarget.scissorTest = true;\n\t\treturn cubeUVRenderTarget;\n\t}\n\n\tfunction _setViewport(target, x, y, width, height) {\n\t\ttarget.viewport.set(x, y, width, height);\n\t\ttarget.scissor.set(x, y, width, height);\n\t}\n\n\tfunction _getBlurShader(maxSamples) {\n\t\tvar weights = new Float32Array(maxSamples);\n\t\tvar poleAxis = new Vector3(0, 1, 0);\n\t\tvar shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'SphericalGaussianBlur',\n\t\t\tdefines: {\n\t\t\t\t'n': maxSamples\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'samples': {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\t'weights': {\n\t\t\t\t\tvalue: weights\n\t\t\t\t},\n\t\t\t\t'latitudinal': {\n\t\t\t\t\tvalue: false\n\t\t\t\t},\n\t\t\t\t'dTheta': {\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\t'mipInt': {\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\t'poleAxis': {\n\t\t\t\t\tvalue: poleAxis\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t\"\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\t\\t\\tuniform int samples;\\n\\t\\t\\tuniform float weights[ n ];\\n\\t\\t\\tuniform bool latitudinal;\\n\\t\\t\\tuniform float dTheta;\\n\\t\\t\\tuniform float mipInt;\\n\\t\\t\\tuniform vec3 poleAxis;\\n\\n\\t\\t\\t\" + _getEncodings() + \"\\n\\n\\t\\t\\t#define ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t#include <cube_uv_reflection_fragment>\\n\\n\\t\\t\\tvec3 getSample( float theta, vec3 axis ) {\\n\\n\\t\\t\\t\\tfloat cosTheta = cos( theta );\\n\\t\\t\\t\\t// Rodrigues' axis-angle rotation\\n\\t\\t\\t\\tvec3 sampleDirection = vOutputDirection * cosTheta\\n\\t\\t\\t\\t\\t+ cross( axis, vOutputDirection ) * sin( theta )\\n\\t\\t\\t\\t\\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\\n\\n\\t\\t\\t\\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\\n\\n\\t\\t\\t\\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\\n\\n\\t\\t\\t\\t\\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\taxis = normalize( axis );\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\\n\\n\\t\\t\\t\\tfor ( int i = 1; i < n; i++ ) {\\n\\n\\t\\t\\t\\t\\tif ( i >= samples ) {\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfloat theta = dTheta * float( i );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t\",\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getEquirectShader() {\n\t\tvar texelSize = new Vector2(1, 1);\n\t\tvar shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'EquirectangularToCubeUV',\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'texelSize': {\n\t\t\t\t\tvalue: texelSize\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t\"\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\t\\t\\tuniform vec2 texelSize;\\n\\n\\t\\t\\t\" + _getEncodings() + \"\\n\\n\\t\\t\\t#include <common>\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\n\\t\\t\\t\\tvec3 outputDirection = normalize( vOutputDirection );\\n\\t\\t\\t\\tvec2 uv = equirectUv( outputDirection );\\n\\n\\t\\t\\t\\tvec2 f = fract( uv / texelSize - 0.5 );\\n\\t\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\t\\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.x += texelSize.x;\\n\\t\\t\\t\\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.y += texelSize.y;\\n\\t\\t\\t\\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.x -= texelSize.x;\\n\\t\\t\\t\\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\n\\t\\t\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\t\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\t\\t\\tgl_FragColor.rgb = mix( tm, bm, f.y );\\n\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t\",\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getCubemapShader() {\n\t\tvar shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'CubemapToCubeUV',\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t\"\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform samplerCube envMap;\\n\\n\\t\\t\\t\" + _getEncodings() + \"\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t\",\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getCommonVertexShader() {\n\t\treturn (\n\t\t\t/* glsl */\n\t\t\t\"\\n\\n\\t\\tprecision mediump float;\\n\\t\\tprecision mediump int;\\n\\n\\t\\tattribute vec3 position;\\n\\t\\tattribute vec2 uv;\\n\\t\\tattribute float faceIndex;\\n\\n\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t// RH coordinate system; PMREM face-indexing convention\\n\\t\\tvec3 getDirection( vec2 uv, float face ) {\\n\\n\\t\\t\\tuv = 2.0 * uv - 1.0;\\n\\n\\t\\t\\tvec3 direction = vec3( uv, 1.0 );\\n\\n\\t\\t\\tif ( face == 0.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.zyx; // ( 1, v, u ) pos x\\n\\n\\t\\t\\t} else if ( face == 1.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.xzy;\\n\\t\\t\\t\\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\\n\\n\\t\\t\\t} else if ( face == 2.0 ) {\\n\\n\\t\\t\\t\\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\\n\\n\\t\\t\\t} else if ( face == 3.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.zyx;\\n\\t\\t\\t\\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\\n\\n\\t\\t\\t} else if ( face == 4.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.xzy;\\n\\t\\t\\t\\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\\n\\n\\t\\t\\t} else if ( face == 5.0 ) {\\n\\n\\t\\t\\t\\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn direction;\\n\\n\\t\\t}\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvOutputDirection = getDirection( uv, faceIndex );\\n\\t\\t\\tgl_Position = vec4( position, 1.0 );\\n\\n\\t\\t}\\n\\t\"\n\t\t);\n\t}\n\n\tfunction _getEncodings() {\n\t\treturn (\n\t\t\t/* glsl */\n\t\t\t\"\\n\\n\\t\\tuniform int inputEncoding;\\n\\t\\tuniform int outputEncoding;\\n\\n\\t\\t#include <encodings_pars_fragment>\\n\\n\\t\\tvec4 inputTexelToLinear( vec4 value ) {\\n\\n\\t\\t\\tif ( inputEncoding == 0 ) {\\n\\n\\t\\t\\t\\treturn value;\\n\\n\\t\\t\\t} else if ( inputEncoding == 1 ) {\\n\\n\\t\\t\\t\\treturn sRGBToLinear( value );\\n\\n\\t\\t\\t} else if ( inputEncoding == 2 ) {\\n\\n\\t\\t\\t\\treturn RGBEToLinear( value );\\n\\n\\t\\t\\t} else if ( inputEncoding == 3 ) {\\n\\n\\t\\t\\t\\treturn RGBMToLinear( value, 7.0 );\\n\\n\\t\\t\\t} else if ( inputEncoding == 4 ) {\\n\\n\\t\\t\\t\\treturn RGBMToLinear( value, 16.0 );\\n\\n\\t\\t\\t} else if ( inputEncoding == 5 ) {\\n\\n\\t\\t\\t\\treturn RGBDToLinear( value, 256.0 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn GammaToLinear( value, 2.2 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tvec4 linearToOutputTexel( vec4 value ) {\\n\\n\\t\\t\\tif ( outputEncoding == 0 ) {\\n\\n\\t\\t\\t\\treturn value;\\n\\n\\t\\t\\t} else if ( outputEncoding == 1 ) {\\n\\n\\t\\t\\t\\treturn LinearTosRGB( value );\\n\\n\\t\\t\\t} else if ( outputEncoding == 2 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBE( value );\\n\\n\\t\\t\\t} else if ( outputEncoding == 3 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBM( value, 7.0 );\\n\\n\\t\\t\\t} else if ( outputEncoding == 4 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBM( value, 16.0 );\\n\\n\\t\\t\\t} else if ( outputEncoding == 5 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBD( value, 256.0 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn LinearToGamma( value, 2.2 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tvec4 envMapTexelToLinear( vec4 color ) {\\n\\n\\t\\t\\treturn inputTexelToLinear( color );\\n\\n\\t\\t}\\n\\t\"\n\t\t);\n\t}\n\n\tfunction Face4(a, b, c, d, normal, color, materialIndex) {\n\t\tconsole.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');\n\t\treturn new Face3(a, b, c, normal, color, materialIndex);\n\t}\n\tvar LineStrip = 0;\n\tvar LinePieces = 1;\n\tvar NoColors = 0;\n\tvar FaceColors = 1;\n\tvar VertexColors = 2;\n\tfunction MeshFaceMaterial(materials) {\n\t\tconsole.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\n\t\treturn materials;\n\t}\n\tfunction MultiMaterial(materials) {\n\t\tif (materials === void 0) {\n\t\t\tmaterials = [];\n\t\t}\n\n\t\tconsole.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\n\t\tmaterials.clone = function () {\n\t\t\treturn materials.slice();\n\t\t};\n\n\t\treturn materials;\n\t}\n\tfunction PointCloud(geometry, material) {\n\t\tconsole.warn('THREE.PointCloud has been renamed to THREE.Points.');\n\t\treturn new Points(geometry, material);\n\t}\n\tfunction Particle(material) {\n\t\tconsole.warn('THREE.Particle has been renamed to THREE.Sprite.');\n\t\treturn new Sprite(material);\n\t}\n\tfunction ParticleSystem(geometry, material) {\n\t\tconsole.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n\t\treturn new Points(geometry, material);\n\t}\n\tfunction PointCloudMaterial(parameters) {\n\t\tconsole.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction ParticleBasicMaterial(parameters) {\n\t\tconsole.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction ParticleSystemMaterial(parameters) {\n\t\tconsole.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction Vertex(x, y, z) {\n\t\tconsole.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n\t\treturn new Vector3(x, y, z);\n\t} //\n\n\tfunction DynamicBufferAttribute(array, itemSize) {\n\t\tconsole.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');\n\t\treturn new BufferAttribute(array, itemSize).setUsage(DynamicDrawUsage);\n\t}\n\tfunction Int8Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\n\t\treturn new Int8BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint8Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\n\t\treturn new Uint8BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint8ClampedAttribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\n\t\treturn new Uint8ClampedBufferAttribute(array, itemSize);\n\t}\n\tfunction Int16Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\n\t\treturn new Int16BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint16Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\n\t\treturn new Uint16BufferAttribute(array, itemSize);\n\t}\n\tfunction Int32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\n\t\treturn new Int32BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\n\t\treturn new Uint32BufferAttribute(array, itemSize);\n\t}\n\tfunction Float32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\n\t\treturn new Float32BufferAttribute(array, itemSize);\n\t}\n\tfunction Float64Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\n\t\treturn new Float64BufferAttribute(array, itemSize);\n\t} //\n\n\tCurve.create = function (construct, getPoint) {\n\t\tconsole.log('THREE.Curve.create() has been deprecated');\n\t\tconstruct.prototype = Object.create(Curve.prototype);\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\t\treturn construct;\n\t}; //\n\n\n\tObject.assign(Path.prototype, {\n\t\tfromPoints: function fromPoints(points) {\n\t\t\tconsole.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\n\t\t\treturn this.setFromPoints(points);\n\t\t}\n\t}); //\n\n\tfunction ClosedSplineCurve3(points) {\n\t\tconsole.warn('THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n\t\tCatmullRomCurve3.call(this, points);\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\t}\n\tClosedSplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\n\tfunction SplineCurve3(points) {\n\t\tconsole.warn('THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n\t\tCatmullRomCurve3.call(this, points);\n\t\tthis.type = 'catmullrom';\n\t}\n\tSplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\n\tfunction Spline(points) {\n\t\tconsole.warn('THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.');\n\t\tCatmullRomCurve3.call(this, points);\n\t\tthis.type = 'catmullrom';\n\t}\n\tSpline.prototype = Object.create(CatmullRomCurve3.prototype);\n\tObject.assign(Spline.prototype, {\n\t\tinitFromArray: function initFromArray()\n\t\t/* a */\n\t\t{\n\t\t\tconsole.error('THREE.Spline: .initFromArray() has been removed.');\n\t\t},\n\t\tgetControlPointsArray: function getControlPointsArray()\n\t\t/* optionalTarget */\n\t\t{\n\t\t\tconsole.error('THREE.Spline: .getControlPointsArray() has been removed.');\n\t\t},\n\t\treparametrizeByArcLength: function reparametrizeByArcLength()\n\t\t/* samplingCoef */\n\t\t{\n\t\t\tconsole.error('THREE.Spline: .reparametrizeByArcLength() has been removed.');\n\t\t}\n\t}); //\n\n\tfunction AxisHelper(size) {\n\t\tconsole.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\n\t\treturn new AxesHelper(size);\n\t}\n\tfunction BoundingBoxHelper(object, color) {\n\t\tconsole.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\n\t\treturn new BoxHelper(object, color);\n\t}\n\tfunction EdgesHelper(object, hex) {\n\t\tconsole.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\n\t\treturn new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\n\t\t}));\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\t\tconsole.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\t\tconsole.error('THREE.SkeletonHelper: update() no longer needs to be called.');\n\t};\n\n\tfunction WireframeHelper(object, hex) {\n\t\tconsole.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\n\t\treturn new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\n\t\t}));\n\t} //\n\n\tObject.assign(Loader.prototype, {\n\t\textractUrlBase: function extractUrlBase(url) {\n\t\t\tconsole.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');\n\t\t\treturn LoaderUtils.extractUrlBase(url);\n\t\t}\n\t});\n\tLoader.Handlers = {\n\t\tadd: function add()\n\t\t/* regex, loader */\n\t\t{\n\t\t\tconsole.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');\n\t\t},\n\t\tget: function get()\n\t\t/* file */\n\t\t{\n\t\t\tconsole.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');\n\t\t}\n\t};\n\tfunction XHRLoader(manager) {\n\t\tconsole.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\n\t\treturn new FileLoader(manager);\n\t}\n\tfunction BinaryTextureLoader(manager) {\n\t\tconsole.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\n\t\treturn new DataTextureLoader(manager);\n\t} //\n\n\tObject.assign(Box2.prototype, {\n\t\tcenter: function center(optionalTarget) {\n\t\t\tconsole.warn('THREE.Box2: .center() has been renamed to .getCenter().');\n\t\t\treturn this.getCenter(optionalTarget);\n\t\t},\n\t\tempty: function empty() {\n\t\t\tconsole.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n\t\t\treturn this.isEmpty();\n\t\t},\n\t\tisIntersectionBox: function isIntersectionBox(box) {\n\t\t\tconsole.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\t\treturn this.intersectsBox(box);\n\t\t},\n\t\tsize: function size(optionalTarget) {\n\t\t\tconsole.warn('THREE.Box2: .size() has been renamed to .getSize().');\n\t\t\treturn this.getSize(optionalTarget);\n\t\t}\n\t});\n\tObject.assign(Box3.prototype, {\n\t\tcenter: function center(optionalTarget) {\n\t\t\tconsole.warn('THREE.Box3: .center() has been renamed to .getCenter().');\n\t\t\treturn this.getCenter(optionalTarget);\n\t\t},\n\t\tempty: function empty() {\n\t\t\tconsole.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n\t\t\treturn this.isEmpty();\n\t\t},\n\t\tisIntersectionBox: function isIntersectionBox(box) {\n\t\t\tconsole.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\t\treturn this.intersectsBox(box);\n\t\t},\n\t\tisIntersectionSphere: function isIntersectionSphere(sphere) {\n\t\t\tconsole.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n\t\t\treturn this.intersectsSphere(sphere);\n\t\t},\n\t\tsize: function size(optionalTarget) {\n\t\t\tconsole.warn('THREE.Box3: .size() has been renamed to .getSize().');\n\t\t\treturn this.getSize(optionalTarget);\n\t\t}\n\t});\n\tObject.assign(Sphere.prototype, {\n\t\tempty: function empty() {\n\t\t\tconsole.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');\n\t\t\treturn this.isEmpty();\n\t\t}\n\t});\n\n\tFrustum.prototype.setFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');\n\t\treturn this.setFromProjectionMatrix(m);\n\t};\n\n\tLine3.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Line3: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t};\n\n\tObject.assign(MathUtils, {\n\t\trandom16: function random16() {\n\t\t\tconsole.warn('THREE.Math: .random16() has been deprecated. Use Math.random() instead.');\n\t\t\treturn Math.random();\n\t\t},\n\t\tnearestPowerOfTwo: function nearestPowerOfTwo(value) {\n\t\t\tconsole.warn('THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().');\n\t\t\treturn MathUtils.floorPowerOfTwo(value);\n\t\t},\n\t\tnextPowerOfTwo: function nextPowerOfTwo(value) {\n\t\t\tconsole.warn('THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().');\n\t\t\treturn MathUtils.ceilPowerOfTwo(value);\n\t\t}\n\t});\n\tObject.assign(Matrix3.prototype, {\n\t\tflattenToArrayOffset: function flattenToArrayOffset(array, offset) {\n\t\t\tconsole.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n\t\t\treturn this.toArray(array, offset);\n\t\t},\n\t\tmultiplyVector3: function multiplyVector3(vector) {\n\t\t\tconsole.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n\t\t\treturn vector.applyMatrix3(this);\n\t\t},\n\t\tmultiplyVector3Array: function multiplyVector3Array()\n\t\t/* a */\n\t\t{\n\t\t\tconsole.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\n\t\t},\n\t\tapplyToBufferAttribute: function applyToBufferAttribute(attribute) {\n\t\t\tconsole.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');\n\t\t\treturn attribute.applyMatrix3(this);\n\t\t},\n\t\tapplyToVector3Array: function applyToVector3Array()\n\t\t/* array, offset, length */\n\t\t{\n\t\t\tconsole.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\n\t\t},\n\t\tgetInverse: function getInverse(matrix) {\n\t\t\tconsole.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n\t\t\treturn this.copy(matrix).invert();\n\t\t}\n\t});\n\tObject.assign(Matrix4.prototype, {\n\t\textractPosition: function extractPosition(m) {\n\t\t\tconsole.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n\t\t\treturn this.copyPosition(m);\n\t\t},\n\t\tflattenToArrayOffset: function flattenToArrayOffset(array, offset) {\n\t\t\tconsole.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n\t\t\treturn this.toArray(array, offset);\n\t\t},\n\t\tgetPosition: function getPosition() {\n\t\t\tconsole.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n\t\t\treturn new Vector3().setFromMatrixColumn(this, 3);\n\t\t},\n\t\tsetRotationFromQuaternion: function setRotationFromQuaternion(q) {\n\t\t\tconsole.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n\t\t\treturn this.makeRotationFromQuaternion(q);\n\t\t},\n\t\tmultiplyToArray: function multiplyToArray() {\n\t\t\tconsole.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\n\t\t},\n\t\tmultiplyVector3: function multiplyVector3(vector) {\n\t\t\tconsole.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\t\treturn vector.applyMatrix4(this);\n\t\t},\n\t\tmultiplyVector4: function multiplyVector4(vector) {\n\t\t\tconsole.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\t\treturn vector.applyMatrix4(this);\n\t\t},\n\t\tmultiplyVector3Array: function multiplyVector3Array()\n\t\t/* a */\n\t\t{\n\t\t\tconsole.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\n\t\t},\n\t\trotateAxis: function rotateAxis(v) {\n\t\t\tconsole.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n\t\t\tv.transformDirection(this);\n\t\t},\n\t\tcrossVector: function crossVector(vector) {\n\t\t\tconsole.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\t\treturn vector.applyMatrix4(this);\n\t\t},\n\t\ttranslate: function translate() {\n\t\t\tconsole.error('THREE.Matrix4: .translate() has been removed.');\n\t\t},\n\t\trotateX: function rotateX() {\n\t\t\tconsole.error('THREE.Matrix4: .rotateX() has been removed.');\n\t\t},\n\t\trotateY: function rotateY() {\n\t\t\tconsole.error('THREE.Matrix4: .rotateY() has been removed.');\n\t\t},\n\t\trotateZ: function rotateZ() {\n\t\t\tconsole.error('THREE.Matrix4: .rotateZ() has been removed.');\n\t\t},\n\t\trotateByAxis: function rotateByAxis() {\n\t\t\tconsole.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n\t\t},\n\t\tapplyToBufferAttribute: function applyToBufferAttribute(attribute) {\n\t\t\tconsole.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');\n\t\t\treturn attribute.applyMatrix4(this);\n\t\t},\n\t\tapplyToVector3Array: function applyToVector3Array()\n\t\t/* array, offset, length */\n\t\t{\n\t\t\tconsole.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\n\t\t},\n\t\tmakeFrustum: function makeFrustum(left, right, bottom, top, near, far) {\n\t\t\tconsole.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\n\t\t\treturn this.makePerspective(left, right, top, bottom, near, far);\n\t\t},\n\t\tgetInverse: function getInverse(matrix) {\n\t\t\tconsole.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n\t\t\treturn this.copy(matrix).invert();\n\t\t}\n\t});\n\n\tPlane.prototype.isIntersectionLine = function (line) {\n\t\tconsole.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n\t\treturn this.intersectsLine(line);\n\t};\n\n\tObject.assign(Quaternion.prototype, {\n\t\tmultiplyVector3: function multiplyVector3(vector) {\n\t\t\tconsole.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n\t\t\treturn vector.applyQuaternion(this);\n\t\t},\n\t\tinverse: function inverse() {\n\t\t\tconsole.warn('THREE.Quaternion: .inverse() has been renamed to invert().');\n\t\t\treturn this.invert();\n\t\t}\n\t});\n\tObject.assign(Ray.prototype, {\n\t\tisIntersectionBox: function isIntersectionBox(box) {\n\t\t\tconsole.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\t\treturn this.intersectsBox(box);\n\t\t},\n\t\tisIntersectionPlane: function isIntersectionPlane(plane) {\n\t\t\tconsole.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n\t\t\treturn this.intersectsPlane(plane);\n\t\t},\n\t\tisIntersectionSphere: function isIntersectionSphere(sphere) {\n\t\t\tconsole.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n\t\t\treturn this.intersectsSphere(sphere);\n\t\t}\n\t});\n\tObject.assign(Triangle.prototype, {\n\t\tarea: function area() {\n\t\t\tconsole.warn('THREE.Triangle: .area() has been renamed to .getArea().');\n\t\t\treturn this.getArea();\n\t\t},\n\t\tbarycoordFromPoint: function barycoordFromPoint(point, target) {\n\t\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n\t\t\treturn this.getBarycoord(point, target);\n\t\t},\n\t\tmidpoint: function midpoint(target) {\n\t\t\tconsole.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\n\t\t\treturn this.getMidpoint(target);\n\t\t},\n\t\tnormal: function normal(target) {\n\t\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n\t\t\treturn this.getNormal(target);\n\t\t},\n\t\tplane: function plane(target) {\n\t\t\tconsole.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\n\t\t\treturn this.getPlane(target);\n\t\t}\n\t});\n\tObject.assign(Triangle, {\n\t\tbarycoordFromPoint: function barycoordFromPoint(point, a, b, c, target) {\n\t\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n\t\t\treturn Triangle.getBarycoord(point, a, b, c, target);\n\t\t},\n\t\tnormal: function normal(a, b, c, target) {\n\t\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n\t\t\treturn Triangle.getNormal(a, b, c, target);\n\t\t}\n\t});\n\tObject.assign(Shape.prototype, {\n\t\textractAllPoints: function extractAllPoints(divisions) {\n\t\t\tconsole.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');\n\t\t\treturn this.extractPoints(divisions);\n\t\t},\n\t\textrude: function extrude(options) {\n\t\t\tconsole.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\n\t\t\treturn new ExtrudeGeometry(this, options);\n\t\t},\n\t\tmakeGeometry: function makeGeometry(options) {\n\t\t\tconsole.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\n\t\t\treturn new ShapeGeometry(this, options);\n\t\t}\n\t});\n\tObject.assign(Vector2.prototype, {\n\t\tfromAttribute: function fromAttribute(attribute, index, offset) {\n\t\t\tconsole.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t\t},\n\t\tdistanceToManhattan: function distanceToManhattan(v) {\n\t\t\tconsole.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n\t\t\treturn this.manhattanDistanceTo(v);\n\t\t},\n\t\tlengthManhattan: function lengthManhattan() {\n\t\t\tconsole.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\t\treturn this.manhattanLength();\n\t\t}\n\t});\n\tObject.assign(Vector3.prototype, {\n\t\tsetEulerFromRotationMatrix: function setEulerFromRotationMatrix() {\n\t\t\tconsole.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n\t\t},\n\t\tsetEulerFromQuaternion: function setEulerFromQuaternion() {\n\t\t\tconsole.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n\t\t},\n\t\tgetPositionFromMatrix: function getPositionFromMatrix(m) {\n\t\t\tconsole.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n\t\t\treturn this.setFromMatrixPosition(m);\n\t\t},\n\t\tgetScaleFromMatrix: function getScaleFromMatrix(m) {\n\t\t\tconsole.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n\t\t\treturn this.setFromMatrixScale(m);\n\t\t},\n\t\tgetColumnFromMatrix: function getColumnFromMatrix(index, matrix) {\n\t\t\tconsole.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n\t\t\treturn this.setFromMatrixColumn(matrix, index);\n\t\t},\n\t\tapplyProjection: function applyProjection(m) {\n\t\t\tconsole.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\n\t\t\treturn this.applyMatrix4(m);\n\t\t},\n\t\tfromAttribute: function fromAttribute(attribute, index, offset) {\n\t\t\tconsole.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t\t},\n\t\tdistanceToManhattan: function distanceToManhattan(v) {\n\t\t\tconsole.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n\t\t\treturn this.manhattanDistanceTo(v);\n\t\t},\n\t\tlengthManhattan: function lengthManhattan() {\n\t\t\tconsole.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\t\treturn this.manhattanLength();\n\t\t}\n\t});\n\tObject.assign(Vector4.prototype, {\n\t\tfromAttribute: function fromAttribute(attribute, index, offset) {\n\t\t\tconsole.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t\t},\n\t\tlengthManhattan: function lengthManhattan() {\n\t\t\tconsole.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\t\treturn this.manhattanLength();\n\t\t}\n\t}); //\n\n\tObject.assign(Object3D.prototype, {\n\t\tgetChildByName: function getChildByName(name) {\n\t\t\tconsole.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n\t\t\treturn this.getObjectByName(name);\n\t\t},\n\t\trenderDepth: function renderDepth() {\n\t\t\tconsole.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n\t\t},\n\t\ttranslate: function translate(distance, axis) {\n\t\t\tconsole.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n\t\t\treturn this.translateOnAxis(axis, distance);\n\t\t},\n\t\tgetWorldRotation: function getWorldRotation() {\n\t\t\tconsole.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');\n\t\t},\n\t\tapplyMatrix: function applyMatrix(matrix) {\n\t\t\tconsole.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');\n\t\t\treturn this.applyMatrix4(matrix);\n\t\t}\n\t});\n\tObject.defineProperties(Object3D.prototype, {\n\t\teulerOrder: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n\t\t\t\treturn this.rotation.order;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n\t\t\t\tthis.rotation.order = value;\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n\t\t\t},\n\t\t\tset: function set() {\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n\t\t\t}\n\t\t}\n\t});\n\tObject.assign(Mesh.prototype, {\n\t\tsetDrawMode: function setDrawMode() {\n\t\t\tconsole.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n\t\t}\n\t});\n\tObject.defineProperties(Mesh.prototype, {\n\t\tdrawMode: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');\n\t\t\t\treturn TrianglesDrawMode;\n\t\t\t},\n\t\t\tset: function set() {\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(LOD.prototype, {\n\t\tobjects: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.LOD: .objects has been renamed to .levels.');\n\t\t\t\treturn this.levels;\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperty(Skeleton.prototype, 'useVertexTexture', {\n\t\tget: function get() {\n\t\t\tconsole.warn('THREE.Skeleton: useVertexTexture has been removed.');\n\t\t},\n\t\tset: function set() {\n\t\t\tconsole.warn('THREE.Skeleton: useVertexTexture has been removed.');\n\t\t}\n\t});\n\n\tSkinnedMesh.prototype.initBones = function () {\n\t\tconsole.error('THREE.SkinnedMesh: initBones() has been removed.');\n\t};\n\n\tObject.defineProperty(Curve.prototype, '__arcLengthDivisions', {\n\t\tget: function get() {\n\t\t\tconsole.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n\t\t\treturn this.arcLengthDivisions;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tconsole.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n\t\t\tthis.arcLengthDivisions = value;\n\t\t}\n\t}); //\n\n\tPerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n\t\tconsole.warn('THREE.PerspectiveCamera.setLens is deprecated. ' + 'Use .setFocalLength and .filmGauge for a photographic setup.');\n\t\tif (filmGauge !== undefined) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength(focalLength);\n\t}; //\n\n\n\tObject.defineProperties(Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function set() {\n\t\t\t\tconsole.warn('THREE.Light: .onlyShadow has been removed.');\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n\t\t\t\tthis.shadow.camera.fov = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n\t\t\t\tthis.shadow.camera.left = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n\t\t\t\tthis.shadow.camera.right = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n\t\t\t\tthis.shadow.camera.top = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n\t\t\t\tthis.shadow.camera.bottom = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n\t\t\t\tthis.shadow.camera.near = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n\t\t\t\tthis.shadow.camera.far = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function set() {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n\t\t\t\tthis.shadow.bias = value;\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function set() {\n\t\t\t\tconsole.warn('THREE.Light: .shadowDarkness has been removed.');\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n\t\t\t\tthis.shadow.mapSize.width = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n\t\t\t\tthis.shadow.mapSize.height = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tObject.defineProperties(BufferAttribute.prototype, {\n\t\tlength: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\n\t\t\t\treturn this.array.length;\n\t\t\t}\n\t\t},\n\t\tdynamic: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\t\t\t},\n\t\t\tset: function set()\n\t\t\t/* value */\n\t\t\t{\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n\t\t\t\tthis.setUsage(DynamicDrawUsage);\n\t\t\t}\n\t\t}\n\t});\n\tObject.assign(BufferAttribute.prototype, {\n\t\tsetDynamic: function setDynamic(value) {\n\t\t\tconsole.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');\n\t\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n\t\t\treturn this;\n\t\t},\n\t\tcopyIndicesArray: function copyIndicesArray()\n\t\t/* indices */\n\t\t{\n\t\t\tconsole.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\n\t\t},\n\t\tsetArray: function setArray()\n\t\t/* array */\n\t\t{\n\t\t\tconsole.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n\t\t}\n\t});\n\tObject.assign(BufferGeometry.prototype, {\n\t\taddIndex: function addIndex(index) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n\t\t\tthis.setIndex(index);\n\t\t},\n\t\taddAttribute: function addAttribute(name, attribute) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');\n\n\t\t\tif (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\n\t\t\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n\t\t\t\treturn this.setAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n\t\t\t}\n\n\t\t\tif (name === 'index') {\n\t\t\t\tconsole.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n\t\t\t\tthis.setIndex(attribute);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\treturn this.setAttribute(name, attribute);\n\t\t},\n\t\taddDrawCall: function addDrawCall(start, count, indexOffset) {\n\t\t\tif (indexOffset !== undefined) {\n\t\t\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n\t\t\t}\n\n\t\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n\t\t\tthis.addGroup(start, count);\n\t\t},\n\t\tclearDrawCalls: function clearDrawCalls() {\n\t\t\tconsole.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n\t\t\tthis.clearGroups();\n\t\t},\n\t\tcomputeOffsets: function computeOffsets() {\n\t\t\tconsole.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n\t\t},\n\t\tremoveAttribute: function removeAttribute(name) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');\n\t\t\treturn this.deleteAttribute(name);\n\t\t},\n\t\tapplyMatrix: function applyMatrix(matrix) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');\n\t\t\treturn this.applyMatrix4(matrix);\n\t\t}\n\t});\n\tObject.defineProperties(BufferGeometry.prototype, {\n\t\tdrawcalls: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(InstancedBufferGeometry.prototype, {\n\t\tmaxInstancedCount: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.');\n\t\t\t\treturn this.instanceCount;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.');\n\t\t\t\tthis.instanceCount = value;\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(Raycaster.prototype, {\n\t\tlinePrecision: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.');\n\t\t\t\treturn this.params.Line.threshold;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.');\n\t\t\t\tthis.params.Line.threshold = value;\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(InterleavedBuffer.prototype, {\n\t\tdynamic: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.');\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.');\n\t\t\t\tthis.setUsage(value);\n\t\t\t}\n\t\t}\n\t});\n\tObject.assign(InterleavedBuffer.prototype, {\n\t\tsetDynamic: function setDynamic(value) {\n\t\t\tconsole.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');\n\t\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n\t\t\treturn this;\n\t\t},\n\t\tsetArray: function setArray()\n\t\t/* array */\n\t\t{\n\t\t\tconsole.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n\t\t}\n\t}); //\n\n\tObject.assign(ExtrudeGeometry.prototype, {\n\t\tgetArrays: function getArrays() {\n\t\t\tconsole.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');\n\t\t},\n\t\taddShapeList: function addShapeList() {\n\t\t\tconsole.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');\n\t\t},\n\t\taddShape: function addShape() {\n\t\t\tconsole.error('THREE.ExtrudeGeometry: .addShape() has been removed.');\n\t\t}\n\t}); //\n\n\tObject.assign(Scene.prototype, {\n\t\tdispose: function dispose() {\n\t\t\tconsole.error('THREE.Scene: .dispose() has been removed.');\n\t\t}\n\t}); //\n\n\tObject.defineProperties(Uniform.prototype, {\n\t\tdynamic: {\n\t\t\tset: function set() {\n\t\t\t\tconsole.warn('THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.');\n\t\t\t}\n\t\t},\n\t\tonUpdate: {\n\t\t\tvalue: function value() {\n\t\t\t\tconsole.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tObject.defineProperties(Material.prototype, {\n\t\twrapAround: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\n\t\t\t},\n\t\t\tset: function set() {\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\n\t\t\t}\n\t\t},\n\t\toverdraw: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\n\t\t\t},\n\t\t\tset: function set() {\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.Material: .wrapRGB has been removed.');\n\t\t\t\treturn new Color();\n\t\t\t}\n\t\t},\n\t\tshading: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t\tthis.flatShading = value === FlatShading;\n\t\t\t}\n\t\t},\n\t\tstencilMask: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n\t\t\t\treturn this.stencilFuncMask;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n\t\t\t\tthis.stencilFuncMask = value;\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(MeshPhongMaterial.prototype, {\n\t\tmetal: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.');\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function set() {\n\t\t\t\tconsole.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead');\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(MeshPhysicalMaterial.prototype, {\n\t\ttransparency: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.');\n\t\t\t\treturn this.transmission;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.');\n\t\t\t\tthis.transmission = value;\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(ShaderMaterial.prototype, {\n\t\tderivatives: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n\t\t\t\treturn this.extensions.derivatives;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n\t\t\t\tthis.extensions.derivatives = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tObject.assign(WebGLRenderer.prototype, {\n\t\tclearTarget: function clearTarget(renderTarget, color, depth, stencil) {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');\n\t\t\tthis.setRenderTarget(renderTarget);\n\t\t\tthis.clear(color, depth, stencil);\n\t\t},\n\t\tanimate: function animate(callback) {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\n\t\t\tthis.setAnimationLoop(callback);\n\t\t},\n\t\tgetCurrentRenderTarget: function getCurrentRenderTarget() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\n\t\t\treturn this.getRenderTarget();\n\t\t},\n\t\tgetMaxAnisotropy: function getMaxAnisotropy() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\n\t\t\treturn this.capabilities.getMaxAnisotropy();\n\t\t},\n\t\tgetPrecision: function getPrecision() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\n\t\t\treturn this.capabilities.precision;\n\t\t},\n\t\tresetGLState: function resetGLState() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\n\t\t\treturn this.state.reset();\n\t\t},\n\t\tsupportsFloatTextures: function supportsFloatTextures() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n\t\t\treturn this.extensions.get('OES_texture_float');\n\t\t},\n\t\tsupportsHalfFloatTextures: function supportsHalfFloatTextures() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n\t\t\treturn this.extensions.get('OES_texture_half_float');\n\t\t},\n\t\tsupportsStandardDerivatives: function supportsStandardDerivatives() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n\t\t\treturn this.extensions.get('OES_standard_derivatives');\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function supportsCompressedTextureS3TC() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n\t\t\treturn this.extensions.get('WEBGL_compressed_texture_s3tc');\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function supportsCompressedTexturePVRTC() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n\t\t\treturn this.extensions.get('WEBGL_compressed_texture_pvrtc');\n\t\t},\n\t\tsupportsBlendMinMax: function supportsBlendMinMax() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n\t\t\treturn this.extensions.get('EXT_blend_minmax');\n\t\t},\n\t\tsupportsVertexTextures: function supportsVertexTextures() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\n\t\t\treturn this.capabilities.vertexTextures;\n\t\t},\n\t\tsupportsInstancedArrays: function supportsInstancedArrays() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n\t\t\treturn this.extensions.get('ANGLE_instanced_arrays');\n\t\t},\n\t\tenableScissorTest: function enableScissorTest(boolean) {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n\t\t\tthis.setScissorTest(boolean);\n\t\t},\n\t\tinitMaterial: function initMaterial() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n\t\t},\n\t\taddPrePlugin: function addPrePlugin() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n\t\t},\n\t\taddPostPlugin: function addPostPlugin() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n\t\t},\n\t\tupdateShadowMap: function updateShadowMap() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n\t\t},\n\t\tsetFaceCulling: function setFaceCulling() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\n\t\t},\n\t\tallocTextureUnit: function allocTextureUnit() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');\n\t\t},\n\t\tsetTexture: function setTexture() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .setTexture() has been removed.');\n\t\t},\n\t\tsetTexture2D: function setTexture2D() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');\n\t\t},\n\t\tsetTextureCube: function setTextureCube() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');\n\t\t},\n\t\tgetActiveMipMapLevel: function getActiveMipMapLevel() {\n\t\t\tconsole.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');\n\t\t\treturn this.getActiveMipmapLevel();\n\t\t}\n\t});\n\tObject.defineProperties(WebGLRenderer.prototype, {\n\t\tshadowMapEnabled: {\n\t\t\tget: function get() {\n\t\t\t\treturn this.shadowMap.enabled;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n\t\t\t\tthis.shadowMap.enabled = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function get() {\n\t\t\t\treturn this.shadowMap.type;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n\t\t\t\tthis.shadowMap.type = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function set()\n\t\t\t/* value */\n\t\t\t{\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\tcontext: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');\n\t\t\t\treturn this.getContext();\n\t\t\t}\n\t\t},\n\t\tvr: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');\n\t\t\t\treturn this.xr;\n\t\t\t}\n\t\t},\n\t\tgammaInput: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function set() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n\t\t\t}\n\t\t},\n\t\tgammaOutput: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n\t\t\t\tthis.outputEncoding = value === true ? sRGBEncoding : LinearEncoding;\n\t\t\t}\n\t\t},\n\t\ttoneMappingWhitePoint: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n\t\t\t\treturn 1.0;\n\t\t\t},\n\t\t\tset: function set() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(WebGLShadowMap.prototype, {\n\t\tcullFace: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function set()\n\t\t\t/* cullFace */\n\t\t\t{\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\trenderReverseSided: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function set() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\trenderSingleSided: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function set() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t}\n\t});\n\tfunction WebGLRenderTargetCube(width, height, options) {\n\t\tconsole.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');\n\t\treturn new WebGLCubeRenderTarget(width, options);\n\t} //\n\n\tObject.defineProperties(WebGLRenderTarget.prototype, {\n\t\twrapS: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n\t\t\t\treturn this.texture.wrapS;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n\t\t\t\tthis.texture.wrapS = value;\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n\t\t\t\treturn this.texture.wrapT;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n\t\t\t\tthis.texture.wrapT = value;\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n\t\t\t\treturn this.texture.magFilter;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n\t\t\t\tthis.texture.magFilter = value;\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n\t\t\t\treturn this.texture.minFilter;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n\t\t\t\tthis.texture.minFilter = value;\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n\t\t\t\treturn this.texture.anisotropy;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n\t\t\t\tthis.texture.anisotropy = value;\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n\t\t\t\treturn this.texture.offset;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n\t\t\t\tthis.texture.offset = value;\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n\t\t\t\treturn this.texture.repeat;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n\t\t\t\tthis.texture.repeat = value;\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n\t\t\t\treturn this.texture.format;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n\t\t\t\tthis.texture.format = value;\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n\t\t\t\treturn this.texture.type;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n\t\t\t\tthis.texture.type = value;\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function get() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n\t\t\t\treturn this.texture.generateMipmaps;\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n\t\t\t\tthis.texture.generateMipmaps = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tObject.defineProperties(Audio.prototype, {\n\t\tload: {\n\t\t\tvalue: function value(file) {\n\t\t\t\tconsole.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\n\t\t\t\tvar scope = this;\n\t\t\t\tvar audioLoader = new AudioLoader();\n\t\t\t\taudioLoader.load(file, function (buffer) {\n\t\t\t\t\tscope.setBuffer(buffer);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t},\n\t\tstartTime: {\n\t\t\tset: function set() {\n\t\t\t\tconsole.warn('THREE.Audio: .startTime is now .play( delay ).');\n\t\t\t}\n\t\t}\n\t});\n\n\tAudioAnalyser.prototype.getData = function () {\n\t\tconsole.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n\t\treturn this.getFrequencyData();\n\t}; //\n\n\n\tCubeCamera.prototype.updateCubeMap = function (renderer, scene) {\n\t\tconsole.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\n\t\treturn this.update(renderer, scene);\n\t};\n\n\tCubeCamera.prototype.clear = function (renderer, color, depth, stencil) {\n\t\tconsole.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');\n\t\treturn this.renderTarget.clear(renderer, color, depth, stencil);\n\t}; //\n\n\n\tvar GeometryUtils = {\n\t\tmerge: function merge(geometry1, geometry2, materialIndexOffset) {\n\t\t\tconsole.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');\n\t\t\tvar matrix;\n\n\t\t\tif (geometry2.isMesh) {\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\t\t\t}\n\n\t\t\tgeometry1.merge(geometry2, matrix, materialIndexOffset);\n\t\t},\n\t\tcenter: function center(geometry) {\n\t\t\tconsole.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');\n\t\t\treturn geometry.center();\n\t\t}\n\t};\n\tImageUtils.crossOrigin = undefined;\n\n\tImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\n\t\tconsole.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\tvar texture = loader.load(url, onLoad, undefined, onError);\n\t\tif (mapping) texture.mapping = mapping;\n\t\treturn texture;\n\t};\n\n\tImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\n\t\tconsole.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\tvar texture = loader.load(urls, onLoad, undefined, onError);\n\t\tif (mapping) texture.mapping = mapping;\n\t\treturn texture;\n\t};\n\n\tImageUtils.loadCompressedTexture = function () {\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n\t};\n\n\tImageUtils.loadCompressedTextureCube = function () {\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n\t}; //\n\n\n\tfunction CanvasRenderer() {\n\t\tconsole.error('THREE.CanvasRenderer has been removed');\n\t} //\n\n\tfunction JSONLoader() {\n\t\tconsole.error('THREE.JSONLoader has been removed.');\n\t} //\n\n\tvar SceneUtils = {\n\t\tcreateMultiMaterialObject: function createMultiMaterialObject()\n\t\t/* geometry, materials */\n\t\t{\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t},\n\t\tdetach: function detach()\n\t\t/* child, parent, scene */\n\t\t{\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t},\n\t\tattach: function attach()\n\t\t/* child, scene, parent */\n\t\t{\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t}\n\t}; //\n\n\tfunction LensFlare() {\n\t\tconsole.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');\n\t}\n\n\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t/* eslint-disable no-undef */\n\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register', {\n\t\t\tdetail: {\n\t\t\t\trevision: REVISION\n\t\t\t}\n\t\t}));\n\t\t/* eslint-enable no-undef */\n\n\t}\n\n\tif (typeof window !== 'undefined') {\n\t\tif (window.__THREE__) {\n\t\t\tconsole.warn('WARNING: Multiple instances of Three.js being imported.');\n\t\t} else {\n\t\t\twindow.__THREE__ = REVISION;\n\t\t}\n\t}\n\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n\texports.AddEquation = AddEquation;\n\texports.AddOperation = AddOperation;\n\texports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.AlphaFormat = AlphaFormat;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.AlwaysStencilFunc = AlwaysStencilFunc;\n\texports.AmbientLight = AmbientLight;\n\texports.AmbientLightProbe = AmbientLightProbe;\n\texports.AnimationClip = AnimationClip;\n\texports.AnimationLoader = AnimationLoader;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationUtils = AnimationUtils;\n\texports.ArcCurve = ArcCurve;\n\texports.ArrayCamera = ArrayCamera;\n\texports.ArrowHelper = ArrowHelper;\n\texports.Audio = Audio;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.AudioContext = AudioContext;\n\texports.AudioListener = AudioListener;\n\texports.AudioLoader = AudioLoader;\n\texports.AxesHelper = AxesHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.BackSide = BackSide;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.Bone = Bone;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.Box2 = Box2;\n\texports.Box3 = Box3;\n\texports.Box3Helper = Box3Helper;\n\texports.BoxBufferGeometry = BoxGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxHelper = BoxHelper;\n\texports.BufferAttribute = BufferAttribute;\n\texports.BufferGeometry = BufferGeometry;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.ByteType = ByteType;\n\texports.Cache = Cache;\n\texports.Camera = Camera;\n\texports.CameraHelper = CameraHelper;\n\texports.CanvasRenderer = CanvasRenderer;\n\texports.CanvasTexture = CanvasTexture;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.CircleBufferGeometry = CircleGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.Clock = Clock;\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\texports.Color = Color;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.ConeBufferGeometry = ConeGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.CubeCamera = CubeCamera;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.CubeTexture = CubeTexture;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.CullFaceNone = CullFaceNone;\n\texports.Curve = Curve;\n\texports.CurvePath = CurvePath;\n\texports.CustomBlending = CustomBlending;\n\texports.CustomToneMapping = CustomToneMapping;\n\texports.CylinderBufferGeometry = CylinderGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.Cylindrical = Cylindrical;\n\texports.DataTexture = DataTexture;\n\texports.DataTexture2DArray = DataTexture2DArray;\n\texports.DataTexture3D = DataTexture3D;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.DataUtils = DataUtils;\n\texports.DecrementStencilOp = DecrementStencilOp;\n\texports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.DepthTexture = DepthTexture;\n\texports.DirectionalLight = DirectionalLight;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.DodecahedronBufferGeometry = DodecahedronGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DoubleSide = DoubleSide;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.DynamicCopyUsage = DynamicCopyUsage;\n\texports.DynamicDrawUsage = DynamicDrawUsage;\n\texports.DynamicReadUsage = DynamicReadUsage;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.EdgesHelper = EdgesHelper;\n\texports.EllipseCurve = EllipseCurve;\n\texports.EqualDepth = EqualDepth;\n\texports.EqualStencilFunc = EqualStencilFunc;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.Euler = Euler;\n\texports.EventDispatcher = EventDispatcher;\n\texports.ExtrudeBufferGeometry = ExtrudeGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.Face3 = Face3;\n\texports.Face4 = Face4;\n\texports.FaceColors = FaceColors;\n\texports.FileLoader = FileLoader;\n\texports.FlatShading = FlatShading;\n\texports.Float16BufferAttribute = Float16BufferAttribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.FloatType = FloatType;\n\texports.Fog = Fog;\n\texports.FogExp2 = FogExp2;\n\texports.Font = Font;\n\texports.FontLoader = FontLoader;\n\texports.FrontSide = FrontSide;\n\texports.Frustum = Frustum;\n\texports.GLBufferAttribute = GLBufferAttribute;\n\texports.GLSL1 = GLSL1;\n\texports.GLSL3 = GLSL3;\n\texports.GammaEncoding = GammaEncoding;\n\texports.GeometryUtils = GeometryUtils;\n\texports.GreaterDepth = GreaterDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n\texports.GreaterStencilFunc = GreaterStencilFunc;\n\texports.GridHelper = GridHelper;\n\texports.Group = Group;\n\texports.HalfFloatType = HalfFloatType;\n\texports.HemisphereLight = HemisphereLight;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.HemisphereLightProbe = HemisphereLightProbe;\n\texports.IcosahedronBufferGeometry = IcosahedronGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.ImageBitmapLoader = ImageBitmapLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.ImageUtils = ImageUtils;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.IncrementStencilOp = IncrementStencilOp;\n\texports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InstancedMesh = InstancedMesh;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.IntType = IntType;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.Interpolant = Interpolant;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.InvertStencilOp = InvertStencilOp;\n\texports.JSONLoader = JSONLoader;\n\texports.KeepStencilOp = KeepStencilOp;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.LOD = LOD;\n\texports.LatheBufferGeometry = LatheGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.Layers = Layers;\n\texports.LensFlare = LensFlare;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.LessEqualStencilFunc = LessEqualStencilFunc;\n\texports.LessStencilFunc = LessStencilFunc;\n\texports.Light = Light;\n\texports.LightProbe = LightProbe;\n\texports.Line = Line;\n\texports.Line3 = Line3;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.LineCurve = LineCurve;\n\texports.LineCurve3 = LineCurve3;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineLoop = LineLoop;\n\texports.LinePieces = LinePieces;\n\texports.LineSegments = LineSegments;\n\texports.LineStrip = LineStrip;\n\texports.LinearEncoding = LinearEncoding;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n\texports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.Loader = Loader;\n\texports.LoaderUtils = LoaderUtils;\n\texports.LoadingManager = LoadingManager;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopPingPong = LoopPingPong;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.MOUSE = MOUSE;\n\texports.Material = Material;\n\texports.MaterialLoader = MaterialLoader;\n\texports.Math = MathUtils;\n\texports.MathUtils = MathUtils;\n\texports.Matrix3 = Matrix3;\n\texports.Matrix4 = Matrix4;\n\texports.MaxEquation = MaxEquation;\n\texports.Mesh = Mesh;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MinEquation = MinEquation;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.MixOperation = MixOperation;\n\texports.MultiMaterial = MultiMaterial;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n\texports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n\texports.NeverDepth = NeverDepth;\n\texports.NeverStencilFunc = NeverStencilFunc;\n\texports.NoBlending = NoBlending;\n\texports.NoColors = NoColors;\n\texports.NoToneMapping = NoToneMapping;\n\texports.NormalAnimationBlendMode = NormalAnimationBlendMode;\n\texports.NormalBlending = NormalBlending;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.NotEqualStencilFunc = NotEqualStencilFunc;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.Object3D = Object3D;\n\texports.ObjectLoader = ObjectLoader;\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n\texports.OctahedronBufferGeometry = OctahedronGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OneFactor = OneFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.PMREMGenerator = PMREMGenerator;\n\texports.ParametricBufferGeometry = ParametricGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.Particle = Particle;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystem = ParticleSystem;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Path = Path;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.Plane = Plane;\n\texports.PlaneBufferGeometry = PlaneGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneHelper = PlaneHelper;\n\texports.PointCloud = PointCloud;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.PointLight = PointLight;\n\texports.PointLightHelper = PointLightHelper;\n\texports.Points = Points;\n\texports.PointsMaterial = PointsMaterial;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.PolyhedronBufferGeometry = PolyhedronGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PositionalAudio = PositionalAudio;\n\texports.PropertyBinding = PropertyBinding;\n\texports.PropertyMixer = PropertyMixer;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.Quaternion = Quaternion;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.REVISION = REVISION;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.RGBAFormat = RGBAFormat;\n\texports.RGBAIntegerFormat = RGBAIntegerFormat;\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n\texports.RGBA_BPTC_Format = RGBA_BPTC_Format;\n\texports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.RGBEFormat = RGBEFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBIntegerFormat = RGBIntegerFormat;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.RGB_ETC2_Format = RGB_ETC2_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGFormat = RGFormat;\n\texports.RGIntegerFormat = RGIntegerFormat;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.Ray = Ray;\n\texports.Raycaster = Raycaster;\n\texports.RectAreaLight = RectAreaLight;\n\texports.RedFormat = RedFormat;\n\texports.RedIntegerFormat = RedIntegerFormat;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ReplaceStencilOp = ReplaceStencilOp;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.RingBufferGeometry = RingGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.SRGB8_ALPHA8_ASTC_10x10_Format = SRGB8_ALPHA8_ASTC_10x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x5_Format = SRGB8_ALPHA8_ASTC_10x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x6_Format = SRGB8_ALPHA8_ASTC_10x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x8_Format = SRGB8_ALPHA8_ASTC_10x8_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x10_Format = SRGB8_ALPHA8_ASTC_12x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x12_Format = SRGB8_ALPHA8_ASTC_12x12_Format;\n\texports.SRGB8_ALPHA8_ASTC_4x4_Format = SRGB8_ALPHA8_ASTC_4x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x4_Format = SRGB8_ALPHA8_ASTC_5x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x5_Format = SRGB8_ALPHA8_ASTC_5x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x5_Format = SRGB8_ALPHA8_ASTC_6x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x6_Format = SRGB8_ALPHA8_ASTC_6x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x5_Format = SRGB8_ALPHA8_ASTC_8x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x6_Format = SRGB8_ALPHA8_ASTC_8x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x8_Format = SRGB8_ALPHA8_ASTC_8x8_Format;\n\texports.Scene = Scene;\n\texports.SceneUtils = SceneUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.ShaderLib = ShaderLib;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.Shape = Shape;\n\texports.ShapeBufferGeometry = ShapeGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapePath = ShapePath;\n\texports.ShapeUtils = ShapeUtils;\n\texports.ShortType = ShortType;\n\texports.Skeleton = Skeleton;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.SmoothShading = SmoothShading;\n\texports.Sphere = Sphere;\n\texports.SphereBufferGeometry = SphereGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.Spherical = Spherical;\n\texports.SphericalHarmonics3 = SphericalHarmonics3;\n\texports.Spline = Spline;\n\texports.SplineCurve = SplineCurve;\n\texports.SplineCurve3 = SplineCurve3;\n\texports.SpotLight = SpotLight;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.Sprite = Sprite;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.StaticCopyUsage = StaticCopyUsage;\n\texports.StaticDrawUsage = StaticDrawUsage;\n\texports.StaticReadUsage = StaticReadUsage;\n\texports.StereoCamera = StereoCamera;\n\texports.StreamCopyUsage = StreamCopyUsage;\n\texports.StreamDrawUsage = StreamDrawUsage;\n\texports.StreamReadUsage = StreamReadUsage;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.SubtractEquation = SubtractEquation;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.TOUCH = TOUCH;\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n\texports.TetrahedronBufferGeometry = TetrahedronGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TextBufferGeometry = TextGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.Texture = Texture;\n\texports.TextureLoader = TextureLoader;\n\texports.TorusBufferGeometry = TorusGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.Triangle = Triangle;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TubeBufferGeometry = TubeGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.UVMapping = UVMapping;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uniform = Uniform;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.VSMShadowMap = VSMShadowMap;\n\texports.Vector2 = Vector2;\n\texports.Vector3 = Vector3;\n\texports.Vector4 = Vector4;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.Vertex = Vertex;\n\texports.VertexColors = VertexColors;\n\texports.VideoTexture = VideoTexture;\n\texports.WebGL1Renderer = WebGL1Renderer;\n\texports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\n\texports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.WireframeHelper = WireframeHelper;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.XHRLoader = XHRLoader;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroFactor = ZeroFactor;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.ZeroStencilOp = ZeroStencilOp;\n\texports.sRGBEncoding = sRGBEncoding;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]},"metadata":{},"sourceType":"module"}