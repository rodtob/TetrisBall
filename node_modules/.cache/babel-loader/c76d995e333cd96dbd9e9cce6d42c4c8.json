{"ast":null,"code":"import * as THREE from \"./three\";\n\nwindow.Physijs = function () {\n  'use strict';\n\n  var SUPPORT_TRANSFERABLE,\n      _is_simulating = false,\n      _Physijs = Physijs,\n      // used for noConflict method\n  Physijs = {},\n      // object assigned to window.Physijs\n  Eventable,\n      // class to provide simple event methods\n  getObjectId,\n      // returns a unique ID for a Physijs mesh object\n  getEulerXYZFromQuaternion,\n      getQuatertionFromEuler,\n      convertWorldPositionToObject,\n      // Converts a world-space position to object-space\n  addObjectChildren,\n      _temp1,\n      _temp2,\n      _temp_vector3_1 = new THREE.Vector3(),\n      _temp_vector3_2 = new THREE.Vector3(),\n      _temp_matrix4_1 = new THREE.Matrix4(),\n      _quaternion_1 = new THREE.Quaternion(),\n      // constants\n  MESSAGE_TYPES = {\n    WORLDREPORT: 0,\n    COLLISIONREPORT: 1,\n    VEHICLEREPORT: 2,\n    CONSTRAINTREPORT: 3\n  },\n      REPORT_ITEMSIZE = 14,\n      COLLISIONREPORT_ITEMSIZE = 5,\n      VEHICLEREPORT_ITEMSIZE = 9,\n      CONSTRAINTREPORT_ITEMSIZE = 6;\n\n  Physijs.scripts = {};\n\n  Eventable = function () {\n    this._eventListeners = {};\n  };\n\n  Eventable.prototype.addEventListener = function (event_name, callback) {\n    if (!this._eventListeners.hasOwnProperty(event_name)) {\n      this._eventListeners[event_name] = [];\n    }\n\n    this._eventListeners[event_name].push(callback);\n  };\n\n  Eventable.prototype.removeEventListener = function (event_name, callback) {\n    var index;\n    if (!this._eventListeners.hasOwnProperty(event_name)) return false;\n\n    if ((index = this._eventListeners[event_name].indexOf(callback)) >= 0) {\n      this._eventListeners[event_name].splice(index, 1);\n\n      return true;\n    }\n\n    return false;\n  };\n\n  Eventable.prototype.dispatchEvent = function (event_name) {\n    var i,\n        parameters = Array.prototype.splice.call(arguments, 1);\n\n    if (this._eventListeners.hasOwnProperty(event_name)) {\n      for (i = 0; i < this._eventListeners[event_name].length; i++) {\n        this._eventListeners[event_name][i].apply(this, parameters);\n      }\n    }\n  };\n\n  Eventable.make = function (obj) {\n    obj.prototype.addEventListener = Eventable.prototype.addEventListener;\n    obj.prototype.removeEventListener = Eventable.prototype.removeEventListener;\n    obj.prototype.dispatchEvent = Eventable.prototype.dispatchEvent;\n  };\n\n  getObjectId = function () {\n    var _id = 1;\n    return function () {\n      return _id++;\n    };\n  }();\n\n  getEulerXYZFromQuaternion = function (x, y, z, w) {\n    return new THREE.Vector3(Math.atan2(2 * (x * w - y * z), w * w - x * x - y * y + z * z), Math.asin(2 * (x * z + y * w)), Math.atan2(2 * (z * w - x * y), w * w + x * x - y * y - z * z));\n  };\n\n  getQuatertionFromEuler = function (x, y, z) {\n    var c1, s1, c2, s2, c3, s3, c1c2, s1s2;\n    c1 = Math.cos(y);\n    s1 = Math.sin(y);\n    c2 = Math.cos(-z);\n    s2 = Math.sin(-z);\n    c3 = Math.cos(x);\n    s3 = Math.sin(x);\n    c1c2 = c1 * c2;\n    s1s2 = s1 * s2;\n    return {\n      w: c1c2 * c3 - s1s2 * s3,\n      x: c1c2 * s3 + s1s2 * c3,\n      y: s1 * c2 * c3 + c1 * s2 * s3,\n      z: c1 * s2 * c3 - s1 * c2 * s3\n    };\n  };\n\n  convertWorldPositionToObject = function (position, object) {\n    _temp_matrix4_1.identity(); // reset temp matrix\n    // Set the temp matrix's rotation to the object's rotation\n\n\n    _temp_matrix4_1.identity().makeRotationFromQuaternion(object.quaternion); // Invert rotation matrix in order to \"unrotate\" a point back to object space\n\n\n    _temp_matrix4_1.getInverse(_temp_matrix4_1); // Yay! Temp vars!\n\n\n    _temp_vector3_1.copy(position);\n\n    _temp_vector3_2.copy(object.position); // Apply the rotation\n\n\n    return _temp_vector3_1.sub(_temp_vector3_2).applyMatrix4(_temp_matrix4_1);\n  }; // Physijs.noConflict\n\n\n  Physijs.noConflict = function () {\n    window.Physijs = _Physijs;\n    return Physijs;\n  }; // Physijs.createMaterial\n\n\n  Physijs.createMaterial = function (material, friction, restitution) {\n    var physijs_material = function () {};\n\n    physijs_material.prototype = material;\n    physijs_material = new physijs_material();\n    physijs_material._physijs = {\n      id: material.id,\n      friction: friction === undefined ? .8 : friction,\n      restitution: restitution === undefined ? .2 : restitution\n    };\n    return physijs_material;\n  }; // Constraints\n\n\n  Physijs.PointConstraint = function (objecta, objectb, position) {\n    if (position === undefined) {\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'point';\n    this.appliedImpulse = 0;\n    this.id = getObjectId();\n    this.objecta = objecta._physijs.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n\n    if (objectb) {\n      this.objectb = objectb._physijs.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    }\n  };\n\n  Physijs.PointConstraint.prototype.getDefinition = function () {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb\n    };\n  };\n\n  Physijs.HingeConstraint = function (objecta, objectb, position, axis) {\n    if (axis === undefined) {\n      axis = position;\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'hinge';\n    this.appliedImpulse = 0;\n    this.id = getObjectId();\n    this.scene = objecta.parent;\n    this.objecta = objecta._physijs.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.position = position.clone();\n    this.axis = axis;\n\n    if (objectb) {\n      this.objectb = objectb._physijs.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    }\n  };\n\n  Physijs.HingeConstraint.prototype.getDefinition = function () {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axis: this.axis\n    };\n  };\n  /*\r\n   * low = minimum angle in radians\r\n   * high = maximum angle in radians\r\n   * bias_factor = applied as a factor to constraint error\r\n   * relaxation_factor = controls bounce (0.0 == no bounce)\r\n   */\n\n\n  Physijs.HingeConstraint.prototype.setLimits = function (low, high, bias_factor, relaxation_factor) {\n    this.scene.execute('hinge_setLimits', {\n      constraint: this.id,\n      low: low,\n      high: high,\n      bias_factor: bias_factor,\n      relaxation_factor: relaxation_factor\n    });\n  };\n\n  Physijs.HingeConstraint.prototype.enableAngularMotor = function (velocity, acceleration) {\n    this.scene.execute('hinge_enableAngularMotor', {\n      constraint: this.id,\n      velocity: velocity,\n      acceleration: acceleration\n    });\n  };\n\n  Physijs.HingeConstraint.prototype.disableMotor = function (velocity, acceleration) {\n    this.scene.execute('hinge_disableMotor', {\n      constraint: this.id\n    });\n  };\n\n  Physijs.SliderConstraint = function (objecta, objectb, position, axis) {\n    if (axis === undefined) {\n      axis = position;\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'slider';\n    this.appliedImpulse = 0;\n    this.id = getObjectId();\n    this.scene = objecta.parent;\n    this.objecta = objecta._physijs.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.axis = axis;\n\n    if (objectb) {\n      this.objectb = objectb._physijs.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    }\n  };\n\n  Physijs.SliderConstraint.prototype.getDefinition = function () {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axis: this.axis\n    };\n  };\n\n  Physijs.SliderConstraint.prototype.setLimits = function (lin_lower, lin_upper, ang_lower, ang_upper) {\n    this.scene.execute('slider_setLimits', {\n      constraint: this.id,\n      lin_lower: lin_lower,\n      lin_upper: lin_upper,\n      ang_lower: ang_lower,\n      ang_upper: ang_upper\n    });\n  };\n\n  Physijs.SliderConstraint.prototype.setRestitution = function (linear, angular) {\n    this.scene.execute('slider_setRestitution', {\n      constraint: this.id,\n      linear: linear,\n      angular: angular\n    });\n  };\n\n  Physijs.SliderConstraint.prototype.enableLinearMotor = function (velocity, acceleration) {\n    this.scene.execute('slider_enableLinearMotor', {\n      constraint: this.id,\n      velocity: velocity,\n      acceleration: acceleration\n    });\n  };\n\n  Physijs.SliderConstraint.prototype.disableLinearMotor = function () {\n    this.scene.execute('slider_disableLinearMotor', {\n      constraint: this.id\n    });\n  };\n\n  Physijs.SliderConstraint.prototype.enableAngularMotor = function (velocity, acceleration) {\n    this.scene.execute('slider_enableAngularMotor', {\n      constraint: this.id,\n      velocity: velocity,\n      acceleration: acceleration\n    });\n  };\n\n  Physijs.SliderConstraint.prototype.disableAngularMotor = function () {\n    this.scene.execute('slider_disableAngularMotor', {\n      constraint: this.id\n    });\n  };\n\n  Physijs.ConeTwistConstraint = function (objecta, objectb, position) {\n    if (position === undefined) {\n      throw 'Both objects must be defined in a ConeTwistConstraint.';\n    }\n\n    this.type = 'conetwist';\n    this.appliedImpulse = 0;\n    this.id = getObjectId();\n    this.scene = objecta.parent;\n    this.objecta = objecta._physijs.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.objectb = objectb._physijs.id;\n    this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    this.axisa = {\n      x: objecta.rotation.x,\n      y: objecta.rotation.y,\n      z: objecta.rotation.z\n    };\n    this.axisb = {\n      x: objectb.rotation.x,\n      y: objectb.rotation.y,\n      z: objectb.rotation.z\n    };\n  };\n\n  Physijs.ConeTwistConstraint.prototype.getDefinition = function () {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axisa: this.axisa,\n      axisb: this.axisb\n    };\n  };\n\n  Physijs.ConeTwistConstraint.prototype.setLimit = function (x, y, z) {\n    this.scene.execute('conetwist_setLimit', {\n      constraint: this.id,\n      x: x,\n      y: y,\n      z: z\n    });\n  };\n\n  Physijs.ConeTwistConstraint.prototype.enableMotor = function () {\n    this.scene.execute('conetwist_enableMotor', {\n      constraint: this.id\n    });\n  };\n\n  Physijs.ConeTwistConstraint.prototype.setMaxMotorImpulse = function (max_impulse) {\n    this.scene.execute('conetwist_setMaxMotorImpulse', {\n      constraint: this.id,\n      max_impulse: max_impulse\n    });\n  };\n\n  Physijs.ConeTwistConstraint.prototype.setMotorTarget = function (target) {\n    if (target instanceof THREE.Vector3) {\n      target = new THREE.Quaternion().setFromEuler(new THREE.Euler(target.x, target.y, target.z));\n    } else if (target instanceof THREE.Euler) {\n      target = new THREE.Quaternion().setFromEuler(target);\n    } else if (target instanceof THREE.Matrix4) {\n      target = new THREE.Quaternion().setFromRotationMatrix(target);\n    }\n\n    this.scene.execute('conetwist_setMotorTarget', {\n      constraint: this.id,\n      x: target.x,\n      y: target.y,\n      z: target.z,\n      w: target.w\n    });\n  };\n\n  Physijs.ConeTwistConstraint.prototype.disableMotor = function () {\n    this.scene.execute('conetwist_disableMotor', {\n      constraint: this.id\n    });\n  };\n\n  Physijs.DOFConstraint = function (objecta, objectb, position) {\n    if (position === undefined) {\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'dof';\n    this.appliedImpulse = 0;\n    this.id = getObjectId();\n    this.scene = objecta.parent;\n    this.objecta = objecta._physijs.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.axisa = {\n      x: objecta.rotation.x,\n      y: objecta.rotation.y,\n      z: objecta.rotation.z\n    };\n\n    if (objectb) {\n      this.objectb = objectb._physijs.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n      this.axisb = {\n        x: objectb.rotation.x,\n        y: objectb.rotation.y,\n        z: objectb.rotation.z\n      };\n    }\n  };\n\n  Physijs.DOFConstraint.prototype.getDefinition = function () {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axisa: this.axisa,\n      axisb: this.axisb\n    };\n  };\n\n  Physijs.DOFConstraint.prototype.setLinearLowerLimit = function (limit) {\n    this.scene.execute('dof_setLinearLowerLimit', {\n      constraint: this.id,\n      x: limit.x,\n      y: limit.y,\n      z: limit.z\n    });\n  };\n\n  Physijs.DOFConstraint.prototype.setLinearUpperLimit = function (limit) {\n    this.scene.execute('dof_setLinearUpperLimit', {\n      constraint: this.id,\n      x: limit.x,\n      y: limit.y,\n      z: limit.z\n    });\n  };\n\n  Physijs.DOFConstraint.prototype.setAngularLowerLimit = function (limit) {\n    this.scene.execute('dof_setAngularLowerLimit', {\n      constraint: this.id,\n      x: limit.x,\n      y: limit.y,\n      z: limit.z\n    });\n  };\n\n  Physijs.DOFConstraint.prototype.setAngularUpperLimit = function (limit) {\n    this.scene.execute('dof_setAngularUpperLimit', {\n      constraint: this.id,\n      x: limit.x,\n      y: limit.y,\n      z: limit.z\n    });\n  };\n\n  Physijs.DOFConstraint.prototype.enableAngularMotor = function (which) {\n    this.scene.execute('dof_enableAngularMotor', {\n      constraint: this.id,\n      which: which\n    });\n  };\n\n  Physijs.DOFConstraint.prototype.configureAngularMotor = function (which, low_angle, high_angle, velocity, max_force) {\n    this.scene.execute('dof_configureAngularMotor', {\n      constraint: this.id,\n      which: which,\n      low_angle: low_angle,\n      high_angle: high_angle,\n      velocity: velocity,\n      max_force: max_force\n    });\n  };\n\n  Physijs.DOFConstraint.prototype.disableAngularMotor = function (which) {\n    this.scene.execute('dof_disableAngularMotor', {\n      constraint: this.id,\n      which: which\n    });\n  }; // Physijs.Scene\n\n\n  Physijs.Scene = function (params) {\n    var self = this;\n    Eventable.call(this);\n    THREE.Scene.call(this);\n    this._worker = new Worker(Physijs.scripts.worker || 'physijs_worker.js');\n    this._worker.transferableMessage = this._worker.webkitPostMessage || this._worker.postMessage;\n    this._materials_ref_counts = {};\n    this._objects = {};\n    this._vehicles = {};\n    this._constraints = {};\n    var ab = new ArrayBuffer(1);\n\n    this._worker.transferableMessage(ab, [ab]);\n\n    SUPPORT_TRANSFERABLE = ab.byteLength === 0;\n\n    this._worker.onmessage = function (event) {\n      var _temp,\n          data = event.data;\n\n      if (data instanceof ArrayBuffer && data.byteLength !== 1) {\n        // byteLength === 1 is the worker making a SUPPORT_TRANSFERABLE test\n        data = new Float32Array(data);\n      }\n\n      if (data instanceof Float32Array) {\n        // transferable object\n        switch (data[0]) {\n          case MESSAGE_TYPES.WORLDREPORT:\n            self._updateScene(data);\n\n            break;\n\n          case MESSAGE_TYPES.COLLISIONREPORT:\n            self._updateCollisions(data);\n\n            break;\n\n          case MESSAGE_TYPES.VEHICLEREPORT:\n            self._updateVehicles(data);\n\n            break;\n\n          case MESSAGE_TYPES.CONSTRAINTREPORT:\n            self._updateConstraints(data);\n\n            break;\n        }\n      } else {\n        if (data.cmd) {\n          // non-transferable object\n          switch (data.cmd) {\n            case 'objectReady':\n              _temp = data.params;\n\n              if (self._objects[_temp]) {\n                self._objects[_temp].dispatchEvent('ready');\n              }\n\n              break;\n\n            case 'worldReady':\n              self.dispatchEvent('ready');\n              break;\n\n            case 'vehicle':\n              window.test = data;\n              break;\n\n            default:\n              // Do nothing, just show the message\n              console.debug('Received: ' + data.cmd);\n              console.dir(data.params);\n              break;\n          }\n        } else {\n          switch (data[0]) {\n            case MESSAGE_TYPES.WORLDREPORT:\n              self._updateScene(data);\n\n              break;\n\n            case MESSAGE_TYPES.COLLISIONREPORT:\n              self._updateCollisions(data);\n\n              break;\n\n            case MESSAGE_TYPES.VEHICLEREPORT:\n              self._updateVehicles(data);\n\n              break;\n\n            case MESSAGE_TYPES.CONSTRAINTREPORT:\n              self._updateConstraints(data);\n\n              break;\n          }\n        }\n      }\n    };\n\n    params = params || {};\n    params.ammo = Physijs.scripts.ammo || 'ammo.js';\n    params.fixedTimeStep = params.fixedTimeStep || 1 / 60;\n    params.rateLimit = params.rateLimit || true;\n    this.execute('init', params);\n  };\n\n  Physijs.Scene.prototype = new THREE.Scene();\n  Physijs.Scene.prototype.constructor = Physijs.Scene;\n  Eventable.make(Physijs.Scene);\n\n  Physijs.Scene.prototype._updateScene = function (data) {\n    var num_objects = data[1],\n        object,\n        i,\n        offset;\n\n    for (i = 0; i < num_objects; i++) {\n      offset = 2 + i * REPORT_ITEMSIZE;\n      object = this._objects[data[offset]];\n\n      if (object === undefined) {\n        continue;\n      }\n\n      if (object.__dirtyPosition === false) {\n        object.position.set(data[offset + 1], data[offset + 2], data[offset + 3]);\n      }\n\n      if (object.__dirtyRotation === false) {\n        object.quaternion.set(data[offset + 4], data[offset + 5], data[offset + 6], data[offset + 7]);\n      }\n\n      object._physijs.linearVelocity.set(data[offset + 8], data[offset + 9], data[offset + 10]);\n\n      object._physijs.angularVelocity.set(data[offset + 11], data[offset + 12], data[offset + 13]);\n    }\n\n    if (SUPPORT_TRANSFERABLE) {\n      // Give the typed array back to the worker\n      this._worker.transferableMessage(data.buffer, [data.buffer]);\n    }\n\n    _is_simulating = false;\n    this.dispatchEvent('update');\n  };\n\n  Physijs.Scene.prototype._updateVehicles = function (data) {\n    var vehicle, wheel, i, offset;\n\n    for (i = 0; i < (data.length - 1) / VEHICLEREPORT_ITEMSIZE; i++) {\n      offset = 1 + i * VEHICLEREPORT_ITEMSIZE;\n      vehicle = this._vehicles[data[offset]];\n\n      if (vehicle === undefined) {\n        continue;\n      }\n\n      wheel = vehicle.wheels[data[offset + 1]];\n      wheel.position.set(data[offset + 2], data[offset + 3], data[offset + 4]);\n      wheel.quaternion.set(data[offset + 5], data[offset + 6], data[offset + 7], data[offset + 8]);\n    }\n\n    if (SUPPORT_TRANSFERABLE) {\n      // Give the typed array back to the worker\n      this._worker.transferableMessage(data.buffer, [data.buffer]);\n    }\n  };\n\n  Physijs.Scene.prototype._updateConstraints = function (data) {\n    var constraint, object, i, offset;\n\n    for (i = 0; i < (data.length - 1) / CONSTRAINTREPORT_ITEMSIZE; i++) {\n      offset = 1 + i * CONSTRAINTREPORT_ITEMSIZE;\n      constraint = this._constraints[data[offset]];\n      object = this._objects[data[offset + 1]];\n\n      if (constraint === undefined || object === undefined) {\n        continue;\n      }\n\n      _temp_vector3_1.set(data[offset + 2], data[offset + 3], data[offset + 4]);\n\n      _temp_matrix4_1.extractRotation(object.matrix);\n\n      _temp_vector3_1.applyMatrix4(_temp_matrix4_1);\n\n      constraint.positiona.addVectors(object.position, _temp_vector3_1);\n      constraint.appliedImpulse = data[offset + 5];\n    }\n\n    if (SUPPORT_TRANSFERABLE) {\n      // Give the typed array back to the worker\n      this._worker.transferableMessage(data.buffer, [data.buffer]);\n    }\n  };\n\n  Physijs.Scene.prototype._updateCollisions = function (data) {\n    /**\r\n     * #TODO\r\n     * This is probably the worst way ever to handle collisions. The inherent evilness is a residual\r\n     * effect from the previous version's evilness which mutated when switching to transferable objects.\r\n     *\r\n     * If you feel inclined to make this better, please do so.\r\n     */\n    var i,\n        j,\n        offset,\n        object,\n        object2,\n        id1,\n        id2,\n        collisions = {},\n        normal_offsets = {}; // Build collision manifest\n\n    for (i = 0; i < data[1]; i++) {\n      offset = 2 + i * COLLISIONREPORT_ITEMSIZE;\n      object = data[offset];\n      object2 = data[offset + 1];\n      normal_offsets[object + '-' + object2] = offset + 2;\n      normal_offsets[object2 + '-' + object] = -1 * (offset + 2); // Register collisions for both the object colliding and the object being collided with\n\n      if (!collisions[object]) collisions[object] = [];\n      collisions[object].push(object2);\n      if (!collisions[object2]) collisions[object2] = [];\n      collisions[object2].push(object);\n    } // Deal with collisions\n\n\n    for (id1 in this._objects) {\n      if (!this._objects.hasOwnProperty(id1)) continue;\n      object = this._objects[id1]; // If object touches anything, ...\n\n      if (collisions[id1]) {\n        // Clean up touches array\n        for (j = 0; j < object._physijs.touches.length; j++) {\n          if (collisions[id1].indexOf(object._physijs.touches[j]) === -1) {\n            object._physijs.touches.splice(j--, 1);\n          }\n        } // Handle each colliding object\n\n\n        for (j = 0; j < collisions[id1].length; j++) {\n          id2 = collisions[id1][j];\n          object2 = this._objects[id2];\n\n          if (object2) {\n            // If object was not already touching object2, notify object\n            if (object._physijs.touches.indexOf(id2) === -1) {\n              object._physijs.touches.push(id2);\n\n              _temp_vector3_1.subVectors(object.getLinearVelocity(), object2.getLinearVelocity());\n\n              _temp1 = _temp_vector3_1.clone();\n\n              _temp_vector3_1.subVectors(object.getAngularVelocity(), object2.getAngularVelocity());\n\n              _temp2 = _temp_vector3_1.clone();\n              var normal_offset = normal_offsets[object._physijs.id + '-' + object2._physijs.id];\n\n              if (normal_offset > 0) {\n                _temp_vector3_1.set(-data[normal_offset], -data[normal_offset + 1], -data[normal_offset + 2]);\n              } else {\n                normal_offset *= -1;\n\n                _temp_vector3_1.set(data[normal_offset], data[normal_offset + 1], data[normal_offset + 2]);\n              }\n\n              object.dispatchEvent('collision', object2, _temp1, _temp2, _temp_vector3_1);\n            }\n          }\n        }\n      } else {\n        // not touching other objects\n        object._physijs.touches.length = 0;\n      }\n    }\n\n    this.collisions = collisions;\n\n    if (SUPPORT_TRANSFERABLE) {\n      // Give the typed array back to the worker\n      this._worker.transferableMessage(data.buffer, [data.buffer]);\n    }\n  };\n\n  Physijs.Scene.prototype.addConstraint = function (constraint, show_marker) {\n    this._constraints[constraint.id] = constraint;\n    this.execute('addConstraint', constraint.getDefinition());\n\n    if (show_marker) {\n      var marker;\n\n      switch (constraint.type) {\n        case 'point':\n          marker = new THREE.Mesh(new THREE.SphereGeometry(1.5), new THREE.MeshNormalMaterial());\n          marker.position.copy(constraint.positiona);\n\n          this._objects[constraint.objecta].add(marker);\n\n          break;\n\n        case 'hinge':\n          marker = new THREE.Mesh(new THREE.SphereGeometry(1.5), new THREE.MeshNormalMaterial());\n          marker.position.copy(constraint.positiona);\n\n          this._objects[constraint.objecta].add(marker);\n\n          break;\n\n        case 'slider':\n          marker = new THREE.Mesh(new THREE.BoxGeometry(10, 1, 1), new THREE.MeshNormalMaterial());\n          marker.position.copy(constraint.positiona); // This rotation isn't right if all three axis are non-0 values\n          // TODO: change marker's rotation order to ZYX\n\n          marker.rotation.set(constraint.axis.y, // yes, y and\n          constraint.axis.x, // x axis are swapped\n          constraint.axis.z);\n\n          this._objects[constraint.objecta].add(marker);\n\n          break;\n\n        case 'conetwist':\n          marker = new THREE.Mesh(new THREE.SphereGeometry(1.5), new THREE.MeshNormalMaterial());\n          marker.position.copy(constraint.positiona);\n\n          this._objects[constraint.objecta].add(marker);\n\n          break;\n\n        case 'dof':\n          marker = new THREE.Mesh(new THREE.SphereGeometry(1.5), new THREE.MeshNormalMaterial());\n          marker.position.copy(constraint.positiona);\n\n          this._objects[constraint.objecta].add(marker);\n\n          break;\n      }\n    }\n\n    return constraint;\n  };\n\n  Physijs.Scene.prototype.onSimulationResume = function () {\n    this.execute('onSimulationResume', {});\n  };\n\n  Physijs.Scene.prototype.removeConstraint = function (constraint) {\n    if (this._constraints[constraint.id] !== undefined) {\n      this.execute('removeConstraint', {\n        id: constraint.id\n      });\n      delete this._constraints[constraint.id];\n    }\n  };\n\n  Physijs.Scene.prototype.execute = function (cmd, params) {\n    this._worker.postMessage({\n      cmd: cmd,\n      params: params\n    });\n  };\n\n  addObjectChildren = function (parent, object) {\n    var i;\n\n    for (i = 0; i < object.children.length; i++) {\n      if (object.children[i]._physijs) {\n        object.children[i].updateMatrix();\n        object.children[i].updateMatrixWorld();\n\n        _temp_vector3_1.setFromMatrixPosition(object.children[i].matrixWorld);\n\n        _quaternion_1.setFromRotationMatrix(object.children[i].matrixWorld);\n\n        object.children[i]._physijs.position_offset = {\n          x: _temp_vector3_1.x,\n          y: _temp_vector3_1.y,\n          z: _temp_vector3_1.z\n        };\n        object.children[i]._physijs.rotation = {\n          x: _quaternion_1.x,\n          y: _quaternion_1.y,\n          z: _quaternion_1.z,\n          w: _quaternion_1.w\n        };\n\n        parent._physijs.children.push(object.children[i]._physijs);\n      }\n\n      addObjectChildren(parent, object.children[i]);\n    }\n  };\n\n  Physijs.Scene.prototype.add = function (object) {\n    THREE.Mesh.prototype.add.call(this, object);\n\n    if (object._physijs) {\n      object.world = this;\n\n      if (object instanceof Physijs.Vehicle) {\n        this.add(object.mesh);\n        this._vehicles[object._physijs.id] = object;\n        this.execute('addVehicle', object._physijs);\n      } else {\n        object.__dirtyPosition = false;\n        object.__dirtyRotation = false;\n        this._objects[object._physijs.id] = object;\n\n        if (object.children.length) {\n          object._physijs.children = [];\n          addObjectChildren(object, object);\n        }\n\n        if (object.material._physijs) {\n          if (!this._materials_ref_counts.hasOwnProperty(object.material._physijs.id)) {\n            this.execute('registerMaterial', object.material._physijs);\n            object._physijs.materialId = object.material._physijs.id;\n            this._materials_ref_counts[object.material._physijs.id] = 1;\n          } else {\n            this._materials_ref_counts[object.material._physijs.id]++;\n          }\n        } // Object starting position + rotation\n\n\n        object._physijs.position = {\n          x: object.position.x,\n          y: object.position.y,\n          z: object.position.z\n        };\n        object._physijs.rotation = {\n          x: object.quaternion.x,\n          y: object.quaternion.y,\n          z: object.quaternion.z,\n          w: object.quaternion.w\n        }; // Check for scaling\n\n        var mass_scaling = new THREE.Vector3(1, 1, 1);\n\n        if (object._physijs.width) {\n          object._physijs.width *= object.scale.x;\n        }\n\n        if (object._physijs.height) {\n          object._physijs.height *= object.scale.y;\n        }\n\n        if (object._physijs.depth) {\n          object._physijs.depth *= object.scale.z;\n        }\n\n        this.execute('addObject', object._physijs);\n      }\n    }\n  };\n\n  Physijs.Scene.prototype.remove = function (object) {\n    if (object instanceof Physijs.Vehicle) {\n      this.execute('removeVehicle', {\n        id: object._physijs.id\n      });\n\n      while (object.wheels.length) {\n        this.remove(object.wheels.pop());\n      }\n\n      this.remove(object.mesh);\n      delete this._vehicles[object._physijs.id];\n    } else {\n      THREE.Mesh.prototype.remove.call(this, object);\n\n      if (object._physijs) {\n        delete this._objects[object._physijs.id];\n        this.execute('removeObject', {\n          id: object._physijs.id\n        });\n      }\n    }\n\n    if (object.material && object.material._physijs && this._materials_ref_counts.hasOwnProperty(object.material._physijs.id)) {\n      this._materials_ref_counts[object.material._physijs.id]--;\n\n      if (this._materials_ref_counts[object.material._physijs.id] == 0) {\n        this.execute('unRegisterMaterial', object.material._physijs);\n        delete this._materials_ref_counts[object.material._physijs.id];\n      }\n    }\n  };\n\n  Physijs.Scene.prototype.setFixedTimeStep = function (fixedTimeStep) {\n    if (fixedTimeStep) {\n      this.execute('setFixedTimeStep', fixedTimeStep);\n    }\n  };\n\n  Physijs.Scene.prototype.setGravity = function (gravity) {\n    if (gravity) {\n      this.execute('setGravity', gravity);\n    }\n  };\n\n  Physijs.Scene.prototype.simulate = function (timeStep, maxSubSteps) {\n    var object_id, object, update;\n\n    if (_is_simulating) {\n      return false;\n    }\n\n    _is_simulating = true;\n\n    for (object_id in this._objects) {\n      if (!this._objects.hasOwnProperty(object_id)) continue;\n      object = this._objects[object_id];\n\n      if (object.__dirtyPosition || object.__dirtyRotation) {\n        update = {\n          id: object._physijs.id\n        };\n\n        if (object.__dirtyPosition) {\n          update.pos = {\n            x: object.position.x,\n            y: object.position.y,\n            z: object.position.z\n          };\n          object.__dirtyPosition = false;\n        }\n\n        if (object.__dirtyRotation) {\n          update.quat = {\n            x: object.quaternion.x,\n            y: object.quaternion.y,\n            z: object.quaternion.z,\n            w: object.quaternion.w\n          };\n          object.__dirtyRotation = false;\n        }\n\n        this.execute('updateTransform', update);\n      }\n    }\n\n    this.execute('simulate', {\n      timeStep: timeStep,\n      maxSubSteps: maxSubSteps\n    });\n    return true;\n  }; // Phsijs.Mesh\n\n\n  Physijs.Mesh = function (geometry, material, mass) {\n    var index;\n\n    if (!geometry) {\n      return;\n    }\n\n    Eventable.call(this);\n    THREE.Mesh.call(this, geometry, material);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    this._physijs = {\n      type: null,\n      id: getObjectId(),\n      mass: mass || 0,\n      touches: [],\n      linearVelocity: new THREE.Vector3(),\n      angularVelocity: new THREE.Vector3()\n    };\n  };\n\n  Physijs.Mesh.prototype = new THREE.Mesh();\n  Physijs.Mesh.prototype.constructor = Physijs.Mesh;\n  Eventable.make(Physijs.Mesh); // Physijs.Mesh.mass\n\n  Physijs.Mesh.prototype.__defineGetter__('mass', function () {\n    return this._physijs.mass;\n  });\n\n  Physijs.Mesh.prototype.__defineSetter__('mass', function (mass) {\n    this._physijs.mass = mass;\n\n    if (this.world) {\n      this.world.execute('updateMass', {\n        id: this._physijs.id,\n        mass: mass\n      });\n    }\n  }); // Physijs.Mesh.applyCentralImpulse\n\n\n  Physijs.Mesh.prototype.applyCentralImpulse = function (force) {\n    if (this.world) {\n      this.world.execute('applyCentralImpulse', {\n        id: this._physijs.id,\n        x: force.x,\n        y: force.y,\n        z: force.z\n      });\n    }\n  }; // Physijs.Mesh.applyImpulse\n\n\n  Physijs.Mesh.prototype.applyImpulse = function (force, offset) {\n    if (this.world) {\n      this.world.execute('applyImpulse', {\n        id: this._physijs.id,\n        impulse_x: force.x,\n        impulse_y: force.y,\n        impulse_z: force.z,\n        x: offset.x,\n        y: offset.y,\n        z: offset.z\n      });\n    }\n  }; // Physijs.Mesh.applyTorque\n\n\n  Physijs.Mesh.prototype.applyTorque = function (force) {\n    if (this.world) {\n      this.world.execute('applyTorque', {\n        id: this._physijs.id,\n        torque_x: force.x,\n        torque_y: force.y,\n        torque_z: force.z\n      });\n    }\n  }; // Physijs.Mesh.applyCentralForce\n\n\n  Physijs.Mesh.prototype.applyCentralForce = function (force) {\n    if (this.world) {\n      this.world.execute('applyCentralForce', {\n        id: this._physijs.id,\n        x: force.x,\n        y: force.y,\n        z: force.z\n      });\n    }\n  }; // Physijs.Mesh.applyForce\n\n\n  Physijs.Mesh.prototype.applyForce = function (force, offset) {\n    if (this.world) {\n      this.world.execute('applyForce', {\n        id: this._physijs.id,\n        force_x: force.x,\n        force_y: force.y,\n        force_z: force.z,\n        x: offset.x,\n        y: offset.y,\n        z: offset.z\n      });\n    }\n  }; // Physijs.Mesh.getAngularVelocity\n\n\n  Physijs.Mesh.prototype.getAngularVelocity = function () {\n    return this._physijs.angularVelocity;\n  }; // Physijs.Mesh.setAngularVelocity\n\n\n  Physijs.Mesh.prototype.setAngularVelocity = function (velocity) {\n    if (this.world) {\n      this.world.execute('setAngularVelocity', {\n        id: this._physijs.id,\n        x: velocity.x,\n        y: velocity.y,\n        z: velocity.z\n      });\n    }\n  }; // Physijs.Mesh.getLinearVelocity\n\n\n  Physijs.Mesh.prototype.getLinearVelocity = function () {\n    return this._physijs.linearVelocity;\n  }; // Physijs.Mesh.setLinearVelocity\n\n\n  Physijs.Mesh.prototype.setLinearVelocity = function (velocity) {\n    if (this.world) {\n      this.world.execute('setLinearVelocity', {\n        id: this._physijs.id,\n        x: velocity.x,\n        y: velocity.y,\n        z: velocity.z\n      });\n    }\n  }; // Physijs.Mesh.setAngularFactor\n\n\n  Physijs.Mesh.prototype.setAngularFactor = function (factor) {\n    if (this.world) {\n      this.world.execute('setAngularFactor', {\n        id: this._physijs.id,\n        x: factor.x,\n        y: factor.y,\n        z: factor.z\n      });\n    }\n  }; // Physijs.Mesh.setLinearFactor\n\n\n  Physijs.Mesh.prototype.setLinearFactor = function (factor) {\n    if (this.world) {\n      this.world.execute('setLinearFactor', {\n        id: this._physijs.id,\n        x: factor.x,\n        y: factor.y,\n        z: factor.z\n      });\n    }\n  }; // Physijs.Mesh.setDamping\n\n\n  Physijs.Mesh.prototype.setDamping = function (linear, angular) {\n    if (this.world) {\n      this.world.execute('setDamping', {\n        id: this._physijs.id,\n        linear: linear,\n        angular: angular\n      });\n    }\n  }; // Physijs.Mesh.setCcdMotionThreshold\n\n\n  Physijs.Mesh.prototype.setCcdMotionThreshold = function (threshold) {\n    if (this.world) {\n      this.world.execute('setCcdMotionThreshold', {\n        id: this._physijs.id,\n        threshold: threshold\n      });\n    }\n  }; // Physijs.Mesh.setCcdSweptSphereRadius\n\n\n  Physijs.Mesh.prototype.setCcdSweptSphereRadius = function (radius) {\n    if (this.world) {\n      this.world.execute('setCcdSweptSphereRadius', {\n        id: this._physijs.id,\n        radius: radius\n      });\n    }\n  }; // Physijs.PlaneMesh\n\n\n  Physijs.PlaneMesh = function (geometry, material, mass) {\n    var width, height;\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    this._physijs.type = 'plane';\n    this._physijs.normal = geometry.faces[0].normal.clone();\n    this._physijs.mass = typeof mass === 'undefined' ? width * height : mass;\n  };\n\n  Physijs.PlaneMesh.prototype = new Physijs.Mesh();\n  Physijs.PlaneMesh.prototype.constructor = Physijs.PlaneMesh; // Physijs.HeightfieldMesh\n\n  Physijs.HeightfieldMesh = function (geometry, material, mass, xdiv, ydiv) {\n    Physijs.Mesh.call(this, geometry, material, mass);\n    this._physijs.type = 'heightfield';\n    this._physijs.xsize = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    this._physijs.ysize = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    this._physijs.xpts = typeof xdiv === 'undefined' ? Math.sqrt(geometry.vertices.length) : xdiv + 1;\n    this._physijs.ypts = typeof ydiv === 'undefined' ? Math.sqrt(geometry.vertices.length) : ydiv + 1; // note - this assumes our plane geometry is square, unless we pass in specific xdiv and ydiv\n\n    this._physijs.absMaxHeight = Math.max(geometry.boundingBox.max.z, Math.abs(geometry.boundingBox.min.z));\n    var points = [];\n    var a, b;\n\n    for (var i = 0; i < geometry.vertices.length; i++) {\n      a = i % this._physijs.xpts;\n      b = Math.round(i / this._physijs.xpts - i % this._physijs.xpts / this._physijs.xpts);\n      points[i] = geometry.vertices[a + (this._physijs.ypts - b - 1) * this._physijs.ypts].z; //points[i] = geometry.vertices[i];\n    }\n\n    this._physijs.points = points;\n  };\n\n  Physijs.HeightfieldMesh.prototype = new Physijs.Mesh();\n  Physijs.HeightfieldMesh.prototype.constructor = Physijs.HeightfieldMesh; // Physijs.BoxMesh\n\n  Physijs.BoxMesh = function (geometry, material, mass) {\n    var width, height, depth;\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    this._physijs.type = 'box';\n    this._physijs.width = width;\n    this._physijs.height = height;\n    this._physijs.depth = depth;\n    this._physijs.mass = typeof mass === 'undefined' ? width * height * depth : mass;\n  };\n\n  Physijs.BoxMesh.prototype = new Physijs.Mesh();\n  Physijs.BoxMesh.prototype.constructor = Physijs.BoxMesh; // Physijs.SphereMesh\n\n  Physijs.SphereMesh = function (geometry, material, mass) {\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingSphere) {\n      geometry.computeBoundingSphere();\n    }\n\n    this._physijs.type = 'sphere';\n    this._physijs.radius = geometry.boundingSphere.radius;\n    this._physijs.mass = typeof mass === 'undefined' ? 4 / 3 * Math.PI * Math.pow(this._physijs.radius, 3) : mass;\n  };\n\n  Physijs.SphereMesh.prototype = new Physijs.Mesh();\n  Physijs.SphereMesh.prototype.constructor = Physijs.SphereMesh; // Physijs.CylinderMesh\n\n  Physijs.CylinderMesh = function (geometry, material, mass) {\n    var width, height, depth;\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    this._physijs.type = 'cylinder';\n    this._physijs.width = width;\n    this._physijs.height = height;\n    this._physijs.depth = depth;\n    this._physijs.mass = typeof mass === 'undefined' ? width * height * depth : mass;\n  };\n\n  Physijs.CylinderMesh.prototype = new Physijs.Mesh();\n  Physijs.CylinderMesh.prototype.constructor = Physijs.CylinderMesh; // Physijs.CapsuleMesh\n\n  Physijs.CapsuleMesh = function (geometry, material, mass) {\n    var width, height, depth;\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    this._physijs.type = 'capsule';\n    this._physijs.radius = Math.max(width / 2, depth / 2);\n    this._physijs.height = height;\n    this._physijs.mass = typeof mass === 'undefined' ? width * height * depth : mass;\n  };\n\n  Physijs.CapsuleMesh.prototype = new Physijs.Mesh();\n  Physijs.CapsuleMesh.prototype.constructor = Physijs.CapsuleMesh; // Physijs.ConeMesh\n\n  Physijs.ConeMesh = function (geometry, material, mass) {\n    var width, height, depth;\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    this._physijs.type = 'cone';\n    this._physijs.radius = width / 2;\n    this._physijs.height = height;\n    this._physijs.mass = typeof mass === 'undefined' ? width * height : mass;\n  };\n\n  Physijs.ConeMesh.prototype = new Physijs.Mesh();\n  Physijs.ConeMesh.prototype.constructor = Physijs.ConeMesh; // Physijs.ConcaveMesh\n\n  Physijs.ConcaveMesh = function (geometry, material, mass) {\n    var i,\n        width,\n        height,\n        depth,\n        vertices,\n        face,\n        triangles = [];\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    vertices = geometry.vertices;\n\n    for (i = 0; i < geometry.faces.length; i++) {\n      face = geometry.faces[i];\n\n      if (face instanceof THREE.Face3) {\n        triangles.push([{\n          x: vertices[face.a].x,\n          y: vertices[face.a].y,\n          z: vertices[face.a].z\n        }, {\n          x: vertices[face.b].x,\n          y: vertices[face.b].y,\n          z: vertices[face.b].z\n        }, {\n          x: vertices[face.c].x,\n          y: vertices[face.c].y,\n          z: vertices[face.c].z\n        }]);\n      } else if (face instanceof THREE.Face4) {\n        triangles.push([{\n          x: vertices[face.a].x,\n          y: vertices[face.a].y,\n          z: vertices[face.a].z\n        }, {\n          x: vertices[face.b].x,\n          y: vertices[face.b].y,\n          z: vertices[face.b].z\n        }, {\n          x: vertices[face.d].x,\n          y: vertices[face.d].y,\n          z: vertices[face.d].z\n        }]);\n        triangles.push([{\n          x: vertices[face.b].x,\n          y: vertices[face.b].y,\n          z: vertices[face.b].z\n        }, {\n          x: vertices[face.c].x,\n          y: vertices[face.c].y,\n          z: vertices[face.c].z\n        }, {\n          x: vertices[face.d].x,\n          y: vertices[face.d].y,\n          z: vertices[face.d].z\n        }]);\n      }\n    }\n\n    width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    this._physijs.type = 'concave';\n    this._physijs.triangles = triangles;\n    this._physijs.mass = typeof mass === 'undefined' ? width * height * depth : mass;\n  };\n\n  Physijs.ConcaveMesh.prototype = new Physijs.Mesh();\n  Physijs.ConcaveMesh.prototype.constructor = Physijs.ConcaveMesh; // Physijs.ConvexMesh\n\n  Physijs.ConvexMesh = function (geometry, material, mass) {\n    var i,\n        width,\n        height,\n        depth,\n        points = [];\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    for (i = 0; i < geometry.vertices.length; i++) {\n      points.push({\n        x: geometry.vertices[i].x,\n        y: geometry.vertices[i].y,\n        z: geometry.vertices[i].z\n      });\n    }\n\n    width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    this._physijs.type = 'convex';\n    this._physijs.points = points;\n    this._physijs.mass = typeof mass === 'undefined' ? width * height * depth : mass;\n  };\n\n  Physijs.ConvexMesh.prototype = new Physijs.Mesh();\n  Physijs.ConvexMesh.prototype.constructor = Physijs.ConvexMesh; // Physijs.Vehicle\n\n  Physijs.Vehicle = function (mesh, tuning) {\n    tuning = tuning || new Physijs.VehicleTuning();\n    this.mesh = mesh;\n    this.wheels = [];\n    this._physijs = {\n      id: getObjectId(),\n      rigidBody: mesh._physijs.id,\n      suspension_stiffness: tuning.suspension_stiffness,\n      suspension_compression: tuning.suspension_compression,\n      suspension_damping: tuning.suspension_damping,\n      max_suspension_travel: tuning.max_suspension_travel,\n      friction_slip: tuning.friction_slip,\n      max_suspension_force: tuning.max_suspension_force\n    };\n  };\n\n  Physijs.Vehicle.prototype.addWheel = function (wheel_geometry, wheel_material, connection_point, wheel_direction, wheel_axle, suspension_rest_length, wheel_radius, is_front_wheel, tuning) {\n    var wheel = new THREE.Mesh(wheel_geometry, wheel_material);\n    wheel.castShadow = wheel.receiveShadow = true;\n    wheel.position.copy(wheel_direction).multiplyScalar(suspension_rest_length / 100).add(connection_point);\n    this.world.add(wheel);\n    this.wheels.push(wheel);\n    this.world.execute('addWheel', {\n      id: this._physijs.id,\n      connection_point: {\n        x: connection_point.x,\n        y: connection_point.y,\n        z: connection_point.z\n      },\n      wheel_direction: {\n        x: wheel_direction.x,\n        y: wheel_direction.y,\n        z: wheel_direction.z\n      },\n      wheel_axle: {\n        x: wheel_axle.x,\n        y: wheel_axle.y,\n        z: wheel_axle.z\n      },\n      suspension_rest_length: suspension_rest_length,\n      wheel_radius: wheel_radius,\n      is_front_wheel: is_front_wheel,\n      tuning: tuning\n    });\n  };\n\n  Physijs.Vehicle.prototype.setSteering = function (amount, wheel) {\n    if (wheel !== undefined && this.wheels[wheel] !== undefined) {\n      this.world.execute('setSteering', {\n        id: this._physijs.id,\n        wheel: wheel,\n        steering: amount\n      });\n    } else if (this.wheels.length > 0) {\n      for (var i = 0; i < this.wheels.length; i++) {\n        this.world.execute('setSteering', {\n          id: this._physijs.id,\n          wheel: i,\n          steering: amount\n        });\n      }\n    }\n  };\n\n  Physijs.Vehicle.prototype.setBrake = function (amount, wheel) {\n    if (wheel !== undefined && this.wheels[wheel] !== undefined) {\n      this.world.execute('setBrake', {\n        id: this._physijs.id,\n        wheel: wheel,\n        brake: amount\n      });\n    } else if (this.wheels.length > 0) {\n      for (var i = 0; i < this.wheels.length; i++) {\n        this.world.execute('setBrake', {\n          id: this._physijs.id,\n          wheel: i,\n          brake: amount\n        });\n      }\n    }\n  };\n\n  Physijs.Vehicle.prototype.applyEngineForce = function (amount, wheel) {\n    if (wheel !== undefined && this.wheels[wheel] !== undefined) {\n      this.world.execute('applyEngineForce', {\n        id: this._physijs.id,\n        wheel: wheel,\n        force: amount\n      });\n    } else if (this.wheels.length > 0) {\n      for (var i = 0; i < this.wheels.length; i++) {\n        this.world.execute('applyEngineForce', {\n          id: this._physijs.id,\n          wheel: i,\n          force: amount\n        });\n      }\n    }\n  }; // Physijs.VehicleTuning\n\n\n  Physijs.VehicleTuning = function (suspension_stiffness, suspension_compression, suspension_damping, max_suspension_travel, friction_slip, max_suspension_force) {\n    this.suspension_stiffness = suspension_stiffness !== undefined ? suspension_stiffness : 5.88;\n    this.suspension_compression = suspension_compression !== undefined ? suspension_compression : 0.83;\n    this.suspension_damping = suspension_damping !== undefined ? suspension_damping : 0.88;\n    this.max_suspension_travel = max_suspension_travel !== undefined ? max_suspension_travel : 500;\n    this.friction_slip = friction_slip !== undefined ? friction_slip : 10.5;\n    this.max_suspension_force = max_suspension_force !== undefined ? max_suspension_force : 6000;\n  };\n\n  return Physijs;\n}();","map":{"version":3,"sources":["C:/Users/Rod/Desktop/TetrisBall/src/physi.js"],"names":["THREE","window","Physijs","SUPPORT_TRANSFERABLE","_is_simulating","_Physijs","Eventable","getObjectId","getEulerXYZFromQuaternion","getQuatertionFromEuler","convertWorldPositionToObject","addObjectChildren","_temp1","_temp2","_temp_vector3_1","Vector3","_temp_vector3_2","_temp_matrix4_1","Matrix4","_quaternion_1","Quaternion","MESSAGE_TYPES","WORLDREPORT","COLLISIONREPORT","VEHICLEREPORT","CONSTRAINTREPORT","REPORT_ITEMSIZE","COLLISIONREPORT_ITEMSIZE","VEHICLEREPORT_ITEMSIZE","CONSTRAINTREPORT_ITEMSIZE","scripts","_eventListeners","prototype","addEventListener","event_name","callback","hasOwnProperty","push","removeEventListener","index","indexOf","splice","dispatchEvent","i","parameters","Array","call","arguments","length","apply","make","obj","_id","x","y","z","w","Math","atan2","asin","c1","s1","c2","s2","c3","s3","c1c2","s1s2","cos","sin","position","object","identity","makeRotationFromQuaternion","quaternion","getInverse","copy","sub","applyMatrix4","noConflict","createMaterial","material","friction","restitution","physijs_material","_physijs","id","undefined","PointConstraint","objecta","objectb","type","appliedImpulse","positiona","clone","positionb","getDefinition","HingeConstraint","axis","scene","parent","setLimits","low","high","bias_factor","relaxation_factor","execute","constraint","enableAngularMotor","velocity","acceleration","disableMotor","SliderConstraint","lin_lower","lin_upper","ang_lower","ang_upper","setRestitution","linear","angular","enableLinearMotor","disableLinearMotor","disableAngularMotor","ConeTwistConstraint","axisa","rotation","axisb","setLimit","enableMotor","setMaxMotorImpulse","max_impulse","setMotorTarget","target","setFromEuler","Euler","setFromRotationMatrix","DOFConstraint","setLinearLowerLimit","limit","setLinearUpperLimit","setAngularLowerLimit","setAngularUpperLimit","which","configureAngularMotor","low_angle","high_angle","max_force","Scene","params","self","_worker","Worker","worker","transferableMessage","webkitPostMessage","postMessage","_materials_ref_counts","_objects","_vehicles","_constraints","ab","ArrayBuffer","byteLength","onmessage","event","_temp","data","Float32Array","_updateScene","_updateCollisions","_updateVehicles","_updateConstraints","cmd","test","console","debug","dir","ammo","fixedTimeStep","rateLimit","constructor","num_objects","offset","__dirtyPosition","set","__dirtyRotation","linearVelocity","angularVelocity","buffer","vehicle","wheel","wheels","extractRotation","matrix","addVectors","j","object2","id1","id2","collisions","normal_offsets","touches","subVectors","getLinearVelocity","getAngularVelocity","normal_offset","addConstraint","show_marker","marker","Mesh","SphereGeometry","MeshNormalMaterial","add","BoxGeometry","onSimulationResume","removeConstraint","children","updateMatrix","updateMatrixWorld","setFromMatrixPosition","matrixWorld","position_offset","world","Vehicle","mesh","materialId","mass_scaling","width","scale","height","depth","remove","pop","setFixedTimeStep","setGravity","gravity","simulate","timeStep","maxSubSteps","object_id","update","pos","quat","geometry","mass","boundingBox","computeBoundingBox","__defineGetter__","__defineSetter__","applyCentralImpulse","force","applyImpulse","impulse_x","impulse_y","impulse_z","applyTorque","torque_x","torque_y","torque_z","applyCentralForce","applyForce","force_x","force_y","force_z","setAngularVelocity","setLinearVelocity","setAngularFactor","factor","setLinearFactor","setDamping","setCcdMotionThreshold","threshold","setCcdSweptSphereRadius","radius","PlaneMesh","max","min","normal","faces","HeightfieldMesh","xdiv","ydiv","xsize","ysize","xpts","sqrt","vertices","ypts","absMaxHeight","abs","points","a","b","round","BoxMesh","SphereMesh","boundingSphere","computeBoundingSphere","PI","pow","CylinderMesh","CapsuleMesh","ConeMesh","ConcaveMesh","face","triangles","Face3","c","Face4","d","ConvexMesh","tuning","VehicleTuning","rigidBody","suspension_stiffness","suspension_compression","suspension_damping","max_suspension_travel","friction_slip","max_suspension_force","addWheel","wheel_geometry","wheel_material","connection_point","wheel_direction","wheel_axle","suspension_rest_length","wheel_radius","is_front_wheel","castShadow","receiveShadow","multiplyScalar","setSteering","amount","steering","setBrake","brake","applyEngineForce"],"mappings":"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","sourcesContent":["import * as THREE from \"./three\";\r\n\r\nwindow.Physijs = (function() {\r\n\t'use strict';\r\n\r\n\tvar SUPPORT_TRANSFERABLE,\r\n\t\t_is_simulating = false,\r\n\t\t_Physijs = Physijs, // used for noConflict method\r\n\t\tPhysijs = {}, // object assigned to window.Physijs\r\n\t\tEventable, // class to provide simple event methods\r\n\t\tgetObjectId, // returns a unique ID for a Physijs mesh object\r\n\t\tgetEulerXYZFromQuaternion, getQuatertionFromEuler,\r\n\t\tconvertWorldPositionToObject, // Converts a world-space position to object-space\r\n\t\taddObjectChildren,\r\n\r\n\t\t_temp1, _temp2,\r\n\t\t_temp_vector3_1 = new THREE.Vector3,\r\n\t\t_temp_vector3_2 = new THREE.Vector3,\r\n\t\t_temp_matrix4_1 = new THREE.Matrix4,\r\n\t\t_quaternion_1 = new THREE.Quaternion,\r\n\r\n\t\t// constants\r\n\t\tMESSAGE_TYPES = {\r\n\t\t\tWORLDREPORT: 0,\r\n\t\t\tCOLLISIONREPORT: 1,\r\n\t\t\tVEHICLEREPORT: 2,\r\n\t\t\tCONSTRAINTREPORT: 3\r\n\t\t},\r\n\t\tREPORT_ITEMSIZE = 14,\r\n\t\tCOLLISIONREPORT_ITEMSIZE = 5,\r\n\t\tVEHICLEREPORT_ITEMSIZE = 9,\r\n\t\tCONSTRAINTREPORT_ITEMSIZE = 6;\r\n\r\n\tPhysijs.scripts = {};\r\n\r\n\tEventable = function() {\r\n\t\tthis._eventListeners = {};\r\n\t};\r\n\tEventable.prototype.addEventListener = function( event_name, callback ) {\r\n\t\tif ( !this._eventListeners.hasOwnProperty( event_name ) ) {\r\n\t\t\tthis._eventListeners[event_name] = [];\r\n\t\t}\r\n\t\tthis._eventListeners[event_name].push( callback );\r\n\t};\r\n\tEventable.prototype.removeEventListener = function( event_name, callback ) {\r\n\t\tvar index;\r\n\r\n\t\tif ( !this._eventListeners.hasOwnProperty( event_name ) ) return false;\r\n\r\n\t\tif ( (index = this._eventListeners[event_name].indexOf( callback )) >= 0 ) {\r\n\t\t\tthis._eventListeners[event_name].splice( index, 1 );\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t};\r\n\tEventable.prototype.dispatchEvent = function( event_name ) {\r\n\t\tvar i,\r\n\t\t\tparameters = Array.prototype.splice.call( arguments, 1 );\r\n\r\n\t\tif ( this._eventListeners.hasOwnProperty( event_name ) ) {\r\n\t\t\tfor ( i = 0; i < this._eventListeners[event_name].length; i++ ) {\r\n\t\t\t\tthis._eventListeners[event_name][i].apply( this, parameters );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tEventable.make = function( obj ) {\r\n\t\tobj.prototype.addEventListener = Eventable.prototype.addEventListener;\r\n\t\tobj.prototype.removeEventListener = Eventable.prototype.removeEventListener;\r\n\t\tobj.prototype.dispatchEvent = Eventable.prototype.dispatchEvent;\r\n\t};\r\n\r\n\tgetObjectId = (function() {\r\n\t\tvar _id = 1;\r\n\t\treturn function() {\r\n\t\t\treturn _id++;\r\n\t\t};\r\n\t})();\r\n\r\n\tgetEulerXYZFromQuaternion = function ( x, y, z, w ) {\r\n\t\treturn new THREE.Vector3(\r\n\t\t\tMath.atan2( 2 * ( x * w - y * z ), ( w * w - x * x - y * y + z * z ) ),\r\n\t\t\tMath.asin( 2 *  ( x * z + y * w ) ),\r\n\t\t\tMath.atan2( 2 * ( z * w - x * y ), ( w * w + x * x - y * y - z * z ) )\r\n\t\t);\r\n\t};\r\n\r\n\tgetQuatertionFromEuler = function( x, y, z ) {\r\n\t\tvar c1, s1, c2, s2, c3, s3, c1c2, s1s2;\r\n\t\tc1 = Math.cos( y  );\r\n\t\ts1 = Math.sin( y  );\r\n\t\tc2 = Math.cos( -z );\r\n\t\ts2 = Math.sin( -z );\r\n\t\tc3 = Math.cos( x  );\r\n\t\ts3 = Math.sin( x  );\r\n\r\n\t\tc1c2 = c1 * c2;\r\n\t\ts1s2 = s1 * s2;\r\n\r\n\t\treturn {\r\n\t\t\tw: c1c2 * c3  - s1s2 * s3,\r\n\t\t\tx: c1c2 * s3  + s1s2 * c3,\r\n\t\t\ty: s1 * c2 * c3 + c1 * s2 * s3,\r\n\t\t\tz: c1 * s2 * c3 - s1 * c2 * s3\r\n\t\t};\r\n\t};\r\n\r\n\tconvertWorldPositionToObject = function( position, object ) {\r\n\t\t_temp_matrix4_1.identity(); // reset temp matrix\r\n\r\n\t\t// Set the temp matrix's rotation to the object's rotation\r\n\t\t_temp_matrix4_1.identity().makeRotationFromQuaternion( object.quaternion );\r\n\r\n\t\t// Invert rotation matrix in order to \"unrotate\" a point back to object space\r\n\t\t_temp_matrix4_1.getInverse( _temp_matrix4_1 );\r\n\r\n\t\t// Yay! Temp vars!\r\n\t\t_temp_vector3_1.copy( position );\r\n\t\t_temp_vector3_2.copy( object.position );\r\n\r\n\t\t// Apply the rotation\r\n\r\n\t\treturn _temp_vector3_1.sub( _temp_vector3_2 ).applyMatrix4( _temp_matrix4_1 );\r\n\t};\r\n\r\n\r\n\r\n\t// Physijs.noConflict\r\n\tPhysijs.noConflict = function() {\r\n\t\twindow.Physijs = _Physijs;\r\n\t\treturn Physijs;\r\n\t};\r\n\r\n\r\n\t// Physijs.createMaterial\r\n\tPhysijs.createMaterial = function( material, friction, restitution ) {\r\n\t\tvar physijs_material = function(){};\r\n\t\tphysijs_material.prototype = material;\r\n\t\tphysijs_material = new physijs_material;\r\n\r\n\t\tphysijs_material._physijs = {\r\n\t\t\tid: material.id,\r\n\t\t\tfriction: friction === undefined ? .8 : friction,\r\n\t\t\trestitution: restitution === undefined ? .2 : restitution\r\n\t\t};\r\n\r\n\t\treturn physijs_material;\r\n\t};\r\n\r\n\r\n\t// Constraints\r\n\tPhysijs.PointConstraint = function( objecta, objectb, position ) {\r\n\t\tif ( position === undefined ) {\r\n\t\t\tposition = objectb;\r\n\t\t\tobjectb = undefined;\r\n\t\t}\r\n\r\n\t\tthis.type = 'point';\r\n\t\tthis.appliedImpulse = 0;\r\n\t\tthis.id = getObjectId();\r\n\t\tthis.objecta = objecta._physijs.id;\r\n\t\tthis.positiona = convertWorldPositionToObject( position, objecta ).clone();\r\n\r\n\t\tif ( objectb ) {\r\n\t\t\tthis.objectb = objectb._physijs.id;\r\n\t\t\tthis.positionb = convertWorldPositionToObject( position, objectb ).clone();\r\n\t\t}\r\n\t};\r\n\tPhysijs.PointConstraint.prototype.getDefinition = function() {\r\n\t\treturn {\r\n\t\t\ttype: this.type,\r\n\t\t\tid: this.id,\r\n\t\t\tobjecta: this.objecta,\r\n\t\t\tobjectb: this.objectb,\r\n\t\t\tpositiona: this.positiona,\r\n\t\t\tpositionb: this.positionb\r\n\t\t};\r\n\t};\r\n\r\n\tPhysijs.HingeConstraint = function( objecta, objectb, position, axis ) {\r\n\t\tif ( axis === undefined ) {\r\n\t\t\taxis = position;\r\n\t\t\tposition = objectb;\r\n\t\t\tobjectb = undefined;\r\n\t\t}\r\n\r\n\t\tthis.type = 'hinge';\r\n\t\tthis.appliedImpulse = 0;\r\n\t\tthis.id = getObjectId();\r\n\t\tthis.scene = objecta.parent;\r\n\t\tthis.objecta = objecta._physijs.id;\r\n\t\tthis.positiona = convertWorldPositionToObject( position, objecta ).clone();\r\n\t\tthis.position = position.clone();\r\n\t\tthis.axis = axis;\r\n\r\n\t\tif ( objectb ) {\r\n\t\t\tthis.objectb = objectb._physijs.id;\r\n\t\t\tthis.positionb = convertWorldPositionToObject( position, objectb ).clone();\r\n\t\t}\r\n\t};\r\n\tPhysijs.HingeConstraint.prototype.getDefinition = function() {\r\n\t\treturn {\r\n\t\t\ttype: this.type,\r\n\t\t\tid: this.id,\r\n\t\t\tobjecta: this.objecta,\r\n\t\t\tobjectb: this.objectb,\r\n\t\t\tpositiona: this.positiona,\r\n\t\t\tpositionb: this.positionb,\r\n\t\t\taxis: this.axis\r\n\t\t};\r\n\t};\r\n\t/*\r\n\t * low = minimum angle in radians\r\n\t * high = maximum angle in radians\r\n\t * bias_factor = applied as a factor to constraint error\r\n\t * relaxation_factor = controls bounce (0.0 == no bounce)\r\n\t */\r\n\tPhysijs.HingeConstraint.prototype.setLimits = function( low, high, bias_factor, relaxation_factor ) {\r\n\t\tthis.scene.execute( 'hinge_setLimits', { constraint: this.id, low: low, high: high, bias_factor: bias_factor, relaxation_factor: relaxation_factor } );\r\n\t};\r\n\tPhysijs.HingeConstraint.prototype.enableAngularMotor = function( velocity, acceleration ) {\r\n\t\tthis.scene.execute( 'hinge_enableAngularMotor', { constraint: this.id, velocity: velocity, acceleration: acceleration } );\r\n\t};\r\n\tPhysijs.HingeConstraint.prototype.disableMotor = function( velocity, acceleration ) {\r\n\t\tthis.scene.execute( 'hinge_disableMotor', { constraint: this.id } );\r\n\t};\r\n\r\n\tPhysijs.SliderConstraint = function( objecta, objectb, position, axis ) {\r\n\t\tif ( axis === undefined ) {\r\n\t\t\taxis = position;\r\n\t\t\tposition = objectb;\r\n\t\t\tobjectb = undefined;\r\n\t\t}\r\n\r\n\t\tthis.type = 'slider';\r\n\t\tthis.appliedImpulse = 0;\r\n\t\tthis.id = getObjectId();\r\n\t\tthis.scene = objecta.parent;\r\n\t\tthis.objecta = objecta._physijs.id;\r\n\t\tthis.positiona = convertWorldPositionToObject( position, objecta ).clone();\r\n\t\tthis.axis = axis;\r\n\r\n\t\tif ( objectb ) {\r\n\t\t\tthis.objectb = objectb._physijs.id;\r\n\t\t\tthis.positionb = convertWorldPositionToObject( position, objectb ).clone();\r\n\t\t}\r\n\t};\r\n\tPhysijs.SliderConstraint.prototype.getDefinition = function() {\r\n\t\treturn {\r\n\t\t\ttype: this.type,\r\n\t\t\tid: this.id,\r\n\t\t\tobjecta: this.objecta,\r\n\t\t\tobjectb: this.objectb,\r\n\t\t\tpositiona: this.positiona,\r\n\t\t\tpositionb: this.positionb,\r\n\t\t\taxis: this.axis\r\n\t\t};\r\n\t};\r\n\tPhysijs.SliderConstraint.prototype.setLimits = function( lin_lower, lin_upper, ang_lower, ang_upper ) {\r\n\t\tthis.scene.execute( 'slider_setLimits', { constraint: this.id, lin_lower: lin_lower, lin_upper: lin_upper, ang_lower: ang_lower, ang_upper: ang_upper } );\r\n\t};\r\n\tPhysijs.SliderConstraint.prototype.setRestitution = function( linear, angular ) {\r\n\t\tthis.scene.execute(\r\n\t\t\t'slider_setRestitution',\r\n\t\t\t{\r\n\t\t\t\tconstraint: this.id,\r\n\t\t\t\tlinear: linear,\r\n\t\t\t\tangular: angular\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\tPhysijs.SliderConstraint.prototype.enableLinearMotor = function( velocity, acceleration) {\r\n\t\tthis.scene.execute( 'slider_enableLinearMotor', { constraint: this.id, velocity: velocity, acceleration: acceleration } );\r\n\t};\r\n\tPhysijs.SliderConstraint.prototype.disableLinearMotor = function() {\r\n\t\tthis.scene.execute( 'slider_disableLinearMotor', { constraint: this.id } );\r\n\t};\r\n\tPhysijs.SliderConstraint.prototype.enableAngularMotor = function( velocity, acceleration ) {\r\n\t\tthis.scene.execute( 'slider_enableAngularMotor', { constraint: this.id, velocity: velocity, acceleration: acceleration } );\r\n\t};\r\n\tPhysijs.SliderConstraint.prototype.disableAngularMotor = function() {\r\n\t\tthis.scene.execute( 'slider_disableAngularMotor', { constraint: this.id } );\r\n\t};\r\n\r\n\tPhysijs.ConeTwistConstraint = function( objecta, objectb, position ) {\r\n\t\tif ( position === undefined ) {\r\n\t\t\tthrow 'Both objects must be defined in a ConeTwistConstraint.';\r\n\t\t}\r\n\t\tthis.type = 'conetwist';\r\n\t\tthis.appliedImpulse = 0;\r\n\t\tthis.id = getObjectId();\r\n\t\tthis.scene = objecta.parent;\r\n\t\tthis.objecta = objecta._physijs.id;\r\n\t\tthis.positiona = convertWorldPositionToObject( position, objecta ).clone();\r\n\t\tthis.objectb = objectb._physijs.id;\r\n\t\tthis.positionb = convertWorldPositionToObject( position, objectb ).clone();\r\n\t\tthis.axisa = { x: objecta.rotation.x, y: objecta.rotation.y, z: objecta.rotation.z };\r\n\t\tthis.axisb = { x: objectb.rotation.x, y: objectb.rotation.y, z: objectb.rotation.z };\r\n\t};\r\n\tPhysijs.ConeTwistConstraint.prototype.getDefinition = function() {\r\n\t\treturn {\r\n\t\t\ttype: this.type,\r\n\t\t\tid: this.id,\r\n\t\t\tobjecta: this.objecta,\r\n\t\t\tobjectb: this.objectb,\r\n\t\t\tpositiona: this.positiona,\r\n\t\t\tpositionb: this.positionb,\r\n\t\t\taxisa: this.axisa,\r\n\t\t\taxisb: this.axisb\r\n\t\t};\r\n\t};\r\n\tPhysijs.ConeTwistConstraint.prototype.setLimit = function( x, y, z ) {\r\n\t\tthis.scene.execute( 'conetwist_setLimit', { constraint: this.id, x: x, y: y, z: z } );\r\n\t};\r\n\tPhysijs.ConeTwistConstraint.prototype.enableMotor = function() {\r\n\t\tthis.scene.execute( 'conetwist_enableMotor', { constraint: this.id } );\r\n\t};\r\n\tPhysijs.ConeTwistConstraint.prototype.setMaxMotorImpulse = function( max_impulse ) {\r\n\t\tthis.scene.execute( 'conetwist_setMaxMotorImpulse', { constraint: this.id, max_impulse: max_impulse } );\r\n\t};\r\n\tPhysijs.ConeTwistConstraint.prototype.setMotorTarget = function( target ) {\r\n\t\tif ( target instanceof THREE.Vector3 ) {\r\n\t\t\ttarget = new THREE.Quaternion().setFromEuler( new THREE.Euler( target.x, target.y, target.z ) );\r\n\t\t} else if ( target instanceof THREE.Euler ) {\r\n\t\t\ttarget = new THREE.Quaternion().setFromEuler( target );\r\n\t\t} else if ( target instanceof THREE.Matrix4 ) {\r\n\t\t\ttarget = new THREE.Quaternion().setFromRotationMatrix( target );\r\n\t\t}\r\n\t\tthis.scene.execute( 'conetwist_setMotorTarget', { constraint: this.id, x: target.x, y: target.y, z: target.z, w: target.w } );\r\n\t};\r\n\tPhysijs.ConeTwistConstraint.prototype.disableMotor = function() {\r\n\t\tthis.scene.execute( 'conetwist_disableMotor', { constraint: this.id } );\r\n\t};\r\n\r\n\tPhysijs.DOFConstraint = function( objecta, objectb, position ) {\r\n\t\tif ( position === undefined ) {\r\n\t\t\tposition = objectb;\r\n\t\t\tobjectb = undefined;\r\n\t\t}\r\n\t\tthis.type = 'dof';\r\n\t\tthis.appliedImpulse = 0;\r\n\t\tthis.id = getObjectId();\r\n\t\tthis.scene = objecta.parent;\r\n\t\tthis.objecta = objecta._physijs.id;\r\n\t\tthis.positiona = convertWorldPositionToObject( position, objecta ).clone();\r\n\t\tthis.axisa = { x: objecta.rotation.x, y: objecta.rotation.y, z: objecta.rotation.z };\r\n\r\n\t\tif ( objectb ) {\r\n\t\t\tthis.objectb = objectb._physijs.id;\r\n\t\t\tthis.positionb = convertWorldPositionToObject( position, objectb ).clone();\r\n\t\t\tthis.axisb = { x: objectb.rotation.x, y: objectb.rotation.y, z: objectb.rotation.z };\r\n\t\t}\r\n\t};\r\n\tPhysijs.DOFConstraint.prototype.getDefinition = function() {\r\n\t\treturn {\r\n\t\t\ttype: this.type,\r\n\t\t\tid: this.id,\r\n\t\t\tobjecta: this.objecta,\r\n\t\t\tobjectb: this.objectb,\r\n\t\t\tpositiona: this.positiona,\r\n\t\t\tpositionb: this.positionb,\r\n\t\t\taxisa: this.axisa,\r\n\t\t\taxisb: this.axisb\r\n\t\t};\r\n\t};\r\n\tPhysijs.DOFConstraint.prototype.setLinearLowerLimit = function( limit ) {\r\n\t\tthis.scene.execute( 'dof_setLinearLowerLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\r\n\t};\r\n\tPhysijs.DOFConstraint.prototype.setLinearUpperLimit = function( limit ) {\r\n\t\tthis.scene.execute( 'dof_setLinearUpperLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\r\n\t};\r\n\tPhysijs.DOFConstraint.prototype.setAngularLowerLimit = function( limit ) {\r\n\t\tthis.scene.execute( 'dof_setAngularLowerLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\r\n\t};\r\n\tPhysijs.DOFConstraint.prototype.setAngularUpperLimit = function( limit ) {\r\n\t\tthis.scene.execute( 'dof_setAngularUpperLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\r\n\t};\r\n\tPhysijs.DOFConstraint.prototype.enableAngularMotor = function( which ) {\r\n\t\tthis.scene.execute( 'dof_enableAngularMotor', { constraint: this.id, which: which } );\r\n\t};\r\n\tPhysijs.DOFConstraint.prototype.configureAngularMotor = function( which, low_angle, high_angle, velocity, max_force ) {\r\n\t\tthis.scene.execute( 'dof_configureAngularMotor', { constraint: this.id, which: which, low_angle: low_angle, high_angle: high_angle, velocity: velocity, max_force: max_force } );\r\n\t};\r\n\tPhysijs.DOFConstraint.prototype.disableAngularMotor = function( which ) {\r\n\t\tthis.scene.execute( 'dof_disableAngularMotor', { constraint: this.id, which: which } );\r\n\t};\r\n\r\n\t// Physijs.Scene\r\n\tPhysijs.Scene = function( params ) {\r\n\t\tvar self = this;\r\n\r\n\t\tEventable.call( this );\r\n\t\tTHREE.Scene.call( this );\r\n\r\n\t\tthis._worker = new Worker( Physijs.scripts.worker || 'physijs_worker.js' );\r\n\t\tthis._worker.transferableMessage = this._worker.webkitPostMessage || this._worker.postMessage;\r\n\t\tthis._materials_ref_counts = {};\r\n\t\tthis._objects = {};\r\n\t\tthis._vehicles = {};\r\n\t\tthis._constraints = {};\r\n\r\n\t\tvar ab = new ArrayBuffer( 1 );\r\n\t\tthis._worker.transferableMessage( ab, [ab] );\r\n\t\tSUPPORT_TRANSFERABLE = ( ab.byteLength === 0 );\r\n\r\n\t\tthis._worker.onmessage = function ( event ) {\r\n\t\t\tvar _temp,\r\n\t\t\t\tdata = event.data;\r\n\r\n\t\t\tif ( data instanceof ArrayBuffer && data.byteLength !== 1 ) { // byteLength === 1 is the worker making a SUPPORT_TRANSFERABLE test\r\n\t\t\t\tdata = new Float32Array( data );\r\n\t\t\t}\r\n\r\n\t\t\tif ( data instanceof Float32Array ) {\r\n\r\n\t\t\t\t// transferable object\r\n\t\t\t\tswitch ( data[0] ) {\r\n\t\t\t\t\tcase MESSAGE_TYPES.WORLDREPORT:\r\n\t\t\t\t\t\tself._updateScene( data );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase MESSAGE_TYPES.COLLISIONREPORT:\r\n\t\t\t\t\t\tself._updateCollisions( data );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase MESSAGE_TYPES.VEHICLEREPORT:\r\n\t\t\t\t\t\tself._updateVehicles( data );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase MESSAGE_TYPES.CONSTRAINTREPORT:\r\n\t\t\t\t\t\tself._updateConstraints( data );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.cmd ) {\r\n\r\n\t\t\t\t\t// non-transferable object\r\n\t\t\t\t\tswitch ( data.cmd ) {\r\n\t\t\t\t\t\tcase 'objectReady':\r\n\t\t\t\t\t\t\t_temp = data.params;\r\n\t\t\t\t\t\t\tif ( self._objects[ _temp ] ) {\r\n\t\t\t\t\t\t\t\tself._objects[ _temp ].dispatchEvent( 'ready' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'worldReady':\r\n\t\t\t\t\t\t\tself.dispatchEvent( 'ready' );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'vehicle':\r\n\t\t\t\t\t\t\twindow.test = data;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t// Do nothing, just show the message\r\n\t\t\t\t\t\t\tconsole.debug('Received: ' + data.cmd);\r\n\t\t\t\t\t\t\tconsole.dir(data.params);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tswitch ( data[0] ) {\r\n\t\t\t\t\t\tcase MESSAGE_TYPES.WORLDREPORT:\r\n\t\t\t\t\t\t\tself._updateScene( data );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase MESSAGE_TYPES.COLLISIONREPORT:\r\n\t\t\t\t\t\t\tself._updateCollisions( data );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase MESSAGE_TYPES.VEHICLEREPORT:\r\n\t\t\t\t\t\t\tself._updateVehicles( data );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase MESSAGE_TYPES.CONSTRAINTREPORT:\r\n\t\t\t\t\t\t\tself._updateConstraints( data );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tparams = params || {};\r\n\t\tparams.ammo = Physijs.scripts.ammo || 'ammo.js';\r\n\t\tparams.fixedTimeStep = params.fixedTimeStep || 1 / 60;\r\n\t\tparams.rateLimit = params.rateLimit || true;\r\n\t\tthis.execute( 'init', params );\r\n\t};\r\n\tPhysijs.Scene.prototype = new THREE.Scene;\r\n\tPhysijs.Scene.prototype.constructor = Physijs.Scene;\r\n\tEventable.make( Physijs.Scene );\r\n\r\n\tPhysijs.Scene.prototype._updateScene = function( data ) {\r\n\t\tvar num_objects = data[1],\r\n\t\t\tobject,\r\n\t\t\ti, offset;\r\n\r\n\t\tfor ( i = 0; i < num_objects; i++ ) {\r\n\t\t\toffset = 2 + i * REPORT_ITEMSIZE;\r\n\t\t\tobject = this._objects[ data[ offset ] ];\r\n\r\n\t\t\tif ( object === undefined ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.__dirtyPosition === false ) {\r\n\t\t\t\tobject.position.set(\r\n\t\t\t\t\tdata[ offset + 1 ],\r\n\t\t\t\t\tdata[ offset + 2 ],\r\n\t\t\t\t\tdata[ offset + 3 ]\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.__dirtyRotation === false ) {\r\n\t\t\t\tobject.quaternion.set(\r\n\t\t\t\t\tdata[ offset + 4 ],\r\n\t\t\t\t\tdata[ offset + 5 ],\r\n\t\t\t\t\tdata[ offset + 6 ],\r\n\t\t\t\t\tdata[ offset + 7 ]\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tobject._physijs.linearVelocity.set(\r\n\t\t\t\tdata[ offset + 8 ],\r\n\t\t\t\tdata[ offset + 9 ],\r\n\t\t\t\tdata[ offset + 10 ]\r\n\t\t\t);\r\n\r\n\t\t\tobject._physijs.angularVelocity.set(\r\n\t\t\t\tdata[ offset + 11 ],\r\n\t\t\t\tdata[ offset + 12 ],\r\n\t\t\t\tdata[ offset + 13 ]\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tif ( SUPPORT_TRANSFERABLE ) {\r\n\t\t\t// Give the typed array back to the worker\r\n\t\t\tthis._worker.transferableMessage( data.buffer, [data.buffer] );\r\n\t\t}\r\n\r\n\t\t_is_simulating = false;\r\n\t\tthis.dispatchEvent( 'update' );\r\n\t};\r\n\r\n\tPhysijs.Scene.prototype._updateVehicles = function( data ) {\r\n\t\tvar vehicle, wheel,\r\n\t\t\ti, offset;\r\n\r\n\t\tfor ( i = 0; i < ( data.length - 1 ) / VEHICLEREPORT_ITEMSIZE; i++ ) {\r\n\t\t\toffset = 1 + i * VEHICLEREPORT_ITEMSIZE;\r\n\t\t\tvehicle = this._vehicles[ data[ offset ] ];\r\n\r\n\t\t\tif ( vehicle === undefined ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\twheel = vehicle.wheels[ data[ offset + 1 ] ];\r\n\r\n\t\t\twheel.position.set(\r\n\t\t\t\tdata[ offset + 2 ],\r\n\t\t\t\tdata[ offset + 3 ],\r\n\t\t\t\tdata[ offset + 4 ]\r\n\t\t\t);\r\n\r\n\t\t\twheel.quaternion.set(\r\n\t\t\t\tdata[ offset + 5 ],\r\n\t\t\t\tdata[ offset + 6 ],\r\n\t\t\t\tdata[ offset + 7 ],\r\n\t\t\t\tdata[ offset + 8 ]\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif ( SUPPORT_TRANSFERABLE ) {\r\n\t\t\t// Give the typed array back to the worker\r\n\t\t\tthis._worker.transferableMessage( data.buffer, [data.buffer] );\r\n\t\t}\r\n\t};\r\n\r\n\tPhysijs.Scene.prototype._updateConstraints = function( data ) {\r\n\t\tvar constraint, object,\r\n\t\t\ti, offset;\r\n\r\n\t\tfor ( i = 0; i < ( data.length - 1 ) / CONSTRAINTREPORT_ITEMSIZE; i++ ) {\r\n\t\t\toffset = 1 + i * CONSTRAINTREPORT_ITEMSIZE;\r\n\t\t\tconstraint = this._constraints[ data[ offset ] ];\r\n\t\t\tobject = this._objects[ data[ offset + 1 ] ];\r\n\r\n\t\t\tif ( constraint === undefined || object === undefined ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t_temp_vector3_1.set(\r\n\t\t\t\tdata[ offset + 2 ],\r\n\t\t\t\tdata[ offset + 3 ],\r\n\t\t\t\tdata[ offset + 4 ]\r\n\t\t\t);\r\n\t\t\t_temp_matrix4_1.extractRotation( object.matrix );\r\n\t\t\t_temp_vector3_1.applyMatrix4( _temp_matrix4_1 );\r\n\r\n\t\t\tconstraint.positiona.addVectors( object.position, _temp_vector3_1 );\r\n\t\t\tconstraint.appliedImpulse = data[ offset + 5 ] ;\r\n\t\t}\r\n\r\n\t\tif ( SUPPORT_TRANSFERABLE ) {\r\n\t\t\t// Give the typed array back to the worker\r\n\t\t\tthis._worker.transferableMessage( data.buffer, [data.buffer] );\r\n\t\t}\r\n\t};\r\n\r\n\tPhysijs.Scene.prototype._updateCollisions = function( data ) {\r\n\t\t/**\r\n\t\t * #TODO\r\n\t\t * This is probably the worst way ever to handle collisions. The inherent evilness is a residual\r\n\t\t * effect from the previous version's evilness which mutated when switching to transferable objects.\r\n\t\t *\r\n\t\t * If you feel inclined to make this better, please do so.\r\n\t\t */\r\n\r\n\t\tvar i, j, offset, object, object2, id1, id2,\r\n\t\t\tcollisions = {}, normal_offsets = {};\r\n\r\n\t\t// Build collision manifest\r\n\t\tfor ( i = 0; i < data[1]; i++ ) {\r\n\t\t\toffset = 2 + i * COLLISIONREPORT_ITEMSIZE;\r\n\t\t\tobject = data[ offset ];\r\n\t\t\tobject2 = data[ offset + 1 ];\r\n\r\n\t\t\tnormal_offsets[ object + '-' + object2 ] = offset + 2;\r\n\t\t\tnormal_offsets[ object2 + '-' + object ] = -1 * ( offset + 2 );\r\n\r\n\t\t\t// Register collisions for both the object colliding and the object being collided with\r\n\t\t\tif ( !collisions[ object ] ) collisions[ object ] = [];\r\n\t\t\tcollisions[ object ].push( object2 );\r\n\r\n\t\t\tif ( !collisions[ object2 ] ) collisions[ object2 ] = [];\r\n\t\t\tcollisions[ object2 ].push( object );\r\n\t\t}\r\n\r\n\t\t// Deal with collisions\r\n\t\tfor ( id1 in this._objects ) {\r\n\t\t\tif ( !this._objects.hasOwnProperty( id1 ) ) continue;\r\n\t\t\tobject = this._objects[ id1 ];\r\n\r\n\t\t\t// If object touches anything, ...\r\n\t\t\tif ( collisions[ id1 ] ) {\r\n\r\n\t\t\t\t// Clean up touches array\r\n\t\t\t\tfor ( j = 0; j < object._physijs.touches.length; j++ ) {\r\n\t\t\t\t\tif ( collisions[ id1 ].indexOf( object._physijs.touches[j] ) === -1 ) {\r\n\t\t\t\t\t\tobject._physijs.touches.splice( j--, 1 );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Handle each colliding object\r\n\t\t\t\tfor ( j = 0; j < collisions[ id1 ].length; j++ ) {\r\n\t\t\t\t\tid2 = collisions[ id1 ][ j ];\r\n\t\t\t\t\tobject2 = this._objects[ id2 ];\r\n\r\n\t\t\t\t\tif ( object2 ) {\r\n\t\t\t\t\t\t// If object was not already touching object2, notify object\r\n\t\t\t\t\t\tif ( object._physijs.touches.indexOf( id2 ) === -1 ) {\r\n\t\t\t\t\t\t\tobject._physijs.touches.push( id2 );\r\n\r\n\t\t\t\t\t\t\t_temp_vector3_1.subVectors( object.getLinearVelocity(), object2.getLinearVelocity() );\r\n\t\t\t\t\t\t\t_temp1 = _temp_vector3_1.clone();\r\n\r\n\t\t\t\t\t\t\t_temp_vector3_1.subVectors( object.getAngularVelocity(), object2.getAngularVelocity() );\r\n\t\t\t\t\t\t\t_temp2 = _temp_vector3_1.clone();\r\n\r\n\t\t\t\t\t\t\tvar normal_offset = normal_offsets[ object._physijs.id + '-' + object2._physijs.id ];\r\n\t\t\t\t\t\t\tif ( normal_offset > 0 ) {\r\n\t\t\t\t\t\t\t\t_temp_vector3_1.set(\r\n\t\t\t\t\t\t\t\t\t-data[ normal_offset ],\r\n\t\t\t\t\t\t\t\t\t-data[ normal_offset + 1 ],\r\n\t\t\t\t\t\t\t\t\t-data[ normal_offset + 2 ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tnormal_offset *= -1;\r\n\t\t\t\t\t\t\t\t_temp_vector3_1.set(\r\n\t\t\t\t\t\t\t\t\tdata[ normal_offset ],\r\n\t\t\t\t\t\t\t\t\tdata[ normal_offset + 1 ],\r\n\t\t\t\t\t\t\t\t\tdata[ normal_offset + 2 ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tobject.dispatchEvent( 'collision', object2, _temp1, _temp2, _temp_vector3_1 );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// not touching other objects\r\n\t\t\t\tobject._physijs.touches.length = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.collisions = collisions;\r\n\r\n\t\tif ( SUPPORT_TRANSFERABLE ) {\r\n\t\t\t// Give the typed array back to the worker\r\n\t\t\tthis._worker.transferableMessage( data.buffer, [data.buffer] );\r\n\t\t}\r\n\t};\r\n\r\n\tPhysijs.Scene.prototype.addConstraint = function ( constraint, show_marker ) {\r\n\t\tthis._constraints[ constraint.id ] = constraint;\r\n\t\tthis.execute( 'addConstraint', constraint.getDefinition() );\r\n\r\n\t\tif ( show_marker ) {\r\n\t\t\tvar marker;\r\n\r\n\t\t\tswitch ( constraint.type ) {\r\n\t\t\t\tcase 'point':\r\n\t\t\t\t\tmarker = new THREE.Mesh(\r\n\t\t\t\t\t\tnew THREE.SphereGeometry( 1.5 ),\r\n\t\t\t\t\t\tnew THREE.MeshNormalMaterial\r\n\t\t\t\t\t);\r\n\t\t\t\t\tmarker.position.copy( constraint.positiona );\r\n\t\t\t\t\tthis._objects[ constraint.objecta ].add( marker );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hinge':\r\n\t\t\t\t\tmarker = new THREE.Mesh(\r\n\t\t\t\t\t\tnew THREE.SphereGeometry( 1.5 ),\r\n\t\t\t\t\t\tnew THREE.MeshNormalMaterial\r\n\t\t\t\t\t);\r\n\t\t\t\t\tmarker.position.copy( constraint.positiona );\r\n\t\t\t\t\tthis._objects[ constraint.objecta ].add( marker );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'slider':\r\n\t\t\t\t\tmarker = new THREE.Mesh(\r\n\t\t\t\t\t\tnew THREE.BoxGeometry( 10, 1, 1 ),\r\n\t\t\t\t\t\tnew THREE.MeshNormalMaterial\r\n\t\t\t\t\t);\r\n\t\t\t\t\tmarker.position.copy( constraint.positiona );\r\n\t\t\t\t\t// This rotation isn't right if all three axis are non-0 values\r\n\t\t\t\t\t// TODO: change marker's rotation order to ZYX\r\n\t\t\t\t\tmarker.rotation.set(\r\n\t\t\t\t\t\tconstraint.axis.y, // yes, y and\r\n\t\t\t\t\t\tconstraint.axis.x, // x axis are swapped\r\n\t\t\t\t\t\tconstraint.axis.z\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis._objects[ constraint.objecta ].add( marker );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'conetwist':\r\n\t\t\t\t\tmarker = new THREE.Mesh(\r\n\t\t\t\t\t\tnew THREE.SphereGeometry( 1.5 ),\r\n\t\t\t\t\t\tnew THREE.MeshNormalMaterial\r\n\t\t\t\t\t);\r\n\t\t\t\t\tmarker.position.copy( constraint.positiona );\r\n\t\t\t\t\tthis._objects[ constraint.objecta ].add( marker );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'dof':\r\n\t\t\t\t\tmarker = new THREE.Mesh(\r\n\t\t\t\t\t\tnew THREE.SphereGeometry( 1.5 ),\r\n\t\t\t\t\t\tnew THREE.MeshNormalMaterial\r\n\t\t\t\t\t);\r\n\t\t\t\t\tmarker.position.copy( constraint.positiona );\r\n\t\t\t\t\tthis._objects[ constraint.objecta ].add( marker );\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn constraint;\r\n\t};\r\n\r\n\tPhysijs.Scene.prototype.onSimulationResume = function() {\r\n\t\tthis.execute( 'onSimulationResume', { } );\r\n\t};\r\n\r\n\tPhysijs.Scene.prototype.removeConstraint = function( constraint ) {\r\n\t\tif ( this._constraints[constraint.id ] !== undefined ) {\r\n\t\t\tthis.execute( 'removeConstraint', { id: constraint.id } );\r\n\t\t\tdelete this._constraints[ constraint.id ];\r\n\t\t}\r\n\t};\r\n\r\n\tPhysijs.Scene.prototype.execute = function( cmd, params ) {\r\n\t\tthis._worker.postMessage({ cmd: cmd, params: params });\r\n\t};\r\n\r\n\taddObjectChildren = function( parent, object ) {\r\n\t\tvar i;\r\n\r\n\t\tfor ( i = 0; i < object.children.length; i++ ) {\r\n\t\t\tif ( object.children[i]._physijs ) {\r\n\t\t\t\tobject.children[i].updateMatrix();\r\n\t\t\t\tobject.children[i].updateMatrixWorld();\r\n\r\n\t\t\t\t_temp_vector3_1.setFromMatrixPosition( object.children[i].matrixWorld );\r\n\t\t\t\t_quaternion_1.setFromRotationMatrix( object.children[i].matrixWorld );\r\n\r\n\t\t\t\tobject.children[i]._physijs.position_offset = {\r\n\t\t\t\t\tx: _temp_vector3_1.x,\r\n\t\t\t\t\ty: _temp_vector3_1.y,\r\n\t\t\t\t\tz: _temp_vector3_1.z\r\n\t\t\t\t};\r\n\r\n\t\t\t\tobject.children[i]._physijs.rotation = {\r\n\t\t\t\t\tx: _quaternion_1.x,\r\n\t\t\t\t\ty: _quaternion_1.y,\r\n\t\t\t\t\tz: _quaternion_1.z,\r\n\t\t\t\t\tw: _quaternion_1.w\r\n\t\t\t\t};\r\n\r\n\t\t\t\tparent._physijs.children.push( object.children[i]._physijs );\r\n\t\t\t}\r\n\r\n\t\t\taddObjectChildren( parent, object.children[i] );\r\n\t\t}\r\n\t};\r\n\r\n\tPhysijs.Scene.prototype.add = function( object ) {\r\n\t\tTHREE.Mesh.prototype.add.call( this, object );\r\n\r\n\t\tif ( object._physijs ) {\r\n\r\n\t\t\tobject.world = this;\r\n\r\n\t\t\tif ( object instanceof Physijs.Vehicle ) {\r\n\r\n\t\t\t\tthis.add( object.mesh );\r\n\t\t\t\tthis._vehicles[ object._physijs.id ] = object;\r\n\t\t\t\tthis.execute( 'addVehicle', object._physijs );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tobject.__dirtyPosition = false;\r\n\t\t\t\tobject.__dirtyRotation = false;\r\n\t\t\t\tthis._objects[object._physijs.id] = object;\r\n\r\n\t\t\t\tif ( object.children.length ) {\r\n\t\t\t\t\tobject._physijs.children = [];\r\n\t\t\t\t\taddObjectChildren( object, object );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( object.material._physijs ) {\r\n\t\t\t\t\tif ( !this._materials_ref_counts.hasOwnProperty( object.material._physijs.id ) ) {\r\n\t\t\t\t\t\tthis.execute( 'registerMaterial', object.material._physijs );\r\n\t\t\t\t\t\tobject._physijs.materialId = object.material._physijs.id;\r\n\t\t\t\t\t\tthis._materials_ref_counts[object.material._physijs.id] = 1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._materials_ref_counts[object.material._physijs.id]++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Object starting position + rotation\r\n\t\t\t\tobject._physijs.position = { x: object.position.x, y: object.position.y, z: object.position.z };\r\n\t\t\t\tobject._physijs.rotation = { x: object.quaternion.x, y: object.quaternion.y, z: object.quaternion.z, w: object.quaternion.w };\r\n\r\n\t\t\t\t// Check for scaling\r\n\t\t\t\tvar mass_scaling = new THREE.Vector3( 1, 1, 1 );\r\n\t\t\t\tif ( object._physijs.width ) {\r\n\t\t\t\t\tobject._physijs.width *= object.scale.x;\r\n\t\t\t\t}\r\n\t\t\t\tif ( object._physijs.height ) {\r\n\t\t\t\t\tobject._physijs.height *= object.scale.y;\r\n\t\t\t\t}\r\n\t\t\t\tif ( object._physijs.depth ) {\r\n\t\t\t\t\tobject._physijs.depth *= object.scale.z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.execute( 'addObject', object._physijs );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tPhysijs.Scene.prototype.remove = function( object ) {\r\n\t\tif ( object instanceof Physijs.Vehicle ) {\r\n\t\t\tthis.execute( 'removeVehicle', { id: object._physijs.id } );\r\n\t\t\twhile( object.wheels.length ) {\r\n\t\t\t\tthis.remove( object.wheels.pop() );\r\n\t\t\t}\r\n\t\t\tthis.remove( object.mesh );\r\n\t\t\tdelete this._vehicles[ object._physijs.id ];\r\n\t\t} else {\r\n\t\t\tTHREE.Mesh.prototype.remove.call( this, object );\r\n\t\t\tif ( object._physijs ) {\r\n\t\t\t\tdelete this._objects[object._physijs.id];\r\n\t\t\t\tthis.execute( 'removeObject', { id: object._physijs.id } );\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ( object.material && object.material._physijs && this._materials_ref_counts.hasOwnProperty( object.material._physijs.id ) ) {\r\n\t\t\tthis._materials_ref_counts[object.material._physijs.id]--;\r\n\t\t\tif(this._materials_ref_counts[object.material._physijs.id] == 0) {\r\n\t\t\t\tthis.execute( 'unRegisterMaterial', object.material._physijs );\r\n\t\t\t\tdelete this._materials_ref_counts[object.material._physijs.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tPhysijs.Scene.prototype.setFixedTimeStep = function( fixedTimeStep ) {\r\n\t\tif ( fixedTimeStep ) {\r\n\t\t\tthis.execute( 'setFixedTimeStep', fixedTimeStep );\r\n\t\t}\r\n\t};\r\n\r\n\tPhysijs.Scene.prototype.setGravity = function( gravity ) {\r\n\t\tif ( gravity ) {\r\n\t\t\tthis.execute( 'setGravity', gravity );\r\n\t\t}\r\n\t};\r\n\r\n\tPhysijs.Scene.prototype.simulate = function( timeStep, maxSubSteps ) {\r\n\t\tvar object_id, object, update;\r\n\r\n\t\tif ( _is_simulating ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t_is_simulating = true;\r\n\r\n\t\tfor ( object_id in this._objects ) {\r\n\t\t\tif ( !this._objects.hasOwnProperty( object_id ) ) continue;\r\n\r\n\t\t\tobject = this._objects[object_id];\r\n\r\n\t\t\tif ( object.__dirtyPosition || object.__dirtyRotation ) {\r\n\t\t\t\tupdate = { id: object._physijs.id };\r\n\r\n\t\t\t\tif ( object.__dirtyPosition ) {\r\n\t\t\t\t\tupdate.pos = { x: object.position.x, y: object.position.y, z: object.position.z };\r\n\t\t\t\t\tobject.__dirtyPosition = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( object.__dirtyRotation ) {\r\n\t\t\t\t\tupdate.quat = { x: object.quaternion.x, y: object.quaternion.y, z: object.quaternion.z, w: object.quaternion.w };\r\n\t\t\t\t\tobject.__dirtyRotation = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.execute( 'updateTransform', update );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.execute( 'simulate', { timeStep: timeStep, maxSubSteps: maxSubSteps } );\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\r\n\t// Phsijs.Mesh\r\n\tPhysijs.Mesh = function ( geometry, material, mass ) {\r\n\t\tvar index;\r\n\r\n\t\tif ( !geometry ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tEventable.call( this );\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\t\tif ( !geometry.boundingBox ) {\r\n\t\t\tgeometry.computeBoundingBox();\r\n\t\t}\r\n\r\n\t\tthis._physijs = {\r\n\t\t\ttype: null,\r\n\t\t\tid: getObjectId(),\r\n\t\t\tmass: mass || 0,\r\n\t\t\ttouches: [],\r\n\t\t\tlinearVelocity: new THREE.Vector3,\r\n\t\t\tangularVelocity: new THREE.Vector3\r\n\t\t};\r\n\t};\r\n\tPhysijs.Mesh.prototype = new THREE.Mesh;\r\n\tPhysijs.Mesh.prototype.constructor = Physijs.Mesh;\r\n\tEventable.make( Physijs.Mesh );\r\n\r\n\t// Physijs.Mesh.mass\r\n\tPhysijs.Mesh.prototype.__defineGetter__('mass', function() {\r\n\t\treturn this._physijs.mass;\r\n\t});\r\n\tPhysijs.Mesh.prototype.__defineSetter__('mass', function( mass ) {\r\n\t\tthis._physijs.mass = mass;\r\n\t\tif ( this.world ) {\r\n\t\t\tthis.world.execute( 'updateMass', { id: this._physijs.id, mass: mass } );\r\n\t\t}\r\n\t});\r\n\r\n\t// Physijs.Mesh.applyCentralImpulse\r\n\tPhysijs.Mesh.prototype.applyCentralImpulse = function ( force ) {\r\n\t\tif ( this.world ) {\r\n\t\t\tthis.world.execute( 'applyCentralImpulse', { id: this._physijs.id, x: force.x, y: force.y, z: force.z } );\r\n\t\t}\r\n\t};\r\n\r\n\t// Physijs.Mesh.applyImpulse\r\n\tPhysijs.Mesh.prototype.applyImpulse = function ( force, offset ) {\r\n\t\tif ( this.world ) {\r\n\t\t\tthis.world.execute( 'applyImpulse', { id: this._physijs.id, impulse_x: force.x, impulse_y: force.y, impulse_z: force.z, x: offset.x, y: offset.y, z: offset.z } );\r\n\t\t}\r\n\t};\r\n\r\n\t// Physijs.Mesh.applyTorque\r\n\tPhysijs.Mesh.prototype.applyTorque = function ( force ) {\r\n\t\tif ( this.world ) {\r\n\t\t\tthis.world.execute( 'applyTorque', { id: this._physijs.id, torque_x: force.x, torque_y: force.y, torque_z: force.z } );\r\n\t\t}\r\n\t};\r\n\r\n\t// Physijs.Mesh.applyCentralForce\r\n\tPhysijs.Mesh.prototype.applyCentralForce = function ( force ) {\r\n\t\tif ( this.world ) {\r\n\t\t\tthis.world.execute( 'applyCentralForce', { id: this._physijs.id, x: force.x, y: force.y, z: force.z } );\r\n\t\t}\r\n\t};\r\n\r\n\t// Physijs.Mesh.applyForce\r\n\tPhysijs.Mesh.prototype.applyForce = function ( force, offset ) {\r\n\t\tif ( this.world ) {\r\n\t\t\tthis.world.execute( 'applyForce', { id: this._physijs.id, force_x: force.x, force_y : force.y, force_z : force.z, x: offset.x, y: offset.y, z: offset.z } );\r\n\t\t}\r\n\t};\r\n\r\n\t// Physijs.Mesh.getAngularVelocity\r\n\tPhysijs.Mesh.prototype.getAngularVelocity = function () {\r\n\t\treturn this._physijs.angularVelocity;\r\n\t};\r\n\r\n\t// Physijs.Mesh.setAngularVelocity\r\n\tPhysijs.Mesh.prototype.setAngularVelocity = function ( velocity ) {\r\n\t\tif ( this.world ) {\r\n\t\t\tthis.world.execute( 'setAngularVelocity', { id: this._physijs.id, x: velocity.x, y: velocity.y, z: velocity.z } );\r\n\t\t}\r\n\t};\r\n\r\n\t// Physijs.Mesh.getLinearVelocity\r\n\tPhysijs.Mesh.prototype.getLinearVelocity = function () {\r\n\t\treturn this._physijs.linearVelocity;\r\n\t};\r\n\r\n\t// Physijs.Mesh.setLinearVelocity\r\n\tPhysijs.Mesh.prototype.setLinearVelocity = function ( velocity ) {\r\n\t\tif ( this.world ) {\r\n\t\t\tthis.world.execute( 'setLinearVelocity', { id: this._physijs.id, x: velocity.x, y: velocity.y, z: velocity.z } );\r\n\t\t}\r\n\t};\r\n\r\n\t// Physijs.Mesh.setAngularFactor\r\n\tPhysijs.Mesh.prototype.setAngularFactor = function ( factor ) {\r\n\t\tif ( this.world ) {\r\n\t\t\tthis.world.execute( 'setAngularFactor', { id: this._physijs.id, x: factor.x, y: factor.y, z: factor.z } );\r\n\t\t}\r\n\t};\r\n\r\n\t// Physijs.Mesh.setLinearFactor\r\n\tPhysijs.Mesh.prototype.setLinearFactor = function ( factor ) {\r\n\t\tif ( this.world ) {\r\n\t\t\tthis.world.execute( 'setLinearFactor', { id: this._physijs.id, x: factor.x, y: factor.y, z: factor.z } );\r\n\t\t}\r\n\t};\r\n\r\n\t// Physijs.Mesh.setDamping\r\n\tPhysijs.Mesh.prototype.setDamping = function ( linear, angular ) {\r\n\t\tif ( this.world ) {\r\n\t\t\tthis.world.execute( 'setDamping', { id: this._physijs.id, linear: linear, angular: angular } );\r\n\t\t}\r\n\t};\r\n\r\n\t// Physijs.Mesh.setCcdMotionThreshold\r\n\tPhysijs.Mesh.prototype.setCcdMotionThreshold = function ( threshold ) {\r\n\t\tif ( this.world ) {\r\n\t\t\tthis.world.execute( 'setCcdMotionThreshold', { id: this._physijs.id, threshold: threshold } );\r\n\t\t}\r\n\t};\r\n\r\n\t// Physijs.Mesh.setCcdSweptSphereRadius\r\n\tPhysijs.Mesh.prototype.setCcdSweptSphereRadius = function ( radius ) {\r\n\t\tif ( this.world ) {\r\n\t\t\tthis.world.execute( 'setCcdSweptSphereRadius', { id: this._physijs.id, radius: radius } );\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t// Physijs.PlaneMesh\r\n\tPhysijs.PlaneMesh = function ( geometry, material, mass ) {\r\n\t\tvar width, height;\r\n\r\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\r\n\r\n\t\tif ( !geometry.boundingBox ) {\r\n\t\t\tgeometry.computeBoundingBox();\r\n\t\t}\r\n\r\n\t\twidth = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\r\n\t\theight = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\r\n\r\n\t\tthis._physijs.type = 'plane';\r\n\t\tthis._physijs.normal = geometry.faces[0].normal.clone();\r\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? width * height : mass;\r\n\t};\r\n\tPhysijs.PlaneMesh.prototype = new Physijs.Mesh;\r\n\tPhysijs.PlaneMesh.prototype.constructor = Physijs.PlaneMesh;\r\n\r\n\t// Physijs.HeightfieldMesh\r\n\tPhysijs.HeightfieldMesh = function ( geometry, material, mass, xdiv, ydiv) {\r\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\r\n\r\n\t\tthis._physijs.type   = 'heightfield';\r\n\t\tthis._physijs.xsize  = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\r\n\t\tthis._physijs.ysize  = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\r\n\t\tthis._physijs.xpts = (typeof xdiv === 'undefined') ? Math.sqrt(geometry.vertices.length) : xdiv + 1;\r\n\t\tthis._physijs.ypts = (typeof ydiv === 'undefined') ? Math.sqrt(geometry.vertices.length) : ydiv + 1;\r\n\t\t// note - this assumes our plane geometry is square, unless we pass in specific xdiv and ydiv\r\n\t\tthis._physijs.absMaxHeight = Math.max(geometry.boundingBox.max.z,Math.abs(geometry.boundingBox.min.z));\r\n\r\n\t\tvar points = [];\r\n\r\n\t\tvar a, b;\r\n\t\tfor ( var i = 0; i < geometry.vertices.length; i++ ) {\r\n\r\n\t\t\ta = i % this._physijs.xpts;\r\n\t\t\tb = Math.round( ( i / this._physijs.xpts ) - ( (i % this._physijs.xpts) / this._physijs.xpts ) );\r\n\t\t\tpoints[i] = geometry.vertices[ a + ( ( this._physijs.ypts - b - 1 ) * this._physijs.ypts ) ].z;\r\n\r\n\t\t\t//points[i] = geometry.vertices[i];\r\n\t\t}\r\n\r\n\t\tthis._physijs.points = points;\r\n\t};\r\n\tPhysijs.HeightfieldMesh.prototype = new Physijs.Mesh;\r\n\tPhysijs.HeightfieldMesh.prototype.constructor = Physijs.HeightfieldMesh;\r\n\r\n\t// Physijs.BoxMesh\r\n\tPhysijs.BoxMesh = function( geometry, material, mass ) {\r\n\t\tvar width, height, depth;\r\n\r\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\r\n\r\n\t\tif ( !geometry.boundingBox ) {\r\n\t\t\tgeometry.computeBoundingBox();\r\n\t\t}\r\n\r\n\t\twidth = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\r\n\t\theight = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\r\n\t\tdepth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\r\n\r\n\t\tthis._physijs.type = 'box';\r\n\t\tthis._physijs.width = width;\r\n\t\tthis._physijs.height = height;\r\n\t\tthis._physijs.depth = depth;\r\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? width * height * depth : mass;\r\n\t};\r\n\tPhysijs.BoxMesh.prototype = new Physijs.Mesh;\r\n\tPhysijs.BoxMesh.prototype.constructor = Physijs.BoxMesh;\r\n\r\n\r\n\t// Physijs.SphereMesh\r\n\tPhysijs.SphereMesh = function( geometry, material, mass ) {\r\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\r\n\r\n\t\tif ( !geometry.boundingSphere ) {\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\t\t}\r\n\r\n\t\tthis._physijs.type = 'sphere';\r\n\t\tthis._physijs.radius = geometry.boundingSphere.radius;\r\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? (4/3) * Math.PI * Math.pow(this._physijs.radius, 3) : mass;\r\n\t};\r\n\tPhysijs.SphereMesh.prototype = new Physijs.Mesh;\r\n\tPhysijs.SphereMesh.prototype.constructor = Physijs.SphereMesh;\r\n\r\n\r\n\t// Physijs.CylinderMesh\r\n\tPhysijs.CylinderMesh = function( geometry, material, mass ) {\r\n\t\tvar width, height, depth;\r\n\r\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\r\n\r\n\t\tif ( !geometry.boundingBox ) {\r\n\t\t\tgeometry.computeBoundingBox();\r\n\t\t}\r\n\r\n\t\twidth = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\r\n\t\theight = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\r\n\t\tdepth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\r\n\r\n\t\tthis._physijs.type = 'cylinder';\r\n\t\tthis._physijs.width = width;\r\n\t\tthis._physijs.height = height;\r\n\t\tthis._physijs.depth = depth;\r\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? width * height * depth : mass;\r\n\t};\r\n\tPhysijs.CylinderMesh.prototype = new Physijs.Mesh;\r\n\tPhysijs.CylinderMesh.prototype.constructor = Physijs.CylinderMesh;\r\n\r\n\r\n\t// Physijs.CapsuleMesh\r\n\tPhysijs.CapsuleMesh = function( geometry, material, mass ) {\r\n\t\tvar width, height, depth;\r\n\r\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\r\n\r\n\t\tif ( !geometry.boundingBox ) {\r\n\t\t\tgeometry.computeBoundingBox();\r\n\t\t}\r\n\r\n\t\twidth = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\r\n\t\theight = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\r\n\t\tdepth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\r\n\r\n\t\tthis._physijs.type = 'capsule';\r\n\t\tthis._physijs.radius = Math.max(width / 2, depth / 2);\r\n\t\tthis._physijs.height = height;\r\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? width * height * depth : mass;\r\n\t};\r\n\tPhysijs.CapsuleMesh.prototype = new Physijs.Mesh;\r\n\tPhysijs.CapsuleMesh.prototype.constructor = Physijs.CapsuleMesh;\r\n\r\n\r\n\t// Physijs.ConeMesh\r\n\tPhysijs.ConeMesh = function( geometry, material, mass ) {\r\n\t\tvar width, height, depth;\r\n\r\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\r\n\r\n\t\tif ( !geometry.boundingBox ) {\r\n\t\t\tgeometry.computeBoundingBox();\r\n\t\t}\r\n\r\n\t\twidth = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\r\n\t\theight = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\r\n\r\n\t\tthis._physijs.type = 'cone';\r\n\t\tthis._physijs.radius = width / 2;\r\n\t\tthis._physijs.height = height;\r\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? width * height : mass;\r\n\t};\r\n\tPhysijs.ConeMesh.prototype = new Physijs.Mesh;\r\n\tPhysijs.ConeMesh.prototype.constructor = Physijs.ConeMesh;\r\n\r\n\r\n\t// Physijs.ConcaveMesh\r\n\tPhysijs.ConcaveMesh = function( geometry, material, mass ) {\r\n\t\tvar i,\r\n\t\t\twidth, height, depth,\r\n\t\t\tvertices, face, triangles = [];\r\n\r\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\r\n\r\n\t\tif ( !geometry.boundingBox ) {\r\n\t\t\tgeometry.computeBoundingBox();\r\n\t\t}\r\n\r\n\t\tvertices = geometry.vertices;\r\n\r\n\t\tfor ( i = 0; i < geometry.faces.length; i++ ) {\r\n\t\t\tface = geometry.faces[i];\r\n\t\t\tif ( face instanceof THREE.Face3) {\r\n\r\n\t\t\t\ttriangles.push([\r\n\t\t\t\t\t{ x: vertices[face.a].x, y: vertices[face.a].y, z: vertices[face.a].z },\r\n\t\t\t\t\t{ x: vertices[face.b].x, y: vertices[face.b].y, z: vertices[face.b].z },\r\n\t\t\t\t\t{ x: vertices[face.c].x, y: vertices[face.c].y, z: vertices[face.c].z }\r\n\t\t\t\t]);\r\n\r\n\t\t\t} else if ( face instanceof THREE.Face4 ) {\r\n\r\n\t\t\t\ttriangles.push([\r\n\t\t\t\t\t{ x: vertices[face.a].x, y: vertices[face.a].y, z: vertices[face.a].z },\r\n\t\t\t\t\t{ x: vertices[face.b].x, y: vertices[face.b].y, z: vertices[face.b].z },\r\n\t\t\t\t\t{ x: vertices[face.d].x, y: vertices[face.d].y, z: vertices[face.d].z }\r\n\t\t\t\t]);\r\n\t\t\t\ttriangles.push([\r\n\t\t\t\t\t{ x: vertices[face.b].x, y: vertices[face.b].y, z: vertices[face.b].z },\r\n\t\t\t\t\t{ x: vertices[face.c].x, y: vertices[face.c].y, z: vertices[face.c].z },\r\n\t\t\t\t\t{ x: vertices[face.d].x, y: vertices[face.d].y, z: vertices[face.d].z }\r\n\t\t\t\t]);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twidth = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\r\n\t\theight = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\r\n\t\tdepth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\r\n\r\n\t\tthis._physijs.type = 'concave';\r\n\t\tthis._physijs.triangles = triangles;\r\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? width * height * depth : mass;\r\n\t};\r\n\tPhysijs.ConcaveMesh.prototype = new Physijs.Mesh;\r\n\tPhysijs.ConcaveMesh.prototype.constructor = Physijs.ConcaveMesh;\r\n\r\n\r\n\t// Physijs.ConvexMesh\r\n\tPhysijs.ConvexMesh = function( geometry, material, mass ) {\r\n\t\tvar i,\r\n\t\t\twidth, height, depth,\r\n\t\t\tpoints = [];\r\n\r\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\r\n\r\n\t\tif ( !geometry.boundingBox ) {\r\n\t\t\tgeometry.computeBoundingBox();\r\n\t\t}\r\n\r\n\t\tfor ( i = 0; i < geometry.vertices.length; i++ ) {\r\n\t\t\tpoints.push({\r\n\t\t\t\tx: geometry.vertices[i].x,\r\n\t\t\t\ty: geometry.vertices[i].y,\r\n\t\t\t\tz: geometry.vertices[i].z\r\n\t\t\t});\r\n\t\t}\r\n\r\n\r\n\t\twidth = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\r\n\t\theight = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\r\n\t\tdepth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\r\n\r\n\t\tthis._physijs.type = 'convex';\r\n\t\tthis._physijs.points = points;\r\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? width * height * depth : mass;\r\n\t};\r\n\tPhysijs.ConvexMesh.prototype = new Physijs.Mesh;\r\n\tPhysijs.ConvexMesh.prototype.constructor = Physijs.ConvexMesh;\r\n\r\n\r\n\t// Physijs.Vehicle\r\n\tPhysijs.Vehicle = function( mesh, tuning ) {\r\n\t\ttuning = tuning || new Physijs.VehicleTuning;\r\n\t\tthis.mesh = mesh;\r\n\t\tthis.wheels = [];\r\n\t\tthis._physijs = {\r\n\t\t\tid: getObjectId(),\r\n\t\t\trigidBody: mesh._physijs.id,\r\n\t\t\tsuspension_stiffness: tuning.suspension_stiffness,\r\n\t\t\tsuspension_compression: tuning.suspension_compression,\r\n\t\t\tsuspension_damping: tuning.suspension_damping,\r\n\t\t\tmax_suspension_travel: tuning.max_suspension_travel,\r\n\t\t\tfriction_slip: tuning.friction_slip,\r\n\t\t\tmax_suspension_force: tuning.max_suspension_force\r\n\t\t};\r\n\t};\r\n\tPhysijs.Vehicle.prototype.addWheel = function( wheel_geometry, wheel_material, connection_point, wheel_direction, wheel_axle, suspension_rest_length, wheel_radius, is_front_wheel, tuning ) {\r\n\t\tvar wheel = new THREE.Mesh( wheel_geometry, wheel_material );\r\n\t\twheel.castShadow = wheel.receiveShadow = true;\r\n\t\twheel.position.copy( wheel_direction ).multiplyScalar( suspension_rest_length / 100 ).add( connection_point );\r\n\t\tthis.world.add( wheel );\r\n\t\tthis.wheels.push( wheel );\r\n\r\n\t\tthis.world.execute( 'addWheel', {\r\n\t\t\tid: this._physijs.id,\r\n\t\t\tconnection_point: { x: connection_point.x, y: connection_point.y, z: connection_point.z },\r\n\t\t\twheel_direction: { x: wheel_direction.x, y: wheel_direction.y, z: wheel_direction.z },\r\n\t\t\twheel_axle: { x: wheel_axle.x, y: wheel_axle.y, z: wheel_axle.z },\r\n\t\t\tsuspension_rest_length: suspension_rest_length,\r\n\t\t\twheel_radius: wheel_radius,\r\n\t\t\tis_front_wheel: is_front_wheel,\r\n\t\t\ttuning: tuning\r\n\t\t});\r\n\t};\r\n\tPhysijs.Vehicle.prototype.setSteering = function( amount, wheel ) {\r\n\t\tif ( wheel !== undefined && this.wheels[ wheel ] !== undefined ) {\r\n\t\t\tthis.world.execute( 'setSteering', { id: this._physijs.id, wheel: wheel, steering: amount } );\r\n\t\t} else if ( this.wheels.length > 0 ) {\r\n\t\t\tfor ( var i = 0; i < this.wheels.length; i++ ) {\r\n\t\t\t\tthis.world.execute( 'setSteering', { id: this._physijs.id, wheel: i, steering: amount } );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tPhysijs.Vehicle.prototype.setBrake = function( amount, wheel ) {\r\n\t\tif ( wheel !== undefined && this.wheels[ wheel ] !== undefined ) {\r\n\t\t\tthis.world.execute( 'setBrake', { id: this._physijs.id, wheel: wheel, brake: amount } );\r\n\t\t} else if ( this.wheels.length > 0 ) {\r\n\t\t\tfor ( var i = 0; i < this.wheels.length; i++ ) {\r\n\t\t\t\tthis.world.execute( 'setBrake', { id: this._physijs.id, wheel: i, brake: amount } );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tPhysijs.Vehicle.prototype.applyEngineForce = function( amount, wheel ) {\r\n\t\tif ( wheel !== undefined && this.wheels[ wheel ] !== undefined ) {\r\n\t\t\tthis.world.execute( 'applyEngineForce', { id: this._physijs.id, wheel: wheel, force: amount } );\r\n\t\t} else if ( this.wheels.length > 0 ) {\r\n\t\t\tfor ( var i = 0; i < this.wheels.length; i++ ) {\r\n\t\t\t\tthis.world.execute( 'applyEngineForce', { id: this._physijs.id, wheel: i, force: amount } );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Physijs.VehicleTuning\r\n\tPhysijs.VehicleTuning = function( suspension_stiffness, suspension_compression, suspension_damping, max_suspension_travel, friction_slip, max_suspension_force ) {\r\n\t\tthis.suspension_stiffness = suspension_stiffness !== undefined ? suspension_stiffness : 5.88;\r\n\t\tthis.suspension_compression = suspension_compression !== undefined ? suspension_compression : 0.83;\r\n\t\tthis.suspension_damping = suspension_damping !== undefined ? suspension_damping : 0.88;\r\n\t\tthis.max_suspension_travel = max_suspension_travel !== undefined ? max_suspension_travel : 500;\r\n\t\tthis.friction_slip = friction_slip !== undefined ? friction_slip : 10.5;\r\n\t\tthis.max_suspension_force = max_suspension_force !== undefined ? max_suspension_force : 6000;\r\n\t};\r\n\r\n\treturn Physijs;\r\n})();\r\n"]},"metadata":{},"sourceType":"module"}