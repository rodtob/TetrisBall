{"ast":null,"code":"module.exports = function (THREE, PhysijsWorker) {\n  'use strict';\n\n  var SUPPORT_TRANSFERABLE,\n      _is_simulating = false,\n      _Physijs = Physijs,\n      // used for noConflict method\n  Physijs = {},\n      // object assigned to window.Physijs\n  Eventable,\n      // class to provide simple event methods\n  getObjectId,\n      // returns a unique ID for a Physijs mesh object\n  getEulerXYZFromQuaternion,\n      getQuatertionFromEuler,\n      convertWorldPositionToObject,\n      // Converts a world-space position to object-space\n  addObjectChildren,\n      _temp1,\n      _temp2,\n      _temp_vector3_1 = new THREE.Vector3(),\n      _temp_vector3_2 = new THREE.Vector3(),\n      _temp_matrix4_1 = new THREE.Matrix4(),\n      _quaternion_1 = new THREE.Quaternion(),\n      // constants\n  MESSAGE_TYPES = {\n    WORLDREPORT: 0,\n    COLLISIONREPORT: 1,\n    VEHICLEREPORT: 2,\n    CONSTRAINTREPORT: 3\n  },\n      REPORT_ITEMSIZE = 14,\n      COLLISIONREPORT_ITEMSIZE = 5,\n      VEHICLEREPORT_ITEMSIZE = 9,\n      CONSTRAINTREPORT_ITEMSIZE = 6;\n\n  Eventable = function () {\n    this._eventListeners = {};\n  };\n\n  Eventable.prototype.addEventListener = function (event_name, callback) {\n    if (!this._eventListeners.hasOwnProperty(event_name)) {\n      this._eventListeners[event_name] = [];\n    }\n\n    this._eventListeners[event_name].push(callback);\n  };\n\n  Eventable.prototype.removeEventListener = function (event_name, callback) {\n    var index;\n    if (!this._eventListeners.hasOwnProperty(event_name)) return false;\n\n    if ((index = this._eventListeners[event_name].indexOf(callback)) >= 0) {\n      this._eventListeners[event_name].splice(index, 1);\n\n      return true;\n    }\n\n    return false;\n  };\n\n  Eventable.prototype.dispatchEvent = function (event_name) {\n    var i,\n        parameters = Array.prototype.splice.call(arguments, 1);\n\n    if (this._eventListeners.hasOwnProperty(event_name)) {\n      for (i = 0; i < this._eventListeners[event_name].length; i++) {\n        this._eventListeners[event_name][i].apply(this, parameters);\n      }\n    }\n  };\n\n  Eventable.make = function (obj) {\n    obj.prototype.addEventListener = Eventable.prototype.addEventListener;\n    obj.prototype.removeEventListener = Eventable.prototype.removeEventListener;\n    obj.prototype.dispatchEvent = Eventable.prototype.dispatchEvent;\n  };\n\n  getObjectId = function () {\n    var _id = 1;\n    return function () {\n      return _id++;\n    };\n  }();\n\n  getEulerXYZFromQuaternion = function (x, y, z, w) {\n    return new THREE.Vector3(Math.atan2(2 * (x * w - y * z), w * w - x * x - y * y + z * z), Math.asin(2 * (x * z + y * w)), Math.atan2(2 * (z * w - x * y), w * w + x * x - y * y - z * z));\n  };\n\n  getQuatertionFromEuler = function (x, y, z) {\n    var c1, s1, c2, s2, c3, s3, c1c2, s1s2;\n    c1 = Math.cos(y);\n    s1 = Math.sin(y);\n    c2 = Math.cos(-z);\n    s2 = Math.sin(-z);\n    c3 = Math.cos(x);\n    s3 = Math.sin(x);\n    c1c2 = c1 * c2;\n    s1s2 = s1 * s2;\n    return {\n      w: c1c2 * c3 - s1s2 * s3,\n      x: c1c2 * s3 + s1s2 * c3,\n      y: s1 * c2 * c3 + c1 * s2 * s3,\n      z: c1 * s2 * c3 - s1 * c2 * s3\n    };\n  };\n\n  convertWorldPositionToObject = function (position, object) {\n    _temp_matrix4_1.identity(); // reset temp matrix\n    // Set the temp matrix's rotation to the object's rotation\n\n\n    _temp_matrix4_1.identity().makeRotationFromQuaternion(object.quaternion); // Invert rotation matrix in order to \"unrotate\" a point back to object space\n\n\n    _temp_matrix4_1.getInverse(_temp_matrix4_1); // Yay! Temp vars!\n\n\n    _temp_vector3_1.copy(position);\n\n    _temp_vector3_2.copy(object.position); // Apply the rotation\n\n\n    return _temp_vector3_1.sub(_temp_vector3_2).applyMatrix4(_temp_matrix4_1);\n  }; // Physijs.noConflict\n\n\n  Physijs.noConflict = function () {\n    window.Physijs = _Physijs;\n    return Physijs;\n  }; // Physijs.createMaterial\n\n\n  Physijs.createMaterial = function (material, friction, restitution) {\n    var physijs_material = function () {};\n\n    physijs_material.prototype = material;\n    physijs_material = new physijs_material();\n    physijs_material._physijs = {\n      id: material.id,\n      friction: friction === undefined ? .8 : friction,\n      restitution: restitution === undefined ? .2 : restitution\n    };\n    return physijs_material;\n  }; // Constraints\n\n\n  Physijs.PointConstraint = function (objecta, objectb, position) {\n    if (position === undefined) {\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'point';\n    this.appliedImpulse = 0;\n    this.id = getObjectId();\n    this.objecta = objecta._physijs.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n\n    if (objectb) {\n      this.objectb = objectb._physijs.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    }\n  };\n\n  Physijs.PointConstraint.prototype.getDefinition = function () {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb\n    };\n  };\n\n  Physijs.HingeConstraint = function (objecta, objectb, position, axis) {\n    if (axis === undefined) {\n      axis = position;\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'hinge';\n    this.appliedImpulse = 0;\n    this.id = getObjectId();\n    this.scene = objecta.parent;\n    this.objecta = objecta._physijs.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.position = position.clone();\n    this.axis = axis;\n\n    if (objectb) {\n      this.objectb = objectb._physijs.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    }\n  };\n\n  Physijs.HingeConstraint.prototype.getDefinition = function () {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axis: this.axis\n    };\n  };\n  /*\n   * low = minimum angle in radians\n   * high = maximum angle in radians\n   * bias_factor = applied as a factor to constraint error\n   * relaxation_factor = controls bounce (0.0 == no bounce)\n   */\n\n\n  Physijs.HingeConstraint.prototype.setLimits = function (low, high, bias_factor, relaxation_factor) {\n    this.scene.execute('hinge_setLimits', {\n      constraint: this.id,\n      low: low,\n      high: high,\n      bias_factor: bias_factor,\n      relaxation_factor: relaxation_factor\n    });\n  };\n\n  Physijs.HingeConstraint.prototype.enableAngularMotor = function (velocity, acceleration) {\n    this.scene.execute('hinge_enableAngularMotor', {\n      constraint: this.id,\n      velocity: velocity,\n      acceleration: acceleration\n    });\n  };\n\n  Physijs.HingeConstraint.prototype.disableMotor = function (velocity, acceleration) {\n    this.scene.execute('hinge_disableMotor', {\n      constraint: this.id\n    });\n  };\n\n  Physijs.SliderConstraint = function (objecta, objectb, position, axis) {\n    if (axis === undefined) {\n      axis = position;\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'slider';\n    this.appliedImpulse = 0;\n    this.id = getObjectId();\n    this.scene = objecta.parent;\n    this.objecta = objecta._physijs.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.axis = axis;\n\n    if (objectb) {\n      this.objectb = objectb._physijs.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    }\n  };\n\n  Physijs.SliderConstraint.prototype.getDefinition = function () {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axis: this.axis\n    };\n  };\n\n  Physijs.SliderConstraint.prototype.setLimits = function (lin_lower, lin_upper, ang_lower, ang_upper) {\n    this.scene.execute('slider_setLimits', {\n      constraint: this.id,\n      lin_lower: lin_lower,\n      lin_upper: lin_upper,\n      ang_lower: ang_lower,\n      ang_upper: ang_upper\n    });\n  };\n\n  Physijs.SliderConstraint.prototype.setRestitution = function (linear, angular) {\n    this.scene.execute('slider_setRestitution', {\n      constraint: this.id,\n      linear: linear,\n      angular: angular\n    });\n  };\n\n  Physijs.SliderConstraint.prototype.enableLinearMotor = function (velocity, acceleration) {\n    this.scene.execute('slider_enableLinearMotor', {\n      constraint: this.id,\n      velocity: velocity,\n      acceleration: acceleration\n    });\n  };\n\n  Physijs.SliderConstraint.prototype.disableLinearMotor = function () {\n    this.scene.execute('slider_disableLinearMotor', {\n      constraint: this.id\n    });\n  };\n\n  Physijs.SliderConstraint.prototype.enableAngularMotor = function (velocity, acceleration) {\n    this.scene.execute('slider_enableAngularMotor', {\n      constraint: this.id,\n      velocity: velocity,\n      acceleration: acceleration\n    });\n  };\n\n  Physijs.SliderConstraint.prototype.disableAngularMotor = function () {\n    this.scene.execute('slider_disableAngularMotor', {\n      constraint: this.id\n    });\n  };\n\n  Physijs.ConeTwistConstraint = function (objecta, objectb, position) {\n    if (position === undefined) {\n      throw 'Both objects must be defined in a ConeTwistConstraint.';\n    }\n\n    this.type = 'conetwist';\n    this.appliedImpulse = 0;\n    this.id = getObjectId();\n    this.scene = objecta.parent;\n    this.objecta = objecta._physijs.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.objectb = objectb._physijs.id;\n    this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    this.axisa = {\n      x: objecta.rotation.x,\n      y: objecta.rotation.y,\n      z: objecta.rotation.z\n    };\n    this.axisb = {\n      x: objectb.rotation.x,\n      y: objectb.rotation.y,\n      z: objectb.rotation.z\n    };\n  };\n\n  Physijs.ConeTwistConstraint.prototype.getDefinition = function () {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axisa: this.axisa,\n      axisb: this.axisb\n    };\n  };\n\n  Physijs.ConeTwistConstraint.prototype.setLimit = function (x, y, z) {\n    this.scene.execute('conetwist_setLimit', {\n      constraint: this.id,\n      x: x,\n      y: y,\n      z: z\n    });\n  };\n\n  Physijs.ConeTwistConstraint.prototype.enableMotor = function () {\n    this.scene.execute('conetwist_enableMotor', {\n      constraint: this.id\n    });\n  };\n\n  Physijs.ConeTwistConstraint.prototype.setMaxMotorImpulse = function (max_impulse) {\n    this.scene.execute('conetwist_setMaxMotorImpulse', {\n      constraint: this.id,\n      max_impulse: max_impulse\n    });\n  };\n\n  Physijs.ConeTwistConstraint.prototype.setMotorTarget = function (target) {\n    if (target instanceof THREE.Vector3) {\n      target = new THREE.Quaternion().setFromEuler(new THREE.Euler(target.x, target.y, target.z));\n    } else if (target instanceof THREE.Euler) {\n      target = new THREE.Quaternion().setFromEuler(target);\n    } else if (target instanceof THREE.Matrix4) {\n      target = new THREE.Quaternion().setFromRotationMatrix(target);\n    }\n\n    this.scene.execute('conetwist_setMotorTarget', {\n      constraint: this.id,\n      x: target.x,\n      y: target.y,\n      z: target.z,\n      w: target.w\n    });\n  };\n\n  Physijs.ConeTwistConstraint.prototype.disableMotor = function () {\n    this.scene.execute('conetwist_disableMotor', {\n      constraint: this.id\n    });\n  };\n\n  Physijs.DOFConstraint = function (objecta, objectb, position) {\n    if (position === undefined) {\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'dof';\n    this.appliedImpulse = 0;\n    this.id = getObjectId();\n    this.scene = objecta.parent;\n    this.objecta = objecta._physijs.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.axisa = {\n      x: objecta.rotation.x,\n      y: objecta.rotation.y,\n      z: objecta.rotation.z\n    };\n\n    if (objectb) {\n      this.objectb = objectb._physijs.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n      this.axisb = {\n        x: objectb.rotation.x,\n        y: objectb.rotation.y,\n        z: objectb.rotation.z\n      };\n    }\n  };\n\n  Physijs.DOFConstraint.prototype.getDefinition = function () {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axisa: this.axisa,\n      axisb: this.axisb\n    };\n  };\n\n  Physijs.DOFConstraint.prototype.setLinearLowerLimit = function (limit) {\n    this.scene.execute('dof_setLinearLowerLimit', {\n      constraint: this.id,\n      x: limit.x,\n      y: limit.y,\n      z: limit.z\n    });\n  };\n\n  Physijs.DOFConstraint.prototype.setLinearUpperLimit = function (limit) {\n    this.scene.execute('dof_setLinearUpperLimit', {\n      constraint: this.id,\n      x: limit.x,\n      y: limit.y,\n      z: limit.z\n    });\n  };\n\n  Physijs.DOFConstraint.prototype.setAngularLowerLimit = function (limit) {\n    this.scene.execute('dof_setAngularLowerLimit', {\n      constraint: this.id,\n      x: limit.x,\n      y: limit.y,\n      z: limit.z\n    });\n  };\n\n  Physijs.DOFConstraint.prototype.setAngularUpperLimit = function (limit) {\n    this.scene.execute('dof_setAngularUpperLimit', {\n      constraint: this.id,\n      x: limit.x,\n      y: limit.y,\n      z: limit.z\n    });\n  };\n\n  Physijs.DOFConstraint.prototype.enableAngularMotor = function (which) {\n    this.scene.execute('dof_enableAngularMotor', {\n      constraint: this.id,\n      which: which\n    });\n  };\n\n  Physijs.DOFConstraint.prototype.configureAngularMotor = function (which, low_angle, high_angle, velocity, max_force) {\n    this.scene.execute('dof_configureAngularMotor', {\n      constraint: this.id,\n      which: which,\n      low_angle: low_angle,\n      high_angle: high_angle,\n      velocity: velocity,\n      max_force: max_force\n    });\n  };\n\n  Physijs.DOFConstraint.prototype.disableAngularMotor = function (which) {\n    this.scene.execute('dof_disableAngularMotor', {\n      constraint: this.id,\n      which: which\n    });\n  }; // Physijs.Scene\n\n\n  Physijs.Scene = function (params) {\n    var self = this;\n    Eventable.call(this);\n    THREE.Scene.call(this);\n    this._worker = new PhysijsWorker();\n    this._worker.transferableMessage = this._worker.webkitPostMessage || this._worker.postMessage;\n    this._materials_ref_counts = {};\n    this._objects = {};\n    this._vehicles = {};\n    this._constraints = {};\n    var ab = new ArrayBuffer(1);\n\n    this._worker.transferableMessage(ab, [ab]);\n\n    SUPPORT_TRANSFERABLE = ab.byteLength === 0;\n\n    this._worker.onmessage = function (event) {\n      var _temp,\n          data = event.data;\n\n      if (data instanceof ArrayBuffer && data.byteLength !== 1) {\n        // byteLength === 1 is the worker making a SUPPORT_TRANSFERABLE test\n        data = new Float32Array(data);\n      }\n\n      if (data instanceof Float32Array) {\n        // transferable object\n        switch (data[0]) {\n          case MESSAGE_TYPES.WORLDREPORT:\n            self._updateScene(data);\n\n            break;\n\n          case MESSAGE_TYPES.COLLISIONREPORT:\n            self._updateCollisions(data);\n\n            break;\n\n          case MESSAGE_TYPES.VEHICLEREPORT:\n            self._updateVehicles(data);\n\n            break;\n\n          case MESSAGE_TYPES.CONSTRAINTREPORT:\n            self._updateConstraints(data);\n\n            break;\n        }\n      } else {\n        if (data.cmd) {\n          // non-transferable object\n          switch (data.cmd) {\n            case 'objectReady':\n              _temp = data.params;\n\n              if (self._objects[_temp]) {\n                self._objects[_temp].dispatchEvent('ready');\n              }\n\n              break;\n\n            case 'worldReady':\n              self.dispatchEvent('ready');\n              break;\n\n            case 'vehicle':\n              window.test = data;\n              break;\n\n            default:\n              // Do nothing, just show the message\n              console.debug('Received: ' + data.cmd);\n              console.dir(data.params);\n              break;\n          }\n        } else {\n          switch (data[0]) {\n            case MESSAGE_TYPES.WORLDREPORT:\n              self._updateScene(data);\n\n              break;\n\n            case MESSAGE_TYPES.COLLISIONREPORT:\n              self._updateCollisions(data);\n\n              break;\n\n            case MESSAGE_TYPES.VEHICLEREPORT:\n              self._updateVehicles(data);\n\n              break;\n\n            case MESSAGE_TYPES.CONSTRAINTREPORT:\n              self._updateConstraints(data);\n\n              break;\n          }\n        }\n      }\n    };\n\n    params = params || {};\n    params.fixedTimeStep = params.fixedTimeStep || 1 / 60;\n    params.rateLimit = params.rateLimit || true;\n    this.execute('init', params);\n  };\n\n  Physijs.Scene.prototype = new THREE.Scene();\n  Physijs.Scene.prototype.constructor = Physijs.Scene;\n  Eventable.make(Physijs.Scene);\n\n  Physijs.Scene.prototype._updateScene = function (data) {\n    var num_objects = data[1],\n        object,\n        i,\n        offset;\n\n    for (i = 0; i < num_objects; i++) {\n      offset = 2 + i * REPORT_ITEMSIZE;\n      object = this._objects[data[offset]];\n\n      if (object === undefined) {\n        continue;\n      }\n\n      if (object.__dirtyPosition === false) {\n        object.position.set(data[offset + 1], data[offset + 2], data[offset + 3]);\n      }\n\n      if (object.__dirtyRotation === false) {\n        object.quaternion.set(data[offset + 4], data[offset + 5], data[offset + 6], data[offset + 7]);\n      }\n\n      object._physijs.linearVelocity.set(data[offset + 8], data[offset + 9], data[offset + 10]);\n\n      object._physijs.angularVelocity.set(data[offset + 11], data[offset + 12], data[offset + 13]);\n    }\n\n    if (SUPPORT_TRANSFERABLE) {\n      // Give the typed array back to the worker\n      this._worker.transferableMessage(data.buffer, [data.buffer]);\n    }\n\n    _is_simulating = false;\n    this.dispatchEvent('update');\n  };\n\n  Physijs.Scene.prototype._updateVehicles = function (data) {\n    var vehicle, wheel, i, offset;\n\n    for (i = 0; i < (data.length - 1) / VEHICLEREPORT_ITEMSIZE; i++) {\n      offset = 1 + i * VEHICLEREPORT_ITEMSIZE;\n      vehicle = this._vehicles[data[offset]];\n\n      if (vehicle === undefined) {\n        continue;\n      }\n\n      wheel = vehicle.wheels[data[offset + 1]];\n      wheel.position.set(data[offset + 2], data[offset + 3], data[offset + 4]);\n      wheel.quaternion.set(data[offset + 5], data[offset + 6], data[offset + 7], data[offset + 8]);\n    }\n\n    if (SUPPORT_TRANSFERABLE) {\n      // Give the typed array back to the worker\n      this._worker.transferableMessage(data.buffer, [data.buffer]);\n    }\n  };\n\n  Physijs.Scene.prototype._updateConstraints = function (data) {\n    var constraint, object, i, offset;\n\n    for (i = 0; i < (data.length - 1) / CONSTRAINTREPORT_ITEMSIZE; i++) {\n      offset = 1 + i * CONSTRAINTREPORT_ITEMSIZE;\n      constraint = this._constraints[data[offset]];\n      object = this._objects[data[offset + 1]];\n\n      if (constraint === undefined || object === undefined) {\n        continue;\n      }\n\n      _temp_vector3_1.set(data[offset + 2], data[offset + 3], data[offset + 4]);\n\n      _temp_matrix4_1.extractRotation(object.matrix);\n\n      _temp_vector3_1.applyMatrix4(_temp_matrix4_1);\n\n      constraint.positiona.addVectors(object.position, _temp_vector3_1);\n      constraint.appliedImpulse = data[offset + 5];\n    }\n\n    if (SUPPORT_TRANSFERABLE) {\n      // Give the typed array back to the worker\n      this._worker.transferableMessage(data.buffer, [data.buffer]);\n    }\n  };\n\n  Physijs.Scene.prototype._updateCollisions = function (data) {\n    /**\n     * #TODO\n     * This is probably the worst way ever to handle collisions. The inherent evilness is a residual\n     * effect from the previous version's evilness which mutated when switching to transferable objects.\n     *\n     * If you feel inclined to make this better, please do so.\n     */\n    var i,\n        j,\n        offset,\n        object,\n        object2,\n        id1,\n        id2,\n        collisions = {},\n        normal_offsets = {}; // Build collision manifest\n\n    for (i = 0; i < data[1]; i++) {\n      offset = 2 + i * COLLISIONREPORT_ITEMSIZE;\n      object = data[offset];\n      object2 = data[offset + 1];\n      normal_offsets[object + '-' + object2] = offset + 2;\n      normal_offsets[object2 + '-' + object] = -1 * (offset + 2); // Register collisions for both the object colliding and the object being collided with\n\n      if (!collisions[object]) collisions[object] = [];\n      collisions[object].push(object2);\n      if (!collisions[object2]) collisions[object2] = [];\n      collisions[object2].push(object);\n    } // Deal with collisions\n\n\n    for (id1 in this._objects) {\n      if (!this._objects.hasOwnProperty(id1)) continue;\n      object = this._objects[id1]; // If object touches anything, ...\n\n      if (collisions[id1]) {\n        // Clean up touches array\n        for (j = 0; j < object._physijs.touches.length; j++) {\n          if (collisions[id1].indexOf(object._physijs.touches[j]) === -1) {\n            object._physijs.touches.splice(j--, 1);\n          }\n        } // Handle each colliding object\n\n\n        for (j = 0; j < collisions[id1].length; j++) {\n          id2 = collisions[id1][j];\n          object2 = this._objects[id2];\n\n          if (object2) {\n            // If object was not already touching object2, notify object\n            if (object._physijs.touches.indexOf(id2) === -1) {\n              object._physijs.touches.push(id2);\n\n              _temp_vector3_1.subVectors(object.getLinearVelocity(), object2.getLinearVelocity());\n\n              _temp1 = _temp_vector3_1.clone();\n\n              _temp_vector3_1.subVectors(object.getAngularVelocity(), object2.getAngularVelocity());\n\n              _temp2 = _temp_vector3_1.clone();\n              var normal_offset = normal_offsets[object._physijs.id + '-' + object2._physijs.id];\n\n              if (normal_offset > 0) {\n                _temp_vector3_1.set(-data[normal_offset], -data[normal_offset + 1], -data[normal_offset + 2]);\n              } else {\n                normal_offset *= -1;\n\n                _temp_vector3_1.set(data[normal_offset], data[normal_offset + 1], data[normal_offset + 2]);\n              }\n\n              object.dispatchEvent('collision', object2, _temp1, _temp2, _temp_vector3_1);\n            }\n          }\n        }\n      } else {\n        // not touching other objects\n        object._physijs.touches.length = 0;\n      }\n    }\n\n    this.collisions = collisions;\n\n    if (SUPPORT_TRANSFERABLE) {\n      // Give the typed array back to the worker\n      this._worker.transferableMessage(data.buffer, [data.buffer]);\n    }\n  };\n\n  Physijs.Scene.prototype.addConstraint = function (constraint, show_marker) {\n    this._constraints[constraint.id] = constraint;\n    this.execute('addConstraint', constraint.getDefinition());\n\n    if (show_marker) {\n      var marker;\n\n      switch (constraint.type) {\n        case 'point':\n          marker = new THREE.Mesh(new THREE.SphereGeometry(1.5), new THREE.MeshNormalMaterial());\n          marker.position.copy(constraint.positiona);\n\n          this._objects[constraint.objecta].add(marker);\n\n          break;\n\n        case 'hinge':\n          marker = new THREE.Mesh(new THREE.SphereGeometry(1.5), new THREE.MeshNormalMaterial());\n          marker.position.copy(constraint.positiona);\n\n          this._objects[constraint.objecta].add(marker);\n\n          break;\n\n        case 'slider':\n          marker = new THREE.Mesh(new THREE.BoxGeometry(10, 1, 1), new THREE.MeshNormalMaterial());\n          marker.position.copy(constraint.positiona); // This rotation isn't right if all three axis are non-0 values\n          // TODO: change marker's rotation order to ZYX\n\n          marker.rotation.set(constraint.axis.y, // yes, y and\n          constraint.axis.x, // x axis are swapped\n          constraint.axis.z);\n\n          this._objects[constraint.objecta].add(marker);\n\n          break;\n\n        case 'conetwist':\n          marker = new THREE.Mesh(new THREE.SphereGeometry(1.5), new THREE.MeshNormalMaterial());\n          marker.position.copy(constraint.positiona);\n\n          this._objects[constraint.objecta].add(marker);\n\n          break;\n\n        case 'dof':\n          marker = new THREE.Mesh(new THREE.SphereGeometry(1.5), new THREE.MeshNormalMaterial());\n          marker.position.copy(constraint.positiona);\n\n          this._objects[constraint.objecta].add(marker);\n\n          break;\n      }\n    }\n\n    return constraint;\n  };\n\n  Physijs.Scene.prototype.onSimulationResume = function () {\n    this.execute('onSimulationResume', {});\n  };\n\n  Physijs.Scene.prototype.removeConstraint = function (constraint) {\n    if (this._constraints[constraint.id] !== undefined) {\n      this.execute('removeConstraint', {\n        id: constraint.id\n      });\n      delete this._constraints[constraint.id];\n    }\n  };\n\n  Physijs.Scene.prototype.execute = function (cmd, params) {\n    this._worker.postMessage({\n      cmd: cmd,\n      params: params\n    });\n  };\n\n  addObjectChildren = function (parent, object) {\n    var i;\n\n    for (i = 0; i < object.children.length; i++) {\n      if (object.children[i]._physijs) {\n        object.children[i].updateMatrix();\n        object.children[i].updateMatrixWorld();\n\n        _temp_vector3_1.setFromMatrixPosition(object.children[i].matrixWorld);\n\n        _quaternion_1.setFromRotationMatrix(object.children[i].matrixWorld);\n\n        object.children[i]._physijs.position_offset = {\n          x: _temp_vector3_1.x,\n          y: _temp_vector3_1.y,\n          z: _temp_vector3_1.z\n        };\n        object.children[i]._physijs.rotation = {\n          x: _quaternion_1.x,\n          y: _quaternion_1.y,\n          z: _quaternion_1.z,\n          w: _quaternion_1.w\n        };\n\n        parent._physijs.children.push(object.children[i]._physijs);\n      }\n\n      addObjectChildren(parent, object.children[i]);\n    }\n  };\n\n  Physijs.Scene.prototype.add = function (object) {\n    THREE.Mesh.prototype.add.call(this, object);\n\n    if (object._physijs) {\n      object.world = this;\n\n      if (object instanceof Physijs.Vehicle) {\n        this.add(object.mesh);\n        this._vehicles[object._physijs.id] = object;\n        this.execute('addVehicle', object._physijs);\n      } else {\n        object.__dirtyPosition = false;\n        object.__dirtyRotation = false;\n        this._objects[object._physijs.id] = object;\n\n        if (object.children.length) {\n          object._physijs.children = [];\n          addObjectChildren(object, object);\n        }\n\n        if (object.material._physijs) {\n          if (!this._materials_ref_counts.hasOwnProperty(object.material._physijs.id)) {\n            this.execute('registerMaterial', object.material._physijs);\n            object._physijs.materialId = object.material._physijs.id;\n            this._materials_ref_counts[object.material._physijs.id] = 1;\n          } else {\n            this._materials_ref_counts[object.material._physijs.id]++;\n          }\n        } // Object starting position + rotation\n\n\n        object._physijs.position = {\n          x: object.position.x,\n          y: object.position.y,\n          z: object.position.z\n        };\n        object._physijs.rotation = {\n          x: object.quaternion.x,\n          y: object.quaternion.y,\n          z: object.quaternion.z,\n          w: object.quaternion.w\n        }; // Check for scaling\n\n        var mass_scaling = new THREE.Vector3(1, 1, 1);\n\n        if (object._physijs.width) {\n          object._physijs.width *= object.scale.x;\n        }\n\n        if (object._physijs.height) {\n          object._physijs.height *= object.scale.y;\n        }\n\n        if (object._physijs.depth) {\n          object._physijs.depth *= object.scale.z;\n        }\n\n        this.execute('addObject', object._physijs);\n      }\n    }\n  };\n\n  Physijs.Scene.prototype.remove = function (object) {\n    if (object instanceof Physijs.Vehicle) {\n      this.execute('removeVehicle', {\n        id: object._physijs.id\n      });\n\n      while (object.wheels.length) {\n        this.remove(object.wheels.pop());\n      }\n\n      this.remove(object.mesh);\n      delete this._vehicles[object._physijs.id];\n    } else {\n      THREE.Mesh.prototype.remove.call(this, object);\n\n      if (object._physijs) {\n        delete this._objects[object._physijs.id];\n        this.execute('removeObject', {\n          id: object._physijs.id\n        });\n      }\n    }\n\n    if (object.material && object.material._physijs && this._materials_ref_counts.hasOwnProperty(object.material._physijs.id)) {\n      this._materials_ref_counts[object.material._physijs.id]--;\n\n      if (this._materials_ref_counts[object.material._physijs.id] == 0) {\n        this.execute('unRegisterMaterial', object.material._physijs);\n        delete this._materials_ref_counts[object.material._physijs.id];\n      }\n    }\n  };\n\n  Physijs.Scene.prototype.setFixedTimeStep = function (fixedTimeStep) {\n    if (fixedTimeStep) {\n      this.execute('setFixedTimeStep', fixedTimeStep);\n    }\n  };\n\n  Physijs.Scene.prototype.setGravity = function (gravity) {\n    if (gravity) {\n      this.execute('setGravity', gravity);\n    }\n  };\n\n  Physijs.Scene.prototype.simulate = function (timeStep, maxSubSteps) {\n    var object_id, object, update;\n\n    if (_is_simulating) {\n      return false;\n    }\n\n    _is_simulating = true;\n\n    for (object_id in this._objects) {\n      if (!this._objects.hasOwnProperty(object_id)) continue;\n      object = this._objects[object_id];\n\n      if (object.__dirtyPosition || object.__dirtyRotation) {\n        update = {\n          id: object._physijs.id\n        };\n\n        if (object.__dirtyPosition) {\n          update.pos = {\n            x: object.position.x,\n            y: object.position.y,\n            z: object.position.z\n          };\n          object.__dirtyPosition = false;\n        }\n\n        if (object.__dirtyRotation) {\n          update.quat = {\n            x: object.quaternion.x,\n            y: object.quaternion.y,\n            z: object.quaternion.z,\n            w: object.quaternion.w\n          };\n          object.__dirtyRotation = false;\n        }\n\n        this.execute('updateTransform', update);\n      }\n    }\n\n    this.execute('simulate', {\n      timeStep: timeStep,\n      maxSubSteps: maxSubSteps\n    });\n    return true;\n  }; // Phsijs.Mesh\n\n\n  Physijs.Mesh = function (geometry, material, mass) {\n    var index;\n\n    if (!geometry) {\n      return;\n    }\n\n    Eventable.call(this);\n    THREE.Mesh.call(this, geometry, material);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    this._physijs = {\n      type: null,\n      id: getObjectId(),\n      mass: mass || 0,\n      touches: [],\n      linearVelocity: new THREE.Vector3(),\n      angularVelocity: new THREE.Vector3()\n    };\n  };\n\n  Physijs.Mesh.prototype = new THREE.Mesh();\n  Physijs.Mesh.prototype.constructor = Physijs.Mesh;\n  Eventable.make(Physijs.Mesh); // Physijs.Mesh.mass\n\n  Physijs.Mesh.prototype.__defineGetter__('mass', function () {\n    return this._physijs.mass;\n  });\n\n  Physijs.Mesh.prototype.__defineSetter__('mass', function (mass) {\n    this._physijs.mass = mass;\n\n    if (this.world) {\n      this.world.execute('updateMass', {\n        id: this._physijs.id,\n        mass: mass\n      });\n    }\n  }); // Physijs.Mesh.applyCentralImpulse\n\n\n  Physijs.Mesh.prototype.applyCentralImpulse = function (force) {\n    if (this.world) {\n      this.world.execute('applyCentralImpulse', {\n        id: this._physijs.id,\n        x: force.x,\n        y: force.y,\n        z: force.z\n      });\n    }\n  }; // Physijs.Mesh.applyImpulse\n\n\n  Physijs.Mesh.prototype.applyImpulse = function (force, offset) {\n    if (this.world) {\n      this.world.execute('applyImpulse', {\n        id: this._physijs.id,\n        impulse_x: force.x,\n        impulse_y: force.y,\n        impulse_z: force.z,\n        x: offset.x,\n        y: offset.y,\n        z: offset.z\n      });\n    }\n  }; // Physijs.Mesh.applyTorque\n\n\n  Physijs.Mesh.prototype.applyTorque = function (force) {\n    if (this.world) {\n      this.world.execute('applyTorque', {\n        id: this._physijs.id,\n        torque_x: force.x,\n        torque_y: force.y,\n        torque_z: force.z\n      });\n    }\n  }; // Physijs.Mesh.applyCentralForce\n\n\n  Physijs.Mesh.prototype.applyCentralForce = function (force) {\n    if (this.world) {\n      this.world.execute('applyCentralForce', {\n        id: this._physijs.id,\n        x: force.x,\n        y: force.y,\n        z: force.z\n      });\n    }\n  }; // Physijs.Mesh.applyForce\n\n\n  Physijs.Mesh.prototype.applyForce = function (force, offset) {\n    if (this.world) {\n      this.world.execute('applyForce', {\n        id: this._physijs.id,\n        force_x: force.x,\n        force_y: force.y,\n        force_z: force.z,\n        x: offset.x,\n        y: offset.y,\n        z: offset.z\n      });\n    }\n  }; // Physijs.Mesh.getAngularVelocity\n\n\n  Physijs.Mesh.prototype.getAngularVelocity = function () {\n    return this._physijs.angularVelocity;\n  }; // Physijs.Mesh.setAngularVelocity\n\n\n  Physijs.Mesh.prototype.setAngularVelocity = function (velocity) {\n    if (this.world) {\n      this.world.execute('setAngularVelocity', {\n        id: this._physijs.id,\n        x: velocity.x,\n        y: velocity.y,\n        z: velocity.z\n      });\n    }\n  }; // Physijs.Mesh.getLinearVelocity\n\n\n  Physijs.Mesh.prototype.getLinearVelocity = function () {\n    return this._physijs.linearVelocity;\n  }; // Physijs.Mesh.setLinearVelocity\n\n\n  Physijs.Mesh.prototype.setLinearVelocity = function (velocity) {\n    if (this.world) {\n      this.world.execute('setLinearVelocity', {\n        id: this._physijs.id,\n        x: velocity.x,\n        y: velocity.y,\n        z: velocity.z\n      });\n    }\n  }; // Physijs.Mesh.setAngularFactor\n\n\n  Physijs.Mesh.prototype.setAngularFactor = function (factor) {\n    if (this.world) {\n      this.world.execute('setAngularFactor', {\n        id: this._physijs.id,\n        x: factor.x,\n        y: factor.y,\n        z: factor.z\n      });\n    }\n  }; // Physijs.Mesh.setLinearFactor\n\n\n  Physijs.Mesh.prototype.setLinearFactor = function (factor) {\n    if (this.world) {\n      this.world.execute('setLinearFactor', {\n        id: this._physijs.id,\n        x: factor.x,\n        y: factor.y,\n        z: factor.z\n      });\n    }\n  }; // Physijs.Mesh.setDamping\n\n\n  Physijs.Mesh.prototype.setDamping = function (linear, angular) {\n    if (this.world) {\n      this.world.execute('setDamping', {\n        id: this._physijs.id,\n        linear: linear,\n        angular: angular\n      });\n    }\n  }; // Physijs.Mesh.setCcdMotionThreshold\n\n\n  Physijs.Mesh.prototype.setCcdMotionThreshold = function (threshold) {\n    if (this.world) {\n      this.world.execute('setCcdMotionThreshold', {\n        id: this._physijs.id,\n        threshold: threshold\n      });\n    }\n  }; // Physijs.Mesh.setCcdSweptSphereRadius\n\n\n  Physijs.Mesh.prototype.setCcdSweptSphereRadius = function (radius) {\n    if (this.world) {\n      this.world.execute('setCcdSweptSphereRadius', {\n        id: this._physijs.id,\n        radius: radius\n      });\n    }\n  }; // Physijs.PlaneMesh\n\n\n  Physijs.PlaneMesh = function (geometry, material, mass) {\n    var width, height;\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    this._physijs.type = 'plane';\n    this._physijs.normal = geometry.faces[0].normal.clone();\n    this._physijs.mass = typeof mass === 'undefined' ? width * height : mass;\n  };\n\n  Physijs.PlaneMesh.prototype = new Physijs.Mesh();\n  Physijs.PlaneMesh.prototype.constructor = Physijs.PlaneMesh; // Physijs.HeightfieldMesh\n\n  Physijs.HeightfieldMesh = function (geometry, material, mass, xdiv, ydiv) {\n    Physijs.Mesh.call(this, geometry, material, mass);\n    this._physijs.type = 'heightfield';\n    this._physijs.xsize = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    this._physijs.ysize = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    this._physijs.xpts = typeof xdiv === 'undefined' ? Math.sqrt(geometry.vertices.length) : xdiv + 1;\n    this._physijs.ypts = typeof ydiv === 'undefined' ? Math.sqrt(geometry.vertices.length) : ydiv + 1; // note - this assumes our plane geometry is square, unless we pass in specific xdiv and ydiv\n\n    this._physijs.absMaxHeight = Math.max(geometry.boundingBox.max.z, Math.abs(geometry.boundingBox.min.z));\n    var points = [];\n    var a, b;\n\n    for (var i = 0; i < geometry.vertices.length; i++) {\n      a = i % this._physijs.xpts;\n      b = Math.round(i / this._physijs.xpts - i % this._physijs.xpts / this._physijs.xpts);\n      points[i] = geometry.vertices[a + (this._physijs.ypts - b - 1) * this._physijs.ypts].z; //points[i] = geometry.vertices[i];\n    }\n\n    this._physijs.points = points;\n  };\n\n  Physijs.HeightfieldMesh.prototype = new Physijs.Mesh();\n  Physijs.HeightfieldMesh.prototype.constructor = Physijs.HeightfieldMesh; // Physijs.BoxMesh\n\n  Physijs.BoxMesh = function (geometry, material, mass) {\n    var width, height, depth;\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    this._physijs.type = 'box';\n    this._physijs.width = width;\n    this._physijs.height = height;\n    this._physijs.depth = depth;\n    this._physijs.mass = typeof mass === 'undefined' ? width * height * depth : mass;\n  };\n\n  Physijs.BoxMesh.prototype = new Physijs.Mesh();\n  Physijs.BoxMesh.prototype.constructor = Physijs.BoxMesh; // Physijs.SphereMesh\n\n  Physijs.SphereMesh = function (geometry, material, mass) {\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingSphere) {\n      geometry.computeBoundingSphere();\n    }\n\n    this._physijs.type = 'sphere';\n    this._physijs.radius = geometry.boundingSphere.radius;\n    this._physijs.mass = typeof mass === 'undefined' ? 4 / 3 * Math.PI * Math.pow(this._physijs.radius, 3) : mass;\n  };\n\n  Physijs.SphereMesh.prototype = new Physijs.Mesh();\n  Physijs.SphereMesh.prototype.constructor = Physijs.SphereMesh; // Physijs.CylinderMesh\n\n  Physijs.CylinderMesh = function (geometry, material, mass) {\n    var width, height, depth;\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    this._physijs.type = 'cylinder';\n    this._physijs.width = width;\n    this._physijs.height = height;\n    this._physijs.depth = depth;\n    this._physijs.mass = typeof mass === 'undefined' ? width * height * depth : mass;\n  };\n\n  Physijs.CylinderMesh.prototype = new Physijs.Mesh();\n  Physijs.CylinderMesh.prototype.constructor = Physijs.CylinderMesh; // Physijs.CapsuleMesh\n\n  Physijs.CapsuleMesh = function (geometry, material, mass) {\n    var width, height, depth;\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    this._physijs.type = 'capsule';\n    this._physijs.radius = Math.max(width / 2, depth / 2);\n    this._physijs.height = height;\n    this._physijs.mass = typeof mass === 'undefined' ? width * height * depth : mass;\n  };\n\n  Physijs.CapsuleMesh.prototype = new Physijs.Mesh();\n  Physijs.CapsuleMesh.prototype.constructor = Physijs.CapsuleMesh; // Physijs.ConeMesh\n\n  Physijs.ConeMesh = function (geometry, material, mass) {\n    var width, height, depth;\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    this._physijs.type = 'cone';\n    this._physijs.radius = width / 2;\n    this._physijs.height = height;\n    this._physijs.mass = typeof mass === 'undefined' ? width * height : mass;\n  };\n\n  Physijs.ConeMesh.prototype = new Physijs.Mesh();\n  Physijs.ConeMesh.prototype.constructor = Physijs.ConeMesh; // Physijs.ConcaveMesh\n\n  Physijs.ConcaveMesh = function (geometry, material, mass) {\n    var i,\n        width,\n        height,\n        depth,\n        vertices,\n        face,\n        triangles = [];\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    vertices = geometry.vertices;\n\n    for (i = 0; i < geometry.faces.length; i++) {\n      face = geometry.faces[i];\n\n      if (face instanceof THREE.Face3) {\n        triangles.push([{\n          x: vertices[face.a].x,\n          y: vertices[face.a].y,\n          z: vertices[face.a].z\n        }, {\n          x: vertices[face.b].x,\n          y: vertices[face.b].y,\n          z: vertices[face.b].z\n        }, {\n          x: vertices[face.c].x,\n          y: vertices[face.c].y,\n          z: vertices[face.c].z\n        }]);\n      } else if (face instanceof THREE.Face4) {\n        triangles.push([{\n          x: vertices[face.a].x,\n          y: vertices[face.a].y,\n          z: vertices[face.a].z\n        }, {\n          x: vertices[face.b].x,\n          y: vertices[face.b].y,\n          z: vertices[face.b].z\n        }, {\n          x: vertices[face.d].x,\n          y: vertices[face.d].y,\n          z: vertices[face.d].z\n        }]);\n        triangles.push([{\n          x: vertices[face.b].x,\n          y: vertices[face.b].y,\n          z: vertices[face.b].z\n        }, {\n          x: vertices[face.c].x,\n          y: vertices[face.c].y,\n          z: vertices[face.c].z\n        }, {\n          x: vertices[face.d].x,\n          y: vertices[face.d].y,\n          z: vertices[face.d].z\n        }]);\n      }\n    }\n\n    width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    this._physijs.type = 'concave';\n    this._physijs.triangles = triangles;\n    this._physijs.mass = typeof mass === 'undefined' ? width * height * depth : mass;\n  };\n\n  Physijs.ConcaveMesh.prototype = new Physijs.Mesh();\n  Physijs.ConcaveMesh.prototype.constructor = Physijs.ConcaveMesh; // Physijs.ConvexMesh\n\n  Physijs.ConvexMesh = function (geometry, material, mass) {\n    var i,\n        width,\n        height,\n        depth,\n        points = [];\n    Physijs.Mesh.call(this, geometry, material, mass);\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n\n    for (i = 0; i < geometry.vertices.length; i++) {\n      points.push({\n        x: geometry.vertices[i].x,\n        y: geometry.vertices[i].y,\n        z: geometry.vertices[i].z\n      });\n    }\n\n    width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n    height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    this._physijs.type = 'convex';\n    this._physijs.points = points;\n    this._physijs.mass = typeof mass === 'undefined' ? width * height * depth : mass;\n  };\n\n  Physijs.ConvexMesh.prototype = new Physijs.Mesh();\n  Physijs.ConvexMesh.prototype.constructor = Physijs.ConvexMesh; // Physijs.Vehicle\n\n  Physijs.Vehicle = function (mesh, tuning) {\n    tuning = tuning || new Physijs.VehicleTuning();\n    this.mesh = mesh;\n    this.wheels = [];\n    this._physijs = {\n      id: getObjectId(),\n      rigidBody: mesh._physijs.id,\n      suspension_stiffness: tuning.suspension_stiffness,\n      suspension_compression: tuning.suspension_compression,\n      suspension_damping: tuning.suspension_damping,\n      max_suspension_travel: tuning.max_suspension_travel,\n      friction_slip: tuning.friction_slip,\n      max_suspension_force: tuning.max_suspension_force\n    };\n  };\n\n  Physijs.Vehicle.prototype.addWheel = function (wheel_geometry, wheel_material, connection_point, wheel_direction, wheel_axle, suspension_rest_length, wheel_radius, is_front_wheel, tuning) {\n    var wheel = new THREE.Mesh(wheel_geometry, wheel_material);\n    wheel.castShadow = wheel.receiveShadow = true;\n    wheel.position.copy(wheel_direction).multiplyScalar(suspension_rest_length / 100).add(connection_point);\n    this.world.add(wheel);\n    this.wheels.push(wheel);\n    this.world.execute('addWheel', {\n      id: this._physijs.id,\n      connection_point: {\n        x: connection_point.x,\n        y: connection_point.y,\n        z: connection_point.z\n      },\n      wheel_direction: {\n        x: wheel_direction.x,\n        y: wheel_direction.y,\n        z: wheel_direction.z\n      },\n      wheel_axle: {\n        x: wheel_axle.x,\n        y: wheel_axle.y,\n        z: wheel_axle.z\n      },\n      suspension_rest_length: suspension_rest_length,\n      wheel_radius: wheel_radius,\n      is_front_wheel: is_front_wheel,\n      tuning: tuning\n    });\n  };\n\n  Physijs.Vehicle.prototype.setSteering = function (amount, wheel) {\n    if (wheel !== undefined && this.wheels[wheel] !== undefined) {\n      this.world.execute('setSteering', {\n        id: this._physijs.id,\n        wheel: wheel,\n        steering: amount\n      });\n    } else if (this.wheels.length > 0) {\n      for (var i = 0; i < this.wheels.length; i++) {\n        this.world.execute('setSteering', {\n          id: this._physijs.id,\n          wheel: i,\n          steering: amount\n        });\n      }\n    }\n  };\n\n  Physijs.Vehicle.prototype.setBrake = function (amount, wheel) {\n    if (wheel !== undefined && this.wheels[wheel] !== undefined) {\n      this.world.execute('setBrake', {\n        id: this._physijs.id,\n        wheel: wheel,\n        brake: amount\n      });\n    } else if (this.wheels.length > 0) {\n      for (var i = 0; i < this.wheels.length; i++) {\n        this.world.execute('setBrake', {\n          id: this._physijs.id,\n          wheel: i,\n          brake: amount\n        });\n      }\n    }\n  };\n\n  Physijs.Vehicle.prototype.applyEngineForce = function (amount, wheel) {\n    if (wheel !== undefined && this.wheels[wheel] !== undefined) {\n      this.world.execute('applyEngineForce', {\n        id: this._physijs.id,\n        wheel: wheel,\n        force: amount\n      });\n    } else if (this.wheels.length > 0) {\n      for (var i = 0; i < this.wheels.length; i++) {\n        this.world.execute('applyEngineForce', {\n          id: this._physijs.id,\n          wheel: i,\n          force: amount\n        });\n      }\n    }\n  }; // Physijs.VehicleTuning\n\n\n  Physijs.VehicleTuning = function (suspension_stiffness, suspension_compression, suspension_damping, max_suspension_travel, friction_slip, max_suspension_force) {\n    this.suspension_stiffness = suspension_stiffness !== undefined ? suspension_stiffness : 5.88;\n    this.suspension_compression = suspension_compression !== undefined ? suspension_compression : 0.83;\n    this.suspension_damping = suspension_damping !== undefined ? suspension_damping : 0.88;\n    this.max_suspension_travel = max_suspension_travel !== undefined ? max_suspension_travel : 500;\n    this.friction_slip = friction_slip !== undefined ? friction_slip : 10.5;\n    this.max_suspension_force = max_suspension_force !== undefined ? max_suspension_force : 6000;\n  };\n\n  return Physijs;\n};","map":{"version":3,"sources":["C:/Users/Rod/Desktop/TetrisBall/node_modules/physijs-webpack/physijs/physi.js"],"names":["module","exports","THREE","PhysijsWorker","SUPPORT_TRANSFERABLE","_is_simulating","_Physijs","Physijs","Eventable","getObjectId","getEulerXYZFromQuaternion","getQuatertionFromEuler","convertWorldPositionToObject","addObjectChildren","_temp1","_temp2","_temp_vector3_1","Vector3","_temp_vector3_2","_temp_matrix4_1","Matrix4","_quaternion_1","Quaternion","MESSAGE_TYPES","WORLDREPORT","COLLISIONREPORT","VEHICLEREPORT","CONSTRAINTREPORT","REPORT_ITEMSIZE","COLLISIONREPORT_ITEMSIZE","VEHICLEREPORT_ITEMSIZE","CONSTRAINTREPORT_ITEMSIZE","_eventListeners","prototype","addEventListener","event_name","callback","hasOwnProperty","push","removeEventListener","index","indexOf","splice","dispatchEvent","i","parameters","Array","call","arguments","length","apply","make","obj","_id","x","y","z","w","Math","atan2","asin","c1","s1","c2","s2","c3","s3","c1c2","s1s2","cos","sin","position","object","identity","makeRotationFromQuaternion","quaternion","getInverse","copy","sub","applyMatrix4","noConflict","window","createMaterial","material","friction","restitution","physijs_material","_physijs","id","undefined","PointConstraint","objecta","objectb","type","appliedImpulse","positiona","clone","positionb","getDefinition","HingeConstraint","axis","scene","parent","setLimits","low","high","bias_factor","relaxation_factor","execute","constraint","enableAngularMotor","velocity","acceleration","disableMotor","SliderConstraint","lin_lower","lin_upper","ang_lower","ang_upper","setRestitution","linear","angular","enableLinearMotor","disableLinearMotor","disableAngularMotor","ConeTwistConstraint","axisa","rotation","axisb","setLimit","enableMotor","setMaxMotorImpulse","max_impulse","setMotorTarget","target","setFromEuler","Euler","setFromRotationMatrix","DOFConstraint","setLinearLowerLimit","limit","setLinearUpperLimit","setAngularLowerLimit","setAngularUpperLimit","which","configureAngularMotor","low_angle","high_angle","max_force","Scene","params","self","_worker","transferableMessage","webkitPostMessage","postMessage","_materials_ref_counts","_objects","_vehicles","_constraints","ab","ArrayBuffer","byteLength","onmessage","event","_temp","data","Float32Array","_updateScene","_updateCollisions","_updateVehicles","_updateConstraints","cmd","test","console","debug","dir","fixedTimeStep","rateLimit","constructor","num_objects","offset","__dirtyPosition","set","__dirtyRotation","linearVelocity","angularVelocity","buffer","vehicle","wheel","wheels","extractRotation","matrix","addVectors","j","object2","id1","id2","collisions","normal_offsets","touches","subVectors","getLinearVelocity","getAngularVelocity","normal_offset","addConstraint","show_marker","marker","Mesh","SphereGeometry","MeshNormalMaterial","add","BoxGeometry","onSimulationResume","removeConstraint","children","updateMatrix","updateMatrixWorld","setFromMatrixPosition","matrixWorld","position_offset","world","Vehicle","mesh","materialId","mass_scaling","width","scale","height","depth","remove","pop","setFixedTimeStep","setGravity","gravity","simulate","timeStep","maxSubSteps","object_id","update","pos","quat","geometry","mass","boundingBox","computeBoundingBox","__defineGetter__","__defineSetter__","applyCentralImpulse","force","applyImpulse","impulse_x","impulse_y","impulse_z","applyTorque","torque_x","torque_y","torque_z","applyCentralForce","applyForce","force_x","force_y","force_z","setAngularVelocity","setLinearVelocity","setAngularFactor","factor","setLinearFactor","setDamping","setCcdMotionThreshold","threshold","setCcdSweptSphereRadius","radius","PlaneMesh","max","min","normal","faces","HeightfieldMesh","xdiv","ydiv","xsize","ysize","xpts","sqrt","vertices","ypts","absMaxHeight","abs","points","a","b","round","BoxMesh","SphereMesh","boundingSphere","computeBoundingSphere","PI","pow","CylinderMesh","CapsuleMesh","ConeMesh","ConcaveMesh","face","triangles","Face3","c","Face4","d","ConvexMesh","tuning","VehicleTuning","rigidBody","suspension_stiffness","suspension_compression","suspension_damping","max_suspension_travel","friction_slip","max_suspension_force","addWheel","wheel_geometry","wheel_material","connection_point","wheel_direction","wheel_axle","suspension_rest_length","wheel_radius","is_front_wheel","castShadow","receiveShadow","multiplyScalar","setSteering","amount","steering","setBrake","brake","applyEngineForce"],"mappings":"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","sourcesContent":["module.exports = function(THREE, PhysijsWorker) {\n\t'use strict';\n\n\tvar SUPPORT_TRANSFERABLE,\n\t\t_is_simulating = false,\n\t\t_Physijs = Physijs, // used for noConflict method\n\t\tPhysijs = {}, // object assigned to window.Physijs\n\t\tEventable, // class to provide simple event methods\n\t\tgetObjectId, // returns a unique ID for a Physijs mesh object\n\t\tgetEulerXYZFromQuaternion, getQuatertionFromEuler,\n\t\tconvertWorldPositionToObject, // Converts a world-space position to object-space\n\t\taddObjectChildren,\n\n\t\t_temp1, _temp2,\n\t\t_temp_vector3_1 = new THREE.Vector3,\n\t\t_temp_vector3_2 = new THREE.Vector3,\n\t\t_temp_matrix4_1 = new THREE.Matrix4,\n\t\t_quaternion_1 = new THREE.Quaternion,\n\n\t\t// constants\n\t\tMESSAGE_TYPES = {\n\t\t\tWORLDREPORT: 0,\n\t\t\tCOLLISIONREPORT: 1,\n\t\t\tVEHICLEREPORT: 2,\n\t\t\tCONSTRAINTREPORT: 3\n\t\t},\n\t\tREPORT_ITEMSIZE = 14,\n\t\tCOLLISIONREPORT_ITEMSIZE = 5,\n\t\tVEHICLEREPORT_ITEMSIZE = 9,\n\t\tCONSTRAINTREPORT_ITEMSIZE = 6;\n\n\tEventable = function() {\n\t\tthis._eventListeners = {};\n\t};\n\tEventable.prototype.addEventListener = function( event_name, callback ) {\n\t\tif ( !this._eventListeners.hasOwnProperty( event_name ) ) {\n\t\t\tthis._eventListeners[event_name] = [];\n\t\t}\n\t\tthis._eventListeners[event_name].push( callback );\n\t};\n\tEventable.prototype.removeEventListener = function( event_name, callback ) {\n\t\tvar index;\n\n\t\tif ( !this._eventListeners.hasOwnProperty( event_name ) ) return false;\n\n\t\tif ( (index = this._eventListeners[event_name].indexOf( callback )) >= 0 ) {\n\t\t\tthis._eventListeners[event_name].splice( index, 1 );\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\tEventable.prototype.dispatchEvent = function( event_name ) {\n\t\tvar i,\n\t\t\tparameters = Array.prototype.splice.call( arguments, 1 );\n\n\t\tif ( this._eventListeners.hasOwnProperty( event_name ) ) {\n\t\t\tfor ( i = 0; i < this._eventListeners[event_name].length; i++ ) {\n\t\t\t\tthis._eventListeners[event_name][i].apply( this, parameters );\n\t\t\t}\n\t\t}\n\t};\n\tEventable.make = function( obj ) {\n\t\tobj.prototype.addEventListener = Eventable.prototype.addEventListener;\n\t\tobj.prototype.removeEventListener = Eventable.prototype.removeEventListener;\n\t\tobj.prototype.dispatchEvent = Eventable.prototype.dispatchEvent;\n\t};\n\n\tgetObjectId = (function() {\n\t\tvar _id = 1;\n\t\treturn function() {\n\t\t\treturn _id++;\n\t\t};\n\t})();\n\n\tgetEulerXYZFromQuaternion = function ( x, y, z, w ) {\n\t\treturn new THREE.Vector3(\n\t\t\tMath.atan2( 2 * ( x * w - y * z ), ( w * w - x * x - y * y + z * z ) ),\n\t\t\tMath.asin( 2 *  ( x * z + y * w ) ),\n\t\t\tMath.atan2( 2 * ( z * w - x * y ), ( w * w + x * x - y * y - z * z ) )\n\t\t);\n\t};\n\n\tgetQuatertionFromEuler = function( x, y, z ) {\n\t\tvar c1, s1, c2, s2, c3, s3, c1c2, s1s2;\n\t\tc1 = Math.cos( y  );\n\t\ts1 = Math.sin( y  );\n\t\tc2 = Math.cos( -z );\n\t\ts2 = Math.sin( -z );\n\t\tc3 = Math.cos( x  );\n\t\ts3 = Math.sin( x  );\n\n\t\tc1c2 = c1 * c2;\n\t\ts1s2 = s1 * s2;\n\n\t\treturn {\n\t\t\tw: c1c2 * c3  - s1s2 * s3,\n\t\t\tx: c1c2 * s3  + s1s2 * c3,\n\t\t\ty: s1 * c2 * c3 + c1 * s2 * s3,\n\t\t\tz: c1 * s2 * c3 - s1 * c2 * s3\n\t\t};\n\t};\n\n\tconvertWorldPositionToObject = function( position, object ) {\n\t\t_temp_matrix4_1.identity(); // reset temp matrix\n\n\t\t// Set the temp matrix's rotation to the object's rotation\n\t\t_temp_matrix4_1.identity().makeRotationFromQuaternion( object.quaternion );\n\n\t\t// Invert rotation matrix in order to \"unrotate\" a point back to object space\n\t\t_temp_matrix4_1.getInverse( _temp_matrix4_1 );\n\n\t\t// Yay! Temp vars!\n\t\t_temp_vector3_1.copy( position );\n\t\t_temp_vector3_2.copy( object.position );\n\n\t\t// Apply the rotation\n\n\t\treturn _temp_vector3_1.sub( _temp_vector3_2 ).applyMatrix4( _temp_matrix4_1 );\n\t};\n\n\n\n\t// Physijs.noConflict\n\tPhysijs.noConflict = function() {\n\t\twindow.Physijs = _Physijs;\n\t\treturn Physijs;\n\t};\n\n\n\t// Physijs.createMaterial\n\tPhysijs.createMaterial = function( material, friction, restitution ) {\n\t\tvar physijs_material = function(){};\n\t\tphysijs_material.prototype = material;\n\t\tphysijs_material = new physijs_material;\n\n\t\tphysijs_material._physijs = {\n\t\t\tid: material.id,\n\t\t\tfriction: friction === undefined ? .8 : friction,\n\t\t\trestitution: restitution === undefined ? .2 : restitution\n\t\t};\n\n\t\treturn physijs_material;\n\t};\n\n\n\t// Constraints\n\tPhysijs.PointConstraint = function( objecta, objectb, position ) {\n\t\tif ( position === undefined ) {\n\t\t\tposition = objectb;\n\t\t\tobjectb = undefined;\n\t\t}\n\n\t\tthis.type = 'point';\n\t\tthis.appliedImpulse = 0;\n\t\tthis.id = getObjectId();\n\t\tthis.objecta = objecta._physijs.id;\n\t\tthis.positiona = convertWorldPositionToObject( position, objecta ).clone();\n\n\t\tif ( objectb ) {\n\t\t\tthis.objectb = objectb._physijs.id;\n\t\t\tthis.positionb = convertWorldPositionToObject( position, objectb ).clone();\n\t\t}\n\t};\n\tPhysijs.PointConstraint.prototype.getDefinition = function() {\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\tid: this.id,\n\t\t\tobjecta: this.objecta,\n\t\t\tobjectb: this.objectb,\n\t\t\tpositiona: this.positiona,\n\t\t\tpositionb: this.positionb\n\t\t};\n\t};\n\n\tPhysijs.HingeConstraint = function( objecta, objectb, position, axis ) {\n\t\tif ( axis === undefined ) {\n\t\t\taxis = position;\n\t\t\tposition = objectb;\n\t\t\tobjectb = undefined;\n\t\t}\n\n\t\tthis.type = 'hinge';\n\t\tthis.appliedImpulse = 0;\n\t\tthis.id = getObjectId();\n\t\tthis.scene = objecta.parent;\n\t\tthis.objecta = objecta._physijs.id;\n\t\tthis.positiona = convertWorldPositionToObject( position, objecta ).clone();\n\t\tthis.position = position.clone();\n\t\tthis.axis = axis;\n\n\t\tif ( objectb ) {\n\t\t\tthis.objectb = objectb._physijs.id;\n\t\t\tthis.positionb = convertWorldPositionToObject( position, objectb ).clone();\n\t\t}\n\t};\n\tPhysijs.HingeConstraint.prototype.getDefinition = function() {\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\tid: this.id,\n\t\t\tobjecta: this.objecta,\n\t\t\tobjectb: this.objectb,\n\t\t\tpositiona: this.positiona,\n\t\t\tpositionb: this.positionb,\n\t\t\taxis: this.axis\n\t\t};\n\t};\n\t/*\n\t * low = minimum angle in radians\n\t * high = maximum angle in radians\n\t * bias_factor = applied as a factor to constraint error\n\t * relaxation_factor = controls bounce (0.0 == no bounce)\n\t */\n\tPhysijs.HingeConstraint.prototype.setLimits = function( low, high, bias_factor, relaxation_factor ) {\n\t\tthis.scene.execute( 'hinge_setLimits', { constraint: this.id, low: low, high: high, bias_factor: bias_factor, relaxation_factor: relaxation_factor } );\n\t};\n\tPhysijs.HingeConstraint.prototype.enableAngularMotor = function( velocity, acceleration ) {\n\t\tthis.scene.execute( 'hinge_enableAngularMotor', { constraint: this.id, velocity: velocity, acceleration: acceleration } );\n\t};\n\tPhysijs.HingeConstraint.prototype.disableMotor = function( velocity, acceleration ) {\n\t\tthis.scene.execute( 'hinge_disableMotor', { constraint: this.id } );\n\t};\n\n\tPhysijs.SliderConstraint = function( objecta, objectb, position, axis ) {\n\t\tif ( axis === undefined ) {\n\t\t\taxis = position;\n\t\t\tposition = objectb;\n\t\t\tobjectb = undefined;\n\t\t}\n\n\t\tthis.type = 'slider';\n\t\tthis.appliedImpulse = 0;\n\t\tthis.id = getObjectId();\n\t\tthis.scene = objecta.parent;\n\t\tthis.objecta = objecta._physijs.id;\n\t\tthis.positiona = convertWorldPositionToObject( position, objecta ).clone();\n\t\tthis.axis = axis;\n\n\t\tif ( objectb ) {\n\t\t\tthis.objectb = objectb._physijs.id;\n\t\t\tthis.positionb = convertWorldPositionToObject( position, objectb ).clone();\n\t\t}\n\t};\n\tPhysijs.SliderConstraint.prototype.getDefinition = function() {\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\tid: this.id,\n\t\t\tobjecta: this.objecta,\n\t\t\tobjectb: this.objectb,\n\t\t\tpositiona: this.positiona,\n\t\t\tpositionb: this.positionb,\n\t\t\taxis: this.axis\n\t\t};\n\t};\n\tPhysijs.SliderConstraint.prototype.setLimits = function( lin_lower, lin_upper, ang_lower, ang_upper ) {\n\t\tthis.scene.execute( 'slider_setLimits', { constraint: this.id, lin_lower: lin_lower, lin_upper: lin_upper, ang_lower: ang_lower, ang_upper: ang_upper } );\n\t};\n\tPhysijs.SliderConstraint.prototype.setRestitution = function( linear, angular ) {\n\t\tthis.scene.execute(\n\t\t\t'slider_setRestitution',\n\t\t\t{\n\t\t\t\tconstraint: this.id,\n\t\t\t\tlinear: linear,\n\t\t\t\tangular: angular\n\t\t\t}\n\t\t);\n\t};\n\tPhysijs.SliderConstraint.prototype.enableLinearMotor = function( velocity, acceleration) {\n\t\tthis.scene.execute( 'slider_enableLinearMotor', { constraint: this.id, velocity: velocity, acceleration: acceleration } );\n\t};\n\tPhysijs.SliderConstraint.prototype.disableLinearMotor = function() {\n\t\tthis.scene.execute( 'slider_disableLinearMotor', { constraint: this.id } );\n\t};\n\tPhysijs.SliderConstraint.prototype.enableAngularMotor = function( velocity, acceleration ) {\n\t\tthis.scene.execute( 'slider_enableAngularMotor', { constraint: this.id, velocity: velocity, acceleration: acceleration } );\n\t};\n\tPhysijs.SliderConstraint.prototype.disableAngularMotor = function() {\n\t\tthis.scene.execute( 'slider_disableAngularMotor', { constraint: this.id } );\n\t};\n\n\tPhysijs.ConeTwistConstraint = function( objecta, objectb, position ) {\n\t\tif ( position === undefined ) {\n\t\t\tthrow 'Both objects must be defined in a ConeTwistConstraint.';\n\t\t}\n\t\tthis.type = 'conetwist';\n\t\tthis.appliedImpulse = 0;\n\t\tthis.id = getObjectId();\n\t\tthis.scene = objecta.parent;\n\t\tthis.objecta = objecta._physijs.id;\n\t\tthis.positiona = convertWorldPositionToObject( position, objecta ).clone();\n\t\tthis.objectb = objectb._physijs.id;\n\t\tthis.positionb = convertWorldPositionToObject( position, objectb ).clone();\n\t\tthis.axisa = { x: objecta.rotation.x, y: objecta.rotation.y, z: objecta.rotation.z };\n\t\tthis.axisb = { x: objectb.rotation.x, y: objectb.rotation.y, z: objectb.rotation.z };\n\t};\n\tPhysijs.ConeTwistConstraint.prototype.getDefinition = function() {\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\tid: this.id,\n\t\t\tobjecta: this.objecta,\n\t\t\tobjectb: this.objectb,\n\t\t\tpositiona: this.positiona,\n\t\t\tpositionb: this.positionb,\n\t\t\taxisa: this.axisa,\n\t\t\taxisb: this.axisb\n\t\t};\n\t};\n\tPhysijs.ConeTwistConstraint.prototype.setLimit = function( x, y, z ) {\n\t\tthis.scene.execute( 'conetwist_setLimit', { constraint: this.id, x: x, y: y, z: z } );\n\t};\n\tPhysijs.ConeTwistConstraint.prototype.enableMotor = function() {\n\t\tthis.scene.execute( 'conetwist_enableMotor', { constraint: this.id } );\n\t};\n\tPhysijs.ConeTwistConstraint.prototype.setMaxMotorImpulse = function( max_impulse ) {\n\t\tthis.scene.execute( 'conetwist_setMaxMotorImpulse', { constraint: this.id, max_impulse: max_impulse } );\n\t};\n\tPhysijs.ConeTwistConstraint.prototype.setMotorTarget = function( target ) {\n\t\tif ( target instanceof THREE.Vector3 ) {\n\t\t\ttarget = new THREE.Quaternion().setFromEuler( new THREE.Euler( target.x, target.y, target.z ) );\n\t\t} else if ( target instanceof THREE.Euler ) {\n\t\t\ttarget = new THREE.Quaternion().setFromEuler( target );\n\t\t} else if ( target instanceof THREE.Matrix4 ) {\n\t\t\ttarget = new THREE.Quaternion().setFromRotationMatrix( target );\n\t\t}\n\t\tthis.scene.execute( 'conetwist_setMotorTarget', { constraint: this.id, x: target.x, y: target.y, z: target.z, w: target.w } );\n\t};\n\tPhysijs.ConeTwistConstraint.prototype.disableMotor = function() {\n\t\tthis.scene.execute( 'conetwist_disableMotor', { constraint: this.id } );\n\t};\n\n\tPhysijs.DOFConstraint = function( objecta, objectb, position ) {\n\t\tif ( position === undefined ) {\n\t\t\tposition = objectb;\n\t\t\tobjectb = undefined;\n\t\t}\n\t\tthis.type = 'dof';\n\t\tthis.appliedImpulse = 0;\n\t\tthis.id = getObjectId();\n\t\tthis.scene = objecta.parent;\n\t\tthis.objecta = objecta._physijs.id;\n\t\tthis.positiona = convertWorldPositionToObject( position, objecta ).clone();\n\t\tthis.axisa = { x: objecta.rotation.x, y: objecta.rotation.y, z: objecta.rotation.z };\n\n\t\tif ( objectb ) {\n\t\t\tthis.objectb = objectb._physijs.id;\n\t\t\tthis.positionb = convertWorldPositionToObject( position, objectb ).clone();\n\t\t\tthis.axisb = { x: objectb.rotation.x, y: objectb.rotation.y, z: objectb.rotation.z };\n\t\t}\n\t};\n\tPhysijs.DOFConstraint.prototype.getDefinition = function() {\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\tid: this.id,\n\t\t\tobjecta: this.objecta,\n\t\t\tobjectb: this.objectb,\n\t\t\tpositiona: this.positiona,\n\t\t\tpositionb: this.positionb,\n\t\t\taxisa: this.axisa,\n\t\t\taxisb: this.axisb\n\t\t};\n\t};\n\tPhysijs.DOFConstraint.prototype.setLinearLowerLimit = function( limit ) {\n\t\tthis.scene.execute( 'dof_setLinearLowerLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n\t};\n\tPhysijs.DOFConstraint.prototype.setLinearUpperLimit = function( limit ) {\n\t\tthis.scene.execute( 'dof_setLinearUpperLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n\t};\n\tPhysijs.DOFConstraint.prototype.setAngularLowerLimit = function( limit ) {\n\t\tthis.scene.execute( 'dof_setAngularLowerLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n\t};\n\tPhysijs.DOFConstraint.prototype.setAngularUpperLimit = function( limit ) {\n\t\tthis.scene.execute( 'dof_setAngularUpperLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n\t};\n\tPhysijs.DOFConstraint.prototype.enableAngularMotor = function( which ) {\n\t\tthis.scene.execute( 'dof_enableAngularMotor', { constraint: this.id, which: which } );\n\t};\n\tPhysijs.DOFConstraint.prototype.configureAngularMotor = function( which, low_angle, high_angle, velocity, max_force ) {\n\t\tthis.scene.execute( 'dof_configureAngularMotor', { constraint: this.id, which: which, low_angle: low_angle, high_angle: high_angle, velocity: velocity, max_force: max_force } );\n\t};\n\tPhysijs.DOFConstraint.prototype.disableAngularMotor = function( which ) {\n\t\tthis.scene.execute( 'dof_disableAngularMotor', { constraint: this.id, which: which } );\n\t};\n\n\t// Physijs.Scene\n\tPhysijs.Scene = function( params ) {\n\t\tvar self = this;\n\n\t\tEventable.call( this );\n\t\tTHREE.Scene.call( this );\n\n\t\tthis._worker = new PhysijsWorker();\n\t\tthis._worker.transferableMessage = this._worker.webkitPostMessage || this._worker.postMessage;\n\t\tthis._materials_ref_counts = {};\n\t\tthis._objects = {};\n\t\tthis._vehicles = {};\n\t\tthis._constraints = {};\n\n\t\tvar ab = new ArrayBuffer( 1 );\n\t\tthis._worker.transferableMessage( ab, [ab] );\n\t\tSUPPORT_TRANSFERABLE = ( ab.byteLength === 0 );\n\n\t\tthis._worker.onmessage = function ( event ) {\n\t\t\tvar _temp,\n\t\t\t\tdata = event.data;\n\n\t\t\tif ( data instanceof ArrayBuffer && data.byteLength !== 1 ) { // byteLength === 1 is the worker making a SUPPORT_TRANSFERABLE test\n\t\t\t\tdata = new Float32Array( data );\n\t\t\t}\n\n\t\t\tif ( data instanceof Float32Array ) {\n\n\t\t\t\t// transferable object\n\t\t\t\tswitch ( data[0] ) {\n\t\t\t\t\tcase MESSAGE_TYPES.WORLDREPORT:\n\t\t\t\t\t\tself._updateScene( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPES.COLLISIONREPORT:\n\t\t\t\t\t\tself._updateCollisions( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPES.VEHICLEREPORT:\n\t\t\t\t\t\tself._updateVehicles( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPES.CONSTRAINTREPORT:\n\t\t\t\t\t\tself._updateConstraints( data );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.cmd ) {\n\n\t\t\t\t\t// non-transferable object\n\t\t\t\t\tswitch ( data.cmd ) {\n\t\t\t\t\t\tcase 'objectReady':\n\t\t\t\t\t\t\t_temp = data.params;\n\t\t\t\t\t\t\tif ( self._objects[ _temp ] ) {\n\t\t\t\t\t\t\t\tself._objects[ _temp ].dispatchEvent( 'ready' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'worldReady':\n\t\t\t\t\t\t\tself.dispatchEvent( 'ready' );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'vehicle':\n\t\t\t\t\t\t\twindow.test = data;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// Do nothing, just show the message\n\t\t\t\t\t\t\tconsole.debug('Received: ' + data.cmd);\n\t\t\t\t\t\t\tconsole.dir(data.params);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( data[0] ) {\n\t\t\t\t\t\tcase MESSAGE_TYPES.WORLDREPORT:\n\t\t\t\t\t\t\tself._updateScene( data );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MESSAGE_TYPES.COLLISIONREPORT:\n\t\t\t\t\t\t\tself._updateCollisions( data );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MESSAGE_TYPES.VEHICLEREPORT:\n\t\t\t\t\t\t\tself._updateVehicles( data );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MESSAGE_TYPES.CONSTRAINTREPORT:\n\t\t\t\t\t\t\tself._updateConstraints( data );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\n\n\t\tparams = params || {};\n\t\tparams.fixedTimeStep = params.fixedTimeStep || 1 / 60;\n\t\tparams.rateLimit = params.rateLimit || true;\n\t\tthis.execute( 'init', params );\n\t};\n\tPhysijs.Scene.prototype = new THREE.Scene;\n\tPhysijs.Scene.prototype.constructor = Physijs.Scene;\n\tEventable.make( Physijs.Scene );\n\n\tPhysijs.Scene.prototype._updateScene = function( data ) {\n\t\tvar num_objects = data[1],\n\t\t\tobject,\n\t\t\ti, offset;\n\n\t\tfor ( i = 0; i < num_objects; i++ ) {\n\t\t\toffset = 2 + i * REPORT_ITEMSIZE;\n\t\t\tobject = this._objects[ data[ offset ] ];\n\n\t\t\tif ( object === undefined ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( object.__dirtyPosition === false ) {\n\t\t\t\tobject.position.set(\n\t\t\t\t\tdata[ offset + 1 ],\n\t\t\t\t\tdata[ offset + 2 ],\n\t\t\t\t\tdata[ offset + 3 ]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( object.__dirtyRotation === false ) {\n\t\t\t\tobject.quaternion.set(\n\t\t\t\t\tdata[ offset + 4 ],\n\t\t\t\t\tdata[ offset + 5 ],\n\t\t\t\t\tdata[ offset + 6 ],\n\t\t\t\t\tdata[ offset + 7 ]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tobject._physijs.linearVelocity.set(\n\t\t\t\tdata[ offset + 8 ],\n\t\t\t\tdata[ offset + 9 ],\n\t\t\t\tdata[ offset + 10 ]\n\t\t\t);\n\n\t\t\tobject._physijs.angularVelocity.set(\n\t\t\t\tdata[ offset + 11 ],\n\t\t\t\tdata[ offset + 12 ],\n\t\t\t\tdata[ offset + 13 ]\n\t\t\t);\n\n\t\t}\n\n\t\tif ( SUPPORT_TRANSFERABLE ) {\n\t\t\t// Give the typed array back to the worker\n\t\t\tthis._worker.transferableMessage( data.buffer, [data.buffer] );\n\t\t}\n\n\t\t_is_simulating = false;\n\t\tthis.dispatchEvent( 'update' );\n\t};\n\n\tPhysijs.Scene.prototype._updateVehicles = function( data ) {\n\t\tvar vehicle, wheel,\n\t\t\ti, offset;\n\n\t\tfor ( i = 0; i < ( data.length - 1 ) / VEHICLEREPORT_ITEMSIZE; i++ ) {\n\t\t\toffset = 1 + i * VEHICLEREPORT_ITEMSIZE;\n\t\t\tvehicle = this._vehicles[ data[ offset ] ];\n\n\t\t\tif ( vehicle === undefined ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\twheel = vehicle.wheels[ data[ offset + 1 ] ];\n\n\t\t\twheel.position.set(\n\t\t\t\tdata[ offset + 2 ],\n\t\t\t\tdata[ offset + 3 ],\n\t\t\t\tdata[ offset + 4 ]\n\t\t\t);\n\n\t\t\twheel.quaternion.set(\n\t\t\t\tdata[ offset + 5 ],\n\t\t\t\tdata[ offset + 6 ],\n\t\t\t\tdata[ offset + 7 ],\n\t\t\t\tdata[ offset + 8 ]\n\t\t\t);\n\t\t}\n\n\t\tif ( SUPPORT_TRANSFERABLE ) {\n\t\t\t// Give the typed array back to the worker\n\t\t\tthis._worker.transferableMessage( data.buffer, [data.buffer] );\n\t\t}\n\t};\n\n\tPhysijs.Scene.prototype._updateConstraints = function( data ) {\n\t\tvar constraint, object,\n\t\t\ti, offset;\n\n\t\tfor ( i = 0; i < ( data.length - 1 ) / CONSTRAINTREPORT_ITEMSIZE; i++ ) {\n\t\t\toffset = 1 + i * CONSTRAINTREPORT_ITEMSIZE;\n\t\t\tconstraint = this._constraints[ data[ offset ] ];\n\t\t\tobject = this._objects[ data[ offset + 1 ] ];\n\n\t\t\tif ( constraint === undefined || object === undefined ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t_temp_vector3_1.set(\n\t\t\t\tdata[ offset + 2 ],\n\t\t\t\tdata[ offset + 3 ],\n\t\t\t\tdata[ offset + 4 ]\n\t\t\t);\n\t\t\t_temp_matrix4_1.extractRotation( object.matrix );\n\t\t\t_temp_vector3_1.applyMatrix4( _temp_matrix4_1 );\n\n\t\t\tconstraint.positiona.addVectors( object.position, _temp_vector3_1 );\n\t\t\tconstraint.appliedImpulse = data[ offset + 5 ] ;\n\t\t}\n\n\t\tif ( SUPPORT_TRANSFERABLE ) {\n\t\t\t// Give the typed array back to the worker\n\t\t\tthis._worker.transferableMessage( data.buffer, [data.buffer] );\n\t\t}\n\t};\n\n\tPhysijs.Scene.prototype._updateCollisions = function( data ) {\n\t\t/**\n\t\t * #TODO\n\t\t * This is probably the worst way ever to handle collisions. The inherent evilness is a residual\n\t\t * effect from the previous version's evilness which mutated when switching to transferable objects.\n\t\t *\n\t\t * If you feel inclined to make this better, please do so.\n\t\t */\n\n\t\tvar i, j, offset, object, object2, id1, id2,\n\t\t\tcollisions = {}, normal_offsets = {};\n\n\t\t// Build collision manifest\n\t\tfor ( i = 0; i < data[1]; i++ ) {\n\t\t\toffset = 2 + i * COLLISIONREPORT_ITEMSIZE;\n\t\t\tobject = data[ offset ];\n\t\t\tobject2 = data[ offset + 1 ];\n\n\t\t\tnormal_offsets[ object + '-' + object2 ] = offset + 2;\n\t\t\tnormal_offsets[ object2 + '-' + object ] = -1 * ( offset + 2 );\n\n\t\t\t// Register collisions for both the object colliding and the object being collided with\n\t\t\tif ( !collisions[ object ] ) collisions[ object ] = [];\n\t\t\tcollisions[ object ].push( object2 );\n\n\t\t\tif ( !collisions[ object2 ] ) collisions[ object2 ] = [];\n\t\t\tcollisions[ object2 ].push( object );\n\t\t}\n\n\t\t// Deal with collisions\n\t\tfor ( id1 in this._objects ) {\n\t\t\tif ( !this._objects.hasOwnProperty( id1 ) ) continue;\n\t\t\tobject = this._objects[ id1 ];\n\n\t\t\t// If object touches anything, ...\n\t\t\tif ( collisions[ id1 ] ) {\n\n\t\t\t\t// Clean up touches array\n\t\t\t\tfor ( j = 0; j < object._physijs.touches.length; j++ ) {\n\t\t\t\t\tif ( collisions[ id1 ].indexOf( object._physijs.touches[j] ) === -1 ) {\n\t\t\t\t\t\tobject._physijs.touches.splice( j--, 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Handle each colliding object\n\t\t\t\tfor ( j = 0; j < collisions[ id1 ].length; j++ ) {\n\t\t\t\t\tid2 = collisions[ id1 ][ j ];\n\t\t\t\t\tobject2 = this._objects[ id2 ];\n\n\t\t\t\t\tif ( object2 ) {\n\t\t\t\t\t\t// If object was not already touching object2, notify object\n\t\t\t\t\t\tif ( object._physijs.touches.indexOf( id2 ) === -1 ) {\n\t\t\t\t\t\t\tobject._physijs.touches.push( id2 );\n\n\t\t\t\t\t\t\t_temp_vector3_1.subVectors( object.getLinearVelocity(), object2.getLinearVelocity() );\n\t\t\t\t\t\t\t_temp1 = _temp_vector3_1.clone();\n\n\t\t\t\t\t\t\t_temp_vector3_1.subVectors( object.getAngularVelocity(), object2.getAngularVelocity() );\n\t\t\t\t\t\t\t_temp2 = _temp_vector3_1.clone();\n\n\t\t\t\t\t\t\tvar normal_offset = normal_offsets[ object._physijs.id + '-' + object2._physijs.id ];\n\t\t\t\t\t\t\tif ( normal_offset > 0 ) {\n\t\t\t\t\t\t\t\t_temp_vector3_1.set(\n\t\t\t\t\t\t\t\t\t-data[ normal_offset ],\n\t\t\t\t\t\t\t\t\t-data[ normal_offset + 1 ],\n\t\t\t\t\t\t\t\t\t-data[ normal_offset + 2 ]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnormal_offset *= -1;\n\t\t\t\t\t\t\t\t_temp_vector3_1.set(\n\t\t\t\t\t\t\t\t\tdata[ normal_offset ],\n\t\t\t\t\t\t\t\t\tdata[ normal_offset + 1 ],\n\t\t\t\t\t\t\t\t\tdata[ normal_offset + 2 ]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tobject.dispatchEvent( 'collision', object2, _temp1, _temp2, _temp_vector3_1 );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// not touching other objects\n\t\t\t\tobject._physijs.touches.length = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.collisions = collisions;\n\n\t\tif ( SUPPORT_TRANSFERABLE ) {\n\t\t\t// Give the typed array back to the worker\n\t\t\tthis._worker.transferableMessage( data.buffer, [data.buffer] );\n\t\t}\n\t};\n\n\tPhysijs.Scene.prototype.addConstraint = function ( constraint, show_marker ) {\n\t\tthis._constraints[ constraint.id ] = constraint;\n\t\tthis.execute( 'addConstraint', constraint.getDefinition() );\n\n\t\tif ( show_marker ) {\n\t\t\tvar marker;\n\n\t\t\tswitch ( constraint.type ) {\n\t\t\t\tcase 'point':\n\t\t\t\t\tmarker = new THREE.Mesh(\n\t\t\t\t\t\tnew THREE.SphereGeometry( 1.5 ),\n\t\t\t\t\t\tnew THREE.MeshNormalMaterial\n\t\t\t\t\t);\n\t\t\t\t\tmarker.position.copy( constraint.positiona );\n\t\t\t\t\tthis._objects[ constraint.objecta ].add( marker );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hinge':\n\t\t\t\t\tmarker = new THREE.Mesh(\n\t\t\t\t\t\tnew THREE.SphereGeometry( 1.5 ),\n\t\t\t\t\t\tnew THREE.MeshNormalMaterial\n\t\t\t\t\t);\n\t\t\t\t\tmarker.position.copy( constraint.positiona );\n\t\t\t\t\tthis._objects[ constraint.objecta ].add( marker );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'slider':\n\t\t\t\t\tmarker = new THREE.Mesh(\n\t\t\t\t\t\tnew THREE.BoxGeometry( 10, 1, 1 ),\n\t\t\t\t\t\tnew THREE.MeshNormalMaterial\n\t\t\t\t\t);\n\t\t\t\t\tmarker.position.copy( constraint.positiona );\n\t\t\t\t\t// This rotation isn't right if all three axis are non-0 values\n\t\t\t\t\t// TODO: change marker's rotation order to ZYX\n\t\t\t\t\tmarker.rotation.set(\n\t\t\t\t\t\tconstraint.axis.y, // yes, y and\n\t\t\t\t\t\tconstraint.axis.x, // x axis are swapped\n\t\t\t\t\t\tconstraint.axis.z\n\t\t\t\t\t);\n\t\t\t\t\tthis._objects[ constraint.objecta ].add( marker );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'conetwist':\n\t\t\t\t\tmarker = new THREE.Mesh(\n\t\t\t\t\t\tnew THREE.SphereGeometry( 1.5 ),\n\t\t\t\t\t\tnew THREE.MeshNormalMaterial\n\t\t\t\t\t);\n\t\t\t\t\tmarker.position.copy( constraint.positiona );\n\t\t\t\t\tthis._objects[ constraint.objecta ].add( marker );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dof':\n\t\t\t\t\tmarker = new THREE.Mesh(\n\t\t\t\t\t\tnew THREE.SphereGeometry( 1.5 ),\n\t\t\t\t\t\tnew THREE.MeshNormalMaterial\n\t\t\t\t\t);\n\t\t\t\t\tmarker.position.copy( constraint.positiona );\n\t\t\t\t\tthis._objects[ constraint.objecta ].add( marker );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn constraint;\n\t};\n\n\tPhysijs.Scene.prototype.onSimulationResume = function() {\n\t\tthis.execute( 'onSimulationResume', { } );\n\t};\n\n\tPhysijs.Scene.prototype.removeConstraint = function( constraint ) {\n\t\tif ( this._constraints[constraint.id ] !== undefined ) {\n\t\t\tthis.execute( 'removeConstraint', { id: constraint.id } );\n\t\t\tdelete this._constraints[ constraint.id ];\n\t\t}\n\t};\n\n\tPhysijs.Scene.prototype.execute = function( cmd, params ) {\n\t\tthis._worker.postMessage({ cmd: cmd, params: params });\n\t};\n\n\taddObjectChildren = function( parent, object ) {\n\t\tvar i;\n\n\t\tfor ( i = 0; i < object.children.length; i++ ) {\n\t\t\tif ( object.children[i]._physijs ) {\n\t\t\t\tobject.children[i].updateMatrix();\n\t\t\t\tobject.children[i].updateMatrixWorld();\n\n\t\t\t\t_temp_vector3_1.setFromMatrixPosition( object.children[i].matrixWorld );\n\t\t\t\t_quaternion_1.setFromRotationMatrix( object.children[i].matrixWorld );\n\n\t\t\t\tobject.children[i]._physijs.position_offset = {\n\t\t\t\t\tx: _temp_vector3_1.x,\n\t\t\t\t\ty: _temp_vector3_1.y,\n\t\t\t\t\tz: _temp_vector3_1.z\n\t\t\t\t};\n\n\t\t\t\tobject.children[i]._physijs.rotation = {\n\t\t\t\t\tx: _quaternion_1.x,\n\t\t\t\t\ty: _quaternion_1.y,\n\t\t\t\t\tz: _quaternion_1.z,\n\t\t\t\t\tw: _quaternion_1.w\n\t\t\t\t};\n\n\t\t\t\tparent._physijs.children.push( object.children[i]._physijs );\n\t\t\t}\n\n\t\t\taddObjectChildren( parent, object.children[i] );\n\t\t}\n\t};\n\n\tPhysijs.Scene.prototype.add = function( object ) {\n\t\tTHREE.Mesh.prototype.add.call( this, object );\n\n\t\tif ( object._physijs ) {\n\n\t\t\tobject.world = this;\n\n\t\t\tif ( object instanceof Physijs.Vehicle ) {\n\n\t\t\t\tthis.add( object.mesh );\n\t\t\t\tthis._vehicles[ object._physijs.id ] = object;\n\t\t\t\tthis.execute( 'addVehicle', object._physijs );\n\n\t\t\t} else {\n\n\t\t\t\tobject.__dirtyPosition = false;\n\t\t\t\tobject.__dirtyRotation = false;\n\t\t\t\tthis._objects[object._physijs.id] = object;\n\n\t\t\t\tif ( object.children.length ) {\n\t\t\t\t\tobject._physijs.children = [];\n\t\t\t\t\taddObjectChildren( object, object );\n\t\t\t\t}\n\n\t\t\t\tif ( object.material._physijs ) {\n\t\t\t\t\tif ( !this._materials_ref_counts.hasOwnProperty( object.material._physijs.id ) ) {\n\t\t\t\t\t\tthis.execute( 'registerMaterial', object.material._physijs );\n\t\t\t\t\t\tobject._physijs.materialId = object.material._physijs.id;\n\t\t\t\t\t\tthis._materials_ref_counts[object.material._physijs.id] = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._materials_ref_counts[object.material._physijs.id]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Object starting position + rotation\n\t\t\t\tobject._physijs.position = { x: object.position.x, y: object.position.y, z: object.position.z };\n\t\t\t\tobject._physijs.rotation = { x: object.quaternion.x, y: object.quaternion.y, z: object.quaternion.z, w: object.quaternion.w };\n\n\t\t\t\t// Check for scaling\n\t\t\t\tvar mass_scaling = new THREE.Vector3( 1, 1, 1 );\n\t\t\t\tif ( object._physijs.width ) {\n\t\t\t\t\tobject._physijs.width *= object.scale.x;\n\t\t\t\t}\n\t\t\t\tif ( object._physijs.height ) {\n\t\t\t\t\tobject._physijs.height *= object.scale.y;\n\t\t\t\t}\n\t\t\t\tif ( object._physijs.depth ) {\n\t\t\t\t\tobject._physijs.depth *= object.scale.z;\n\t\t\t\t}\n\n\t\t\t\tthis.execute( 'addObject', object._physijs );\n\n\t\t\t}\n\t\t}\n\t};\n\n\tPhysijs.Scene.prototype.remove = function( object ) {\n\t\tif ( object instanceof Physijs.Vehicle ) {\n\t\t\tthis.execute( 'removeVehicle', { id: object._physijs.id } );\n\t\t\twhile( object.wheels.length ) {\n\t\t\t\tthis.remove( object.wheels.pop() );\n\t\t\t}\n\t\t\tthis.remove( object.mesh );\n\t\t\tdelete this._vehicles[ object._physijs.id ];\n\t\t} else {\n\t\t\tTHREE.Mesh.prototype.remove.call( this, object );\n\t\t\tif ( object._physijs ) {\n\t\t\t\tdelete this._objects[object._physijs.id];\n\t\t\t\tthis.execute( 'removeObject', { id: object._physijs.id } );\n\t\t\t}\n\t\t}\n\t\tif ( object.material && object.material._physijs && this._materials_ref_counts.hasOwnProperty( object.material._physijs.id ) ) {\n\t\t\tthis._materials_ref_counts[object.material._physijs.id]--;\n\t\t\tif(this._materials_ref_counts[object.material._physijs.id] == 0) {\n\t\t\t\tthis.execute( 'unRegisterMaterial', object.material._physijs );\n\t\t\t\tdelete this._materials_ref_counts[object.material._physijs.id];\n\t\t\t}\n\t\t}\n\t};\n\n\tPhysijs.Scene.prototype.setFixedTimeStep = function( fixedTimeStep ) {\n\t\tif ( fixedTimeStep ) {\n\t\t\tthis.execute( 'setFixedTimeStep', fixedTimeStep );\n\t\t}\n\t};\n\n\tPhysijs.Scene.prototype.setGravity = function( gravity ) {\n\t\tif ( gravity ) {\n\t\t\tthis.execute( 'setGravity', gravity );\n\t\t}\n\t};\n\n\tPhysijs.Scene.prototype.simulate = function( timeStep, maxSubSteps ) {\n\t\tvar object_id, object, update;\n\n\t\tif ( _is_simulating ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t_is_simulating = true;\n\n\t\tfor ( object_id in this._objects ) {\n\t\t\tif ( !this._objects.hasOwnProperty( object_id ) ) continue;\n\n\t\t\tobject = this._objects[object_id];\n\n\t\t\tif ( object.__dirtyPosition || object.__dirtyRotation ) {\n\t\t\t\tupdate = { id: object._physijs.id };\n\n\t\t\t\tif ( object.__dirtyPosition ) {\n\t\t\t\t\tupdate.pos = { x: object.position.x, y: object.position.y, z: object.position.z };\n\t\t\t\t\tobject.__dirtyPosition = false;\n\t\t\t\t}\n\n\t\t\t\tif ( object.__dirtyRotation ) {\n\t\t\t\t\tupdate.quat = { x: object.quaternion.x, y: object.quaternion.y, z: object.quaternion.z, w: object.quaternion.w };\n\t\t\t\t\tobject.__dirtyRotation = false;\n\t\t\t\t}\n\n\t\t\t\tthis.execute( 'updateTransform', update );\n\t\t\t}\n\t\t}\n\n\t\tthis.execute( 'simulate', { timeStep: timeStep, maxSubSteps: maxSubSteps } );\n\n\t\treturn true;\n\t};\n\n\n\t// Phsijs.Mesh\n\tPhysijs.Mesh = function ( geometry, material, mass ) {\n\t\tvar index;\n\n\t\tif ( !geometry ) {\n\t\t\treturn;\n\t\t}\n\n\t\tEventable.call( this );\n\t\tTHREE.Mesh.call( this, geometry, material );\n\n\t\tif ( !geometry.boundingBox ) {\n\t\t\tgeometry.computeBoundingBox();\n\t\t}\n\n\t\tthis._physijs = {\n\t\t\ttype: null,\n\t\t\tid: getObjectId(),\n\t\t\tmass: mass || 0,\n\t\t\ttouches: [],\n\t\t\tlinearVelocity: new THREE.Vector3,\n\t\t\tangularVelocity: new THREE.Vector3\n\t\t};\n\t};\n\tPhysijs.Mesh.prototype = new THREE.Mesh;\n\tPhysijs.Mesh.prototype.constructor = Physijs.Mesh;\n\tEventable.make( Physijs.Mesh );\n\n\t// Physijs.Mesh.mass\n\tPhysijs.Mesh.prototype.__defineGetter__('mass', function() {\n\t\treturn this._physijs.mass;\n\t});\n\tPhysijs.Mesh.prototype.__defineSetter__('mass', function( mass ) {\n\t\tthis._physijs.mass = mass;\n\t\tif ( this.world ) {\n\t\t\tthis.world.execute( 'updateMass', { id: this._physijs.id, mass: mass } );\n\t\t}\n\t});\n\n\t// Physijs.Mesh.applyCentralImpulse\n\tPhysijs.Mesh.prototype.applyCentralImpulse = function ( force ) {\n\t\tif ( this.world ) {\n\t\t\tthis.world.execute( 'applyCentralImpulse', { id: this._physijs.id, x: force.x, y: force.y, z: force.z } );\n\t\t}\n\t};\n\n\t// Physijs.Mesh.applyImpulse\n\tPhysijs.Mesh.prototype.applyImpulse = function ( force, offset ) {\n\t\tif ( this.world ) {\n\t\t\tthis.world.execute( 'applyImpulse', { id: this._physijs.id, impulse_x: force.x, impulse_y: force.y, impulse_z: force.z, x: offset.x, y: offset.y, z: offset.z } );\n\t\t}\n\t};\n\n\t// Physijs.Mesh.applyTorque\n\tPhysijs.Mesh.prototype.applyTorque = function ( force ) {\n\t\tif ( this.world ) {\n\t\t\tthis.world.execute( 'applyTorque', { id: this._physijs.id, torque_x: force.x, torque_y: force.y, torque_z: force.z } );\n\t\t}\n\t};\n\n\t// Physijs.Mesh.applyCentralForce\n\tPhysijs.Mesh.prototype.applyCentralForce = function ( force ) {\n\t\tif ( this.world ) {\n\t\t\tthis.world.execute( 'applyCentralForce', { id: this._physijs.id, x: force.x, y: force.y, z: force.z } );\n\t\t}\n\t};\n\n\t// Physijs.Mesh.applyForce\n\tPhysijs.Mesh.prototype.applyForce = function ( force, offset ) {\n\t\tif ( this.world ) {\n\t\t\tthis.world.execute( 'applyForce', { id: this._physijs.id, force_x: force.x, force_y : force.y, force_z : force.z, x: offset.x, y: offset.y, z: offset.z } );\n\t\t}\n\t};\n\n\t// Physijs.Mesh.getAngularVelocity\n\tPhysijs.Mesh.prototype.getAngularVelocity = function () {\n\t\treturn this._physijs.angularVelocity;\n\t};\n\n\t// Physijs.Mesh.setAngularVelocity\n\tPhysijs.Mesh.prototype.setAngularVelocity = function ( velocity ) {\n\t\tif ( this.world ) {\n\t\t\tthis.world.execute( 'setAngularVelocity', { id: this._physijs.id, x: velocity.x, y: velocity.y, z: velocity.z } );\n\t\t}\n\t};\n\n\t// Physijs.Mesh.getLinearVelocity\n\tPhysijs.Mesh.prototype.getLinearVelocity = function () {\n\t\treturn this._physijs.linearVelocity;\n\t};\n\n\t// Physijs.Mesh.setLinearVelocity\n\tPhysijs.Mesh.prototype.setLinearVelocity = function ( velocity ) {\n\t\tif ( this.world ) {\n\t\t\tthis.world.execute( 'setLinearVelocity', { id: this._physijs.id, x: velocity.x, y: velocity.y, z: velocity.z } );\n\t\t}\n\t};\n\n\t// Physijs.Mesh.setAngularFactor\n\tPhysijs.Mesh.prototype.setAngularFactor = function ( factor ) {\n\t\tif ( this.world ) {\n\t\t\tthis.world.execute( 'setAngularFactor', { id: this._physijs.id, x: factor.x, y: factor.y, z: factor.z } );\n\t\t}\n\t};\n\n\t// Physijs.Mesh.setLinearFactor\n\tPhysijs.Mesh.prototype.setLinearFactor = function ( factor ) {\n\t\tif ( this.world ) {\n\t\t\tthis.world.execute( 'setLinearFactor', { id: this._physijs.id, x: factor.x, y: factor.y, z: factor.z } );\n\t\t}\n\t};\n\n\t// Physijs.Mesh.setDamping\n\tPhysijs.Mesh.prototype.setDamping = function ( linear, angular ) {\n\t\tif ( this.world ) {\n\t\t\tthis.world.execute( 'setDamping', { id: this._physijs.id, linear: linear, angular: angular } );\n\t\t}\n\t};\n\n\t// Physijs.Mesh.setCcdMotionThreshold\n\tPhysijs.Mesh.prototype.setCcdMotionThreshold = function ( threshold ) {\n\t\tif ( this.world ) {\n\t\t\tthis.world.execute( 'setCcdMotionThreshold', { id: this._physijs.id, threshold: threshold } );\n\t\t}\n\t};\n\n\t// Physijs.Mesh.setCcdSweptSphereRadius\n\tPhysijs.Mesh.prototype.setCcdSweptSphereRadius = function ( radius ) {\n\t\tif ( this.world ) {\n\t\t\tthis.world.execute( 'setCcdSweptSphereRadius', { id: this._physijs.id, radius: radius } );\n\t\t}\n\t};\n\n\n\t// Physijs.PlaneMesh\n\tPhysijs.PlaneMesh = function ( geometry, material, mass ) {\n\t\tvar width, height;\n\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\n\n\t\tif ( !geometry.boundingBox ) {\n\t\t\tgeometry.computeBoundingBox();\n\t\t}\n\n\t\twidth = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t\theight = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n\n\t\tthis._physijs.type = 'plane';\n\t\tthis._physijs.normal = geometry.faces[0].normal.clone();\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? width * height : mass;\n\t};\n\tPhysijs.PlaneMesh.prototype = new Physijs.Mesh;\n\tPhysijs.PlaneMesh.prototype.constructor = Physijs.PlaneMesh;\n\n\t// Physijs.HeightfieldMesh\n\tPhysijs.HeightfieldMesh = function ( geometry, material, mass, xdiv, ydiv) {\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\n\n\t\tthis._physijs.type   = 'heightfield';\n\t\tthis._physijs.xsize  = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t\tthis._physijs.ysize  = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n\t\tthis._physijs.xpts = (typeof xdiv === 'undefined') ? Math.sqrt(geometry.vertices.length) : xdiv + 1;\n\t\tthis._physijs.ypts = (typeof ydiv === 'undefined') ? Math.sqrt(geometry.vertices.length) : ydiv + 1;\n\t\t// note - this assumes our plane geometry is square, unless we pass in specific xdiv and ydiv\n\t\tthis._physijs.absMaxHeight = Math.max(geometry.boundingBox.max.z,Math.abs(geometry.boundingBox.min.z));\n\n\t\tvar points = [];\n\n\t\tvar a, b;\n\t\tfor ( var i = 0; i < geometry.vertices.length; i++ ) {\n\n\t\t\ta = i % this._physijs.xpts;\n\t\t\tb = Math.round( ( i / this._physijs.xpts ) - ( (i % this._physijs.xpts) / this._physijs.xpts ) );\n\t\t\tpoints[i] = geometry.vertices[ a + ( ( this._physijs.ypts - b - 1 ) * this._physijs.ypts ) ].z;\n\n\t\t\t//points[i] = geometry.vertices[i];\n\t\t}\n\n\t\tthis._physijs.points = points;\n\t};\n\tPhysijs.HeightfieldMesh.prototype = new Physijs.Mesh;\n\tPhysijs.HeightfieldMesh.prototype.constructor = Physijs.HeightfieldMesh;\n\n\t// Physijs.BoxMesh\n\tPhysijs.BoxMesh = function( geometry, material, mass ) {\n\t\tvar width, height, depth;\n\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\n\n\t\tif ( !geometry.boundingBox ) {\n\t\t\tgeometry.computeBoundingBox();\n\t\t}\n\n\t\twidth = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t\theight = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n\t\tdepth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\n\t\tthis._physijs.type = 'box';\n\t\tthis._physijs.width = width;\n\t\tthis._physijs.height = height;\n\t\tthis._physijs.depth = depth;\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? width * height * depth : mass;\n\t};\n\tPhysijs.BoxMesh.prototype = new Physijs.Mesh;\n\tPhysijs.BoxMesh.prototype.constructor = Physijs.BoxMesh;\n\n\n\t// Physijs.SphereMesh\n\tPhysijs.SphereMesh = function( geometry, material, mass ) {\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\n\n\t\tif ( !geometry.boundingSphere ) {\n\t\t\tgeometry.computeBoundingSphere();\n\t\t}\n\n\t\tthis._physijs.type = 'sphere';\n\t\tthis._physijs.radius = geometry.boundingSphere.radius;\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? (4/3) * Math.PI * Math.pow(this._physijs.radius, 3) : mass;\n\t};\n\tPhysijs.SphereMesh.prototype = new Physijs.Mesh;\n\tPhysijs.SphereMesh.prototype.constructor = Physijs.SphereMesh;\n\n\n\t// Physijs.CylinderMesh\n\tPhysijs.CylinderMesh = function( geometry, material, mass ) {\n\t\tvar width, height, depth;\n\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\n\n\t\tif ( !geometry.boundingBox ) {\n\t\t\tgeometry.computeBoundingBox();\n\t\t}\n\n\t\twidth = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t\theight = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n\t\tdepth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\n\t\tthis._physijs.type = 'cylinder';\n\t\tthis._physijs.width = width;\n\t\tthis._physijs.height = height;\n\t\tthis._physijs.depth = depth;\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? width * height * depth : mass;\n\t};\n\tPhysijs.CylinderMesh.prototype = new Physijs.Mesh;\n\tPhysijs.CylinderMesh.prototype.constructor = Physijs.CylinderMesh;\n\n\n\t// Physijs.CapsuleMesh\n\tPhysijs.CapsuleMesh = function( geometry, material, mass ) {\n\t\tvar width, height, depth;\n\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\n\n\t\tif ( !geometry.boundingBox ) {\n\t\t\tgeometry.computeBoundingBox();\n\t\t}\n\n\t\twidth = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t\theight = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n\t\tdepth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\n\t\tthis._physijs.type = 'capsule';\n\t\tthis._physijs.radius = Math.max(width / 2, depth / 2);\n\t\tthis._physijs.height = height;\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? width * height * depth : mass;\n\t};\n\tPhysijs.CapsuleMesh.prototype = new Physijs.Mesh;\n\tPhysijs.CapsuleMesh.prototype.constructor = Physijs.CapsuleMesh;\n\n\n\t// Physijs.ConeMesh\n\tPhysijs.ConeMesh = function( geometry, material, mass ) {\n\t\tvar width, height, depth;\n\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\n\n\t\tif ( !geometry.boundingBox ) {\n\t\t\tgeometry.computeBoundingBox();\n\t\t}\n\n\t\twidth = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t\theight = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n\n\t\tthis._physijs.type = 'cone';\n\t\tthis._physijs.radius = width / 2;\n\t\tthis._physijs.height = height;\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? width * height : mass;\n\t};\n\tPhysijs.ConeMesh.prototype = new Physijs.Mesh;\n\tPhysijs.ConeMesh.prototype.constructor = Physijs.ConeMesh;\n\n\n\t// Physijs.ConcaveMesh\n\tPhysijs.ConcaveMesh = function( geometry, material, mass ) {\n\t\tvar i,\n\t\t\twidth, height, depth,\n\t\t\tvertices, face, triangles = [];\n\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\n\n\t\tif ( !geometry.boundingBox ) {\n\t\t\tgeometry.computeBoundingBox();\n\t\t}\n\n\t\tvertices = geometry.vertices;\n\n\t\tfor ( i = 0; i < geometry.faces.length; i++ ) {\n\t\t\tface = geometry.faces[i];\n\t\t\tif ( face instanceof THREE.Face3) {\n\n\t\t\t\ttriangles.push([\n\t\t\t\t\t{ x: vertices[face.a].x, y: vertices[face.a].y, z: vertices[face.a].z },\n\t\t\t\t\t{ x: vertices[face.b].x, y: vertices[face.b].y, z: vertices[face.b].z },\n\t\t\t\t\t{ x: vertices[face.c].x, y: vertices[face.c].y, z: vertices[face.c].z }\n\t\t\t\t]);\n\n\t\t\t} else if ( face instanceof THREE.Face4 ) {\n\n\t\t\t\ttriangles.push([\n\t\t\t\t\t{ x: vertices[face.a].x, y: vertices[face.a].y, z: vertices[face.a].z },\n\t\t\t\t\t{ x: vertices[face.b].x, y: vertices[face.b].y, z: vertices[face.b].z },\n\t\t\t\t\t{ x: vertices[face.d].x, y: vertices[face.d].y, z: vertices[face.d].z }\n\t\t\t\t]);\n\t\t\t\ttriangles.push([\n\t\t\t\t\t{ x: vertices[face.b].x, y: vertices[face.b].y, z: vertices[face.b].z },\n\t\t\t\t\t{ x: vertices[face.c].x, y: vertices[face.c].y, z: vertices[face.c].z },\n\t\t\t\t\t{ x: vertices[face.d].x, y: vertices[face.d].y, z: vertices[face.d].z }\n\t\t\t\t]);\n\n\t\t\t}\n\t\t}\n\n\t\twidth = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t\theight = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n\t\tdepth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\n\t\tthis._physijs.type = 'concave';\n\t\tthis._physijs.triangles = triangles;\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? width * height * depth : mass;\n\t};\n\tPhysijs.ConcaveMesh.prototype = new Physijs.Mesh;\n\tPhysijs.ConcaveMesh.prototype.constructor = Physijs.ConcaveMesh;\n\n\n\t// Physijs.ConvexMesh\n\tPhysijs.ConvexMesh = function( geometry, material, mass ) {\n\t\tvar i,\n\t\t\twidth, height, depth,\n\t\t\tpoints = [];\n\n\t\tPhysijs.Mesh.call( this, geometry, material, mass );\n\n\t\tif ( !geometry.boundingBox ) {\n\t\t\tgeometry.computeBoundingBox();\n\t\t}\n\n\t\tfor ( i = 0; i < geometry.vertices.length; i++ ) {\n\t\t\tpoints.push({\n\t\t\t\tx: geometry.vertices[i].x,\n\t\t\t\ty: geometry.vertices[i].y,\n\t\t\t\tz: geometry.vertices[i].z\n\t\t\t});\n\t\t}\n\n\n\t\twidth = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t\theight = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n\t\tdepth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\n\t\tthis._physijs.type = 'convex';\n\t\tthis._physijs.points = points;\n\t\tthis._physijs.mass = (typeof mass === 'undefined') ? width * height * depth : mass;\n\t};\n\tPhysijs.ConvexMesh.prototype = new Physijs.Mesh;\n\tPhysijs.ConvexMesh.prototype.constructor = Physijs.ConvexMesh;\n\n\n\t// Physijs.Vehicle\n\tPhysijs.Vehicle = function( mesh, tuning ) {\n\t\ttuning = tuning || new Physijs.VehicleTuning;\n\t\tthis.mesh = mesh;\n\t\tthis.wheels = [];\n\t\tthis._physijs = {\n\t\t\tid: getObjectId(),\n\t\t\trigidBody: mesh._physijs.id,\n\t\t\tsuspension_stiffness: tuning.suspension_stiffness,\n\t\t\tsuspension_compression: tuning.suspension_compression,\n\t\t\tsuspension_damping: tuning.suspension_damping,\n\t\t\tmax_suspension_travel: tuning.max_suspension_travel,\n\t\t\tfriction_slip: tuning.friction_slip,\n\t\t\tmax_suspension_force: tuning.max_suspension_force\n\t\t};\n\t};\n\tPhysijs.Vehicle.prototype.addWheel = function( wheel_geometry, wheel_material, connection_point, wheel_direction, wheel_axle, suspension_rest_length, wheel_radius, is_front_wheel, tuning ) {\n\t\tvar wheel = new THREE.Mesh( wheel_geometry, wheel_material );\n\t\twheel.castShadow = wheel.receiveShadow = true;\n\t\twheel.position.copy( wheel_direction ).multiplyScalar( suspension_rest_length / 100 ).add( connection_point );\n\t\tthis.world.add( wheel );\n\t\tthis.wheels.push( wheel );\n\n\t\tthis.world.execute( 'addWheel', {\n\t\t\tid: this._physijs.id,\n\t\t\tconnection_point: { x: connection_point.x, y: connection_point.y, z: connection_point.z },\n\t\t\twheel_direction: { x: wheel_direction.x, y: wheel_direction.y, z: wheel_direction.z },\n\t\t\twheel_axle: { x: wheel_axle.x, y: wheel_axle.y, z: wheel_axle.z },\n\t\t\tsuspension_rest_length: suspension_rest_length,\n\t\t\twheel_radius: wheel_radius,\n\t\t\tis_front_wheel: is_front_wheel,\n\t\t\ttuning: tuning\n\t\t});\n\t};\n\tPhysijs.Vehicle.prototype.setSteering = function( amount, wheel ) {\n\t\tif ( wheel !== undefined && this.wheels[ wheel ] !== undefined ) {\n\t\t\tthis.world.execute( 'setSteering', { id: this._physijs.id, wheel: wheel, steering: amount } );\n\t\t} else if ( this.wheels.length > 0 ) {\n\t\t\tfor ( var i = 0; i < this.wheels.length; i++ ) {\n\t\t\t\tthis.world.execute( 'setSteering', { id: this._physijs.id, wheel: i, steering: amount } );\n\t\t\t}\n\t\t}\n\t};\n\tPhysijs.Vehicle.prototype.setBrake = function( amount, wheel ) {\n\t\tif ( wheel !== undefined && this.wheels[ wheel ] !== undefined ) {\n\t\t\tthis.world.execute( 'setBrake', { id: this._physijs.id, wheel: wheel, brake: amount } );\n\t\t} else if ( this.wheels.length > 0 ) {\n\t\t\tfor ( var i = 0; i < this.wheels.length; i++ ) {\n\t\t\t\tthis.world.execute( 'setBrake', { id: this._physijs.id, wheel: i, brake: amount } );\n\t\t\t}\n\t\t}\n\t};\n\tPhysijs.Vehicle.prototype.applyEngineForce = function( amount, wheel ) {\n\t\tif ( wheel !== undefined && this.wheels[ wheel ] !== undefined ) {\n\t\t\tthis.world.execute( 'applyEngineForce', { id: this._physijs.id, wheel: wheel, force: amount } );\n\t\t} else if ( this.wheels.length > 0 ) {\n\t\t\tfor ( var i = 0; i < this.wheels.length; i++ ) {\n\t\t\t\tthis.world.execute( 'applyEngineForce', { id: this._physijs.id, wheel: i, force: amount } );\n\t\t\t}\n\t\t}\n\t};\n\n\t// Physijs.VehicleTuning\n\tPhysijs.VehicleTuning = function( suspension_stiffness, suspension_compression, suspension_damping, max_suspension_travel, friction_slip, max_suspension_force ) {\n\t\tthis.suspension_stiffness = suspension_stiffness !== undefined ? suspension_stiffness : 5.88;\n\t\tthis.suspension_compression = suspension_compression !== undefined ? suspension_compression : 0.83;\n\t\tthis.suspension_damping = suspension_damping !== undefined ? suspension_damping : 0.88;\n\t\tthis.max_suspension_travel = max_suspension_travel !== undefined ? max_suspension_travel : 500;\n\t\tthis.friction_slip = friction_slip !== undefined ? friction_slip : 10.5;\n\t\tthis.max_suspension_force = max_suspension_force !== undefined ? max_suspension_force : 6000;\n\t};\n\n\treturn Physijs;\n};\n"]},"metadata":{},"sourceType":"script"}